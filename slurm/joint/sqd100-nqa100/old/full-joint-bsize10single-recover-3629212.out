2018-04-13 13:08:50,892 - INFO - allennlp.common.params - dataset_reader.type = squad
2018-04-13 13:08:50,894 - INFO - allennlp.common.params - dataset_reader.tokenizer.type = word
2018-04-13 13:08:50,894 - INFO - allennlp.common.params - dataset_reader.tokenizer.word_splitter.type = spacy
2018-04-13 13:08:50,895 - INFO - allennlp.common.params - dataset_reader.tokenizer.word_splitter.language = en_core_web_sm
2018-04-13 13:08:50,895 - INFO - allennlp.common.params - dataset_reader.tokenizer.word_splitter.pos_tags = False
2018-04-13 13:08:50,895 - INFO - allennlp.common.params - dataset_reader.tokenizer.word_splitter.parse = False
2018-04-13 13:08:50,895 - INFO - allennlp.common.params - dataset_reader.tokenizer.word_splitter.ner = False
2018-04-13 13:08:52,121 - INFO - allennlp.common.params - dataset_reader.tokenizer.word_filter.type = pass_through
2018-04-13 13:08:52,121 - INFO - allennlp.common.params - dataset_reader.tokenizer.word_stemmer.type = pass_through
2018-04-13 13:08:52,122 - INFO - allennlp.common.params - dataset_reader.tokenizer.start_tokens = None
2018-04-13 13:08:52,122 - INFO - allennlp.common.params - dataset_reader.tokenizer.end_tokens = None
2018-04-13 13:08:52,122 - INFO - allennlp.common.params - dataset_reader.token_indexers.tokens.type = single_id
2018-04-13 13:08:52,122 - INFO - allennlp.common.params - dataset_reader.token_indexers.tokens.namespace = tokens
2018-04-13 13:08:52,122 - INFO - allennlp.common.params - dataset_reader.token_indexers.tokens.lowercase_tokens = True
2018-04-13 13:08:52,122 - INFO - allennlp.common.params - dataset_reader.token_indexers.token_characters.type = characters
2018-04-13 13:08:52,122 - INFO - allennlp.common.params - dataset_reader.token_indexers.token_characters.namespace = token_characters
2018-04-13 13:08:52,123 - INFO - allennlp.common.params - dataset_reader.token_indexers.token_characters.character_tokenizer.byte_encoding = utf-8
2018-04-13 13:08:52,123 - INFO - allennlp.common.params - dataset_reader.token_indexers.token_characters.character_tokenizer.lowercase_characters = False
2018-04-13 13:08:52,123 - INFO - allennlp.common.params - dataset_reader.token_indexers.token_characters.character_tokenizer.start_tokens = [259]
2018-04-13 13:08:52,123 - INFO - allennlp.common.params - dataset_reader.token_indexers.token_characters.character_tokenizer.end_tokens = [260]
2018-04-13 13:08:52,123 - INFO - allennlp.common.params - dataset_reader.lazy = False
2018-04-13 13:08:52,123 - INFO - allennlp.common.params - validation_dataset_reader = None
2018-04-13 13:08:52,123 - INFO - allennlp.common.params - train_data_path = data/joint_nqa_100_0/train-v1.1.json
2018-04-13 13:08:52,123 - INFO - allennlp.commands.train - Reading training data from data/joint_nqa_100_0/train-v1.1.json
2018-04-13 13:08:52,147 - INFO - allennlp.data.dataset_readers.reading_comprehension.squad - Reading file at data/joint_nqa_100_0/train-v1.1.json
2018-04-13 13:08:57,078 - INFO - allennlp.data.dataset_readers.reading_comprehension.squad - Reading the dataset
2
238532
2018-04-13 13:16:47,448 - INFO - allennlp.common.params - validation_data_path = data/joint_nqa_100_0/dev-v1.1.json
2018-04-13 13:16:47,451 - INFO - allennlp.commands.train - Reading validation data from data/joint_nqa_100_0/dev-v1.1.json
2018-04-13 13:16:47,457 - INFO - allennlp.data.dataset_readers.reading_comprehension.squad - Reading file at data/joint_nqa_100_0/dev-v1.1.json
2018-04-13 13:16:47,820 - INFO - allennlp.data.dataset_readers.reading_comprehension.squad - Reading the dataset
0
23813
2018-04-13 13:17:44,494 - INFO - allennlp.common.params - test_data_path = None
2018-04-13 13:17:44,495 - INFO - allennlp.commands.train - Creating a vocabulary using validation, train data.
2018-04-13 13:17:44,495 - INFO - allennlp.common.params - vocabulary.directory_path = None
2018-04-13 13:17:44,495 - INFO - allennlp.common.params - vocabulary.min_count = None
2018-04-13 13:17:44,495 - INFO - allennlp.common.params - vocabulary.max_vocab_size = None
2018-04-13 13:17:44,495 - INFO - allennlp.common.params - vocabulary.non_padded_namespaces = ('*tags', '*labels')
2018-04-13 13:17:44,495 - INFO - allennlp.common.params - vocabulary.only_include_pretrained_words = False
2018-04-13 13:17:44,495 - INFO - allennlp.data.vocabulary - Fitting token dictionary from dataset.
2018-04-13 13:42:13,164 - WARNING - root - vocabulary serialization directory output/joint_nqa_100_0_10/vocabulary is not empty
2018-04-13 13:42:14,036 - INFO - allennlp.common.params - model.type = bidaf
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.type = basic
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.type = embedding
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.num_embeddings = None
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.vocab_namespace = tokens
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.embedding_dim = 100
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.pretrained_file = https://s3-us-west-2.amazonaws.com/allennlp/datasets/glove/glove.6B.100d.txt.gz
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.projection_dim = None
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.trainable = False
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.padding_index = None
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.max_norm = None
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.norm_type = 2.0
2018-04-13 13:42:14,037 - INFO - allennlp.common.params - model.text_field_embedder.tokens.scale_grad_by_freq = False
2018-04-13 13:42:14,038 - INFO - allennlp.common.params - model.text_field_embedder.tokens.sparse = False
2018-04-13 13:42:14,051 - INFO - allennlp.modules.token_embedders.embedding - Reading embeddings from file
2018-04-13 13:42:23,060 - INFO - allennlp.modules.token_embedders.embedding - Initializing pre-trained embedding layer
2018-04-13 13:42:24,912 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.type = character_encoding
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.num_embeddings = 262
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.vocab_namespace = token_characters
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.embedding_dim = 16
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.pretrained_file = None
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.projection_dim = None
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.trainable = True
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.padding_index = None
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.max_norm = None
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.norm_type = 2.0
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.scale_grad_by_freq = False
2018-04-13 13:42:24,913 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.embedding.sparse = False
2018-04-13 13:42:24,914 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.encoder.type = cnn
2018-04-13 13:42:24,914 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.encoder.embedding_dim = 16
2018-04-13 13:42:24,914 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.encoder.output_dim = None
2018-04-13 13:42:24,914 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.encoder.num_filters = 100
2018-04-13 13:42:24,914 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.encoder.conv_layer_activation = relu
2018-04-13 13:42:24,914 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.encoder.ngram_filter_sizes = [5]
2018-04-13 13:42:24,916 - INFO - allennlp.common.params - model.text_field_embedder.token_characters.dropout = 0.2
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.num_highway_layers = 2
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.phrase_layer.type = lstm
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.phrase_layer.batch_first = True
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - CURRENTLY DEFINED PARAMETERS: 
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.phrase_layer.bidirectional = True
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.phrase_layer.input_size = 200
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.phrase_layer.hidden_size = 100
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.phrase_layer.num_layers = 1
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.phrase_layer.dropout = 0.2
2018-04-13 13:42:24,917 - INFO - allennlp.common.params - model.phrase_layer.batch_first = True
2018-04-13 13:42:24,919 - INFO - allennlp.common.params - model.similarity_function.type = linear
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.similarity_function.tensor_1_dim = 200
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.similarity_function.tensor_2_dim = 200
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.similarity_function.combination = x,y,x*y
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.similarity_function.activation = linear
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.modeling_layer.type = lstm
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.modeling_layer.batch_first = True
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - CURRENTLY DEFINED PARAMETERS: 
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.modeling_layer.bidirectional = True
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.modeling_layer.input_size = 800
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.modeling_layer.hidden_size = 100
2018-04-13 13:42:24,920 - INFO - allennlp.common.params - model.modeling_layer.num_layers = 2
2018-04-13 13:42:24,921 - INFO - allennlp.common.params - model.modeling_layer.dropout = 0.2
2018-04-13 13:42:24,921 - INFO - allennlp.common.params - model.modeling_layer.batch_first = True
2018-04-13 13:42:24,927 - INFO - allennlp.common.params - model.span_end_encoder.type = lstm
2018-04-13 13:42:24,927 - INFO - allennlp.common.params - model.span_end_encoder.batch_first = True
2018-04-13 13:42:24,928 - INFO - allennlp.common.params - Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
2018-04-13 13:42:24,928 - INFO - allennlp.common.params - CURRENTLY DEFINED PARAMETERS: 
2018-04-13 13:42:24,928 - INFO - allennlp.common.params - model.span_end_encoder.bidirectional = True
2018-04-13 13:42:24,928 - INFO - allennlp.common.params - model.span_end_encoder.input_size = 1400
2018-04-13 13:42:24,928 - INFO - allennlp.common.params - model.span_end_encoder.hidden_size = 100
2018-04-13 13:42:24,928 - INFO - allennlp.common.params - model.span_end_encoder.num_layers = 1
2018-04-13 13:42:24,928 - INFO - allennlp.common.params - model.span_end_encoder.dropout = 0.2
2018-04-13 13:42:24,928 - INFO - allennlp.common.params - model.span_end_encoder.batch_first = True
2018-04-13 13:42:24,936 - INFO - allennlp.common.params - model.dropout = 0.2
2018-04-13 13:42:24,936 - INFO - allennlp.common.params - model.initializer = []
2018-04-13 13:42:24,936 - INFO - allennlp.common.params - model.regularizer = []
2018-04-13 13:42:24,936 - INFO - allennlp.common.params - model.mask_lstms = True
2018-04-13 13:42:24,936 - INFO - allennlp.common.params - model.total_items = 262345
2018-04-13 13:42:24,938 - INFO - allennlp.nn.initializers - Initializing parameters
2018-04-13 13:42:24,938 - INFO - allennlp.nn.initializers - Done initializing parameters; the following parameters are using their default initialization from their code
2018-04-13 13:42:24,938 - INFO - allennlp.nn.initializers -    _highway_layer._module._layers.0.bias
2018-04-13 13:42:24,938 - INFO - allennlp.nn.initializers -    _highway_layer._module._layers.0.weight
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _highway_layer._module._layers.1.bias
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _highway_layer._module._layers.1.weight
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _matrix_attention._similarity_function._bias
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _matrix_attention._similarity_function._weight_vector
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.bias_hh_l0
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.bias_hh_l0_reverse
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.bias_hh_l1
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.bias_hh_l1_reverse
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.bias_ih_l0
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.bias_ih_l0_reverse
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.bias_ih_l1
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.bias_ih_l1_reverse
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.weight_hh_l0
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.weight_hh_l0_reverse
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.weight_hh_l1
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.weight_hh_l1_reverse
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.weight_ih_l0
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.weight_ih_l0_reverse
2018-04-13 13:42:24,939 - INFO - allennlp.nn.initializers -    _modeling_layer._module.weight_ih_l1
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _modeling_layer._module.weight_ih_l1_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _phrase_layer._module.bias_hh_l0
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _phrase_layer._module.bias_hh_l0_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _phrase_layer._module.bias_ih_l0
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _phrase_layer._module.bias_ih_l0_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _phrase_layer._module.weight_hh_l0
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _phrase_layer._module.weight_hh_l0_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _phrase_layer._module.weight_ih_l0
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _phrase_layer._module.weight_ih_l0_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_encoder._module.bias_hh_l0
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_encoder._module.bias_hh_l0_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_encoder._module.bias_ih_l0
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_encoder._module.bias_ih_l0_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_encoder._module.weight_hh_l0
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_encoder._module.weight_hh_l0_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_encoder._module.weight_ih_l0
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_encoder._module.weight_ih_l0_reverse
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_predictor._module.bias
2018-04-13 13:42:24,940 - INFO - allennlp.nn.initializers -    _span_end_predictor._module.weight
2018-04-13 13:42:24,941 - INFO - allennlp.nn.initializers -    _span_start_predictor._module.bias
2018-04-13 13:42:24,941 - INFO - allennlp.nn.initializers -    _span_start_predictor._module.weight
2018-04-13 13:42:24,941 - INFO - allennlp.nn.initializers -    _text_field_embedder.token_embedder_token_characters._embedding._module.weight
2018-04-13 13:42:24,941 - INFO - allennlp.nn.initializers -    _text_field_embedder.token_embedder_token_characters._encoder._module.conv_layer_0.bias
2018-04-13 13:42:24,941 - INFO - allennlp.nn.initializers -    _text_field_embedder.token_embedder_token_characters._encoder._module.conv_layer_0.weight
2018-04-13 13:42:24,941 - INFO - allennlp.nn.initializers -    _text_field_embedder.token_embedder_tokens.weight
2018-04-13 13:42:24,941 - INFO - allennlp.common.params - iterator.type = bucket
2018-04-13 13:42:24,941 - INFO - allennlp.common.params - iterator.sorting_keys = [['passage', 'num_tokens'], ['question', 'num_tokens']]
2018-04-13 13:42:24,941 - INFO - allennlp.common.params - iterator.padding_noise = 0.1
2018-04-13 13:42:24,941 - INFO - allennlp.common.params - iterator.biggest_batch_first = False
2018-04-13 13:42:24,941 - INFO - allennlp.common.params - iterator.batch_size = 10
2018-04-13 13:42:24,941 - INFO - allennlp.common.params - iterator.instances_per_epoch = None
2018-04-13 13:42:24,941 - INFO - allennlp.common.params - iterator.max_instances_in_memory = None
2018-04-13 13:42:24,942 - INFO - allennlp.common.params - trainer.patience = 10
2018-04-13 13:42:24,942 - INFO - allennlp.common.params - trainer.validation_metric = +em
2018-04-13 13:42:24,942 - INFO - allennlp.common.params - trainer.num_epochs = 20
2018-04-13 13:42:24,942 - INFO - allennlp.common.params - trainer.cuda_device = 0
2018-04-13 13:42:24,942 - INFO - allennlp.common.params - trainer.grad_norm = 5.0
2018-04-13 13:42:24,942 - INFO - allennlp.common.params - trainer.grad_clipping = None
2018-04-13 13:42:29,513 - INFO - allennlp.common.params - trainer.optimizer.type = adam
2018-04-13 13:42:29,518 - INFO - allennlp.common.params - trainer.optimizer.parameter_groups = None
2018-04-13 13:42:29,518 - INFO - allennlp.common.params - Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
2018-04-13 13:42:29,518 - INFO - allennlp.common.params - CURRENTLY DEFINED PARAMETERS: 
2018-04-13 13:42:29,518 - INFO - allennlp.common.params - trainer.optimizer.betas = [0.9, 0.9]
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.learning_rate_scheduler.type = reduce_on_plateau
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - Converting Params object to dict; logging of default values will not occur when dictionary parameters are used subsequently.
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - CURRENTLY DEFINED PARAMETERS: 
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.learning_rate_scheduler.factor = 0.5
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.learning_rate_scheduler.mode = max
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.learning_rate_scheduler.patience = 2
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.num_serialized_models_to_keep = None
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.keep_serialized_model_every_num_seconds = None
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.model_save_interval = None
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.summary_interval = 100
2018-04-13 13:42:29,519 - INFO - allennlp.common.params - trainer.histogram_interval = None
2018-04-13 13:42:29,758 - INFO - allennlp.common.params - evaluate_on_test = False
2018-04-13 13:42:30,985 - INFO - allennlp.training.trainer - Beginning training.
2018-04-13 13:42:30,985 - INFO - allennlp.training.trainer - Epoch 11/19
2018-04-13 13:42:30,985 - INFO - allennlp.training.trainer - Peak CPU memory usage MB: 34743.224
2018-04-13 13:42:31,800 - INFO - allennlp.training.trainer - GPU 0 memory usage MB: 467
2018-04-13 13:42:31,800 - INFO - allennlp.training.trainer - GPU 1 memory usage MB: 4919
2018-04-13 13:42:31,800 - INFO - allennlp.training.trainer - GPU 2 memory usage MB: 1
2018-04-13 13:42:31,800 - INFO - allennlp.training.trainer - GPU 3 memory usage MB: 1
2018-04-13 13:42:31,802 - INFO - allennlp.training.trainer - Training
METADATA: 
Embedded question dim:  torch.Size([10, 12, 200])
Embedded passage dim:  torch.Size([10, 797, 200])
Passage Length:  797
Encoded question dim:  torch.Size([10, 12, 200])
Encoded passage dim:  torch.Size([10, 797, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([10, 797, 12])
Passage ques attention dim:  torch.Size([10, 797, 12])
Passage question vectors dim:  torch.Size([10, 797, 200])
Question Passage Similarity dim:  torch.Size([10, 797])
Question passage attention dim:  torch.Size([10, 797])
Final Merged Passage dim:  torch.Size([10, 797, 800])
Modeled Passage dim:  torch.Size([10, 797, 200])
Modeling dim:  200
Span start input shape:  torch.Size([10, 797, 1000])
Span start logits:  torch.Size([10, 797])
span start probs dim:  torch.Size([10, 797])
Span start representation dim:  torch.Size([10, 200])
0
10570
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 15])
Passage ques attention dim:  torch.Size([5, 133, 15])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 16])
Passage ques attention dim:  torch.Size([5, 126, 16])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 21])
Passage ques attention dim:  torch.Size([5, 153, 21])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 196, 18])
Passage ques attention dim:  torch.Size([5, 196, 18])
Passage question vectors dim:  torch.Size([5, 196, 200])
Question Passage Similarity dim:  torch.Size([5, 196])
Question passage attention dim:  torch.Size([5, 196])
Final Merged Passage dim:  torch.Size([5, 196, 800])
Modeled Passage dim:  torch.Size([5, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 196, 1000])
Span start logits:  torch.Size([5, 196])
span start probs dim:  torch.Size([5, 196])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 196]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 196, 21])
Passage ques attention dim:  torch.Size([5, 196, 21])
Passage question vectors dim:  torch.Size([5, 196, 200])
Question Passage Similarity dim:  torch.Size([5, 196])
Question passage attention dim:  torch.Size([5, 196])
Final Merged Passage dim:  torch.Size([5, 196, 800])
Modeled Passage dim:  torch.Size([5, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 196, 1000])
Span start logits:  torch.Size([5, 196])
span start probs dim:  torch.Size([5, 196])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 196]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 16])
Passage ques attention dim:  torch.Size([5, 103, 16])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 14])
Passage ques attention dim:  torch.Size([5, 125, 14])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 16])
Passage ques attention dim:  torch.Size([5, 101, 16])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 23])
Passage ques attention dim:  torch.Size([5, 149, 23])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 16])
Passage ques attention dim:  torch.Size([5, 187, 16])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 15])
Passage ques attention dim:  torch.Size([5, 188, 15])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 284, 200])
Passage Length:  284
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 284, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 284, 22])
Passage ques attention dim:  torch.Size([5, 284, 22])
Passage question vectors dim:  torch.Size([5, 284, 200])
Question Passage Similarity dim:  torch.Size([5, 284])
Question passage attention dim:  torch.Size([5, 284])
Final Merged Passage dim:  torch.Size([5, 284, 800])
Modeled Passage dim:  torch.Size([5, 284, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 284, 1000])
Span start logits:  torch.Size([5, 284])
span start probs dim:  torch.Size([5, 284])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 284]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 14])
Passage ques attention dim:  torch.Size([5, 97, 14])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 20])
Passage ques attention dim:  torch.Size([5, 199, 20])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 17])
Passage ques attention dim:  torch.Size([5, 135, 17])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 16])
Passage ques attention dim:  torch.Size([5, 118, 16])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 14])
Passage ques attention dim:  torch.Size([5, 169, 14])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 166, 17])
Passage ques attention dim:  torch.Size([5, 166, 17])
Passage question vectors dim:  torch.Size([5, 166, 200])
Question Passage Similarity dim:  torch.Size([5, 166])
Question passage attention dim:  torch.Size([5, 166])
Final Merged Passage dim:  torch.Size([5, 166, 800])
Modeled Passage dim:  torch.Size([5, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 166, 1000])
Span start logits:  torch.Size([5, 166])
span start probs dim:  torch.Size([5, 166])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 166]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 227, 17])
Passage ques attention dim:  torch.Size([5, 227, 17])
Passage question vectors dim:  torch.Size([5, 227, 200])
Question Passage Similarity dim:  torch.Size([5, 227])
Question passage attention dim:  torch.Size([5, 227])
Final Merged Passage dim:  torch.Size([5, 227, 800])
Modeled Passage dim:  torch.Size([5, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 227, 1000])
Span start logits:  torch.Size([5, 227])
span start probs dim:  torch.Size([5, 227])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 227]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 20])
Passage ques attention dim:  torch.Size([5, 150, 20])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 350, 14])
Passage ques attention dim:  torch.Size([5, 350, 14])
Passage question vectors dim:  torch.Size([5, 350, 200])
Question Passage Similarity dim:  torch.Size([5, 350])
Question passage attention dim:  torch.Size([5, 350])
Final Merged Passage dim:  torch.Size([5, 350, 800])
Modeled Passage dim:  torch.Size([5, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 350, 1000])
Span start logits:  torch.Size([5, 350])
span start probs dim:  torch.Size([5, 350])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 350]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 18])
Passage ques attention dim:  torch.Size([5, 169, 18])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 13])
Passage ques attention dim:  torch.Size([5, 133, 13])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 134, 13])
Passage ques attention dim:  torch.Size([5, 134, 13])
Passage question vectors dim:  torch.Size([5, 134, 200])
Question Passage Similarity dim:  torch.Size([5, 134])
Question passage attention dim:  torch.Size([5, 134])
Final Merged Passage dim:  torch.Size([5, 134, 800])
Modeled Passage dim:  torch.Size([5, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 134, 1000])
Span start logits:  torch.Size([5, 134])
span start probs dim:  torch.Size([5, 134])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 134]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 71, 16])
Passage ques attention dim:  torch.Size([5, 71, 16])
Passage question vectors dim:  torch.Size([5, 71, 200])
Question Passage Similarity dim:  torch.Size([5, 71])
Question passage attention dim:  torch.Size([5, 71])
Final Merged Passage dim:  torch.Size([5, 71, 800])
Modeled Passage dim:  torch.Size([5, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 71, 1000])
Span start logits:  torch.Size([5, 71])
span start probs dim:  torch.Size([5, 71])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 71]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 34, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 34, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 34])
Passage ques attention dim:  torch.Size([5, 126, 34])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 11])
Passage ques attention dim:  torch.Size([5, 115, 11])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 241, 200])
Passage Length:  241
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 241, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 241, 19])
Passage ques attention dim:  torch.Size([5, 241, 19])
Passage question vectors dim:  torch.Size([5, 241, 200])
Question Passage Similarity dim:  torch.Size([5, 241])
Question passage attention dim:  torch.Size([5, 241])
Final Merged Passage dim:  torch.Size([5, 241, 800])
Modeled Passage dim:  torch.Size([5, 241, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 241, 1000])
Span start logits:  torch.Size([5, 241])
span start probs dim:  torch.Size([5, 241])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 241]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 13])
Passage ques attention dim:  torch.Size([5, 163, 13])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 79, 19])
Passage ques attention dim:  torch.Size([5, 79, 19])
Passage question vectors dim:  torch.Size([5, 79, 200])
Question Passage Similarity dim:  torch.Size([5, 79])
Question passage attention dim:  torch.Size([5, 79])
Final Merged Passage dim:  torch.Size([5, 79, 800])
Modeled Passage dim:  torch.Size([5, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 79, 1000])
Span start logits:  torch.Size([5, 79])
span start probs dim:  torch.Size([5, 79])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 79]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 14])
Passage ques attention dim:  torch.Size([5, 110, 14])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 307, 200])
Passage Length:  307
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 307, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 307, 14])
Passage ques attention dim:  torch.Size([5, 307, 14])
Passage question vectors dim:  torch.Size([5, 307, 200])
Question Passage Similarity dim:  torch.Size([5, 307])
Question passage attention dim:  torch.Size([5, 307])
Final Merged Passage dim:  torch.Size([5, 307, 800])
Modeled Passage dim:  torch.Size([5, 307, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 307, 1000])
Span start logits:  torch.Size([5, 307])
span start probs dim:  torch.Size([5, 307])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 307]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 17])
Passage ques attention dim:  torch.Size([5, 112, 17])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 23])
Passage ques attention dim:  torch.Size([5, 258, 23])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 13])
Passage ques attention dim:  torch.Size([5, 152, 13])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 207, 18])
Passage ques attention dim:  torch.Size([5, 207, 18])
Passage question vectors dim:  torch.Size([5, 207, 200])
Question Passage Similarity dim:  torch.Size([5, 207])
Question passage attention dim:  torch.Size([5, 207])
Final Merged Passage dim:  torch.Size([5, 207, 800])
Modeled Passage dim:  torch.Size([5, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 207, 1000])
Span start logits:  torch.Size([5, 207])
span start probs dim:  torch.Size([5, 207])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 207]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 13])
Passage ques attention dim:  torch.Size([5, 133, 13])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 21])
Passage ques attention dim:  torch.Size([5, 107, 21])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 21])
Passage ques attention dim:  torch.Size([5, 158, 21])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 16])
Passage ques attention dim:  torch.Size([5, 114, 16])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 17])
Passage ques attention dim:  torch.Size([5, 91, 17])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 15])
Passage ques attention dim:  torch.Size([5, 110, 15])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 11])
Passage ques attention dim:  torch.Size([5, 157, 11])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 17])
Passage ques attention dim:  torch.Size([5, 234, 17])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 15])
Passage ques attention dim:  torch.Size([5, 185, 15])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 16])
Passage ques attention dim:  torch.Size([5, 103, 16])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 20])
Passage ques attention dim:  torch.Size([5, 151, 20])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 18])
Passage ques attention dim:  torch.Size([5, 126, 18])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 204, 17])
Passage ques attention dim:  torch.Size([5, 204, 17])
Passage question vectors dim:  torch.Size([5, 204, 200])
Question Passage Similarity dim:  torch.Size([5, 204])
Question passage attention dim:  torch.Size([5, 204])
Final Merged Passage dim:  torch.Size([5, 204, 800])
Modeled Passage dim:  torch.Size([5, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 204, 1000])
Span start logits:  torch.Size([5, 204])
span start probs dim:  torch.Size([5, 204])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 204]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 16])
Passage ques attention dim:  torch.Size([5, 176, 16])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 93, 11])
Passage ques attention dim:  torch.Size([5, 93, 11])
Passage question vectors dim:  torch.Size([5, 93, 200])
Question Passage Similarity dim:  torch.Size([5, 93])
Question passage attention dim:  torch.Size([5, 93])
Final Merged Passage dim:  torch.Size([5, 93, 800])
Modeled Passage dim:  torch.Size([5, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 93, 1000])
Span start logits:  torch.Size([5, 93])
span start probs dim:  torch.Size([5, 93])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 93]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 12])
Passage ques attention dim:  torch.Size([5, 117, 12])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 13])
Passage ques attention dim:  torch.Size([5, 197, 13])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 11])
Passage ques attention dim:  torch.Size([5, 91, 11])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 155, 14])
Passage ques attention dim:  torch.Size([5, 155, 14])
Passage question vectors dim:  torch.Size([5, 155, 200])
Question Passage Similarity dim:  torch.Size([5, 155])
Question passage attention dim:  torch.Size([5, 155])
Final Merged Passage dim:  torch.Size([5, 155, 800])
Modeled Passage dim:  torch.Size([5, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 155, 1000])
Span start logits:  torch.Size([5, 155])
span start probs dim:  torch.Size([5, 155])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 155]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 16])
Passage ques attention dim:  torch.Size([5, 150, 16])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 12])
Passage ques attention dim:  torch.Size([5, 128, 12])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 13])
Passage ques attention dim:  torch.Size([5, 108, 13])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 13])
Passage ques attention dim:  torch.Size([5, 153, 13])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 184, 13])
Passage ques attention dim:  torch.Size([5, 184, 13])
Passage question vectors dim:  torch.Size([5, 184, 200])
Question Passage Similarity dim:  torch.Size([5, 184])
Question passage attention dim:  torch.Size([5, 184])
Final Merged Passage dim:  torch.Size([5, 184, 800])
Modeled Passage dim:  torch.Size([5, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 184, 1000])
Span start logits:  torch.Size([5, 184])
span start probs dim:  torch.Size([5, 184])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 184]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 217, 13])
Passage ques attention dim:  torch.Size([5, 217, 13])
Passage question vectors dim:  torch.Size([5, 217, 200])
Question Passage Similarity dim:  torch.Size([5, 217])
Question passage attention dim:  torch.Size([5, 217])
Final Merged Passage dim:  torch.Size([5, 217, 800])
Modeled Passage dim:  torch.Size([5, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 217, 1000])
Span start logits:  torch.Size([5, 217])
span start probs dim:  torch.Size([5, 217])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 217]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 25])
Passage ques attention dim:  torch.Size([5, 151, 25])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 16])
Passage ques attention dim:  torch.Size([5, 110, 16])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 167, 16])
Passage ques attention dim:  torch.Size([5, 167, 16])
Passage question vectors dim:  torch.Size([5, 167, 200])
Question Passage Similarity dim:  torch.Size([5, 167])
Question passage attention dim:  torch.Size([5, 167])
Final Merged Passage dim:  torch.Size([5, 167, 800])
Modeled Passage dim:  torch.Size([5, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 167, 1000])
Span start logits:  torch.Size([5, 167])
span start probs dim:  torch.Size([5, 167])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 167]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 16])
Passage ques attention dim:  torch.Size([5, 130, 16])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 12])
Passage ques attention dim:  torch.Size([5, 100, 12])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 11])
Passage ques attention dim:  torch.Size([5, 110, 11])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 15])
Passage ques attention dim:  torch.Size([5, 163, 15])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 20])
Passage ques attention dim:  torch.Size([5, 95, 20])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 15])
Passage ques attention dim:  torch.Size([5, 107, 15])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 21])
Passage ques attention dim:  torch.Size([5, 139, 21])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 230, 200])
Passage Length:  230
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 230, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 230, 21])
Passage ques attention dim:  torch.Size([5, 230, 21])
Passage question vectors dim:  torch.Size([5, 230, 200])
Question Passage Similarity dim:  torch.Size([5, 230])
Question passage attention dim:  torch.Size([5, 230])
Final Merged Passage dim:  torch.Size([5, 230, 800])
Modeled Passage dim:  torch.Size([5, 230, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 230, 1000])
Span start logits:  torch.Size([5, 230])
span start probs dim:  torch.Size([5, 230])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 230]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 279, 200])
Passage Length:  279
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 279, 18])
Passage ques attention dim:  torch.Size([5, 279, 18])
Passage question vectors dim:  torch.Size([5, 279, 200])
Question Passage Similarity dim:  torch.Size([5, 279])
Question passage attention dim:  torch.Size([5, 279])
Final Merged Passage dim:  torch.Size([5, 279, 800])
Modeled Passage dim:  torch.Size([5, 279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 279, 1000])
Span start logits:  torch.Size([5, 279])
span start probs dim:  torch.Size([5, 279])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 279]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 12])
Passage ques attention dim:  torch.Size([5, 137, 12])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 13])
Passage ques attention dim:  torch.Size([5, 124, 13])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 15])
Passage ques attention dim:  torch.Size([5, 113, 15])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 230, 200])
Passage Length:  230
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 230, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 230, 14])
Passage ques attention dim:  torch.Size([5, 230, 14])
Passage question vectors dim:  torch.Size([5, 230, 200])
Question Passage Similarity dim:  torch.Size([5, 230])
Question passage attention dim:  torch.Size([5, 230])
Final Merged Passage dim:  torch.Size([5, 230, 800])
Modeled Passage dim:  torch.Size([5, 230, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 230, 1000])
Span start logits:  torch.Size([5, 230])
span start probs dim:  torch.Size([5, 230])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 230]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 18])
Passage ques attention dim:  torch.Size([5, 119, 18])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 15])
Passage ques attention dim:  torch.Size([5, 154, 15])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 10])
Passage ques attention dim:  torch.Size([5, 147, 10])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 33, 200])
Passage Length:  33
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 33, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 33, 13])
Passage ques attention dim:  torch.Size([5, 33, 13])
Passage question vectors dim:  torch.Size([5, 33, 200])
Question Passage Similarity dim:  torch.Size([5, 33])
Question passage attention dim:  torch.Size([5, 33])
Final Merged Passage dim:  torch.Size([5, 33, 800])
Modeled Passage dim:  torch.Size([5, 33, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 33, 1000])
Span start logits:  torch.Size([5, 33])
span start probs dim:  torch.Size([5, 33])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 33]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 12])
Passage ques attention dim:  torch.Size([5, 153, 12])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 18])
Passage ques attention dim:  torch.Size([5, 185, 18])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 14])
Passage ques attention dim:  torch.Size([5, 99, 14])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 16])
Passage ques attention dim:  torch.Size([5, 163, 16])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 17])
Passage ques attention dim:  torch.Size([5, 111, 17])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 18])
Passage ques attention dim:  torch.Size([5, 158, 18])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 228, 16])
Passage ques attention dim:  torch.Size([5, 228, 16])
Passage question vectors dim:  torch.Size([5, 228, 200])
Question Passage Similarity dim:  torch.Size([5, 228])
Question passage attention dim:  torch.Size([5, 228])
Final Merged Passage dim:  torch.Size([5, 228, 800])
Modeled Passage dim:  torch.Size([5, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 228, 1000])
Span start logits:  torch.Size([5, 228])
span start probs dim:  torch.Size([5, 228])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 228]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 13])
Passage ques attention dim:  torch.Size([5, 107, 13])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 52, 16])
Passage ques attention dim:  torch.Size([5, 52, 16])
Passage question vectors dim:  torch.Size([5, 52, 200])
Question Passage Similarity dim:  torch.Size([5, 52])
Question passage attention dim:  torch.Size([5, 52])
Final Merged Passage dim:  torch.Size([5, 52, 800])
Modeled Passage dim:  torch.Size([5, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 52, 1000])
Span start logits:  torch.Size([5, 52])
span start probs dim:  torch.Size([5, 52])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 52]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 155, 21])
Passage ques attention dim:  torch.Size([5, 155, 21])
Passage question vectors dim:  torch.Size([5, 155, 200])
Question Passage Similarity dim:  torch.Size([5, 155])
Question passage attention dim:  torch.Size([5, 155])
Final Merged Passage dim:  torch.Size([5, 155, 800])
Modeled Passage dim:  torch.Size([5, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 155, 1000])
Span start logits:  torch.Size([5, 155])
span start probs dim:  torch.Size([5, 155])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 155]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 39, 200])
Passage Length:  39
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 39, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 39, 15])
Passage ques attention dim:  torch.Size([5, 39, 15])
Passage question vectors dim:  torch.Size([5, 39, 200])
Question Passage Similarity dim:  torch.Size([5, 39])
Question passage attention dim:  torch.Size([5, 39])
Final Merged Passage dim:  torch.Size([5, 39, 800])
Modeled Passage dim:  torch.Size([5, 39, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 39, 1000])
Span start logits:  torch.Size([5, 39])
span start probs dim:  torch.Size([5, 39])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 39]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 13])
Passage ques attention dim:  torch.Size([5, 142, 13])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 19])
Passage ques attention dim:  torch.Size([5, 144, 19])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 20])
Passage ques attention dim:  torch.Size([5, 118, 20])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 17])
Passage ques attention dim:  torch.Size([5, 148, 17])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 14])
Passage ques attention dim:  torch.Size([5, 162, 14])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 79, 16])
Passage ques attention dim:  torch.Size([5, 79, 16])
Passage question vectors dim:  torch.Size([5, 79, 200])
Question Passage Similarity dim:  torch.Size([5, 79])
Question passage attention dim:  torch.Size([5, 79])
Final Merged Passage dim:  torch.Size([5, 79, 800])
Modeled Passage dim:  torch.Size([5, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 79, 1000])
Span start logits:  torch.Size([5, 79])
span start probs dim:  torch.Size([5, 79])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 79]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 13])
Passage ques attention dim:  torch.Size([5, 143, 13])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 17])
Passage ques attention dim:  torch.Size([5, 151, 17])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 167, 12])
Passage ques attention dim:  torch.Size([5, 167, 12])
Passage question vectors dim:  torch.Size([5, 167, 200])
Question Passage Similarity dim:  torch.Size([5, 167])
Question passage attention dim:  torch.Size([5, 167])
Final Merged Passage dim:  torch.Size([5, 167, 800])
Modeled Passage dim:  torch.Size([5, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 167, 1000])
Span start logits:  torch.Size([5, 167])
span start probs dim:  torch.Size([5, 167])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 167]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 43, 200])
Passage Length:  43
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 43, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 43, 16])
Passage ques attention dim:  torch.Size([5, 43, 16])
Passage question vectors dim:  torch.Size([5, 43, 200])
Question Passage Similarity dim:  torch.Size([5, 43])
Question passage attention dim:  torch.Size([5, 43])
Final Merged Passage dim:  torch.Size([5, 43, 800])
Modeled Passage dim:  torch.Size([5, 43, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 43, 1000])
Span start logits:  torch.Size([5, 43])
span start probs dim:  torch.Size([5, 43])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 43]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 19])
Passage ques attention dim:  torch.Size([5, 173, 19])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 14])
Passage ques attention dim:  torch.Size([5, 97, 14])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 12])
Passage ques attention dim:  torch.Size([5, 141, 12])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 15])
Passage ques attention dim:  torch.Size([5, 140, 15])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 15])
Passage ques attention dim:  torch.Size([5, 192, 15])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 13])
Passage ques attention dim:  torch.Size([5, 158, 13])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 220, 200])
Passage Length:  220
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 220, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 220, 14])
Passage ques attention dim:  torch.Size([5, 220, 14])
Passage question vectors dim:  torch.Size([5, 220, 200])
Question Passage Similarity dim:  torch.Size([5, 220])
Question passage attention dim:  torch.Size([5, 220])
Final Merged Passage dim:  torch.Size([5, 220, 800])
Modeled Passage dim:  torch.Size([5, 220, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 220, 1000])
Span start logits:  torch.Size([5, 220])
span start probs dim:  torch.Size([5, 220])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 220]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 15])
Passage ques attention dim:  torch.Size([5, 121, 15])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 21])
Passage ques attention dim:  torch.Size([5, 120, 21])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 14])
Passage ques attention dim:  torch.Size([5, 173, 14])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 15])
Passage ques attention dim:  torch.Size([5, 122, 15])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 13])
Passage ques attention dim:  torch.Size([5, 158, 13])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 15])
Passage ques attention dim:  torch.Size([5, 164, 15])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 13])
Passage ques attention dim:  torch.Size([5, 116, 13])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 15])
Passage ques attention dim:  torch.Size([5, 116, 15])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 13])
Passage ques attention dim:  torch.Size([5, 112, 13])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 22])
Passage ques attention dim:  torch.Size([5, 101, 22])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 13])
Passage ques attention dim:  torch.Size([5, 141, 13])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 215, 16])
Passage ques attention dim:  torch.Size([5, 215, 16])
Passage question vectors dim:  torch.Size([5, 215, 200])
Question Passage Similarity dim:  torch.Size([5, 215])
Question passage attention dim:  torch.Size([5, 215])
Final Merged Passage dim:  torch.Size([5, 215, 800])
Modeled Passage dim:  torch.Size([5, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 215, 1000])
Span start logits:  torch.Size([5, 215])
span start probs dim:  torch.Size([5, 215])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 215]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 214, 200])
Passage Length:  214
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 214, 17])
Passage ques attention dim:  torch.Size([5, 214, 17])
Passage question vectors dim:  torch.Size([5, 214, 200])
Question Passage Similarity dim:  torch.Size([5, 214])
Question passage attention dim:  torch.Size([5, 214])
Final Merged Passage dim:  torch.Size([5, 214, 800])
Modeled Passage dim:  torch.Size([5, 214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 214, 1000])
Span start logits:  torch.Size([5, 214])
span start probs dim:  torch.Size([5, 214])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 214]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 80, 200])
Passage Length:  80
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 80, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 80, 17])
Passage ques attention dim:  torch.Size([5, 80, 17])
Passage question vectors dim:  torch.Size([5, 80, 200])
Question Passage Similarity dim:  torch.Size([5, 80])
Question passage attention dim:  torch.Size([5, 80])
Final Merged Passage dim:  torch.Size([5, 80, 800])
Modeled Passage dim:  torch.Size([5, 80, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 80, 1000])
Span start logits:  torch.Size([5, 80])
span start probs dim:  torch.Size([5, 80])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 80]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 90, 16])
Passage ques attention dim:  torch.Size([5, 90, 16])
Passage question vectors dim:  torch.Size([5, 90, 200])
Question Passage Similarity dim:  torch.Size([5, 90])
Question passage attention dim:  torch.Size([5, 90])
Final Merged Passage dim:  torch.Size([5, 90, 800])
Modeled Passage dim:  torch.Size([5, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 90, 1000])
Span start logits:  torch.Size([5, 90])
span start probs dim:  torch.Size([5, 90])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 90]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 16])
Passage ques attention dim:  torch.Size([5, 254, 16])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 262, 200])
Passage Length:  262
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 262, 14])
Passage ques attention dim:  torch.Size([5, 262, 14])
Passage question vectors dim:  torch.Size([5, 262, 200])
Question Passage Similarity dim:  torch.Size([5, 262])
Question passage attention dim:  torch.Size([5, 262])
Final Merged Passage dim:  torch.Size([5, 262, 800])
Modeled Passage dim:  torch.Size([5, 262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 262, 1000])
Span start logits:  torch.Size([5, 262])
span start probs dim:  torch.Size([5, 262])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 262]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 13])
Passage ques attention dim:  torch.Size([5, 99, 13])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 66, 200])
Passage Length:  66
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 66, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 66, 12])
Passage ques attention dim:  torch.Size([5, 66, 12])
Passage question vectors dim:  torch.Size([5, 66, 200])
Question Passage Similarity dim:  torch.Size([5, 66])
Question passage attention dim:  torch.Size([5, 66])
Final Merged Passage dim:  torch.Size([5, 66, 800])
Modeled Passage dim:  torch.Size([5, 66, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 66, 1000])
Span start logits:  torch.Size([5, 66])
span start probs dim:  torch.Size([5, 66])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 66]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 18])
Passage ques attention dim:  torch.Size([5, 126, 18])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 83, 20])
Passage ques attention dim:  torch.Size([5, 83, 20])
Passage question vectors dim:  torch.Size([5, 83, 200])
Question Passage Similarity dim:  torch.Size([5, 83])
Question passage attention dim:  torch.Size([5, 83])
Final Merged Passage dim:  torch.Size([5, 83, 800])
Modeled Passage dim:  torch.Size([5, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 83, 1000])
Span start logits:  torch.Size([5, 83])
span start probs dim:  torch.Size([5, 83])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 83]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 212, 21])
Passage ques attention dim:  torch.Size([5, 212, 21])
Passage question vectors dim:  torch.Size([5, 212, 200])
Question Passage Similarity dim:  torch.Size([5, 212])
Question passage attention dim:  torch.Size([5, 212])
Final Merged Passage dim:  torch.Size([5, 212, 800])
Modeled Passage dim:  torch.Size([5, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 212, 1000])
Span start logits:  torch.Size([5, 212])
span start probs dim:  torch.Size([5, 212])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 212]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 12])
Passage ques attention dim:  torch.Size([5, 205, 12])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 393, 200])
Passage Length:  393
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 393, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 393, 25])
Passage ques attention dim:  torch.Size([5, 393, 25])
Passage question vectors dim:  torch.Size([5, 393, 200])
Question Passage Similarity dim:  torch.Size([5, 393])
Question passage attention dim:  torch.Size([5, 393])
Final Merged Passage dim:  torch.Size([5, 393, 800])
Modeled Passage dim:  torch.Size([5, 393, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 393, 1000])
Span start logits:  torch.Size([5, 393])
span start probs dim:  torch.Size([5, 393])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 393]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 24])
Passage ques attention dim:  torch.Size([5, 254, 24])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 12])
Passage ques attention dim:  torch.Size([5, 137, 12])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 18])
Passage ques attention dim:  torch.Size([5, 104, 18])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 15])
Passage ques attention dim:  torch.Size([5, 127, 15])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 16])
Passage ques attention dim:  torch.Size([5, 135, 16])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 16])
Passage ques attention dim:  torch.Size([5, 92, 16])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 90, 16])
Passage ques attention dim:  torch.Size([5, 90, 16])
Passage question vectors dim:  torch.Size([5, 90, 200])
Question Passage Similarity dim:  torch.Size([5, 90])
Question passage attention dim:  torch.Size([5, 90])
Final Merged Passage dim:  torch.Size([5, 90, 800])
Modeled Passage dim:  torch.Size([5, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 90, 1000])
Span start logits:  torch.Size([5, 90])
span start probs dim:  torch.Size([5, 90])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 90]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 19])
Passage ques attention dim:  torch.Size([5, 143, 19])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 424, 200])
Passage Length:  424
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 424, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 424, 18])
Passage ques attention dim:  torch.Size([5, 424, 18])
Passage question vectors dim:  torch.Size([5, 424, 200])
Question Passage Similarity dim:  torch.Size([5, 424])
Question passage attention dim:  torch.Size([5, 424])
Final Merged Passage dim:  torch.Size([5, 424, 800])
Modeled Passage dim:  torch.Size([5, 424, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 424, 1000])
Span start logits:  torch.Size([5, 424])
span start probs dim:  torch.Size([5, 424])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 424]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 15])
Passage ques attention dim:  torch.Size([5, 177, 15])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 11])
Passage ques attention dim:  torch.Size([5, 172, 11])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 82, 13])
Passage ques attention dim:  torch.Size([5, 82, 13])
Passage question vectors dim:  torch.Size([5, 82, 200])
Question Passage Similarity dim:  torch.Size([5, 82])
Question passage attention dim:  torch.Size([5, 82])
Final Merged Passage dim:  torch.Size([5, 82, 800])
Modeled Passage dim:  torch.Size([5, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 82, 1000])
Span start logits:  torch.Size([5, 82])
span start probs dim:  torch.Size([5, 82])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 82]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 13])
Passage ques attention dim:  torch.Size([5, 123, 13])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 236, 200])
Passage Length:  236
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 236, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 236, 14])
Passage ques attention dim:  torch.Size([5, 236, 14])
Passage question vectors dim:  torch.Size([5, 236, 200])
Question Passage Similarity dim:  torch.Size([5, 236])
Question passage attention dim:  torch.Size([5, 236])
Final Merged Passage dim:  torch.Size([5, 236, 800])
Modeled Passage dim:  torch.Size([5, 236, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 236, 1000])
Span start logits:  torch.Size([5, 236])
span start probs dim:  torch.Size([5, 236])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 236]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 15])
Passage ques attention dim:  torch.Size([5, 161, 15])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 16])
Passage ques attention dim:  torch.Size([5, 131, 16])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 17])
Passage ques attention dim:  torch.Size([5, 118, 17])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 15])
Passage ques attention dim:  torch.Size([5, 151, 15])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 19])
Passage ques attention dim:  torch.Size([5, 117, 19])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 14])
Passage ques attention dim:  torch.Size([5, 234, 14])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 19])
Passage ques attention dim:  torch.Size([5, 110, 19])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 24])
Passage ques attention dim:  torch.Size([5, 175, 24])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 246, 15])
Passage ques attention dim:  torch.Size([5, 246, 15])
Passage question vectors dim:  torch.Size([5, 246, 200])
Question Passage Similarity dim:  torch.Size([5, 246])
Question passage attention dim:  torch.Size([5, 246])
Final Merged Passage dim:  torch.Size([5, 246, 800])
Modeled Passage dim:  torch.Size([5, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 246, 1000])
Span start logits:  torch.Size([5, 246])
span start probs dim:  torch.Size([5, 246])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 246]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 191, 17])
Passage ques attention dim:  torch.Size([5, 191, 17])
Passage question vectors dim:  torch.Size([5, 191, 200])
Question Passage Similarity dim:  torch.Size([5, 191])
Question passage attention dim:  torch.Size([5, 191])
Final Merged Passage dim:  torch.Size([5, 191, 800])
Modeled Passage dim:  torch.Size([5, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 191, 1000])
Span start logits:  torch.Size([5, 191])
span start probs dim:  torch.Size([5, 191])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 191]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 22])
Passage ques attention dim:  torch.Size([5, 96, 22])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 14])
Passage ques attention dim:  torch.Size([5, 192, 14])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 21])
Passage ques attention dim:  torch.Size([5, 97, 21])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 63, 200])
Passage Length:  63
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 63, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 63, 13])
Passage ques attention dim:  torch.Size([5, 63, 13])
Passage question vectors dim:  torch.Size([5, 63, 200])
Question Passage Similarity dim:  torch.Size([5, 63])
Question passage attention dim:  torch.Size([5, 63])
Final Merged Passage dim:  torch.Size([5, 63, 800])
Modeled Passage dim:  torch.Size([5, 63, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 63, 1000])
Span start logits:  torch.Size([5, 63])
span start probs dim:  torch.Size([5, 63])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 63]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 250, 16])
Passage ques attention dim:  torch.Size([5, 250, 16])
Passage question vectors dim:  torch.Size([5, 250, 200])
Question Passage Similarity dim:  torch.Size([5, 250])
Question passage attention dim:  torch.Size([5, 250])
Final Merged Passage dim:  torch.Size([5, 250, 800])
Modeled Passage dim:  torch.Size([5, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 250, 1000])
Span start logits:  torch.Size([5, 250])
span start probs dim:  torch.Size([5, 250])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 250]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 15])
Passage ques attention dim:  torch.Size([5, 91, 15])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 13])
Passage ques attention dim:  torch.Size([5, 126, 13])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 13])
Passage ques attention dim:  torch.Size([5, 132, 13])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 16])
Passage ques attention dim:  torch.Size([5, 180, 16])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 19])
Passage ques attention dim:  torch.Size([5, 102, 19])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 12])
Passage ques attention dim:  torch.Size([5, 147, 12])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 17])
Passage ques attention dim:  torch.Size([5, 273, 17])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 13])
Passage ques attention dim:  torch.Size([5, 175, 13])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 20])
Passage ques attention dim:  torch.Size([5, 158, 20])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 35, 200])
Passage Length:  35
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 35, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 35, 14])
Passage ques attention dim:  torch.Size([5, 35, 14])
Passage question vectors dim:  torch.Size([5, 35, 200])
Question Passage Similarity dim:  torch.Size([5, 35])
Question passage attention dim:  torch.Size([5, 35])
Final Merged Passage dim:  torch.Size([5, 35, 800])
Modeled Passage dim:  torch.Size([5, 35, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 35, 1000])
Span start logits:  torch.Size([5, 35])
span start probs dim:  torch.Size([5, 35])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 35]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 17])
Passage ques attention dim:  torch.Size([5, 178, 17])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 16])
Passage ques attention dim:  torch.Size([5, 258, 16])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 17])
Passage ques attention dim:  torch.Size([5, 118, 17])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 18])
Passage ques attention dim:  torch.Size([5, 172, 18])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 253, 200])
Passage Length:  253
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 253, 19])
Passage ques attention dim:  torch.Size([5, 253, 19])
Passage question vectors dim:  torch.Size([5, 253, 200])
Question Passage Similarity dim:  torch.Size([5, 253])
Question passage attention dim:  torch.Size([5, 253])
Final Merged Passage dim:  torch.Size([5, 253, 800])
Modeled Passage dim:  torch.Size([5, 253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 253, 1000])
Span start logits:  torch.Size([5, 253])
span start probs dim:  torch.Size([5, 253])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 253]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 15])
Passage ques attention dim:  torch.Size([5, 194, 15])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 15])
Passage ques attention dim:  torch.Size([5, 151, 15])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 18])
Passage ques attention dim:  torch.Size([5, 226, 18])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 84, 15])
Passage ques attention dim:  torch.Size([5, 84, 15])
Passage question vectors dim:  torch.Size([5, 84, 200])
Question Passage Similarity dim:  torch.Size([5, 84])
Question passage attention dim:  torch.Size([5, 84])
Final Merged Passage dim:  torch.Size([5, 84, 800])
Modeled Passage dim:  torch.Size([5, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 84, 1000])
Span start logits:  torch.Size([5, 84])
span start probs dim:  torch.Size([5, 84])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 84]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 14])
Passage ques attention dim:  torch.Size([5, 109, 14])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 98, 14])
Passage ques attention dim:  torch.Size([5, 98, 14])
Passage question vectors dim:  torch.Size([5, 98, 200])
Question Passage Similarity dim:  torch.Size([5, 98])
Question passage attention dim:  torch.Size([5, 98])
Final Merged Passage dim:  torch.Size([5, 98, 800])
Modeled Passage dim:  torch.Size([5, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 98, 1000])
Span start logits:  torch.Size([5, 98])
span start probs dim:  torch.Size([5, 98])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 98]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 220, 200])
Passage Length:  220
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 220, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 220, 18])
Passage ques attention dim:  torch.Size([5, 220, 18])
Passage question vectors dim:  torch.Size([5, 220, 200])
Question Passage Similarity dim:  torch.Size([5, 220])
Question passage attention dim:  torch.Size([5, 220])
Final Merged Passage dim:  torch.Size([5, 220, 800])
Modeled Passage dim:  torch.Size([5, 220, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 220, 1000])
Span start logits:  torch.Size([5, 220])
span start probs dim:  torch.Size([5, 220])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 220]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 18])
Passage ques attention dim:  torch.Size([5, 190, 18])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 11])
Passage ques attention dim:  torch.Size([5, 97, 11])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 14])
Passage ques attention dim:  torch.Size([5, 149, 14])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 15])
Passage ques attention dim:  torch.Size([5, 104, 15])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 253, 200])
Passage Length:  253
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 253, 19])
Passage ques attention dim:  torch.Size([5, 253, 19])
Passage question vectors dim:  torch.Size([5, 253, 200])
Question Passage Similarity dim:  torch.Size([5, 253])
Question passage attention dim:  torch.Size([5, 253])
Final Merged Passage dim:  torch.Size([5, 253, 800])
Modeled Passage dim:  torch.Size([5, 253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 253, 1000])
Span start logits:  torch.Size([5, 253])
span start probs dim:  torch.Size([5, 253])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 253]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 20])
Passage ques attention dim:  torch.Size([5, 161, 20])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 18])
Passage ques attention dim:  torch.Size([5, 124, 18])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 16])
Passage ques attention dim:  torch.Size([5, 117, 16])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 24])
Passage ques attention dim:  torch.Size([5, 118, 24])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 10])
Passage ques attention dim:  torch.Size([5, 111, 10])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 331, 200])
Passage Length:  331
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 331, 15])
Passage ques attention dim:  torch.Size([5, 331, 15])
Passage question vectors dim:  torch.Size([5, 331, 200])
Question Passage Similarity dim:  torch.Size([5, 331])
Question passage attention dim:  torch.Size([5, 331])
Final Merged Passage dim:  torch.Size([5, 331, 800])
Modeled Passage dim:  torch.Size([5, 331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 331, 1000])
Span start logits:  torch.Size([5, 331])
span start probs dim:  torch.Size([5, 331])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 331]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 22])
Passage ques attention dim:  torch.Size([5, 130, 22])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 16])
Passage ques attention dim:  torch.Size([5, 111, 16])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 13])
Passage ques attention dim:  torch.Size([5, 130, 13])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 25])
Passage ques attention dim:  torch.Size([5, 163, 25])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 13])
Passage ques attention dim:  torch.Size([5, 129, 13])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 281, 200])
Passage Length:  281
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 281, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 281, 12])
Passage ques attention dim:  torch.Size([5, 281, 12])
Passage question vectors dim:  torch.Size([5, 281, 200])
Question Passage Similarity dim:  torch.Size([5, 281])
Question passage attention dim:  torch.Size([5, 281])
Final Merged Passage dim:  torch.Size([5, 281, 800])
Modeled Passage dim:  torch.Size([5, 281, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 281, 1000])
Span start logits:  torch.Size([5, 281])
span start probs dim:  torch.Size([5, 281])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 281]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 14])
Passage ques attention dim:  torch.Size([5, 91, 14])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 19])
Passage ques attention dim:  torch.Size([5, 121, 19])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 10])
Passage ques attention dim:  torch.Size([5, 258, 10])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 20])
Passage ques attention dim:  torch.Size([5, 139, 20])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 15])
Passage ques attention dim:  torch.Size([5, 131, 15])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 15])
Passage ques attention dim:  torch.Size([5, 113, 15])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 18])
Passage ques attention dim:  torch.Size([5, 105, 18])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 204, 18])
Passage ques attention dim:  torch.Size([5, 204, 18])
Passage question vectors dim:  torch.Size([5, 204, 200])
Question Passage Similarity dim:  torch.Size([5, 204])
Question passage attention dim:  torch.Size([5, 204])
Final Merged Passage dim:  torch.Size([5, 204, 800])
Modeled Passage dim:  torch.Size([5, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 204, 1000])
Span start logits:  torch.Size([5, 204])
span start probs dim:  torch.Size([5, 204])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 204]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 14])
Passage ques attention dim:  torch.Size([5, 169, 14])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 12])
Passage ques attention dim:  torch.Size([5, 126, 12])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 18])
Passage ques attention dim:  torch.Size([5, 102, 18])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 14])
Passage ques attention dim:  torch.Size([5, 119, 14])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 16])
Passage ques attention dim:  torch.Size([5, 123, 16])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 213, 12])
Passage ques attention dim:  torch.Size([5, 213, 12])
Passage question vectors dim:  torch.Size([5, 213, 200])
Question Passage Similarity dim:  torch.Size([5, 213])
Question passage attention dim:  torch.Size([5, 213])
Final Merged Passage dim:  torch.Size([5, 213, 800])
Modeled Passage dim:  torch.Size([5, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 213, 1000])
Span start logits:  torch.Size([5, 213])
span start probs dim:  torch.Size([5, 213])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 213]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 16])
Passage ques attention dim:  torch.Size([5, 149, 16])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 22])
Passage ques attention dim:  torch.Size([5, 161, 22])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 255, 200])
Passage Length:  255
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 255, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 255, 19])
Passage ques attention dim:  torch.Size([5, 255, 19])
Passage question vectors dim:  torch.Size([5, 255, 200])
Question Passage Similarity dim:  torch.Size([5, 255])
Question passage attention dim:  torch.Size([5, 255])
Final Merged Passage dim:  torch.Size([5, 255, 800])
Modeled Passage dim:  torch.Size([5, 255, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 255, 1000])
Span start logits:  torch.Size([5, 255])
span start probs dim:  torch.Size([5, 255])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 255]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 196, 11])
Passage ques attention dim:  torch.Size([5, 196, 11])
Passage question vectors dim:  torch.Size([5, 196, 200])
Question Passage Similarity dim:  torch.Size([5, 196])
Question passage attention dim:  torch.Size([5, 196])
Final Merged Passage dim:  torch.Size([5, 196, 800])
Modeled Passage dim:  torch.Size([5, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 196, 1000])
Span start logits:  torch.Size([5, 196])
span start probs dim:  torch.Size([5, 196])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 196]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 11])
Passage ques attention dim:  torch.Size([5, 92, 11])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 75, 15])
Passage ques attention dim:  torch.Size([5, 75, 15])
Passage question vectors dim:  torch.Size([5, 75, 200])
Question Passage Similarity dim:  torch.Size([5, 75])
Question passage attention dim:  torch.Size([5, 75])
Final Merged Passage dim:  torch.Size([5, 75, 800])
Modeled Passage dim:  torch.Size([5, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 75, 1000])
Span start logits:  torch.Size([5, 75])
span start probs dim:  torch.Size([5, 75])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 75]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 19])
Passage ques attention dim:  torch.Size([5, 111, 19])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 14])
Passage ques attention dim:  torch.Size([5, 113, 14])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 167, 13])
Passage ques attention dim:  torch.Size([5, 167, 13])
Passage question vectors dim:  torch.Size([5, 167, 200])
Question Passage Similarity dim:  torch.Size([5, 167])
Question passage attention dim:  torch.Size([5, 167])
Final Merged Passage dim:  torch.Size([5, 167, 800])
Modeled Passage dim:  torch.Size([5, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 167, 1000])
Span start logits:  torch.Size([5, 167])
span start probs dim:  torch.Size([5, 167])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 167]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 13])
Passage ques attention dim:  torch.Size([5, 146, 13])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 23])
Passage ques attention dim:  torch.Size([5, 147, 23])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 12])
Passage ques attention dim:  torch.Size([5, 103, 12])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 19])
Passage ques attention dim:  torch.Size([5, 123, 19])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 246, 13])
Passage ques attention dim:  torch.Size([5, 246, 13])
Passage question vectors dim:  torch.Size([5, 246, 200])
Question Passage Similarity dim:  torch.Size([5, 246])
Question passage attention dim:  torch.Size([5, 246])
Final Merged Passage dim:  torch.Size([5, 246, 800])
Modeled Passage dim:  torch.Size([5, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 246, 1000])
Span start logits:  torch.Size([5, 246])
span start probs dim:  torch.Size([5, 246])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 246]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 15])
Passage ques attention dim:  torch.Size([5, 159, 15])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 22])
Passage ques attention dim:  torch.Size([5, 101, 22])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 17])
Passage ques attention dim:  torch.Size([5, 116, 17])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 17])
Passage ques attention dim:  torch.Size([5, 195, 17])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 17])
Passage ques attention dim:  torch.Size([5, 127, 17])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 19])
Passage ques attention dim:  torch.Size([5, 136, 19])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 362, 200])
Passage Length:  362
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 362, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 362, 18])
Passage ques attention dim:  torch.Size([5, 362, 18])
Passage question vectors dim:  torch.Size([5, 362, 200])
Question Passage Similarity dim:  torch.Size([5, 362])
Question passage attention dim:  torch.Size([5, 362])
Final Merged Passage dim:  torch.Size([5, 362, 800])
Modeled Passage dim:  torch.Size([5, 362, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 362, 1000])
Span start logits:  torch.Size([5, 362])
span start probs dim:  torch.Size([5, 362])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 362]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 184, 19])
Passage ques attention dim:  torch.Size([5, 184, 19])
Passage question vectors dim:  torch.Size([5, 184, 200])
Question Passage Similarity dim:  torch.Size([5, 184])
Question passage attention dim:  torch.Size([5, 184])
Final Merged Passage dim:  torch.Size([5, 184, 800])
Modeled Passage dim:  torch.Size([5, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 184, 1000])
Span start logits:  torch.Size([5, 184])
span start probs dim:  torch.Size([5, 184])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 184]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 15])
Passage ques attention dim:  torch.Size([5, 106, 15])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 19])
Passage ques attention dim:  torch.Size([5, 114, 19])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 17])
Passage ques attention dim:  torch.Size([5, 197, 17])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 227, 17])
Passage ques attention dim:  torch.Size([5, 227, 17])
Passage question vectors dim:  torch.Size([5, 227, 200])
Question Passage Similarity dim:  torch.Size([5, 227])
Question passage attention dim:  torch.Size([5, 227])
Final Merged Passage dim:  torch.Size([5, 227, 800])
Modeled Passage dim:  torch.Size([5, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 227, 1000])
Span start logits:  torch.Size([5, 227])
span start probs dim:  torch.Size([5, 227])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 227]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 67, 20])
Passage ques attention dim:  torch.Size([5, 67, 20])
Passage question vectors dim:  torch.Size([5, 67, 200])
Question Passage Similarity dim:  torch.Size([5, 67])
Question passage attention dim:  torch.Size([5, 67])
Final Merged Passage dim:  torch.Size([5, 67, 800])
Modeled Passage dim:  torch.Size([5, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 67, 1000])
Span start logits:  torch.Size([5, 67])
span start probs dim:  torch.Size([5, 67])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 67]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 219, 200])
Passage Length:  219
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 219, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 219, 20])
Passage ques attention dim:  torch.Size([5, 219, 20])
Passage question vectors dim:  torch.Size([5, 219, 200])
Question Passage Similarity dim:  torch.Size([5, 219])
Question passage attention dim:  torch.Size([5, 219])
Final Merged Passage dim:  torch.Size([5, 219, 800])
Modeled Passage dim:  torch.Size([5, 219, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 219, 1000])
Span start logits:  torch.Size([5, 219])
span start probs dim:  torch.Size([5, 219])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 219]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 16])
Passage ques attention dim:  torch.Size([5, 107, 16])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 14])
Passage ques attention dim:  torch.Size([5, 137, 14])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 32, 200])
Passage Length:  32
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 32, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 32, 18])
Passage ques attention dim:  torch.Size([5, 32, 18])
Passage question vectors dim:  torch.Size([5, 32, 200])
Question Passage Similarity dim:  torch.Size([5, 32])
Question passage attention dim:  torch.Size([5, 32])
Final Merged Passage dim:  torch.Size([5, 32, 800])
Modeled Passage dim:  torch.Size([5, 32, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 32, 1000])
Span start logits:  torch.Size([5, 32])
span start probs dim:  torch.Size([5, 32])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 32]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 21])
Passage ques attention dim:  torch.Size([5, 104, 21])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 15])
Passage ques attention dim:  torch.Size([5, 180, 15])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 15])
Passage ques attention dim:  torch.Size([5, 194, 15])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 13])
Passage ques attention dim:  torch.Size([5, 179, 13])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 12])
Passage ques attention dim:  torch.Size([5, 176, 12])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 12])
Passage ques attention dim:  torch.Size([5, 258, 12])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 14])
Passage ques attention dim:  torch.Size([5, 99, 14])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 17])
Passage ques attention dim:  torch.Size([5, 91, 17])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 19])
Passage ques attention dim:  torch.Size([5, 92, 19])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 18])
Passage ques attention dim:  torch.Size([5, 182, 18])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 86, 18])
Passage ques attention dim:  torch.Size([5, 86, 18])
Passage question vectors dim:  torch.Size([5, 86, 200])
Question Passage Similarity dim:  torch.Size([5, 86])
Question passage attention dim:  torch.Size([5, 86])
Final Merged Passage dim:  torch.Size([5, 86, 800])
Modeled Passage dim:  torch.Size([5, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 86, 1000])
Span start logits:  torch.Size([5, 86])
span start probs dim:  torch.Size([5, 86])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 86]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 18])
Passage ques attention dim:  torch.Size([5, 110, 18])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 293, 200])
Passage Length:  293
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 293, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 293, 17])
Passage ques attention dim:  torch.Size([5, 293, 17])
Passage question vectors dim:  torch.Size([5, 293, 200])
Question Passage Similarity dim:  torch.Size([5, 293])
Question passage attention dim:  torch.Size([5, 293])
Final Merged Passage dim:  torch.Size([5, 293, 800])
Modeled Passage dim:  torch.Size([5, 293, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 293, 1000])
Span start logits:  torch.Size([5, 293])
span start probs dim:  torch.Size([5, 293])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 293]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 20])
Passage ques attention dim:  torch.Size([5, 121, 20])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 15])
Passage ques attention dim:  torch.Size([5, 116, 15])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 18])
Passage ques attention dim:  torch.Size([5, 258, 18])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 14])
Passage ques attention dim:  torch.Size([5, 110, 14])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 22])
Passage ques attention dim:  torch.Size([5, 107, 22])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 16])
Passage ques attention dim:  torch.Size([5, 183, 16])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 12])
Passage ques attention dim:  torch.Size([5, 107, 12])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 218, 15])
Passage ques attention dim:  torch.Size([5, 218, 15])
Passage question vectors dim:  torch.Size([5, 218, 200])
Question Passage Similarity dim:  torch.Size([5, 218])
Question passage attention dim:  torch.Size([5, 218])
Final Merged Passage dim:  torch.Size([5, 218, 800])
Modeled Passage dim:  torch.Size([5, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 218, 1000])
Span start logits:  torch.Size([5, 218])
span start probs dim:  torch.Size([5, 218])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 218]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 15])
Passage ques attention dim:  torch.Size([5, 158, 15])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 11])
Passage ques attention dim:  torch.Size([5, 130, 11])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 12])
Passage ques attention dim:  torch.Size([5, 173, 12])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 18])
Passage ques attention dim:  torch.Size([5, 122, 18])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 15])
Passage ques attention dim:  torch.Size([5, 125, 15])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 12])
Passage ques attention dim:  torch.Size([5, 133, 12])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 26])
Passage ques attention dim:  torch.Size([5, 116, 26])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 20])
Passage ques attention dim:  torch.Size([5, 177, 20])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 12])
Passage ques attention dim:  torch.Size([5, 129, 12])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 202, 16])
Passage ques attention dim:  torch.Size([5, 202, 16])
Passage question vectors dim:  torch.Size([5, 202, 200])
Question Passage Similarity dim:  torch.Size([5, 202])
Question passage attention dim:  torch.Size([5, 202])
Final Merged Passage dim:  torch.Size([5, 202, 800])
Modeled Passage dim:  torch.Size([5, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 202, 1000])
Span start logits:  torch.Size([5, 202])
span start probs dim:  torch.Size([5, 202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 18])
Passage ques attention dim:  torch.Size([5, 131, 18])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 13])
Passage ques attention dim:  torch.Size([5, 102, 13])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 20])
Passage ques attention dim:  torch.Size([5, 121, 20])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 13])
Passage ques attention dim:  torch.Size([5, 183, 13])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 17])
Passage ques attention dim:  torch.Size([5, 149, 17])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 16])
Passage ques attention dim:  torch.Size([5, 222, 16])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 14])
Passage ques attention dim:  torch.Size([5, 102, 14])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 25])
Passage ques attention dim:  torch.Size([5, 125, 25])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 18])
Passage ques attention dim:  torch.Size([5, 128, 18])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 14])
Passage ques attention dim:  torch.Size([5, 124, 14])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 19])
Passage ques attention dim:  torch.Size([5, 171, 19])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 18])
Passage ques attention dim:  torch.Size([5, 175, 18])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 14])
Passage ques attention dim:  torch.Size([5, 121, 14])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 134, 15])
Passage ques attention dim:  torch.Size([5, 134, 15])
Passage question vectors dim:  torch.Size([5, 134, 200])
Question Passage Similarity dim:  torch.Size([5, 134])
Question passage attention dim:  torch.Size([5, 134])
Final Merged Passage dim:  torch.Size([5, 134, 800])
Modeled Passage dim:  torch.Size([5, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 134, 1000])
Span start logits:  torch.Size([5, 134])
span start probs dim:  torch.Size([5, 134])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 134]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 228, 12])
Passage ques attention dim:  torch.Size([5, 228, 12])
Passage question vectors dim:  torch.Size([5, 228, 200])
Question Passage Similarity dim:  torch.Size([5, 228])
Question passage attention dim:  torch.Size([5, 228])
Final Merged Passage dim:  torch.Size([5, 228, 800])
Modeled Passage dim:  torch.Size([5, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 228, 1000])
Span start logits:  torch.Size([5, 228])
span start probs dim:  torch.Size([5, 228])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 228]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 257, 200])
Passage Length:  257
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 257, 14])
Passage ques attention dim:  torch.Size([5, 257, 14])
Passage question vectors dim:  torch.Size([5, 257, 200])
Question Passage Similarity dim:  torch.Size([5, 257])
Question passage attention dim:  torch.Size([5, 257])
Final Merged Passage dim:  torch.Size([5, 257, 800])
Modeled Passage dim:  torch.Size([5, 257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 257, 1000])
Span start logits:  torch.Size([5, 257])
span start probs dim:  torch.Size([5, 257])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 257]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 10])
Passage ques attention dim:  torch.Size([5, 119, 10])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 244, 200])
Passage Length:  244
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 244, 14])
Passage ques attention dim:  torch.Size([5, 244, 14])
Passage question vectors dim:  torch.Size([5, 244, 200])
Question Passage Similarity dim:  torch.Size([5, 244])
Question passage attention dim:  torch.Size([5, 244])
Final Merged Passage dim:  torch.Size([5, 244, 800])
Modeled Passage dim:  torch.Size([5, 244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 244, 1000])
Span start logits:  torch.Size([5, 244])
span start probs dim:  torch.Size([5, 244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 98, 15])
Passage ques attention dim:  torch.Size([5, 98, 15])
Passage question vectors dim:  torch.Size([5, 98, 200])
Question Passage Similarity dim:  torch.Size([5, 98])
Question passage attention dim:  torch.Size([5, 98])
Final Merged Passage dim:  torch.Size([5, 98, 800])
Modeled Passage dim:  torch.Size([5, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 98, 1000])
Span start logits:  torch.Size([5, 98])
span start probs dim:  torch.Size([5, 98])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 98]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 246, 21])
Passage ques attention dim:  torch.Size([5, 246, 21])
Passage question vectors dim:  torch.Size([5, 246, 200])
Question Passage Similarity dim:  torch.Size([5, 246])
Question passage attention dim:  torch.Size([5, 246])
Final Merged Passage dim:  torch.Size([5, 246, 800])
Modeled Passage dim:  torch.Size([5, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 246, 1000])
Span start logits:  torch.Size([5, 246])
span start probs dim:  torch.Size([5, 246])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 246]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 20])
Passage ques attention dim:  torch.Size([5, 106, 20])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 14])
Passage ques attention dim:  torch.Size([5, 117, 14])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 267, 200])
Passage Length:  267
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 267, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 267, 16])
Passage ques attention dim:  torch.Size([5, 267, 16])
Passage question vectors dim:  torch.Size([5, 267, 200])
Question Passage Similarity dim:  torch.Size([5, 267])
Question passage attention dim:  torch.Size([5, 267])
Final Merged Passage dim:  torch.Size([5, 267, 800])
Modeled Passage dim:  torch.Size([5, 267, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 267, 1000])
Span start logits:  torch.Size([5, 267])
span start probs dim:  torch.Size([5, 267])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 267]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 84, 21])
Passage ques attention dim:  torch.Size([5, 84, 21])
Passage question vectors dim:  torch.Size([5, 84, 200])
Question Passage Similarity dim:  torch.Size([5, 84])
Question passage attention dim:  torch.Size([5, 84])
Final Merged Passage dim:  torch.Size([5, 84, 800])
Modeled Passage dim:  torch.Size([5, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 84, 1000])
Span start logits:  torch.Size([5, 84])
span start probs dim:  torch.Size([5, 84])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 84]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 16])
Passage ques attention dim:  torch.Size([5, 148, 16])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 281, 200])
Passage Length:  281
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 281, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 281, 16])
Passage ques attention dim:  torch.Size([5, 281, 16])
Passage question vectors dim:  torch.Size([5, 281, 200])
Question Passage Similarity dim:  torch.Size([5, 281])
Question passage attention dim:  torch.Size([5, 281])
Final Merged Passage dim:  torch.Size([5, 281, 800])
Modeled Passage dim:  torch.Size([5, 281, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 281, 1000])
Span start logits:  torch.Size([5, 281])
span start probs dim:  torch.Size([5, 281])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 281]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 23])
Passage ques attention dim:  torch.Size([5, 100, 23])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 13])
Passage ques attention dim:  torch.Size([5, 130, 13])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 231, 14])
Passage ques attention dim:  torch.Size([5, 231, 14])
Passage question vectors dim:  torch.Size([5, 231, 200])
Question Passage Similarity dim:  torch.Size([5, 231])
Question passage attention dim:  torch.Size([5, 231])
Final Merged Passage dim:  torch.Size([5, 231, 800])
Modeled Passage dim:  torch.Size([5, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 231, 1000])
Span start logits:  torch.Size([5, 231])
span start probs dim:  torch.Size([5, 231])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 231]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 61, 200])
Passage Length:  61
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 61, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 61, 15])
Passage ques attention dim:  torch.Size([5, 61, 15])
Passage question vectors dim:  torch.Size([5, 61, 200])
Question Passage Similarity dim:  torch.Size([5, 61])
Question passage attention dim:  torch.Size([5, 61])
Final Merged Passage dim:  torch.Size([5, 61, 800])
Modeled Passage dim:  torch.Size([5, 61, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 61, 1000])
Span start logits:  torch.Size([5, 61])
span start probs dim:  torch.Size([5, 61])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 61]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 236, 200])
Passage Length:  236
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 236, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 236, 19])
Passage ques attention dim:  torch.Size([5, 236, 19])
Passage question vectors dim:  torch.Size([5, 236, 200])
Question Passage Similarity dim:  torch.Size([5, 236])
Question passage attention dim:  torch.Size([5, 236])
Final Merged Passage dim:  torch.Size([5, 236, 800])
Modeled Passage dim:  torch.Size([5, 236, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 236, 1000])
Span start logits:  torch.Size([5, 236])
span start probs dim:  torch.Size([5, 236])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 236]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 307, 200])
Passage Length:  307
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 307, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 307, 16])
Passage ques attention dim:  torch.Size([5, 307, 16])
Passage question vectors dim:  torch.Size([5, 307, 200])
Question Passage Similarity dim:  torch.Size([5, 307])
Question passage attention dim:  torch.Size([5, 307])
Final Merged Passage dim:  torch.Size([5, 307, 800])
Modeled Passage dim:  torch.Size([5, 307, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 307, 1000])
Span start logits:  torch.Size([5, 307])
span start probs dim:  torch.Size([5, 307])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 307]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 22])
Passage ques attention dim:  torch.Size([5, 116, 22])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 265, 200])
Passage Length:  265
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 265, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 265, 17])
Passage ques attention dim:  torch.Size([5, 265, 17])
Passage question vectors dim:  torch.Size([5, 265, 200])
Question Passage Similarity dim:  torch.Size([5, 265])
Question passage attention dim:  torch.Size([5, 265])
Final Merged Passage dim:  torch.Size([5, 265, 800])
Modeled Passage dim:  torch.Size([5, 265, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 265, 1000])
Span start logits:  torch.Size([5, 265])
span start probs dim:  torch.Size([5, 265])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 265]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 19])
Passage ques attention dim:  torch.Size([5, 123, 19])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 219, 200])
Passage Length:  219
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 219, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 219, 15])
Passage ques attention dim:  torch.Size([5, 219, 15])
Passage question vectors dim:  torch.Size([5, 219, 200])
Question Passage Similarity dim:  torch.Size([5, 219])
Question passage attention dim:  torch.Size([5, 219])
Final Merged Passage dim:  torch.Size([5, 219, 800])
Modeled Passage dim:  torch.Size([5, 219, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 219, 1000])
Span start logits:  torch.Size([5, 219])
span start probs dim:  torch.Size([5, 219])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 219]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 13])
Passage ques attention dim:  torch.Size([5, 130, 13])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 15])
Passage ques attention dim:  torch.Size([5, 120, 15])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 14])
Passage ques attention dim:  torch.Size([5, 187, 14])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 15])
Passage ques attention dim:  torch.Size([5, 187, 15])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 63, 200])
Passage Length:  63
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 63, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 63, 15])
Passage ques attention dim:  torch.Size([5, 63, 15])
Passage question vectors dim:  torch.Size([5, 63, 200])
Question Passage Similarity dim:  torch.Size([5, 63])
Question passage attention dim:  torch.Size([5, 63])
Final Merged Passage dim:  torch.Size([5, 63, 800])
Modeled Passage dim:  torch.Size([5, 63, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 63, 1000])
Span start logits:  torch.Size([5, 63])
span start probs dim:  torch.Size([5, 63])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 63]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 421, 200])
Passage Length:  421
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 421, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 421, 15])
Passage ques attention dim:  torch.Size([5, 421, 15])
Passage question vectors dim:  torch.Size([5, 421, 200])
Question Passage Similarity dim:  torch.Size([5, 421])
Question passage attention dim:  torch.Size([5, 421])
Final Merged Passage dim:  torch.Size([5, 421, 800])
Modeled Passage dim:  torch.Size([5, 421, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 421, 1000])
Span start logits:  torch.Size([5, 421])
span start probs dim:  torch.Size([5, 421])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 421]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 13])
Passage ques attention dim:  torch.Size([5, 118, 13])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 17])
Passage ques attention dim:  torch.Size([5, 142, 17])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 17])
Passage ques attention dim:  torch.Size([5, 175, 17])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 12])
Passage ques attention dim:  torch.Size([5, 99, 12])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 307, 200])
Passage Length:  307
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 307, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 307, 18])
Passage ques attention dim:  torch.Size([5, 307, 18])
Passage question vectors dim:  torch.Size([5, 307, 200])
Question Passage Similarity dim:  torch.Size([5, 307])
Question passage attention dim:  torch.Size([5, 307])
Final Merged Passage dim:  torch.Size([5, 307, 800])
Modeled Passage dim:  torch.Size([5, 307, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 307, 1000])
Span start logits:  torch.Size([5, 307])
span start probs dim:  torch.Size([5, 307])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 307]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 196, 17])
Passage ques attention dim:  torch.Size([5, 196, 17])
Passage question vectors dim:  torch.Size([5, 196, 200])
Question Passage Similarity dim:  torch.Size([5, 196])
Question passage attention dim:  torch.Size([5, 196])
Final Merged Passage dim:  torch.Size([5, 196, 800])
Modeled Passage dim:  torch.Size([5, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 196, 1000])
Span start logits:  torch.Size([5, 196])
span start probs dim:  torch.Size([5, 196])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 196]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 14])
Passage ques attention dim:  torch.Size([5, 107, 14])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 246, 19])
Passage ques attention dim:  torch.Size([5, 246, 19])
Passage question vectors dim:  torch.Size([5, 246, 200])
Question Passage Similarity dim:  torch.Size([5, 246])
Question passage attention dim:  torch.Size([5, 246])
Final Merged Passage dim:  torch.Size([5, 246, 800])
Modeled Passage dim:  torch.Size([5, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 246, 1000])
Span start logits:  torch.Size([5, 246])
span start probs dim:  torch.Size([5, 246])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 246]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 14])
Passage ques attention dim:  torch.Size([5, 132, 14])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 257, 200])
Passage Length:  257
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 257, 19])
Passage ques attention dim:  torch.Size([5, 257, 19])
Passage question vectors dim:  torch.Size([5, 257, 200])
Question Passage Similarity dim:  torch.Size([5, 257])
Question passage attention dim:  torch.Size([5, 257])
Final Merged Passage dim:  torch.Size([5, 257, 800])
Modeled Passage dim:  torch.Size([5, 257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 257, 1000])
Span start logits:  torch.Size([5, 257])
span start probs dim:  torch.Size([5, 257])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 257]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 168, 23])
Passage ques attention dim:  torch.Size([5, 168, 23])
Passage question vectors dim:  torch.Size([5, 168, 200])
Question Passage Similarity dim:  torch.Size([5, 168])
Question passage attention dim:  torch.Size([5, 168])
Final Merged Passage dim:  torch.Size([5, 168, 800])
Modeled Passage dim:  torch.Size([5, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 168, 1000])
Span start logits:  torch.Size([5, 168])
span start probs dim:  torch.Size([5, 168])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 168]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 20])
Passage ques attention dim:  torch.Size([5, 111, 20])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 213, 15])
Passage ques attention dim:  torch.Size([5, 213, 15])
Passage question vectors dim:  torch.Size([5, 213, 200])
Question Passage Similarity dim:  torch.Size([5, 213])
Question passage attention dim:  torch.Size([5, 213])
Final Merged Passage dim:  torch.Size([5, 213, 800])
Modeled Passage dim:  torch.Size([5, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 213, 1000])
Span start logits:  torch.Size([5, 213])
span start probs dim:  torch.Size([5, 213])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 213]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 19])
Passage ques attention dim:  torch.Size([5, 128, 19])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 13])
Passage ques attention dim:  torch.Size([5, 127, 13])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 19])
Passage ques attention dim:  torch.Size([5, 234, 19])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 17])
Passage ques attention dim:  torch.Size([5, 121, 17])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 17])
Passage ques attention dim:  torch.Size([5, 126, 17])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 14])
Passage ques attention dim:  torch.Size([5, 107, 14])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 403, 200])
Passage Length:  403
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 403, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 403, 15])
Passage ques attention dim:  torch.Size([5, 403, 15])
Passage question vectors dim:  torch.Size([5, 403, 200])
Question Passage Similarity dim:  torch.Size([5, 403])
Question passage attention dim:  torch.Size([5, 403])
Final Merged Passage dim:  torch.Size([5, 403, 800])
Modeled Passage dim:  torch.Size([5, 403, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 403, 1000])
Span start logits:  torch.Size([5, 403])
span start probs dim:  torch.Size([5, 403])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 403]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 15])
Passage ques attention dim:  torch.Size([5, 157, 15])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 17])
Passage ques attention dim:  torch.Size([5, 161, 17])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 11])
Passage ques attention dim:  torch.Size([5, 99, 11])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 20])
Passage ques attention dim:  torch.Size([5, 127, 20])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 14])
Passage ques attention dim:  torch.Size([5, 162, 14])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 14])
Passage ques attention dim:  torch.Size([5, 116, 14])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 18])
Passage ques attention dim:  torch.Size([5, 158, 18])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 19])
Passage ques attention dim:  torch.Size([5, 139, 19])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 22])
Passage ques attention dim:  torch.Size([5, 131, 22])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 14])
Passage ques attention dim:  torch.Size([5, 119, 14])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 46, 200])
Passage Length:  46
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 46, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 46, 16])
Passage ques attention dim:  torch.Size([5, 46, 16])
Passage question vectors dim:  torch.Size([5, 46, 200])
Question Passage Similarity dim:  torch.Size([5, 46])
Question passage attention dim:  torch.Size([5, 46])
Final Merged Passage dim:  torch.Size([5, 46, 800])
Modeled Passage dim:  torch.Size([5, 46, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 46, 1000])
Span start logits:  torch.Size([5, 46])
span start probs dim:  torch.Size([5, 46])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 46]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 232, 14])
Passage ques attention dim:  torch.Size([5, 232, 14])
Passage question vectors dim:  torch.Size([5, 232, 200])
Question Passage Similarity dim:  torch.Size([5, 232])
Question passage attention dim:  torch.Size([5, 232])
Final Merged Passage dim:  torch.Size([5, 232, 800])
Modeled Passage dim:  torch.Size([5, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 232, 1000])
Span start logits:  torch.Size([5, 232])
span start probs dim:  torch.Size([5, 232])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 232]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 22])
Passage ques attention dim:  torch.Size([5, 153, 22])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 81, 200])
Passage Length:  81
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 81, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 81, 18])
Passage ques attention dim:  torch.Size([5, 81, 18])
Passage question vectors dim:  torch.Size([5, 81, 200])
Question Passage Similarity dim:  torch.Size([5, 81])
Question passage attention dim:  torch.Size([5, 81])
Final Merged Passage dim:  torch.Size([5, 81, 800])
Modeled Passage dim:  torch.Size([5, 81, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 81, 1000])
Span start logits:  torch.Size([5, 81])
span start probs dim:  torch.Size([5, 81])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 81]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 11])
Passage ques attention dim:  torch.Size([5, 190, 11])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 17])
Passage ques attention dim:  torch.Size([5, 111, 17])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 231, 15])
Passage ques attention dim:  torch.Size([5, 231, 15])
Passage question vectors dim:  torch.Size([5, 231, 200])
Question Passage Similarity dim:  torch.Size([5, 231])
Question passage attention dim:  torch.Size([5, 231])
Final Merged Passage dim:  torch.Size([5, 231, 800])
Modeled Passage dim:  torch.Size([5, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 231, 1000])
Span start logits:  torch.Size([5, 231])
span start probs dim:  torch.Size([5, 231])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 231]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 14])
Passage ques attention dim:  torch.Size([5, 105, 14])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 19])
Passage ques attention dim:  torch.Size([5, 110, 19])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 14])
Passage ques attention dim:  torch.Size([5, 99, 14])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 23])
Passage ques attention dim:  torch.Size([5, 96, 23])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 17])
Passage ques attention dim:  torch.Size([5, 70, 17])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 14])
Passage ques attention dim:  torch.Size([5, 183, 14])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 15])
Passage ques attention dim:  torch.Size([5, 172, 15])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 18])
Passage ques attention dim:  torch.Size([5, 173, 18])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 21])
Passage ques attention dim:  torch.Size([5, 183, 21])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 14])
Passage ques attention dim:  torch.Size([5, 121, 14])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 13])
Passage ques attention dim:  torch.Size([5, 100, 13])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 12])
Passage ques attention dim:  torch.Size([5, 99, 12])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 17])
Passage ques attention dim:  torch.Size([5, 185, 17])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 21])
Passage ques attention dim:  torch.Size([5, 149, 21])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 35, 200])
Passage Length:  35
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 35, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 35, 14])
Passage ques attention dim:  torch.Size([5, 35, 14])
Passage question vectors dim:  torch.Size([5, 35, 200])
Question Passage Similarity dim:  torch.Size([5, 35])
Question passage attention dim:  torch.Size([5, 35])
Final Merged Passage dim:  torch.Size([5, 35, 800])
Modeled Passage dim:  torch.Size([5, 35, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 35, 1000])
Span start logits:  torch.Size([5, 35])
span start probs dim:  torch.Size([5, 35])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 35]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 17])
Passage ques attention dim:  torch.Size([5, 110, 17])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 17])
Passage ques attention dim:  torch.Size([5, 124, 17])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 23])
Passage ques attention dim:  torch.Size([5, 145, 23])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 196, 16])
Passage ques attention dim:  torch.Size([5, 196, 16])
Passage question vectors dim:  torch.Size([5, 196, 200])
Question Passage Similarity dim:  torch.Size([5, 196])
Question passage attention dim:  torch.Size([5, 196])
Final Merged Passage dim:  torch.Size([5, 196, 800])
Modeled Passage dim:  torch.Size([5, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 196, 1000])
Span start logits:  torch.Size([5, 196])
span start probs dim:  torch.Size([5, 196])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 196]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 14])
Passage ques attention dim:  torch.Size([5, 151, 14])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 13])
Passage ques attention dim:  torch.Size([5, 139, 13])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 14])
Passage ques attention dim:  torch.Size([5, 171, 14])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 16])
Passage ques attention dim:  torch.Size([5, 131, 16])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 15])
Passage ques attention dim:  torch.Size([5, 175, 15])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 15])
Passage ques attention dim:  torch.Size([5, 176, 15])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 16])
Passage ques attention dim:  torch.Size([5, 119, 16])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 18])
Passage ques attention dim:  torch.Size([5, 175, 18])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 338, 200])
Passage Length:  338
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 338, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 338, 15])
Passage ques attention dim:  torch.Size([5, 338, 15])
Passage question vectors dim:  torch.Size([5, 338, 200])
Question Passage Similarity dim:  torch.Size([5, 338])
Question passage attention dim:  torch.Size([5, 338])
Final Merged Passage dim:  torch.Size([5, 338, 800])
Modeled Passage dim:  torch.Size([5, 338, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 338, 1000])
Span start logits:  torch.Size([5, 338])
span start probs dim:  torch.Size([5, 338])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 338]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 17])
Passage ques attention dim:  torch.Size([5, 125, 17])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 19])
Passage ques attention dim:  torch.Size([5, 205, 19])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 215, 16])
Passage ques attention dim:  torch.Size([5, 215, 16])
Passage question vectors dim:  torch.Size([5, 215, 200])
Question Passage Similarity dim:  torch.Size([5, 215])
Question passage attention dim:  torch.Size([5, 215])
Final Merged Passage dim:  torch.Size([5, 215, 800])
Modeled Passage dim:  torch.Size([5, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 215, 1000])
Span start logits:  torch.Size([5, 215])
span start probs dim:  torch.Size([5, 215])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 215]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 280, 200])
Passage Length:  280
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 280, 18])
Passage ques attention dim:  torch.Size([5, 280, 18])
Passage question vectors dim:  torch.Size([5, 280, 200])
Question Passage Similarity dim:  torch.Size([5, 280])
Question passage attention dim:  torch.Size([5, 280])
Final Merged Passage dim:  torch.Size([5, 280, 800])
Modeled Passage dim:  torch.Size([5, 280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 280, 1000])
Span start logits:  torch.Size([5, 280])
span start probs dim:  torch.Size([5, 280])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 280]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 55, 200])
Passage Length:  55
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 55, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 55, 15])
Passage ques attention dim:  torch.Size([5, 55, 15])
Passage question vectors dim:  torch.Size([5, 55, 200])
Question Passage Similarity dim:  torch.Size([5, 55])
Question passage attention dim:  torch.Size([5, 55])
Final Merged Passage dim:  torch.Size([5, 55, 800])
Modeled Passage dim:  torch.Size([5, 55, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 55, 1000])
Span start logits:  torch.Size([5, 55])
span start probs dim:  torch.Size([5, 55])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 55]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 17])
Passage ques attention dim:  torch.Size([5, 205, 17])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 17])
Passage ques attention dim:  torch.Size([5, 116, 17])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 17])
Passage ques attention dim:  torch.Size([5, 124, 17])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 12])
Passage ques attention dim:  torch.Size([5, 182, 12])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 21])
Passage ques attention dim:  torch.Size([5, 163, 21])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 19])
Passage ques attention dim:  torch.Size([5, 199, 19])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 12])
Passage ques attention dim:  torch.Size([5, 194, 12])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 16])
Passage ques attention dim:  torch.Size([5, 165, 16])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 16])
Passage ques attention dim:  torch.Size([5, 122, 16])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 134, 13])
Passage ques attention dim:  torch.Size([5, 134, 13])
Passage question vectors dim:  torch.Size([5, 134, 200])
Question Passage Similarity dim:  torch.Size([5, 134])
Question passage attention dim:  torch.Size([5, 134])
Final Merged Passage dim:  torch.Size([5, 134, 800])
Modeled Passage dim:  torch.Size([5, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 134, 1000])
Span start logits:  torch.Size([5, 134])
span start probs dim:  torch.Size([5, 134])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 134]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 20])
Passage ques attention dim:  torch.Size([5, 105, 20])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 73, 16])
Passage ques attention dim:  torch.Size([5, 73, 16])
Passage question vectors dim:  torch.Size([5, 73, 200])
Question Passage Similarity dim:  torch.Size([5, 73])
Question passage attention dim:  torch.Size([5, 73])
Final Merged Passage dim:  torch.Size([5, 73, 800])
Modeled Passage dim:  torch.Size([5, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 73, 1000])
Span start logits:  torch.Size([5, 73])
span start probs dim:  torch.Size([5, 73])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 73]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 15])
Passage ques attention dim:  torch.Size([5, 144, 15])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 18])
Passage ques attention dim:  torch.Size([5, 176, 18])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 19])
Passage ques attention dim:  torch.Size([5, 157, 19])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 15])
Passage ques attention dim:  torch.Size([5, 132, 15])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 14])
Passage ques attention dim:  torch.Size([5, 114, 14])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 93, 15])
Passage ques attention dim:  torch.Size([5, 93, 15])
Passage question vectors dim:  torch.Size([5, 93, 200])
Question Passage Similarity dim:  torch.Size([5, 93])
Question passage attention dim:  torch.Size([5, 93])
Final Merged Passage dim:  torch.Size([5, 93, 800])
Modeled Passage dim:  torch.Size([5, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 93, 1000])
Span start logits:  torch.Size([5, 93])
span start probs dim:  torch.Size([5, 93])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 93]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 16])
Passage ques attention dim:  torch.Size([5, 205, 16])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 472, 200])
Passage Length:  472
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 472, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 472, 19])
Passage ques attention dim:  torch.Size([5, 472, 19])
Passage question vectors dim:  torch.Size([5, 472, 200])
Question Passage Similarity dim:  torch.Size([5, 472])
Question passage attention dim:  torch.Size([5, 472])
Final Merged Passage dim:  torch.Size([5, 472, 800])
Modeled Passage dim:  torch.Size([5, 472, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 472, 1000])
Span start logits:  torch.Size([5, 472])
span start probs dim:  torch.Size([5, 472])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 472]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 15])
Passage ques attention dim:  torch.Size([5, 137, 15])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 17])
Passage ques attention dim:  torch.Size([5, 162, 17])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 30, 200])
Embedded passage dim:  torch.Size([5, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([5, 30, 200])
Encoded passage dim:  torch.Size([5, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 168, 30])
Passage ques attention dim:  torch.Size([5, 168, 30])
Passage question vectors dim:  torch.Size([5, 168, 200])
Question Passage Similarity dim:  torch.Size([5, 168])
Question passage attention dim:  torch.Size([5, 168])
Final Merged Passage dim:  torch.Size([5, 168, 800])
Modeled Passage dim:  torch.Size([5, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 168, 1000])
Span start logits:  torch.Size([5, 168])
span start probs dim:  torch.Size([5, 168])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 168]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 13])
Passage ques attention dim:  torch.Size([5, 195, 13])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 134, 17])
Passage ques attention dim:  torch.Size([5, 134, 17])
Passage question vectors dim:  torch.Size([5, 134, 200])
Question Passage Similarity dim:  torch.Size([5, 134])
Question passage attention dim:  torch.Size([5, 134])
Final Merged Passage dim:  torch.Size([5, 134, 800])
Modeled Passage dim:  torch.Size([5, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 134, 1000])
Span start logits:  torch.Size([5, 134])
span start probs dim:  torch.Size([5, 134])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 134]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 16])
Passage ques attention dim:  torch.Size([5, 183, 16])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 14])
Passage ques attention dim:  torch.Size([5, 140, 14])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 12])
Passage ques attention dim:  torch.Size([5, 135, 12])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 15])
Passage ques attention dim:  torch.Size([5, 114, 15])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 252, 200])
Passage Length:  252
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 252, 20])
Passage ques attention dim:  torch.Size([5, 252, 20])
Passage question vectors dim:  torch.Size([5, 252, 200])
Question Passage Similarity dim:  torch.Size([5, 252])
Question passage attention dim:  torch.Size([5, 252])
Final Merged Passage dim:  torch.Size([5, 252, 800])
Modeled Passage dim:  torch.Size([5, 252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 252, 1000])
Span start logits:  torch.Size([5, 252])
span start probs dim:  torch.Size([5, 252])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 252]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 15])
Passage ques attention dim:  torch.Size([5, 156, 15])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 198, 11])
Passage ques attention dim:  torch.Size([5, 198, 11])
Passage question vectors dim:  torch.Size([5, 198, 200])
Question Passage Similarity dim:  torch.Size([5, 198])
Question passage attention dim:  torch.Size([5, 198])
Final Merged Passage dim:  torch.Size([5, 198, 800])
Modeled Passage dim:  torch.Size([5, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 198, 1000])
Span start logits:  torch.Size([5, 198])
span start probs dim:  torch.Size([5, 198])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 198]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 16])
Passage ques attention dim:  torch.Size([5, 258, 16])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 15])
Passage ques attention dim:  torch.Size([5, 109, 15])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 18])
Passage ques attention dim:  torch.Size([5, 177, 18])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 19])
Passage ques attention dim:  torch.Size([5, 174, 19])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 170, 15])
Passage ques attention dim:  torch.Size([5, 170, 15])
Passage question vectors dim:  torch.Size([5, 170, 200])
Question Passage Similarity dim:  torch.Size([5, 170])
Question passage attention dim:  torch.Size([5, 170])
Final Merged Passage dim:  torch.Size([5, 170, 800])
Modeled Passage dim:  torch.Size([5, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 170, 1000])
Span start logits:  torch.Size([5, 170])
span start probs dim:  torch.Size([5, 170])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 170]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 17])
Passage ques attention dim:  torch.Size([5, 205, 17])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 19])
Passage ques attention dim:  torch.Size([5, 119, 19])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 17])
Passage ques attention dim:  torch.Size([5, 140, 17])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 261, 200])
Passage Length:  261
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 261, 18])
Passage ques attention dim:  torch.Size([5, 261, 18])
Passage question vectors dim:  torch.Size([5, 261, 200])
Question Passage Similarity dim:  torch.Size([5, 261])
Question passage attention dim:  torch.Size([5, 261])
Final Merged Passage dim:  torch.Size([5, 261, 800])
Modeled Passage dim:  torch.Size([5, 261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 261, 1000])
Span start logits:  torch.Size([5, 261])
span start probs dim:  torch.Size([5, 261])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 261]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 25])
Passage ques attention dim:  torch.Size([5, 143, 25])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 250, 19])
Passage ques attention dim:  torch.Size([5, 250, 19])
Passage question vectors dim:  torch.Size([5, 250, 200])
Question Passage Similarity dim:  torch.Size([5, 250])
Question passage attention dim:  torch.Size([5, 250])
Final Merged Passage dim:  torch.Size([5, 250, 800])
Modeled Passage dim:  torch.Size([5, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 250, 1000])
Span start logits:  torch.Size([5, 250])
span start probs dim:  torch.Size([5, 250])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 250]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 19])
Passage ques attention dim:  torch.Size([5, 110, 19])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 56, 200])
Passage Length:  56
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 56, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 56, 17])
Passage ques attention dim:  torch.Size([5, 56, 17])
Passage question vectors dim:  torch.Size([5, 56, 200])
Question Passage Similarity dim:  torch.Size([5, 56])
Question passage attention dim:  torch.Size([5, 56])
Final Merged Passage dim:  torch.Size([5, 56, 800])
Modeled Passage dim:  torch.Size([5, 56, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 56, 1000])
Span start logits:  torch.Size([5, 56])
span start probs dim:  torch.Size([5, 56])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 56]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 393, 200])
Passage Length:  393
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 393, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 393, 17])
Passage ques attention dim:  torch.Size([5, 393, 17])
Passage question vectors dim:  torch.Size([5, 393, 200])
Question Passage Similarity dim:  torch.Size([5, 393])
Question passage attention dim:  torch.Size([5, 393])
Final Merged Passage dim:  torch.Size([5, 393, 800])
Modeled Passage dim:  torch.Size([5, 393, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 393, 1000])
Span start logits:  torch.Size([5, 393])
span start probs dim:  torch.Size([5, 393])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 393]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 20])
Passage ques attention dim:  torch.Size([5, 152, 20])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 17])
Passage ques attention dim:  torch.Size([5, 129, 17])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 15])
Passage ques attention dim:  torch.Size([5, 105, 15])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 11])
Passage ques attention dim:  torch.Size([5, 172, 11])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 11])
Passage ques attention dim:  torch.Size([5, 130, 11])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 11])
Passage ques attention dim:  torch.Size([5, 113, 11])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 21])
Passage ques attention dim:  torch.Size([5, 105, 21])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 17])
Passage ques attention dim:  torch.Size([5, 101, 17])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 23])
Passage ques attention dim:  torch.Size([5, 133, 23])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 12])
Passage ques attention dim:  torch.Size([5, 169, 12])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 13])
Passage ques attention dim:  torch.Size([5, 151, 13])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 27, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 27, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 27])
Passage ques attention dim:  torch.Size([5, 144, 27])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 13])
Passage ques attention dim:  torch.Size([5, 102, 13])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 15])
Passage ques attention dim:  torch.Size([5, 74, 15])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 288, 200])
Passage Length:  288
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 288, 11])
Passage ques attention dim:  torch.Size([5, 288, 11])
Passage question vectors dim:  torch.Size([5, 288, 200])
Question Passage Similarity dim:  torch.Size([5, 288])
Question passage attention dim:  torch.Size([5, 288])
Final Merged Passage dim:  torch.Size([5, 288, 800])
Modeled Passage dim:  torch.Size([5, 288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 288, 1000])
Span start logits:  torch.Size([5, 288])
span start probs dim:  torch.Size([5, 288])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 288]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 13])
Passage ques attention dim:  torch.Size([5, 94, 13])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 16])
Passage ques attention dim:  torch.Size([5, 161, 16])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 13])
Passage ques attention dim:  torch.Size([5, 154, 13])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 14])
Passage ques attention dim:  torch.Size([5, 121, 14])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 14])
Passage ques attention dim:  torch.Size([5, 193, 14])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 202, 18])
Passage ques attention dim:  torch.Size([5, 202, 18])
Passage question vectors dim:  torch.Size([5, 202, 200])
Question Passage Similarity dim:  torch.Size([5, 202])
Question passage attention dim:  torch.Size([5, 202])
Final Merged Passage dim:  torch.Size([5, 202, 800])
Modeled Passage dim:  torch.Size([5, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 202, 1000])
Span start logits:  torch.Size([5, 202])
span start probs dim:  torch.Size([5, 202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 18])
Passage ques attention dim:  torch.Size([5, 188, 18])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 17])
Passage ques attention dim:  torch.Size([5, 179, 17])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 24])
Passage ques attention dim:  torch.Size([5, 169, 24])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 20])
Passage ques attention dim:  torch.Size([5, 190, 20])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 14])
Passage ques attention dim:  torch.Size([5, 159, 14])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 15])
Passage ques attention dim:  torch.Size([5, 172, 15])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 14])
Passage ques attention dim:  torch.Size([5, 135, 14])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 20])
Passage ques attention dim:  torch.Size([5, 101, 20])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 25])
Passage ques attention dim:  torch.Size([5, 156, 25])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 17])
Passage ques attention dim:  torch.Size([5, 116, 17])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 13])
Passage ques attention dim:  torch.Size([5, 148, 13])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 12])
Passage ques attention dim:  torch.Size([5, 95, 12])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 215, 16])
Passage ques attention dim:  torch.Size([5, 215, 16])
Passage question vectors dim:  torch.Size([5, 215, 200])
Question Passage Similarity dim:  torch.Size([5, 215])
Question passage attention dim:  torch.Size([5, 215])
Final Merged Passage dim:  torch.Size([5, 215, 800])
Modeled Passage dim:  torch.Size([5, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 215, 1000])
Span start logits:  torch.Size([5, 215])
span start probs dim:  torch.Size([5, 215])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 215]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 243, 17])
Passage ques attention dim:  torch.Size([5, 243, 17])
Passage question vectors dim:  torch.Size([5, 243, 200])
Question Passage Similarity dim:  torch.Size([5, 243])
Question passage attention dim:  torch.Size([5, 243])
Final Merged Passage dim:  torch.Size([5, 243, 800])
Modeled Passage dim:  torch.Size([5, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 243, 1000])
Span start logits:  torch.Size([5, 243])
span start probs dim:  torch.Size([5, 243])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 243]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 16])
Passage ques attention dim:  torch.Size([5, 152, 16])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 184, 15])
Passage ques attention dim:  torch.Size([5, 184, 15])
Passage question vectors dim:  torch.Size([5, 184, 200])
Question Passage Similarity dim:  torch.Size([5, 184])
Question passage attention dim:  torch.Size([5, 184])
Final Merged Passage dim:  torch.Size([5, 184, 800])
Modeled Passage dim:  torch.Size([5, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 184, 1000])
Span start logits:  torch.Size([5, 184])
span start probs dim:  torch.Size([5, 184])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 184]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 13])
Passage ques attention dim:  torch.Size([5, 144, 13])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 269, 200])
Passage Length:  269
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 269, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 269, 23])
Passage ques attention dim:  torch.Size([5, 269, 23])
Passage question vectors dim:  torch.Size([5, 269, 200])
Question Passage Similarity dim:  torch.Size([5, 269])
Question passage attention dim:  torch.Size([5, 269])
Final Merged Passage dim:  torch.Size([5, 269, 800])
Modeled Passage dim:  torch.Size([5, 269, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 269, 1000])
Span start logits:  torch.Size([5, 269])
span start probs dim:  torch.Size([5, 269])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 269]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 275, 200])
Passage Length:  275
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 275, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 275, 21])
Passage ques attention dim:  torch.Size([5, 275, 21])
Passage question vectors dim:  torch.Size([5, 275, 200])
Question Passage Similarity dim:  torch.Size([5, 275])
Question passage attention dim:  torch.Size([5, 275])
Final Merged Passage dim:  torch.Size([5, 275, 800])
Modeled Passage dim:  torch.Size([5, 275, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 275, 1000])
Span start logits:  torch.Size([5, 275])
span start probs dim:  torch.Size([5, 275])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 275]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 64, 17])
Passage ques attention dim:  torch.Size([5, 64, 17])
Passage question vectors dim:  torch.Size([5, 64, 200])
Question Passage Similarity dim:  torch.Size([5, 64])
Question passage attention dim:  torch.Size([5, 64])
Final Merged Passage dim:  torch.Size([5, 64, 800])
Modeled Passage dim:  torch.Size([5, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 64, 1000])
Span start logits:  torch.Size([5, 64])
span start probs dim:  torch.Size([5, 64])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 64]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 11])
Passage ques attention dim:  torch.Size([5, 142, 11])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 12])
Passage ques attention dim:  torch.Size([5, 182, 12])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 14])
Passage ques attention dim:  torch.Size([5, 99, 14])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 35, 200])
Passage Length:  35
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 35, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 35, 15])
Passage ques attention dim:  torch.Size([5, 35, 15])
Passage question vectors dim:  torch.Size([5, 35, 200])
Question Passage Similarity dim:  torch.Size([5, 35])
Question passage attention dim:  torch.Size([5, 35])
Final Merged Passage dim:  torch.Size([5, 35, 800])
Modeled Passage dim:  torch.Size([5, 35, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 35, 1000])
Span start logits:  torch.Size([5, 35])
span start probs dim:  torch.Size([5, 35])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 35]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 61, 200])
Passage Length:  61
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 61, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 61, 19])
Passage ques attention dim:  torch.Size([5, 61, 19])
Passage question vectors dim:  torch.Size([5, 61, 200])
Question Passage Similarity dim:  torch.Size([5, 61])
Question passage attention dim:  torch.Size([5, 61])
Final Merged Passage dim:  torch.Size([5, 61, 800])
Modeled Passage dim:  torch.Size([5, 61, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 61, 1000])
Span start logits:  torch.Size([5, 61])
span start probs dim:  torch.Size([5, 61])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 61]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 18])
Passage ques attention dim:  torch.Size([5, 120, 18])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 14])
Passage ques attention dim:  torch.Size([5, 112, 14])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 311, 17])
Passage ques attention dim:  torch.Size([5, 311, 17])
Passage question vectors dim:  torch.Size([5, 311, 200])
Question Passage Similarity dim:  torch.Size([5, 311])
Question passage attention dim:  torch.Size([5, 311])
Final Merged Passage dim:  torch.Size([5, 311, 800])
Modeled Passage dim:  torch.Size([5, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 311, 1000])
Span start logits:  torch.Size([5, 311])
span start probs dim:  torch.Size([5, 311])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 311]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 15])
Passage ques attention dim:  torch.Size([5, 103, 15])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 220, 200])
Passage Length:  220
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 220, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 220, 13])
Passage ques attention dim:  torch.Size([5, 220, 13])
Passage question vectors dim:  torch.Size([5, 220, 200])
Question Passage Similarity dim:  torch.Size([5, 220])
Question passage attention dim:  torch.Size([5, 220])
Final Merged Passage dim:  torch.Size([5, 220, 800])
Modeled Passage dim:  torch.Size([5, 220, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 220, 1000])
Span start logits:  torch.Size([5, 220])
span start probs dim:  torch.Size([5, 220])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 220]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 214, 200])
Passage Length:  214
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 214, 15])
Passage ques attention dim:  torch.Size([5, 214, 15])
Passage question vectors dim:  torch.Size([5, 214, 200])
Question Passage Similarity dim:  torch.Size([5, 214])
Question passage attention dim:  torch.Size([5, 214])
Final Merged Passage dim:  torch.Size([5, 214, 800])
Modeled Passage dim:  torch.Size([5, 214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 214, 1000])
Span start logits:  torch.Size([5, 214])
span start probs dim:  torch.Size([5, 214])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 214]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 227, 17])
Passage ques attention dim:  torch.Size([5, 227, 17])
Passage question vectors dim:  torch.Size([5, 227, 200])
Question Passage Similarity dim:  torch.Size([5, 227])
Question passage attention dim:  torch.Size([5, 227])
Final Merged Passage dim:  torch.Size([5, 227, 800])
Modeled Passage dim:  torch.Size([5, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 227, 1000])
Span start logits:  torch.Size([5, 227])
span start probs dim:  torch.Size([5, 227])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 227]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 63, 200])
Passage Length:  63
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 63, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 63, 22])
Passage ques attention dim:  torch.Size([5, 63, 22])
Passage question vectors dim:  torch.Size([5, 63, 200])
Question Passage Similarity dim:  torch.Size([5, 63])
Question passage attention dim:  torch.Size([5, 63])
Final Merged Passage dim:  torch.Size([5, 63, 800])
Modeled Passage dim:  torch.Size([5, 63, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 63, 1000])
Span start logits:  torch.Size([5, 63])
span start probs dim:  torch.Size([5, 63])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 63]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 20])
Passage ques attention dim:  torch.Size([5, 107, 20])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 16])
Passage ques attention dim:  torch.Size([5, 154, 16])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 17])
Passage ques attention dim:  torch.Size([5, 100, 17])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 14])
Passage ques attention dim:  torch.Size([5, 143, 14])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 13])
Passage ques attention dim:  torch.Size([5, 234, 13])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 14])
Passage ques attention dim:  torch.Size([5, 125, 14])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 13])
Passage ques attention dim:  torch.Size([5, 127, 13])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 12])
Passage ques attention dim:  torch.Size([5, 107, 12])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 12])
Passage ques attention dim:  torch.Size([5, 108, 12])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 15])
Passage ques attention dim:  torch.Size([5, 146, 15])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 19])
Passage ques attention dim:  torch.Size([5, 157, 19])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 93, 14])
Passage ques attention dim:  torch.Size([5, 93, 14])
Passage question vectors dim:  torch.Size([5, 93, 200])
Question Passage Similarity dim:  torch.Size([5, 93])
Question passage attention dim:  torch.Size([5, 93])
Final Merged Passage dim:  torch.Size([5, 93, 800])
Modeled Passage dim:  torch.Size([5, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 93, 1000])
Span start logits:  torch.Size([5, 93])
span start probs dim:  torch.Size([5, 93])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 93]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 21])
Passage ques attention dim:  torch.Size([5, 273, 21])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 15])
Passage ques attention dim:  torch.Size([5, 97, 15])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 14])
Passage ques attention dim:  torch.Size([5, 273, 14])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 18])
Passage ques attention dim:  torch.Size([5, 126, 18])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 13])
Passage ques attention dim:  torch.Size([5, 136, 13])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 14])
Passage ques attention dim:  torch.Size([5, 94, 14])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 10])
Passage ques attention dim:  torch.Size([5, 99, 10])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 13])
Passage ques attention dim:  torch.Size([5, 123, 13])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 15])
Passage ques attention dim:  torch.Size([5, 127, 15])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 16])
Passage ques attention dim:  torch.Size([5, 111, 16])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 16])
Passage ques attention dim:  torch.Size([5, 183, 16])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 17])
Passage ques attention dim:  torch.Size([5, 116, 17])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 12])
Passage ques attention dim:  torch.Size([5, 124, 12])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 11])
Passage ques attention dim:  torch.Size([5, 128, 11])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 33, 200])
Passage Length:  33
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 33, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 33, 26])
Passage ques attention dim:  torch.Size([5, 33, 26])
Passage question vectors dim:  torch.Size([5, 33, 200])
Question Passage Similarity dim:  torch.Size([5, 33])
Question passage attention dim:  torch.Size([5, 33])
Final Merged Passage dim:  torch.Size([5, 33, 800])
Modeled Passage dim:  torch.Size([5, 33, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 33, 1000])
Span start logits:  torch.Size([5, 33])
span start probs dim:  torch.Size([5, 33])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 33]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 20])
Passage ques attention dim:  torch.Size([5, 150, 20])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 14])
Passage ques attention dim:  torch.Size([5, 119, 14])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 16])
Passage ques attention dim:  torch.Size([5, 95, 16])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 14])
Passage ques attention dim:  torch.Size([5, 149, 14])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 231, 20])
Passage ques attention dim:  torch.Size([5, 231, 20])
Passage question vectors dim:  torch.Size([5, 231, 200])
Question Passage Similarity dim:  torch.Size([5, 231])
Question passage attention dim:  torch.Size([5, 231])
Final Merged Passage dim:  torch.Size([5, 231, 800])
Modeled Passage dim:  torch.Size([5, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 231, 1000])
Span start logits:  torch.Size([5, 231])
span start probs dim:  torch.Size([5, 231])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 231]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 224, 200])
Passage Length:  224
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 224, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 224, 16])
Passage ques attention dim:  torch.Size([5, 224, 16])
Passage question vectors dim:  torch.Size([5, 224, 200])
Question Passage Similarity dim:  torch.Size([5, 224])
Question passage attention dim:  torch.Size([5, 224])
Final Merged Passage dim:  torch.Size([5, 224, 800])
Modeled Passage dim:  torch.Size([5, 224, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 224, 1000])
Span start logits:  torch.Size([5, 224])
span start probs dim:  torch.Size([5, 224])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 224]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 12])
Passage ques attention dim:  torch.Size([5, 136, 12])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 85, 200])
Passage Length:  85
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 85, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 85, 15])
Passage ques attention dim:  torch.Size([5, 85, 15])
Passage question vectors dim:  torch.Size([5, 85, 200])
Question Passage Similarity dim:  torch.Size([5, 85])
Question passage attention dim:  torch.Size([5, 85])
Final Merged Passage dim:  torch.Size([5, 85, 800])
Modeled Passage dim:  torch.Size([5, 85, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 85, 1000])
Span start logits:  torch.Size([5, 85])
span start probs dim:  torch.Size([5, 85])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 85]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 134, 18])
Passage ques attention dim:  torch.Size([5, 134, 18])
Passage question vectors dim:  torch.Size([5, 134, 200])
Question Passage Similarity dim:  torch.Size([5, 134])
Question passage attention dim:  torch.Size([5, 134])
Final Merged Passage dim:  torch.Size([5, 134, 800])
Modeled Passage dim:  torch.Size([5, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 134, 1000])
Span start logits:  torch.Size([5, 134])
span start probs dim:  torch.Size([5, 134])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 134]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 88, 13])
Passage ques attention dim:  torch.Size([5, 88, 13])
Passage question vectors dim:  torch.Size([5, 88, 200])
Question Passage Similarity dim:  torch.Size([5, 88])
Question passage attention dim:  torch.Size([5, 88])
Final Merged Passage dim:  torch.Size([5, 88, 800])
Modeled Passage dim:  torch.Size([5, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 88, 1000])
Span start logits:  torch.Size([5, 88])
span start probs dim:  torch.Size([5, 88])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 88]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 17])
Passage ques attention dim:  torch.Size([5, 103, 17])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 385, 18])
Passage ques attention dim:  torch.Size([5, 385, 18])
Passage question vectors dim:  torch.Size([5, 385, 200])
Question Passage Similarity dim:  torch.Size([5, 385])
Question passage attention dim:  torch.Size([5, 385])
Final Merged Passage dim:  torch.Size([5, 385, 800])
Modeled Passage dim:  torch.Size([5, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 385, 1000])
Span start logits:  torch.Size([5, 385])
span start probs dim:  torch.Size([5, 385])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 385]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 21])
Passage ques attention dim:  torch.Size([5, 115, 21])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 186, 15])
Passage ques attention dim:  torch.Size([5, 186, 15])
Passage question vectors dim:  torch.Size([5, 186, 200])
Question Passage Similarity dim:  torch.Size([5, 186])
Question passage attention dim:  torch.Size([5, 186])
Final Merged Passage dim:  torch.Size([5, 186, 800])
Modeled Passage dim:  torch.Size([5, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 186, 1000])
Span start logits:  torch.Size([5, 186])
span start probs dim:  torch.Size([5, 186])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 186]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 14])
Passage ques attention dim:  torch.Size([5, 132, 14])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 297, 11])
Passage ques attention dim:  torch.Size([5, 297, 11])
Passage question vectors dim:  torch.Size([5, 297, 200])
Question Passage Similarity dim:  torch.Size([5, 297])
Question passage attention dim:  torch.Size([5, 297])
Final Merged Passage dim:  torch.Size([5, 297, 800])
Modeled Passage dim:  torch.Size([5, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 297, 1000])
Span start logits:  torch.Size([5, 297])
span start probs dim:  torch.Size([5, 297])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 297]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 14])
Passage ques attention dim:  torch.Size([5, 125, 14])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 15])
Passage ques attention dim:  torch.Size([5, 151, 15])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 20])
Passage ques attention dim:  torch.Size([5, 135, 20])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 19])
Passage ques attention dim:  torch.Size([5, 96, 19])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 22])
Passage ques attention dim:  torch.Size([5, 273, 22])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 23])
Passage ques attention dim:  torch.Size([5, 123, 23])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 16])
Passage ques attention dim:  torch.Size([5, 139, 16])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 17])
Passage ques attention dim:  torch.Size([5, 151, 17])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 10])
Passage ques attention dim:  torch.Size([5, 122, 10])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 16])
Passage ques attention dim:  torch.Size([5, 136, 16])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 13])
Passage ques attention dim:  torch.Size([5, 193, 13])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 16])
Passage ques attention dim:  torch.Size([5, 164, 16])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 14])
Passage ques attention dim:  torch.Size([5, 136, 14])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 23])
Passage ques attention dim:  torch.Size([5, 131, 23])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 19])
Passage ques attention dim:  torch.Size([5, 148, 19])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 21])
Passage ques attention dim:  torch.Size([5, 180, 21])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 53, 200])
Passage Length:  53
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 53, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 53, 12])
Passage ques attention dim:  torch.Size([5, 53, 12])
Passage question vectors dim:  torch.Size([5, 53, 200])
Question Passage Similarity dim:  torch.Size([5, 53])
Question passage attention dim:  torch.Size([5, 53])
Final Merged Passage dim:  torch.Size([5, 53, 800])
Modeled Passage dim:  torch.Size([5, 53, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 53, 1000])
Span start logits:  torch.Size([5, 53])
span start probs dim:  torch.Size([5, 53])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 53]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 35, 200])
Passage Length:  35
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 35, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 35, 15])
Passage ques attention dim:  torch.Size([5, 35, 15])
Passage question vectors dim:  torch.Size([5, 35, 200])
Question Passage Similarity dim:  torch.Size([5, 35])
Question passage attention dim:  torch.Size([5, 35])
Final Merged Passage dim:  torch.Size([5, 35, 800])
Modeled Passage dim:  torch.Size([5, 35, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 35, 1000])
Span start logits:  torch.Size([5, 35])
span start probs dim:  torch.Size([5, 35])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 35]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 17])
Passage ques attention dim:  torch.Size([5, 120, 17])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 11])
Passage ques attention dim:  torch.Size([5, 108, 11])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 14])
Passage ques attention dim:  torch.Size([5, 150, 14])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 12])
Passage ques attention dim:  torch.Size([5, 103, 12])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 14])
Passage ques attention dim:  torch.Size([5, 178, 14])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 208, 18])
Passage ques attention dim:  torch.Size([5, 208, 18])
Passage question vectors dim:  torch.Size([5, 208, 200])
Question Passage Similarity dim:  torch.Size([5, 208])
Question passage attention dim:  torch.Size([5, 208])
Final Merged Passage dim:  torch.Size([5, 208, 800])
Modeled Passage dim:  torch.Size([5, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 208, 1000])
Span start logits:  torch.Size([5, 208])
span start probs dim:  torch.Size([5, 208])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 208]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 17])
Passage ques attention dim:  torch.Size([5, 188, 17])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 19])
Passage ques attention dim:  torch.Size([5, 128, 19])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 229, 21])
Passage ques attention dim:  torch.Size([5, 229, 21])
Passage question vectors dim:  torch.Size([5, 229, 200])
Question Passage Similarity dim:  torch.Size([5, 229])
Question passage attention dim:  torch.Size([5, 229])
Final Merged Passage dim:  torch.Size([5, 229, 800])
Modeled Passage dim:  torch.Size([5, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 229, 1000])
Span start logits:  torch.Size([5, 229])
span start probs dim:  torch.Size([5, 229])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 229]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 213, 20])
Passage ques attention dim:  torch.Size([5, 213, 20])
Passage question vectors dim:  torch.Size([5, 213, 200])
Question Passage Similarity dim:  torch.Size([5, 213])
Question passage attention dim:  torch.Size([5, 213])
Final Merged Passage dim:  torch.Size([5, 213, 800])
Modeled Passage dim:  torch.Size([5, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 213, 1000])
Span start logits:  torch.Size([5, 213])
span start probs dim:  torch.Size([5, 213])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 213]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 289, 200])
Passage Length:  289
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 289, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 289, 21])
Passage ques attention dim:  torch.Size([5, 289, 21])
Passage question vectors dim:  torch.Size([5, 289, 200])
Question Passage Similarity dim:  torch.Size([5, 289])
Question passage attention dim:  torch.Size([5, 289])
Final Merged Passage dim:  torch.Size([5, 289, 800])
Modeled Passage dim:  torch.Size([5, 289, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 289, 1000])
Span start logits:  torch.Size([5, 289])
span start probs dim:  torch.Size([5, 289])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 289]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 19])
Passage ques attention dim:  torch.Size([5, 161, 19])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 58, 200])
Passage Length:  58
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 58, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 58, 23])
Passage ques attention dim:  torch.Size([5, 58, 23])
Passage question vectors dim:  torch.Size([5, 58, 200])
Question Passage Similarity dim:  torch.Size([5, 58])
Question passage attention dim:  torch.Size([5, 58])
Final Merged Passage dim:  torch.Size([5, 58, 800])
Modeled Passage dim:  torch.Size([5, 58, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 58, 1000])
Span start logits:  torch.Size([5, 58])
span start probs dim:  torch.Size([5, 58])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 58]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 15])
Passage ques attention dim:  torch.Size([5, 131, 15])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 28, 200])
Embedded passage dim:  torch.Size([5, 616, 200])
Passage Length:  616
Encoded question dim:  torch.Size([5, 28, 200])
Encoded passage dim:  torch.Size([5, 616, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 616, 28])
Passage ques attention dim:  torch.Size([5, 616, 28])
Passage question vectors dim:  torch.Size([5, 616, 200])
Question Passage Similarity dim:  torch.Size([5, 616])
Question passage attention dim:  torch.Size([5, 616])
Final Merged Passage dim:  torch.Size([5, 616, 800])
Modeled Passage dim:  torch.Size([5, 616, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 616, 1000])
Span start logits:  torch.Size([5, 616])
span start probs dim:  torch.Size([5, 616])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 616]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 62, 200])
Passage Length:  62
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 62, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 62, 21])
Passage ques attention dim:  torch.Size([5, 62, 21])
Passage question vectors dim:  torch.Size([5, 62, 200])
Question Passage Similarity dim:  torch.Size([5, 62])
Question passage attention dim:  torch.Size([5, 62])
Final Merged Passage dim:  torch.Size([5, 62, 800])
Modeled Passage dim:  torch.Size([5, 62, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 62, 1000])
Span start logits:  torch.Size([5, 62])
span start probs dim:  torch.Size([5, 62])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 62]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 13])
Passage ques attention dim:  torch.Size([5, 129, 13])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 15])
Passage ques attention dim:  torch.Size([5, 149, 15])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 259, 11])
Passage ques attention dim:  torch.Size([5, 259, 11])
Passage question vectors dim:  torch.Size([5, 259, 200])
Question Passage Similarity dim:  torch.Size([5, 259])
Question passage attention dim:  torch.Size([5, 259])
Final Merged Passage dim:  torch.Size([5, 259, 800])
Modeled Passage dim:  torch.Size([5, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 259, 1000])
Span start logits:  torch.Size([5, 259])
span start probs dim:  torch.Size([5, 259])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 259]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 14])
Passage ques attention dim:  torch.Size([5, 105, 14])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 11])
Passage ques attention dim:  torch.Size([5, 160, 11])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 17])
Passage ques attention dim:  torch.Size([5, 103, 17])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 21])
Passage ques attention dim:  torch.Size([5, 187, 21])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 167, 15])
Passage ques attention dim:  torch.Size([5, 167, 15])
Passage question vectors dim:  torch.Size([5, 167, 200])
Question Passage Similarity dim:  torch.Size([5, 167])
Question passage attention dim:  torch.Size([5, 167])
Final Merged Passage dim:  torch.Size([5, 167, 800])
Modeled Passage dim:  torch.Size([5, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 167, 1000])
Span start logits:  torch.Size([5, 167])
span start probs dim:  torch.Size([5, 167])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 167]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 17])
Passage ques attention dim:  torch.Size([5, 192, 17])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 15])
Passage ques attention dim:  torch.Size([5, 111, 15])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 17])
Passage ques attention dim:  torch.Size([5, 165, 17])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 12])
Passage ques attention dim:  torch.Size([5, 100, 12])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 16])
Passage ques attention dim:  torch.Size([5, 95, 16])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 14])
Passage ques attention dim:  torch.Size([5, 118, 14])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 13])
Passage ques attention dim:  torch.Size([5, 125, 13])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 13])
Passage ques attention dim:  torch.Size([5, 116, 13])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 16])
Passage ques attention dim:  torch.Size([5, 183, 16])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 14])
Passage ques attention dim:  torch.Size([5, 108, 14])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 22])
Passage ques attention dim:  torch.Size([5, 171, 22])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 14])
Passage ques attention dim:  torch.Size([5, 109, 14])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 17])
Passage ques attention dim:  torch.Size([5, 176, 17])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 20])
Passage ques attention dim:  torch.Size([5, 122, 20])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 18])
Passage ques attention dim:  torch.Size([5, 116, 18])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 242, 200])
Passage Length:  242
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 242, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 242, 17])
Passage ques attention dim:  torch.Size([5, 242, 17])
Passage question vectors dim:  torch.Size([5, 242, 200])
Question Passage Similarity dim:  torch.Size([5, 242])
Question passage attention dim:  torch.Size([5, 242])
Final Merged Passage dim:  torch.Size([5, 242, 800])
Modeled Passage dim:  torch.Size([5, 242, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 242, 1000])
Span start logits:  torch.Size([5, 242])
span start probs dim:  torch.Size([5, 242])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 242]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 25])
Passage ques attention dim:  torch.Size([5, 108, 25])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 14])
Passage ques attention dim:  torch.Size([5, 70, 14])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 69, 200])
Passage Length:  69
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 69, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 69, 20])
Passage ques attention dim:  torch.Size([5, 69, 20])
Passage question vectors dim:  torch.Size([5, 69, 200])
Question Passage Similarity dim:  torch.Size([5, 69])
Question passage attention dim:  torch.Size([5, 69])
Final Merged Passage dim:  torch.Size([5, 69, 800])
Modeled Passage dim:  torch.Size([5, 69, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 69, 1000])
Span start logits:  torch.Size([5, 69])
span start probs dim:  torch.Size([5, 69])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 69]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 20])
Passage ques attention dim:  torch.Size([5, 154, 20])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 19])
Passage ques attention dim:  torch.Size([5, 179, 19])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 15])
Passage ques attention dim:  torch.Size([5, 169, 15])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 79, 11])
Passage ques attention dim:  torch.Size([5, 79, 11])
Passage question vectors dim:  torch.Size([5, 79, 200])
Question Passage Similarity dim:  torch.Size([5, 79])
Question passage attention dim:  torch.Size([5, 79])
Final Merged Passage dim:  torch.Size([5, 79, 800])
Modeled Passage dim:  torch.Size([5, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 79, 1000])
Span start logits:  torch.Size([5, 79])
span start probs dim:  torch.Size([5, 79])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 79]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 218, 17])
Passage ques attention dim:  torch.Size([5, 218, 17])
Passage question vectors dim:  torch.Size([5, 218, 200])
Question Passage Similarity dim:  torch.Size([5, 218])
Question passage attention dim:  torch.Size([5, 218])
Final Merged Passage dim:  torch.Size([5, 218, 800])
Modeled Passage dim:  torch.Size([5, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 218, 1000])
Span start logits:  torch.Size([5, 218])
span start probs dim:  torch.Size([5, 218])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 218]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 14])
Passage ques attention dim:  torch.Size([5, 113, 14])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 14])
Passage ques attention dim:  torch.Size([5, 174, 14])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 16])
Passage ques attention dim:  torch.Size([5, 109, 16])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 13])
Passage ques attention dim:  torch.Size([5, 132, 13])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 16])
Passage ques attention dim:  torch.Size([5, 150, 16])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 21])
Passage ques attention dim:  torch.Size([5, 138, 21])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 13])
Passage ques attention dim:  torch.Size([5, 109, 13])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 15])
Passage ques attention dim:  torch.Size([5, 140, 15])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 11])
Passage ques attention dim:  torch.Size([5, 148, 11])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 244, 200])
Passage Length:  244
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 244, 14])
Passage ques attention dim:  torch.Size([5, 244, 14])
Passage question vectors dim:  torch.Size([5, 244, 200])
Question Passage Similarity dim:  torch.Size([5, 244])
Question passage attention dim:  torch.Size([5, 244])
Final Merged Passage dim:  torch.Size([5, 244, 800])
Modeled Passage dim:  torch.Size([5, 244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 244, 1000])
Span start logits:  torch.Size([5, 244])
span start probs dim:  torch.Size([5, 244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 16])
Passage ques attention dim:  torch.Size([5, 124, 16])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 11])
Passage ques attention dim:  torch.Size([5, 108, 11])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 20])
Passage ques attention dim:  torch.Size([5, 138, 20])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 11])
Passage ques attention dim:  torch.Size([5, 159, 11])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 28, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 28, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 28])
Passage ques attention dim:  torch.Size([5, 97, 28])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 17])
Passage ques attention dim:  torch.Size([5, 176, 17])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 18])
Passage ques attention dim:  torch.Size([5, 162, 18])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 11])
Passage ques attention dim:  torch.Size([5, 74, 11])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 285, 200])
Passage Length:  285
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 285, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 285, 14])
Passage ques attention dim:  torch.Size([5, 285, 14])
Passage question vectors dim:  torch.Size([5, 285, 200])
Question Passage Similarity dim:  torch.Size([5, 285])
Question passage attention dim:  torch.Size([5, 285])
Final Merged Passage dim:  torch.Size([5, 285, 800])
Modeled Passage dim:  torch.Size([5, 285, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 285, 1000])
Span start logits:  torch.Size([5, 285])
span start probs dim:  torch.Size([5, 285])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 285]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 15])
Passage ques attention dim:  torch.Size([5, 151, 15])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 14])
Passage ques attention dim:  torch.Size([5, 129, 14])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 301, 11])
Passage ques attention dim:  torch.Size([5, 301, 11])
Passage question vectors dim:  torch.Size([5, 301, 200])
Question Passage Similarity dim:  torch.Size([5, 301])
Question passage attention dim:  torch.Size([5, 301])
Final Merged Passage dim:  torch.Size([5, 301, 800])
Modeled Passage dim:  torch.Size([5, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 301, 1000])
Span start logits:  torch.Size([5, 301])
span start probs dim:  torch.Size([5, 301])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 301]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 12])
Passage ques attention dim:  torch.Size([5, 143, 12])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 14])
Passage ques attention dim:  torch.Size([5, 96, 14])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 202, 16])
Passage ques attention dim:  torch.Size([5, 202, 16])
Passage question vectors dim:  torch.Size([5, 202, 200])
Question Passage Similarity dim:  torch.Size([5, 202])
Question passage attention dim:  torch.Size([5, 202])
Final Merged Passage dim:  torch.Size([5, 202, 800])
Modeled Passage dim:  torch.Size([5, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 202, 1000])
Span start logits:  torch.Size([5, 202])
span start probs dim:  torch.Size([5, 202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 19])
Passage ques attention dim:  torch.Size([5, 116, 19])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 14])
Passage ques attention dim:  torch.Size([5, 128, 14])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 17])
Passage ques attention dim:  torch.Size([5, 124, 17])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 21])
Passage ques attention dim:  torch.Size([5, 194, 21])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 12])
Passage ques attention dim:  torch.Size([5, 226, 12])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 17])
Passage ques attention dim:  torch.Size([5, 158, 17])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 16])
Passage ques attention dim:  torch.Size([5, 176, 16])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 13])
Passage ques attention dim:  torch.Size([5, 135, 13])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 181, 14])
Passage ques attention dim:  torch.Size([5, 181, 14])
Passage question vectors dim:  torch.Size([5, 181, 200])
Question Passage Similarity dim:  torch.Size([5, 181])
Question passage attention dim:  torch.Size([5, 181])
Final Merged Passage dim:  torch.Size([5, 181, 800])
Modeled Passage dim:  torch.Size([5, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 181, 1000])
Span start logits:  torch.Size([5, 181])
span start probs dim:  torch.Size([5, 181])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 181]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 15])
Passage ques attention dim:  torch.Size([5, 185, 15])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 12])
Passage ques attention dim:  torch.Size([5, 137, 12])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 246, 19])
Passage ques attention dim:  torch.Size([5, 246, 19])
Passage question vectors dim:  torch.Size([5, 246, 200])
Question Passage Similarity dim:  torch.Size([5, 246])
Question passage attention dim:  torch.Size([5, 246])
Final Merged Passage dim:  torch.Size([5, 246, 800])
Modeled Passage dim:  torch.Size([5, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 246, 1000])
Span start logits:  torch.Size([5, 246])
span start probs dim:  torch.Size([5, 246])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 246]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 13])
Passage ques attention dim:  torch.Size([5, 123, 13])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 331, 200])
Passage Length:  331
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 331, 18])
Passage ques attention dim:  torch.Size([5, 331, 18])
Passage question vectors dim:  torch.Size([5, 331, 200])
Question Passage Similarity dim:  torch.Size([5, 331])
Question passage attention dim:  torch.Size([5, 331])
Final Merged Passage dim:  torch.Size([5, 331, 800])
Modeled Passage dim:  torch.Size([5, 331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 331, 1000])
Span start logits:  torch.Size([5, 331])
span start probs dim:  torch.Size([5, 331])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 331]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 14])
Passage ques attention dim:  torch.Size([5, 139, 14])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 229, 15])
Passage ques attention dim:  torch.Size([5, 229, 15])
Passage question vectors dim:  torch.Size([5, 229, 200])
Question Passage Similarity dim:  torch.Size([5, 229])
Question passage attention dim:  torch.Size([5, 229])
Final Merged Passage dim:  torch.Size([5, 229, 800])
Modeled Passage dim:  torch.Size([5, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 229, 1000])
Span start logits:  torch.Size([5, 229])
span start probs dim:  torch.Size([5, 229])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 229]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 244, 200])
Passage Length:  244
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 244, 23])
Passage ques attention dim:  torch.Size([5, 244, 23])
Passage question vectors dim:  torch.Size([5, 244, 200])
Question Passage Similarity dim:  torch.Size([5, 244])
Question passage attention dim:  torch.Size([5, 244])
Final Merged Passage dim:  torch.Size([5, 244, 800])
Modeled Passage dim:  torch.Size([5, 244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 244, 1000])
Span start logits:  torch.Size([5, 244])
span start probs dim:  torch.Size([5, 244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 24])
Passage ques attention dim:  torch.Size([5, 138, 24])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 18])
Passage ques attention dim:  torch.Size([5, 133, 18])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 21])
Passage ques attention dim:  torch.Size([5, 273, 21])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 13])
Passage ques attention dim:  torch.Size([5, 114, 13])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 15])
Passage ques attention dim:  torch.Size([5, 110, 15])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 64, 16])
Passage ques attention dim:  torch.Size([5, 64, 16])
Passage question vectors dim:  torch.Size([5, 64, 200])
Question Passage Similarity dim:  torch.Size([5, 64])
Question passage attention dim:  torch.Size([5, 64])
Final Merged Passage dim:  torch.Size([5, 64, 800])
Modeled Passage dim:  torch.Size([5, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 64, 1000])
Span start logits:  torch.Size([5, 64])
span start probs dim:  torch.Size([5, 64])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 64]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 13])
Passage ques attention dim:  torch.Size([5, 176, 13])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 54, 200])
Passage Length:  54
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 54, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 54, 14])
Passage ques attention dim:  torch.Size([5, 54, 14])
Passage question vectors dim:  torch.Size([5, 54, 200])
Question Passage Similarity dim:  torch.Size([5, 54])
Question passage attention dim:  torch.Size([5, 54])
Final Merged Passage dim:  torch.Size([5, 54, 800])
Modeled Passage dim:  torch.Size([5, 54, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 54, 1000])
Span start logits:  torch.Size([5, 54])
span start probs dim:  torch.Size([5, 54])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 54]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 14])
Passage ques attention dim:  torch.Size([5, 180, 14])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 14])
Passage ques attention dim:  torch.Size([5, 128, 14])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 10])
Passage ques attention dim:  torch.Size([5, 126, 10])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 14])
Passage ques attention dim:  torch.Size([5, 103, 14])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 16])
Passage ques attention dim:  torch.Size([5, 163, 16])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 19])
Passage ques attention dim:  torch.Size([5, 115, 19])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 12])
Passage ques attention dim:  torch.Size([5, 114, 12])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 13])
Passage ques attention dim:  torch.Size([5, 141, 13])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 204, 23])
Passage ques attention dim:  torch.Size([5, 204, 23])
Passage question vectors dim:  torch.Size([5, 204, 200])
Question Passage Similarity dim:  torch.Size([5, 204])
Question passage attention dim:  torch.Size([5, 204])
Final Merged Passage dim:  torch.Size([5, 204, 800])
Modeled Passage dim:  torch.Size([5, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 204, 1000])
Span start logits:  torch.Size([5, 204])
span start probs dim:  torch.Size([5, 204])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 204]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 13])
Passage ques attention dim:  torch.Size([5, 119, 13])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 15])
Passage ques attention dim:  torch.Size([5, 197, 15])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 19])
Passage ques attention dim:  torch.Size([5, 104, 19])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 201, 200])
Passage Length:  201
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 201, 14])
Passage ques attention dim:  torch.Size([5, 201, 14])
Passage question vectors dim:  torch.Size([5, 201, 200])
Question Passage Similarity dim:  torch.Size([5, 201])
Question passage attention dim:  torch.Size([5, 201])
Final Merged Passage dim:  torch.Size([5, 201, 800])
Modeled Passage dim:  torch.Size([5, 201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 201, 1000])
Span start logits:  torch.Size([5, 201])
span start probs dim:  torch.Size([5, 201])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 201]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 17])
Passage ques attention dim:  torch.Size([5, 158, 17])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 413, 14])
Passage ques attention dim:  torch.Size([5, 413, 14])
Passage question vectors dim:  torch.Size([5, 413, 200])
Question Passage Similarity dim:  torch.Size([5, 413])
Question passage attention dim:  torch.Size([5, 413])
Final Merged Passage dim:  torch.Size([5, 413, 800])
Modeled Passage dim:  torch.Size([5, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 413, 1000])
Span start logits:  torch.Size([5, 413])
span start probs dim:  torch.Size([5, 413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 219, 200])
Passage Length:  219
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 219, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 219, 13])
Passage ques attention dim:  torch.Size([5, 219, 13])
Passage question vectors dim:  torch.Size([5, 219, 200])
Question Passage Similarity dim:  torch.Size([5, 219])
Question passage attention dim:  torch.Size([5, 219])
Final Merged Passage dim:  torch.Size([5, 219, 800])
Modeled Passage dim:  torch.Size([5, 219, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 219, 1000])
Span start logits:  torch.Size([5, 219])
span start probs dim:  torch.Size([5, 219])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 219]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 17])
Passage ques attention dim:  torch.Size([5, 91, 17])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 19])
Passage ques attention dim:  torch.Size([5, 175, 19])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 215, 17])
Passage ques attention dim:  torch.Size([5, 215, 17])
Passage question vectors dim:  torch.Size([5, 215, 200])
Question Passage Similarity dim:  torch.Size([5, 215])
Question passage attention dim:  torch.Size([5, 215])
Final Merged Passage dim:  torch.Size([5, 215, 800])
Modeled Passage dim:  torch.Size([5, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 215, 1000])
Span start logits:  torch.Size([5, 215])
span start probs dim:  torch.Size([5, 215])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 215]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 20])
Passage ques attention dim:  torch.Size([5, 107, 20])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 14])
Passage ques attention dim:  torch.Size([5, 102, 14])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 14])
Passage ques attention dim:  torch.Size([5, 126, 14])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 17])
Passage ques attention dim:  torch.Size([5, 142, 17])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 17])
Passage ques attention dim:  torch.Size([5, 254, 17])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 28, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 28, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 28])
Passage ques attention dim:  torch.Size([5, 226, 28])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 13])
Passage ques attention dim:  torch.Size([5, 137, 13])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 20])
Passage ques attention dim:  torch.Size([5, 164, 20])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 14])
Passage ques attention dim:  torch.Size([5, 158, 14])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 90, 14])
Passage ques attention dim:  torch.Size([5, 90, 14])
Passage question vectors dim:  torch.Size([5, 90, 200])
Question Passage Similarity dim:  torch.Size([5, 90])
Question passage attention dim:  torch.Size([5, 90])
Final Merged Passage dim:  torch.Size([5, 90, 800])
Modeled Passage dim:  torch.Size([5, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 90, 1000])
Span start logits:  torch.Size([5, 90])
span start probs dim:  torch.Size([5, 90])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 90]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 191, 12])
Passage ques attention dim:  torch.Size([5, 191, 12])
Passage question vectors dim:  torch.Size([5, 191, 200])
Question Passage Similarity dim:  torch.Size([5, 191])
Question passage attention dim:  torch.Size([5, 191])
Final Merged Passage dim:  torch.Size([5, 191, 800])
Modeled Passage dim:  torch.Size([5, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 191, 1000])
Span start logits:  torch.Size([5, 191])
span start probs dim:  torch.Size([5, 191])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 191]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 20])
Passage ques attention dim:  torch.Size([5, 161, 20])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 12])
Passage ques attention dim:  torch.Size([5, 146, 12])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 19])
Passage ques attention dim:  torch.Size([5, 110, 19])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 16])
Passage ques attention dim:  torch.Size([5, 102, 16])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 15])
Passage ques attention dim:  torch.Size([5, 111, 15])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 82, 18])
Passage ques attention dim:  torch.Size([5, 82, 18])
Passage question vectors dim:  torch.Size([5, 82, 200])
Question Passage Similarity dim:  torch.Size([5, 82])
Question passage attention dim:  torch.Size([5, 82])
Final Merged Passage dim:  torch.Size([5, 82, 800])
Modeled Passage dim:  torch.Size([5, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 82, 1000])
Span start logits:  torch.Size([5, 82])
span start probs dim:  torch.Size([5, 82])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 82]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 225, 14])
Passage ques attention dim:  torch.Size([5, 225, 14])
Passage question vectors dim:  torch.Size([5, 225, 200])
Question Passage Similarity dim:  torch.Size([5, 225])
Question passage attention dim:  torch.Size([5, 225])
Final Merged Passage dim:  torch.Size([5, 225, 800])
Modeled Passage dim:  torch.Size([5, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 225, 1000])
Span start logits:  torch.Size([5, 225])
span start probs dim:  torch.Size([5, 225])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 225]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 21])
Passage ques attention dim:  torch.Size([5, 179, 21])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 10])
Passage ques attention dim:  torch.Size([5, 145, 10])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 15])
Passage ques attention dim:  torch.Size([5, 102, 15])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 21])
Passage ques attention dim:  torch.Size([5, 176, 21])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 14])
Passage ques attention dim:  torch.Size([5, 175, 14])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 81, 200])
Passage Length:  81
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 81, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 81, 14])
Passage ques attention dim:  torch.Size([5, 81, 14])
Passage question vectors dim:  torch.Size([5, 81, 200])
Question Passage Similarity dim:  torch.Size([5, 81])
Question passage attention dim:  torch.Size([5, 81])
Final Merged Passage dim:  torch.Size([5, 81, 800])
Modeled Passage dim:  torch.Size([5, 81, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 81, 1000])
Span start logits:  torch.Size([5, 81])
span start probs dim:  torch.Size([5, 81])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 81]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 12])
Passage ques attention dim:  torch.Size([5, 107, 12])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 71, 21])
Passage ques attention dim:  torch.Size([5, 71, 21])
Passage question vectors dim:  torch.Size([5, 71, 200])
Question Passage Similarity dim:  torch.Size([5, 71])
Question passage attention dim:  torch.Size([5, 71])
Final Merged Passage dim:  torch.Size([5, 71, 800])
Modeled Passage dim:  torch.Size([5, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 71, 1000])
Span start logits:  torch.Size([5, 71])
span start probs dim:  torch.Size([5, 71])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 71]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 19])
Passage ques attention dim:  torch.Size([5, 177, 19])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 16])
Passage ques attention dim:  torch.Size([5, 118, 16])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 18])
Passage ques attention dim:  torch.Size([5, 124, 18])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 22])
Passage ques attention dim:  torch.Size([5, 99, 22])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 13])
Passage ques attention dim:  torch.Size([5, 107, 13])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 10])
Passage ques attention dim:  torch.Size([5, 105, 10])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 10])
Passage ques attention dim:  torch.Size([5, 140, 10])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 28, 200])
Embedded passage dim:  torch.Size([5, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([5, 28, 200])
Encoded passage dim:  torch.Size([5, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 168, 28])
Passage ques attention dim:  torch.Size([5, 168, 28])
Passage question vectors dim:  torch.Size([5, 168, 200])
Question Passage Similarity dim:  torch.Size([5, 168])
Question passage attention dim:  torch.Size([5, 168])
Final Merged Passage dim:  torch.Size([5, 168, 800])
Modeled Passage dim:  torch.Size([5, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 168, 1000])
Span start logits:  torch.Size([5, 168])
span start probs dim:  torch.Size([5, 168])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 168]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 232, 23])
Passage ques attention dim:  torch.Size([5, 232, 23])
Passage question vectors dim:  torch.Size([5, 232, 200])
Question Passage Similarity dim:  torch.Size([5, 232])
Question passage attention dim:  torch.Size([5, 232])
Final Merged Passage dim:  torch.Size([5, 232, 800])
Modeled Passage dim:  torch.Size([5, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 232, 1000])
Span start logits:  torch.Size([5, 232])
span start probs dim:  torch.Size([5, 232])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 232]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 202, 13])
Passage ques attention dim:  torch.Size([5, 202, 13])
Passage question vectors dim:  torch.Size([5, 202, 200])
Question Passage Similarity dim:  torch.Size([5, 202])
Question passage attention dim:  torch.Size([5, 202])
Final Merged Passage dim:  torch.Size([5, 202, 800])
Modeled Passage dim:  torch.Size([5, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 202, 1000])
Span start logits:  torch.Size([5, 202])
span start probs dim:  torch.Size([5, 202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 14])
Passage ques attention dim:  torch.Size([5, 143, 14])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 10])
Passage ques attention dim:  torch.Size([5, 131, 10])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 16])
Passage ques attention dim:  torch.Size([5, 109, 16])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 14])
Passage ques attention dim:  torch.Size([5, 74, 14])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 236, 200])
Passage Length:  236
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 236, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 236, 11])
Passage ques attention dim:  torch.Size([5, 236, 11])
Passage question vectors dim:  torch.Size([5, 236, 200])
Question Passage Similarity dim:  torch.Size([5, 236])
Question passage attention dim:  torch.Size([5, 236])
Final Merged Passage dim:  torch.Size([5, 236, 800])
Modeled Passage dim:  torch.Size([5, 236, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 236, 1000])
Span start logits:  torch.Size([5, 236])
span start probs dim:  torch.Size([5, 236])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 236]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 52, 14])
Passage ques attention dim:  torch.Size([5, 52, 14])
Passage question vectors dim:  torch.Size([5, 52, 200])
Question Passage Similarity dim:  torch.Size([5, 52])
Question passage attention dim:  torch.Size([5, 52])
Final Merged Passage dim:  torch.Size([5, 52, 800])
Modeled Passage dim:  torch.Size([5, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 52, 1000])
Span start logits:  torch.Size([5, 52])
span start probs dim:  torch.Size([5, 52])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 52]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 14])
Passage ques attention dim:  torch.Size([5, 104, 14])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 23])
Passage ques attention dim:  torch.Size([5, 99, 23])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 16])
Passage ques attention dim:  torch.Size([5, 130, 16])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 16])
Passage ques attention dim:  torch.Size([5, 141, 16])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 167, 19])
Passage ques attention dim:  torch.Size([5, 167, 19])
Passage question vectors dim:  torch.Size([5, 167, 200])
Question Passage Similarity dim:  torch.Size([5, 167])
Question passage attention dim:  torch.Size([5, 167])
Final Merged Passage dim:  torch.Size([5, 167, 800])
Modeled Passage dim:  torch.Size([5, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 167, 1000])
Span start logits:  torch.Size([5, 167])
span start probs dim:  torch.Size([5, 167])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 167]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 244, 200])
Passage Length:  244
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 244, 17])
Passage ques attention dim:  torch.Size([5, 244, 17])
Passage question vectors dim:  torch.Size([5, 244, 200])
Question Passage Similarity dim:  torch.Size([5, 244])
Question passage attention dim:  torch.Size([5, 244])
Final Merged Passage dim:  torch.Size([5, 244, 800])
Modeled Passage dim:  torch.Size([5, 244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 244, 1000])
Span start logits:  torch.Size([5, 244])
span start probs dim:  torch.Size([5, 244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 13])
Passage ques attention dim:  torch.Size([5, 174, 13])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 13])
Passage ques attention dim:  torch.Size([5, 140, 13])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 18])
Passage ques attention dim:  torch.Size([5, 165, 18])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 12])
Passage ques attention dim:  torch.Size([5, 119, 12])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 15])
Passage ques attention dim:  torch.Size([5, 117, 15])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 12])
Passage ques attention dim:  torch.Size([5, 120, 12])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 14])
Passage ques attention dim:  torch.Size([5, 151, 14])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 225, 16])
Passage ques attention dim:  torch.Size([5, 225, 16])
Passage question vectors dim:  torch.Size([5, 225, 200])
Question Passage Similarity dim:  torch.Size([5, 225])
Question passage attention dim:  torch.Size([5, 225])
Final Merged Passage dim:  torch.Size([5, 225, 800])
Modeled Passage dim:  torch.Size([5, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 225, 1000])
Span start logits:  torch.Size([5, 225])
span start probs dim:  torch.Size([5, 225])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 225]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 14])
Passage ques attention dim:  torch.Size([5, 126, 14])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 12])
Passage ques attention dim:  torch.Size([5, 128, 12])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 21])
Passage ques attention dim:  torch.Size([5, 124, 21])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 353, 200])
Passage Length:  353
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 353, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 353, 20])
Passage ques attention dim:  torch.Size([5, 353, 20])
Passage question vectors dim:  torch.Size([5, 353, 200])
Question Passage Similarity dim:  torch.Size([5, 353])
Question passage attention dim:  torch.Size([5, 353])
Final Merged Passage dim:  torch.Size([5, 353, 800])
Modeled Passage dim:  torch.Size([5, 353, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 353, 1000])
Span start logits:  torch.Size([5, 353])
span start probs dim:  torch.Size([5, 353])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 353]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 52, 13])
Passage ques attention dim:  torch.Size([5, 52, 13])
Passage question vectors dim:  torch.Size([5, 52, 200])
Question Passage Similarity dim:  torch.Size([5, 52])
Question passage attention dim:  torch.Size([5, 52])
Final Merged Passage dim:  torch.Size([5, 52, 800])
Modeled Passage dim:  torch.Size([5, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 52, 1000])
Span start logits:  torch.Size([5, 52])
span start probs dim:  torch.Size([5, 52])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 52]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 19])
Passage ques attention dim:  torch.Size([5, 173, 19])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 14])
Passage ques attention dim:  torch.Size([5, 112, 14])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 22])
Passage ques attention dim:  torch.Size([5, 152, 22])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 12])
Passage ques attention dim:  torch.Size([5, 140, 12])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 20])
Passage ques attention dim:  torch.Size([5, 146, 20])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 371, 200])
Passage Length:  371
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 371, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 371, 16])
Passage ques attention dim:  torch.Size([5, 371, 16])
Passage question vectors dim:  torch.Size([5, 371, 200])
Question Passage Similarity dim:  torch.Size([5, 371])
Question passage attention dim:  torch.Size([5, 371])
Final Merged Passage dim:  torch.Size([5, 371, 800])
Modeled Passage dim:  torch.Size([5, 371, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 371, 1000])
Span start logits:  torch.Size([5, 371])
span start probs dim:  torch.Size([5, 371])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 371]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 16])
Passage ques attention dim:  torch.Size([5, 119, 16])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 22])
Passage ques attention dim:  torch.Size([5, 131, 22])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 18])
Passage ques attention dim:  torch.Size([5, 116, 18])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 13])
Passage ques attention dim:  torch.Size([5, 128, 13])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 22])
Passage ques attention dim:  torch.Size([5, 110, 22])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 13])
Passage ques attention dim:  torch.Size([5, 112, 13])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 18])
Passage ques attention dim:  torch.Size([5, 113, 18])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 260, 200])
Passage Length:  260
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 260, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 260, 14])
Passage ques attention dim:  torch.Size([5, 260, 14])
Passage question vectors dim:  torch.Size([5, 260, 200])
Question Passage Similarity dim:  torch.Size([5, 260])
Question passage attention dim:  torch.Size([5, 260])
Final Merged Passage dim:  torch.Size([5, 260, 800])
Modeled Passage dim:  torch.Size([5, 260, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 260, 1000])
Span start logits:  torch.Size([5, 260])
span start probs dim:  torch.Size([5, 260])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 260]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 16])
Passage ques attention dim:  torch.Size([5, 195, 16])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 16])
Passage ques attention dim:  torch.Size([5, 111, 16])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 11])
Passage ques attention dim:  torch.Size([5, 153, 11])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 23])
Passage ques attention dim:  torch.Size([5, 180, 23])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 17])
Passage ques attention dim:  torch.Size([5, 101, 17])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 21])
Passage ques attention dim:  torch.Size([5, 107, 21])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 366, 200])
Passage Length:  366
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 366, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 366, 19])
Passage ques attention dim:  torch.Size([5, 366, 19])
Passage question vectors dim:  torch.Size([5, 366, 200])
Question Passage Similarity dim:  torch.Size([5, 366])
Question passage attention dim:  torch.Size([5, 366])
Final Merged Passage dim:  torch.Size([5, 366, 800])
Modeled Passage dim:  torch.Size([5, 366, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 366, 1000])
Span start logits:  torch.Size([5, 366])
span start probs dim:  torch.Size([5, 366])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 366]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 15])
Passage ques attention dim:  torch.Size([5, 121, 15])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 12])
Passage ques attention dim:  torch.Size([5, 139, 12])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 14])
Passage ques attention dim:  torch.Size([5, 157, 14])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 18])
Passage ques attention dim:  torch.Size([5, 105, 18])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 22])
Passage ques attention dim:  torch.Size([5, 143, 22])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 20])
Passage ques attention dim:  torch.Size([5, 107, 20])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 21])
Passage ques attention dim:  torch.Size([5, 139, 21])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 16])
Passage ques attention dim:  torch.Size([5, 175, 16])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 16])
Passage ques attention dim:  torch.Size([5, 179, 16])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 14])
Passage ques attention dim:  torch.Size([5, 138, 14])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 28, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 28, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 28])
Passage ques attention dim:  torch.Size([5, 150, 28])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 15])
Passage ques attention dim:  torch.Size([5, 118, 15])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 12])
Passage ques attention dim:  torch.Size([5, 180, 12])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 392, 200])
Passage Length:  392
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 392, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 392, 12])
Passage ques attention dim:  torch.Size([5, 392, 12])
Passage question vectors dim:  torch.Size([5, 392, 200])
Question Passage Similarity dim:  torch.Size([5, 392])
Question passage attention dim:  torch.Size([5, 392])
Final Merged Passage dim:  torch.Size([5, 392, 800])
Modeled Passage dim:  torch.Size([5, 392, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 392, 1000])
Span start logits:  torch.Size([5, 392])
span start probs dim:  torch.Size([5, 392])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 392]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 19])
Passage ques attention dim:  torch.Size([5, 114, 19])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 13])
Passage ques attention dim:  torch.Size([5, 115, 13])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 13])
Passage ques attention dim:  torch.Size([5, 128, 13])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 626, 200])
Passage Length:  626
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 626, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 626, 23])
Passage ques attention dim:  torch.Size([5, 626, 23])
Passage question vectors dim:  torch.Size([5, 626, 200])
Question Passage Similarity dim:  torch.Size([5, 626])
Question passage attention dim:  torch.Size([5, 626])
Final Merged Passage dim:  torch.Size([5, 626, 800])
Modeled Passage dim:  torch.Size([5, 626, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 626, 1000])
Span start logits:  torch.Size([5, 626])
span start probs dim:  torch.Size([5, 626])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 626]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 13])
Passage ques attention dim:  torch.Size([5, 116, 13])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 22])
Passage ques attention dim:  torch.Size([5, 103, 22])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 19])
Passage ques attention dim:  torch.Size([5, 163, 19])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 10])
Passage ques attention dim:  torch.Size([5, 128, 10])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 15])
Passage ques attention dim:  torch.Size([5, 177, 15])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 14])
Passage ques attention dim:  torch.Size([5, 137, 14])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 12])
Passage ques attention dim:  torch.Size([5, 103, 12])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 13])
Passage ques attention dim:  torch.Size([5, 109, 13])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 15])
Passage ques attention dim:  torch.Size([5, 108, 15])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 17])
Passage ques attention dim:  torch.Size([5, 139, 17])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 191, 20])
Passage ques attention dim:  torch.Size([5, 191, 20])
Passage question vectors dim:  torch.Size([5, 191, 200])
Question Passage Similarity dim:  torch.Size([5, 191])
Question passage attention dim:  torch.Size([5, 191])
Final Merged Passage dim:  torch.Size([5, 191, 800])
Modeled Passage dim:  torch.Size([5, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 191, 1000])
Span start logits:  torch.Size([5, 191])
span start probs dim:  torch.Size([5, 191])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 191]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 14])
Passage ques attention dim:  torch.Size([5, 185, 14])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 10])
Passage ques attention dim:  torch.Size([5, 148, 10])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 15])
Passage ques attention dim:  torch.Size([5, 137, 15])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 16])
Passage ques attention dim:  torch.Size([5, 112, 16])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 10])
Passage ques attention dim:  torch.Size([5, 105, 10])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 16])
Passage ques attention dim:  torch.Size([5, 103, 16])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 17])
Passage ques attention dim:  torch.Size([5, 127, 17])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 16])
Passage ques attention dim:  torch.Size([5, 192, 16])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 16])
Passage ques attention dim:  torch.Size([5, 183, 16])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 18])
Passage ques attention dim:  torch.Size([5, 107, 18])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 211, 15])
Passage ques attention dim:  torch.Size([5, 211, 15])
Passage question vectors dim:  torch.Size([5, 211, 200])
Question Passage Similarity dim:  torch.Size([5, 211])
Question passage attention dim:  torch.Size([5, 211])
Final Merged Passage dim:  torch.Size([5, 211, 800])
Modeled Passage dim:  torch.Size([5, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 211, 1000])
Span start logits:  torch.Size([5, 211])
span start probs dim:  torch.Size([5, 211])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 211]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 68, 200])
Passage Length:  68
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 68, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 68, 13])
Passage ques attention dim:  torch.Size([5, 68, 13])
Passage question vectors dim:  torch.Size([5, 68, 200])
Question Passage Similarity dim:  torch.Size([5, 68])
Question passage attention dim:  torch.Size([5, 68])
Final Merged Passage dim:  torch.Size([5, 68, 800])
Modeled Passage dim:  torch.Size([5, 68, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 68, 1000])
Span start logits:  torch.Size([5, 68])
span start probs dim:  torch.Size([5, 68])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 68]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 19])
Passage ques attention dim:  torch.Size([5, 111, 19])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 24])
Passage ques attention dim:  torch.Size([5, 199, 24])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 26])
Passage ques attention dim:  torch.Size([5, 154, 26])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 13])
Passage ques attention dim:  torch.Size([5, 234, 13])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 11])
Passage ques attention dim:  torch.Size([5, 74, 11])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 21])
Passage ques attention dim:  torch.Size([5, 125, 21])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 23])
Passage ques attention dim:  torch.Size([5, 107, 23])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 21])
Passage ques attention dim:  torch.Size([5, 102, 21])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 10])
Passage ques attention dim:  torch.Size([5, 102, 10])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 12])
Passage ques attention dim:  torch.Size([5, 185, 12])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 18])
Passage ques attention dim:  torch.Size([5, 154, 18])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 11])
Passage ques attention dim:  torch.Size([5, 132, 11])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 311, 17])
Passage ques attention dim:  torch.Size([5, 311, 17])
Passage question vectors dim:  torch.Size([5, 311, 200])
Question Passage Similarity dim:  torch.Size([5, 311])
Question passage attention dim:  torch.Size([5, 311])
Final Merged Passage dim:  torch.Size([5, 311, 800])
Modeled Passage dim:  torch.Size([5, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 311, 1000])
Span start logits:  torch.Size([5, 311])
span start probs dim:  torch.Size([5, 311])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 311]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 11])
Passage ques attention dim:  torch.Size([5, 104, 11])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 73, 18])
Passage ques attention dim:  torch.Size([5, 73, 18])
Passage question vectors dim:  torch.Size([5, 73, 200])
Question Passage Similarity dim:  torch.Size([5, 73])
Question passage attention dim:  torch.Size([5, 73])
Final Merged Passage dim:  torch.Size([5, 73, 800])
Modeled Passage dim:  torch.Size([5, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 73, 1000])
Span start logits:  torch.Size([5, 73])
span start probs dim:  torch.Size([5, 73])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 73]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 21])
Passage ques attention dim:  torch.Size([5, 96, 21])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 16])
Passage ques attention dim:  torch.Size([5, 190, 16])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 27, 200])
Embedded passage dim:  torch.Size([5, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([5, 27, 200])
Encoded passage dim:  torch.Size([5, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 227, 27])
Passage ques attention dim:  torch.Size([5, 227, 27])
Passage question vectors dim:  torch.Size([5, 227, 200])
Question Passage Similarity dim:  torch.Size([5, 227])
Question passage attention dim:  torch.Size([5, 227])
Final Merged Passage dim:  torch.Size([5, 227, 800])
Modeled Passage dim:  torch.Size([5, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 227, 1000])
Span start logits:  torch.Size([5, 227])
span start probs dim:  torch.Size([5, 227])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 227]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 393, 200])
Passage Length:  393
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 393, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 393, 16])
Passage ques attention dim:  torch.Size([5, 393, 16])
Passage question vectors dim:  torch.Size([5, 393, 200])
Question Passage Similarity dim:  torch.Size([5, 393])
Question passage attention dim:  torch.Size([5, 393])
Final Merged Passage dim:  torch.Size([5, 393, 800])
Modeled Passage dim:  torch.Size([5, 393, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 393, 1000])
Span start logits:  torch.Size([5, 393])
span start probs dim:  torch.Size([5, 393])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 393]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 11])
Passage ques attention dim:  torch.Size([5, 140, 11])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 19])
Passage ques attention dim:  torch.Size([5, 133, 19])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 13])
Passage ques attention dim:  torch.Size([5, 104, 13])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 15])
Passage ques attention dim:  torch.Size([5, 124, 15])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 62, 200])
Passage Length:  62
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 62, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 62, 12])
Passage ques attention dim:  torch.Size([5, 62, 12])
Passage question vectors dim:  torch.Size([5, 62, 200])
Question Passage Similarity dim:  torch.Size([5, 62])
Question passage attention dim:  torch.Size([5, 62])
Final Merged Passage dim:  torch.Size([5, 62, 800])
Modeled Passage dim:  torch.Size([5, 62, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 62, 1000])
Span start logits:  torch.Size([5, 62])
span start probs dim:  torch.Size([5, 62])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 62]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 23])
Passage ques attention dim:  torch.Size([5, 110, 23])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 16])
Passage ques attention dim:  torch.Size([5, 180, 16])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 314, 200])
Passage Length:  314
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 314, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 314, 14])
Passage ques attention dim:  torch.Size([5, 314, 14])
Passage question vectors dim:  torch.Size([5, 314, 200])
Question Passage Similarity dim:  torch.Size([5, 314])
Question passage attention dim:  torch.Size([5, 314])
Final Merged Passage dim:  torch.Size([5, 314, 800])
Modeled Passage dim:  torch.Size([5, 314, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 314, 1000])
Span start logits:  torch.Size([5, 314])
span start probs dim:  torch.Size([5, 314])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 314]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 16])
Passage ques attention dim:  torch.Size([5, 113, 16])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 11])
Passage ques attention dim:  torch.Size([5, 131, 11])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 15])
Passage ques attention dim:  torch.Size([5, 158, 15])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 215, 22])
Passage ques attention dim:  torch.Size([5, 215, 22])
Passage question vectors dim:  torch.Size([5, 215, 200])
Question Passage Similarity dim:  torch.Size([5, 215])
Question passage attention dim:  torch.Size([5, 215])
Final Merged Passage dim:  torch.Size([5, 215, 800])
Modeled Passage dim:  torch.Size([5, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 215, 1000])
Span start logits:  torch.Size([5, 215])
span start probs dim:  torch.Size([5, 215])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 215]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 16])
Passage ques attention dim:  torch.Size([5, 116, 16])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 17])
Passage ques attention dim:  torch.Size([5, 142, 17])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 219, 200])
Passage Length:  219
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 219, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 219, 13])
Passage ques attention dim:  torch.Size([5, 219, 13])
Passage question vectors dim:  torch.Size([5, 219, 200])
Question Passage Similarity dim:  torch.Size([5, 219])
Question passage attention dim:  torch.Size([5, 219])
Final Merged Passage dim:  torch.Size([5, 219, 800])
Modeled Passage dim:  torch.Size([5, 219, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 219, 1000])
Span start logits:  torch.Size([5, 219])
span start probs dim:  torch.Size([5, 219])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 219]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 14])
Passage ques attention dim:  torch.Size([5, 110, 14])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 19])
Passage ques attention dim:  torch.Size([5, 118, 19])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 16])
Passage ques attention dim:  torch.Size([5, 153, 16])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 15])
Passage ques attention dim:  torch.Size([5, 129, 15])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 12])
Passage ques attention dim:  torch.Size([5, 110, 12])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 14])
Passage ques attention dim:  torch.Size([5, 124, 14])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 18])
Passage ques attention dim:  torch.Size([5, 114, 18])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 18])
Passage ques attention dim:  torch.Size([5, 182, 18])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 98, 17])
Passage ques attention dim:  torch.Size([5, 98, 17])
Passage question vectors dim:  torch.Size([5, 98, 200])
Question Passage Similarity dim:  torch.Size([5, 98])
Question passage attention dim:  torch.Size([5, 98])
Final Merged Passage dim:  torch.Size([5, 98, 800])
Modeled Passage dim:  torch.Size([5, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 98, 1000])
Span start logits:  torch.Size([5, 98])
span start probs dim:  torch.Size([5, 98])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 98]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 25])
Passage ques attention dim:  torch.Size([5, 123, 25])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 30, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 30, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 30])
Passage ques attention dim:  torch.Size([5, 130, 30])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 12])
Passage ques attention dim:  torch.Size([5, 105, 12])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 18])
Passage ques attention dim:  torch.Size([5, 131, 18])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 19])
Passage ques attention dim:  torch.Size([5, 234, 19])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 16])
Passage ques attention dim:  torch.Size([5, 140, 16])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 227, 14])
Passage ques attention dim:  torch.Size([5, 227, 14])
Passage question vectors dim:  torch.Size([5, 227, 200])
Question Passage Similarity dim:  torch.Size([5, 227])
Question passage attention dim:  torch.Size([5, 227])
Final Merged Passage dim:  torch.Size([5, 227, 800])
Modeled Passage dim:  torch.Size([5, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 227, 1000])
Span start logits:  torch.Size([5, 227])
span start probs dim:  torch.Size([5, 227])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 227]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 17])
Passage ques attention dim:  torch.Size([5, 119, 17])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 284, 200])
Passage Length:  284
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 284, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 284, 12])
Passage ques attention dim:  torch.Size([5, 284, 12])
Passage question vectors dim:  torch.Size([5, 284, 200])
Question Passage Similarity dim:  torch.Size([5, 284])
Question passage attention dim:  torch.Size([5, 284])
Final Merged Passage dim:  torch.Size([5, 284, 800])
Modeled Passage dim:  torch.Size([5, 284, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 284, 1000])
Span start logits:  torch.Size([5, 284])
span start probs dim:  torch.Size([5, 284])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 284]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 17])
Passage ques attention dim:  torch.Size([5, 164, 17])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 13])
Passage ques attention dim:  torch.Size([5, 129, 13])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 13])
Passage ques attention dim:  torch.Size([5, 197, 13])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 15])
Passage ques attention dim:  torch.Size([5, 129, 15])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 12])
Passage ques attention dim:  torch.Size([5, 128, 12])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 88, 13])
Passage ques attention dim:  torch.Size([5, 88, 13])
Passage question vectors dim:  torch.Size([5, 88, 200])
Question Passage Similarity dim:  torch.Size([5, 88])
Question passage attention dim:  torch.Size([5, 88])
Final Merged Passage dim:  torch.Size([5, 88, 800])
Modeled Passage dim:  torch.Size([5, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 88, 1000])
Span start logits:  torch.Size([5, 88])
span start probs dim:  torch.Size([5, 88])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 88]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 168, 16])
Passage ques attention dim:  torch.Size([5, 168, 16])
Passage question vectors dim:  torch.Size([5, 168, 200])
Question Passage Similarity dim:  torch.Size([5, 168])
Question passage attention dim:  torch.Size([5, 168])
Final Merged Passage dim:  torch.Size([5, 168, 800])
Modeled Passage dim:  torch.Size([5, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 168, 1000])
Span start logits:  torch.Size([5, 168])
span start probs dim:  torch.Size([5, 168])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 168]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 21])
Passage ques attention dim:  torch.Size([5, 190, 21])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 43, 200])
Passage Length:  43
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 43, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 43, 19])
Passage ques attention dim:  torch.Size([5, 43, 19])
Passage question vectors dim:  torch.Size([5, 43, 200])
Question Passage Similarity dim:  torch.Size([5, 43])
Question passage attention dim:  torch.Size([5, 43])
Final Merged Passage dim:  torch.Size([5, 43, 800])
Modeled Passage dim:  torch.Size([5, 43, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 43, 1000])
Span start logits:  torch.Size([5, 43])
span start probs dim:  torch.Size([5, 43])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 43]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 14])
Passage ques attention dim:  torch.Size([5, 190, 14])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 14])
Passage ques attention dim:  torch.Size([5, 96, 14])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 13])
Passage ques attention dim:  torch.Size([5, 169, 13])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 13])
Passage ques attention dim:  torch.Size([5, 187, 13])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 14])
Passage ques attention dim:  torch.Size([5, 70, 14])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 155, 14])
Passage ques attention dim:  torch.Size([5, 155, 14])
Passage question vectors dim:  torch.Size([5, 155, 200])
Question Passage Similarity dim:  torch.Size([5, 155])
Question passage attention dim:  torch.Size([5, 155])
Final Merged Passage dim:  torch.Size([5, 155, 800])
Modeled Passage dim:  torch.Size([5, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 155, 1000])
Span start logits:  torch.Size([5, 155])
span start probs dim:  torch.Size([5, 155])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 155]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 81, 200])
Passage Length:  81
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 81, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 81, 12])
Passage ques attention dim:  torch.Size([5, 81, 12])
Passage question vectors dim:  torch.Size([5, 81, 200])
Question Passage Similarity dim:  torch.Size([5, 81])
Question passage attention dim:  torch.Size([5, 81])
Final Merged Passage dim:  torch.Size([5, 81, 800])
Modeled Passage dim:  torch.Size([5, 81, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 81, 1000])
Span start logits:  torch.Size([5, 81])
span start probs dim:  torch.Size([5, 81])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 81]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 28, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 28, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 28])
Passage ques attention dim:  torch.Size([5, 152, 28])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 13])
Passage ques attention dim:  torch.Size([5, 116, 13])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 19])
Passage ques attention dim:  torch.Size([5, 131, 19])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 337, 200])
Passage Length:  337
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 337, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 337, 17])
Passage ques attention dim:  torch.Size([5, 337, 17])
Passage question vectors dim:  torch.Size([5, 337, 200])
Question Passage Similarity dim:  torch.Size([5, 337])
Question passage attention dim:  torch.Size([5, 337])
Final Merged Passage dim:  torch.Size([5, 337, 800])
Modeled Passage dim:  torch.Size([5, 337, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 337, 1000])
Span start logits:  torch.Size([5, 337])
span start probs dim:  torch.Size([5, 337])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 337]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 19])
Passage ques attention dim:  torch.Size([5, 178, 19])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 17])
Passage ques attention dim:  torch.Size([5, 111, 17])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 15])
Passage ques attention dim:  torch.Size([5, 130, 15])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 16])
Passage ques attention dim:  torch.Size([5, 188, 16])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 12])
Passage ques attention dim:  torch.Size([5, 163, 12])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 18])
Passage ques attention dim:  torch.Size([5, 143, 18])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 11])
Passage ques attention dim:  torch.Size([5, 192, 11])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 17])
Passage ques attention dim:  torch.Size([5, 139, 17])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 75, 15])
Passage ques attention dim:  torch.Size([5, 75, 15])
Passage question vectors dim:  torch.Size([5, 75, 200])
Question Passage Similarity dim:  torch.Size([5, 75])
Question passage attention dim:  torch.Size([5, 75])
Final Merged Passage dim:  torch.Size([5, 75, 800])
Modeled Passage dim:  torch.Size([5, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 75, 1000])
Span start logits:  torch.Size([5, 75])
span start probs dim:  torch.Size([5, 75])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 75]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 18])
Passage ques attention dim:  torch.Size([5, 115, 18])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 16])
Passage ques attention dim:  torch.Size([5, 174, 16])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 15])
Passage ques attention dim:  torch.Size([5, 140, 15])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 15])
Passage ques attention dim:  torch.Size([5, 254, 15])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 20])
Passage ques attention dim:  torch.Size([5, 145, 20])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 15])
Passage ques attention dim:  torch.Size([5, 112, 15])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 16])
Passage ques attention dim:  torch.Size([5, 176, 16])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 13])
Passage ques attention dim:  torch.Size([5, 107, 13])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 15])
Passage ques attention dim:  torch.Size([5, 132, 15])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 13])
Passage ques attention dim:  torch.Size([5, 113, 13])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 16])
Passage ques attention dim:  torch.Size([5, 112, 16])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 11])
Passage ques attention dim:  torch.Size([5, 124, 11])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 213, 14])
Passage ques attention dim:  torch.Size([5, 213, 14])
Passage question vectors dim:  torch.Size([5, 213, 200])
Question Passage Similarity dim:  torch.Size([5, 213])
Question passage attention dim:  torch.Size([5, 213])
Final Merged Passage dim:  torch.Size([5, 213, 800])
Modeled Passage dim:  torch.Size([5, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 213, 1000])
Span start logits:  torch.Size([5, 213])
span start probs dim:  torch.Size([5, 213])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 213]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 24])
Passage ques attention dim:  torch.Size([5, 113, 24])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 12])
Passage ques attention dim:  torch.Size([5, 151, 12])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 12])
Passage ques attention dim:  torch.Size([5, 121, 12])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 18])
Passage ques attention dim:  torch.Size([5, 137, 18])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 16])
Passage ques attention dim:  torch.Size([5, 183, 16])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 301, 16])
Passage ques attention dim:  torch.Size([5, 301, 16])
Passage question vectors dim:  torch.Size([5, 301, 200])
Question Passage Similarity dim:  torch.Size([5, 301])
Question passage attention dim:  torch.Size([5, 301])
Final Merged Passage dim:  torch.Size([5, 301, 800])
Modeled Passage dim:  torch.Size([5, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 301, 1000])
Span start logits:  torch.Size([5, 301])
span start probs dim:  torch.Size([5, 301])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 301]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 43, 200])
Passage Length:  43
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 43, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 43, 16])
Passage ques attention dim:  torch.Size([5, 43, 16])
Passage question vectors dim:  torch.Size([5, 43, 200])
Question Passage Similarity dim:  torch.Size([5, 43])
Question passage attention dim:  torch.Size([5, 43])
Final Merged Passage dim:  torch.Size([5, 43, 800])
Modeled Passage dim:  torch.Size([5, 43, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 43, 1000])
Span start logits:  torch.Size([5, 43])
span start probs dim:  torch.Size([5, 43])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 43]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 20])
Passage ques attention dim:  torch.Size([5, 169, 20])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 14])
Passage ques attention dim:  torch.Size([5, 160, 14])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 19])
Passage ques attention dim:  torch.Size([5, 111, 19])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 16])
Passage ques attention dim:  torch.Size([5, 101, 16])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 60, 200])
Passage Length:  60
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 60, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 60, 16])
Passage ques attention dim:  torch.Size([5, 60, 16])
Passage question vectors dim:  torch.Size([5, 60, 200])
Question Passage Similarity dim:  torch.Size([5, 60])
Question passage attention dim:  torch.Size([5, 60])
Final Merged Passage dim:  torch.Size([5, 60, 800])
Modeled Passage dim:  torch.Size([5, 60, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 60, 1000])
Span start logits:  torch.Size([5, 60])
span start probs dim:  torch.Size([5, 60])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 60]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 16])
Passage ques attention dim:  torch.Size([5, 136, 16])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 246, 15])
Passage ques attention dim:  torch.Size([5, 246, 15])
Passage question vectors dim:  torch.Size([5, 246, 200])
Question Passage Similarity dim:  torch.Size([5, 246])
Question passage attention dim:  torch.Size([5, 246])
Final Merged Passage dim:  torch.Size([5, 246, 800])
Modeled Passage dim:  torch.Size([5, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 246, 1000])
Span start logits:  torch.Size([5, 246])
span start probs dim:  torch.Size([5, 246])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 246]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 18])
Passage ques attention dim:  torch.Size([5, 103, 18])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 14])
Passage ques attention dim:  torch.Size([5, 147, 14])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 580, 200])
Passage Length:  580
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 580, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 580, 21])
Passage ques attention dim:  torch.Size([5, 580, 21])
Passage question vectors dim:  torch.Size([5, 580, 200])
Question Passage Similarity dim:  torch.Size([5, 580])
Question passage attention dim:  torch.Size([5, 580])
Final Merged Passage dim:  torch.Size([5, 580, 800])
Modeled Passage dim:  torch.Size([5, 580, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 580, 1000])
Span start logits:  torch.Size([5, 580])
span start probs dim:  torch.Size([5, 580])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 580]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 15])
Passage ques attention dim:  torch.Size([5, 100, 15])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 252, 200])
Passage Length:  252
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 252, 15])
Passage ques attention dim:  torch.Size([5, 252, 15])
Passage question vectors dim:  torch.Size([5, 252, 200])
Question Passage Similarity dim:  torch.Size([5, 252])
Question passage attention dim:  torch.Size([5, 252])
Final Merged Passage dim:  torch.Size([5, 252, 800])
Modeled Passage dim:  torch.Size([5, 252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 252, 1000])
Span start logits:  torch.Size([5, 252])
span start probs dim:  torch.Size([5, 252])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 252]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 11])
Passage ques attention dim:  torch.Size([5, 136, 11])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 19])
Passage ques attention dim:  torch.Size([5, 96, 19])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 17])
Passage ques attention dim:  torch.Size([5, 146, 17])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 196, 18])
Passage ques attention dim:  torch.Size([5, 196, 18])
Passage question vectors dim:  torch.Size([5, 196, 200])
Question Passage Similarity dim:  torch.Size([5, 196])
Question passage attention dim:  torch.Size([5, 196])
Final Merged Passage dim:  torch.Size([5, 196, 800])
Modeled Passage dim:  torch.Size([5, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 196, 1000])
Span start logits:  torch.Size([5, 196])
span start probs dim:  torch.Size([5, 196])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 196]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 13])
Passage ques attention dim:  torch.Size([5, 124, 13])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 82, 14])
Passage ques attention dim:  torch.Size([5, 82, 14])
Passage question vectors dim:  torch.Size([5, 82, 200])
Question Passage Similarity dim:  torch.Size([5, 82])
Question passage attention dim:  torch.Size([5, 82])
Final Merged Passage dim:  torch.Size([5, 82, 800])
Modeled Passage dim:  torch.Size([5, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 82, 1000])
Span start logits:  torch.Size([5, 82])
span start probs dim:  torch.Size([5, 82])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 82]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 15])
Passage ques attention dim:  torch.Size([5, 258, 15])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 21])
Passage ques attention dim:  torch.Size([5, 105, 21])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 14])
Passage ques attention dim:  torch.Size([5, 121, 14])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 15])
Passage ques attention dim:  torch.Size([5, 172, 15])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 15])
Passage ques attention dim:  torch.Size([5, 176, 15])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 16])
Passage ques attention dim:  torch.Size([5, 114, 16])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 57, 200])
Passage Length:  57
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 57, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 57, 16])
Passage ques attention dim:  torch.Size([5, 57, 16])
Passage question vectors dim:  torch.Size([5, 57, 200])
Question Passage Similarity dim:  torch.Size([5, 57])
Question passage attention dim:  torch.Size([5, 57])
Final Merged Passage dim:  torch.Size([5, 57, 800])
Modeled Passage dim:  torch.Size([5, 57, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 57, 1000])
Span start logits:  torch.Size([5, 57])
span start probs dim:  torch.Size([5, 57])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 57]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 14])
Passage ques attention dim:  torch.Size([5, 132, 14])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 10])
Passage ques attention dim:  torch.Size([5, 103, 10])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 186, 19])
Passage ques attention dim:  torch.Size([5, 186, 19])
Passage question vectors dim:  torch.Size([5, 186, 200])
Question Passage Similarity dim:  torch.Size([5, 186])
Question passage attention dim:  torch.Size([5, 186])
Final Merged Passage dim:  torch.Size([5, 186, 800])
Modeled Passage dim:  torch.Size([5, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 186, 1000])
Span start logits:  torch.Size([5, 186])
span start probs dim:  torch.Size([5, 186])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 186]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 12])
Passage ques attention dim:  torch.Size([5, 199, 12])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 22])
Passage ques attention dim:  torch.Size([5, 107, 22])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 17])
Passage ques attention dim:  torch.Size([5, 190, 17])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 17])
Passage ques attention dim:  torch.Size([5, 100, 17])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 16])
Passage ques attention dim:  torch.Size([5, 128, 16])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 14])
Passage ques attention dim:  torch.Size([5, 171, 14])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 19])
Passage ques attention dim:  torch.Size([5, 162, 19])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 16])
Passage ques attention dim:  torch.Size([5, 131, 16])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 16])
Passage ques attention dim:  torch.Size([5, 130, 16])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 26])
Passage ques attention dim:  torch.Size([5, 193, 26])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 19])
Passage ques attention dim:  torch.Size([5, 149, 19])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 15])
Passage ques attention dim:  torch.Size([5, 129, 15])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 12])
Passage ques attention dim:  torch.Size([5, 151, 12])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 167, 17])
Passage ques attention dim:  torch.Size([5, 167, 17])
Passage question vectors dim:  torch.Size([5, 167, 200])
Question Passage Similarity dim:  torch.Size([5, 167])
Question passage attention dim:  torch.Size([5, 167])
Final Merged Passage dim:  torch.Size([5, 167, 800])
Modeled Passage dim:  torch.Size([5, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 167, 1000])
Span start logits:  torch.Size([5, 167])
span start probs dim:  torch.Size([5, 167])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 167]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 16])
Passage ques attention dim:  torch.Size([5, 131, 16])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 19])
Passage ques attention dim:  torch.Size([5, 129, 19])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 18])
Passage ques attention dim:  torch.Size([5, 171, 18])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 12])
Passage ques attention dim:  torch.Size([5, 149, 12])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 25])
Passage ques attention dim:  torch.Size([5, 258, 25])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 90, 16])
Passage ques attention dim:  torch.Size([5, 90, 16])
Passage question vectors dim:  torch.Size([5, 90, 200])
Question Passage Similarity dim:  torch.Size([5, 90])
Question passage attention dim:  torch.Size([5, 90])
Final Merged Passage dim:  torch.Size([5, 90, 800])
Modeled Passage dim:  torch.Size([5, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 90, 1000])
Span start logits:  torch.Size([5, 90])
span start probs dim:  torch.Size([5, 90])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 90]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 19])
Passage ques attention dim:  torch.Size([5, 150, 19])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 16])
Passage ques attention dim:  torch.Size([5, 95, 16])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 11])
Passage ques attention dim:  torch.Size([5, 187, 11])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 20])
Passage ques attention dim:  torch.Size([5, 96, 20])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 77, 200])
Passage Length:  77
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 77, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 77, 13])
Passage ques attention dim:  torch.Size([5, 77, 13])
Passage question vectors dim:  torch.Size([5, 77, 200])
Question Passage Similarity dim:  torch.Size([5, 77])
Question passage attention dim:  torch.Size([5, 77])
Final Merged Passage dim:  torch.Size([5, 77, 800])
Modeled Passage dim:  torch.Size([5, 77, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 77, 1000])
Span start logits:  torch.Size([5, 77])
span start probs dim:  torch.Size([5, 77])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 77]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 11])
Passage ques attention dim:  torch.Size([5, 110, 11])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 18])
Passage ques attention dim:  torch.Size([5, 148, 18])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 311, 23])
Passage ques attention dim:  torch.Size([5, 311, 23])
Passage question vectors dim:  torch.Size([5, 311, 200])
Question Passage Similarity dim:  torch.Size([5, 311])
Question passage attention dim:  torch.Size([5, 311])
Final Merged Passage dim:  torch.Size([5, 311, 800])
Modeled Passage dim:  torch.Size([5, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 311, 1000])
Span start logits:  torch.Size([5, 311])
span start probs dim:  torch.Size([5, 311])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 311]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 82, 13])
Passage ques attention dim:  torch.Size([5, 82, 13])
Passage question vectors dim:  torch.Size([5, 82, 200])
Question Passage Similarity dim:  torch.Size([5, 82])
Question passage attention dim:  torch.Size([5, 82])
Final Merged Passage dim:  torch.Size([5, 82, 800])
Modeled Passage dim:  torch.Size([5, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 82, 1000])
Span start logits:  torch.Size([5, 82])
span start probs dim:  torch.Size([5, 82])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 82]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 23])
Passage ques attention dim:  torch.Size([5, 175, 23])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 200, 11])
Passage ques attention dim:  torch.Size([5, 200, 11])
Passage question vectors dim:  torch.Size([5, 200, 200])
Question Passage Similarity dim:  torch.Size([5, 200])
Question passage attention dim:  torch.Size([5, 200])
Final Merged Passage dim:  torch.Size([5, 200, 800])
Modeled Passage dim:  torch.Size([5, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 200, 1000])
Span start logits:  torch.Size([5, 200])
span start probs dim:  torch.Size([5, 200])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 200]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 20])
Passage ques attention dim:  torch.Size([5, 193, 20])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 17])
Passage ques attention dim:  torch.Size([5, 172, 17])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 18])
Passage ques attention dim:  torch.Size([5, 157, 18])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 14])
Passage ques attention dim:  torch.Size([5, 273, 14])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 14])
Passage ques attention dim:  torch.Size([5, 130, 14])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 14])
Passage ques attention dim:  torch.Size([5, 94, 14])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 11])
Passage ques attention dim:  torch.Size([5, 154, 11])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 297, 13])
Passage ques attention dim:  torch.Size([5, 297, 13])
Passage question vectors dim:  torch.Size([5, 297, 200])
Question Passage Similarity dim:  torch.Size([5, 297])
Question passage attention dim:  torch.Size([5, 297])
Final Merged Passage dim:  torch.Size([5, 297, 800])
Modeled Passage dim:  torch.Size([5, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 297, 1000])
Span start logits:  torch.Size([5, 297])
span start probs dim:  torch.Size([5, 297])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 297]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 496, 200])
Passage Length:  496
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 496, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 496, 19])
Passage ques attention dim:  torch.Size([5, 496, 19])
Passage question vectors dim:  torch.Size([5, 496, 200])
Question Passage Similarity dim:  torch.Size([5, 496])
Question passage attention dim:  torch.Size([5, 496])
Final Merged Passage dim:  torch.Size([5, 496, 800])
Modeled Passage dim:  torch.Size([5, 496, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 496, 1000])
Span start logits:  torch.Size([5, 496])
span start probs dim:  torch.Size([5, 496])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 496]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 21])
Passage ques attention dim:  torch.Size([5, 160, 21])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 424, 200])
Passage Length:  424
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 424, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 424, 17])
Passage ques attention dim:  torch.Size([5, 424, 17])
Passage question vectors dim:  torch.Size([5, 424, 200])
Question Passage Similarity dim:  torch.Size([5, 424])
Question passage attention dim:  torch.Size([5, 424])
Final Merged Passage dim:  torch.Size([5, 424, 800])
Modeled Passage dim:  torch.Size([5, 424, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 424, 1000])
Span start logits:  torch.Size([5, 424])
span start probs dim:  torch.Size([5, 424])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 424]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 15])
Passage ques attention dim:  torch.Size([5, 115, 15])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 217, 16])
Passage ques attention dim:  torch.Size([5, 217, 16])
Passage question vectors dim:  torch.Size([5, 217, 200])
Question Passage Similarity dim:  torch.Size([5, 217])
Question passage attention dim:  torch.Size([5, 217])
Final Merged Passage dim:  torch.Size([5, 217, 800])
Modeled Passage dim:  torch.Size([5, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 217, 1000])
Span start logits:  torch.Size([5, 217])
span start probs dim:  torch.Size([5, 217])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 217]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 16])
Passage ques attention dim:  torch.Size([5, 160, 16])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 55, 200])
Passage Length:  55
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 55, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 55, 13])
Passage ques attention dim:  torch.Size([5, 55, 13])
Passage question vectors dim:  torch.Size([5, 55, 200])
Question Passage Similarity dim:  torch.Size([5, 55])
Question passage attention dim:  torch.Size([5, 55])
Final Merged Passage dim:  torch.Size([5, 55, 800])
Modeled Passage dim:  torch.Size([5, 55, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 55, 1000])
Span start logits:  torch.Size([5, 55])
span start probs dim:  torch.Size([5, 55])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 55]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 13])
Passage ques attention dim:  torch.Size([5, 112, 13])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 15])
Passage ques attention dim:  torch.Size([5, 129, 15])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 353, 200])
Passage Length:  353
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 353, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 353, 23])
Passage ques attention dim:  torch.Size([5, 353, 23])
Passage question vectors dim:  torch.Size([5, 353, 200])
Question Passage Similarity dim:  torch.Size([5, 353])
Question passage attention dim:  torch.Size([5, 353])
Final Merged Passage dim:  torch.Size([5, 353, 800])
Modeled Passage dim:  torch.Size([5, 353, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 353, 1000])
Span start logits:  torch.Size([5, 353])
span start probs dim:  torch.Size([5, 353])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 353]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 245, 14])
Passage ques attention dim:  torch.Size([5, 245, 14])
Passage question vectors dim:  torch.Size([5, 245, 200])
Question Passage Similarity dim:  torch.Size([5, 245])
Question passage attention dim:  torch.Size([5, 245])
Final Merged Passage dim:  torch.Size([5, 245, 800])
Modeled Passage dim:  torch.Size([5, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 245, 1000])
Span start logits:  torch.Size([5, 245])
span start probs dim:  torch.Size([5, 245])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 245]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 236, 200])
Passage Length:  236
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 236, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 236, 15])
Passage ques attention dim:  torch.Size([5, 236, 15])
Passage question vectors dim:  torch.Size([5, 236, 200])
Question Passage Similarity dim:  torch.Size([5, 236])
Question passage attention dim:  torch.Size([5, 236])
Final Merged Passage dim:  torch.Size([5, 236, 800])
Modeled Passage dim:  torch.Size([5, 236, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 236, 1000])
Span start logits:  torch.Size([5, 236])
span start probs dim:  torch.Size([5, 236])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 236]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 13])
Passage ques attention dim:  torch.Size([5, 110, 13])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 17])
Passage ques attention dim:  torch.Size([5, 160, 17])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 16])
Passage ques attention dim:  torch.Size([5, 112, 16])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 371, 200])
Passage Length:  371
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 371, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 371, 16])
Passage ques attention dim:  torch.Size([5, 371, 16])
Passage question vectors dim:  torch.Size([5, 371, 200])
Question Passage Similarity dim:  torch.Size([5, 371])
Question passage attention dim:  torch.Size([5, 371])
Final Merged Passage dim:  torch.Size([5, 371, 800])
Modeled Passage dim:  torch.Size([5, 371, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 371, 1000])
Span start logits:  torch.Size([5, 371])
span start probs dim:  torch.Size([5, 371])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 371]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 14])
Passage ques attention dim:  torch.Size([5, 107, 14])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 12])
Passage ques attention dim:  torch.Size([5, 100, 12])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 52, 11])
Passage ques attention dim:  torch.Size([5, 52, 11])
Passage question vectors dim:  torch.Size([5, 52, 200])
Question Passage Similarity dim:  torch.Size([5, 52])
Question passage attention dim:  torch.Size([5, 52])
Final Merged Passage dim:  torch.Size([5, 52, 800])
Modeled Passage dim:  torch.Size([5, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 52, 1000])
Span start logits:  torch.Size([5, 52])
span start probs dim:  torch.Size([5, 52])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 52]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 17])
Passage ques attention dim:  torch.Size([5, 197, 17])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 14])
Passage ques attention dim:  torch.Size([5, 187, 14])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 10])
Passage ques attention dim:  torch.Size([5, 133, 10])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 170, 17])
Passage ques attention dim:  torch.Size([5, 170, 17])
Passage question vectors dim:  torch.Size([5, 170, 200])
Question Passage Similarity dim:  torch.Size([5, 170])
Question passage attention dim:  torch.Size([5, 170])
Final Merged Passage dim:  torch.Size([5, 170, 800])
Modeled Passage dim:  torch.Size([5, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 170, 1000])
Span start logits:  torch.Size([5, 170])
span start probs dim:  torch.Size([5, 170])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 170]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 189, 16])
Passage ques attention dim:  torch.Size([5, 189, 16])
Passage question vectors dim:  torch.Size([5, 189, 200])
Question Passage Similarity dim:  torch.Size([5, 189])
Question passage attention dim:  torch.Size([5, 189])
Final Merged Passage dim:  torch.Size([5, 189, 800])
Modeled Passage dim:  torch.Size([5, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 189, 1000])
Span start logits:  torch.Size([5, 189])
span start probs dim:  torch.Size([5, 189])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 189]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 14])
Passage ques attention dim:  torch.Size([5, 141, 14])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 19])
Passage ques attention dim:  torch.Size([5, 171, 19])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 22])
Passage ques attention dim:  torch.Size([5, 169, 22])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 14])
Passage ques attention dim:  torch.Size([5, 110, 14])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 12])
Passage ques attention dim:  torch.Size([5, 111, 12])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 16])
Passage ques attention dim:  torch.Size([5, 100, 16])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 16])
Passage ques attention dim:  torch.Size([5, 116, 16])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 13])
Passage ques attention dim:  torch.Size([5, 96, 13])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 18])
Passage ques attention dim:  torch.Size([5, 149, 18])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 21])
Passage ques attention dim:  torch.Size([5, 188, 21])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 12])
Passage ques attention dim:  torch.Size([5, 132, 12])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 207, 15])
Passage ques attention dim:  torch.Size([5, 207, 15])
Passage question vectors dim:  torch.Size([5, 207, 200])
Question Passage Similarity dim:  torch.Size([5, 207])
Question passage attention dim:  torch.Size([5, 207])
Final Merged Passage dim:  torch.Size([5, 207, 800])
Modeled Passage dim:  torch.Size([5, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 207, 1000])
Span start logits:  torch.Size([5, 207])
span start probs dim:  torch.Size([5, 207])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 207]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 12])
Passage ques attention dim:  torch.Size([5, 140, 12])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 17])
Passage ques attention dim:  torch.Size([5, 132, 17])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 16])
Passage ques attention dim:  torch.Size([5, 142, 16])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 232, 15])
Passage ques attention dim:  torch.Size([5, 232, 15])
Passage question vectors dim:  torch.Size([5, 232, 200])
Question Passage Similarity dim:  torch.Size([5, 232])
Question passage attention dim:  torch.Size([5, 232])
Final Merged Passage dim:  torch.Size([5, 232, 800])
Modeled Passage dim:  torch.Size([5, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 232, 1000])
Span start logits:  torch.Size([5, 232])
span start probs dim:  torch.Size([5, 232])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 232]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 13])
Passage ques attention dim:  torch.Size([5, 164, 13])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 293, 200])
Passage Length:  293
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 293, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 293, 18])
Passage ques attention dim:  torch.Size([5, 293, 18])
Passage question vectors dim:  torch.Size([5, 293, 200])
Question Passage Similarity dim:  torch.Size([5, 293])
Question passage attention dim:  torch.Size([5, 293])
Final Merged Passage dim:  torch.Size([5, 293, 800])
Modeled Passage dim:  torch.Size([5, 293, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 293, 1000])
Span start logits:  torch.Size([5, 293])
span start probs dim:  torch.Size([5, 293])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 293]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 63, 200])
Passage Length:  63
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 63, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 63, 14])
Passage ques attention dim:  torch.Size([5, 63, 14])
Passage question vectors dim:  torch.Size([5, 63, 200])
Question Passage Similarity dim:  torch.Size([5, 63])
Question passage attention dim:  torch.Size([5, 63])
Final Merged Passage dim:  torch.Size([5, 63, 800])
Modeled Passage dim:  torch.Size([5, 63, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 63, 1000])
Span start logits:  torch.Size([5, 63])
span start probs dim:  torch.Size([5, 63])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 63]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 23])
Passage ques attention dim:  torch.Size([5, 199, 23])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 18])
Passage ques attention dim:  torch.Size([5, 190, 18])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 14])
Passage ques attention dim:  torch.Size([5, 162, 14])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 98, 11])
Passage ques attention dim:  torch.Size([5, 98, 11])
Passage question vectors dim:  torch.Size([5, 98, 200])
Question Passage Similarity dim:  torch.Size([5, 98])
Question passage attention dim:  torch.Size([5, 98])
Final Merged Passage dim:  torch.Size([5, 98, 800])
Modeled Passage dim:  torch.Size([5, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 98, 1000])
Span start logits:  torch.Size([5, 98])
span start probs dim:  torch.Size([5, 98])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 98]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 17])
Passage ques attention dim:  torch.Size([5, 163, 17])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 53, 200])
Passage Length:  53
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 53, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 53, 15])
Passage ques attention dim:  torch.Size([5, 53, 15])
Passage question vectors dim:  torch.Size([5, 53, 200])
Question Passage Similarity dim:  torch.Size([5, 53])
Question passage attention dim:  torch.Size([5, 53])
Final Merged Passage dim:  torch.Size([5, 53, 800])
Modeled Passage dim:  torch.Size([5, 53, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 53, 1000])
Span start logits:  torch.Size([5, 53])
span start probs dim:  torch.Size([5, 53])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 53]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 16])
Passage ques attention dim:  torch.Size([5, 138, 16])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 17])
Passage ques attention dim:  torch.Size([5, 152, 17])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 19])
Passage ques attention dim:  torch.Size([5, 107, 19])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 250, 18])
Passage ques attention dim:  torch.Size([5, 250, 18])
Passage question vectors dim:  torch.Size([5, 250, 200])
Question Passage Similarity dim:  torch.Size([5, 250])
Question passage attention dim:  torch.Size([5, 250])
Final Merged Passage dim:  torch.Size([5, 250, 800])
Modeled Passage dim:  torch.Size([5, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 250, 1000])
Span start logits:  torch.Size([5, 250])
span start probs dim:  torch.Size([5, 250])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 250]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 305, 200])
Passage Length:  305
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 305, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 305, 13])
Passage ques attention dim:  torch.Size([5, 305, 13])
Passage question vectors dim:  torch.Size([5, 305, 200])
Question Passage Similarity dim:  torch.Size([5, 305])
Question passage attention dim:  torch.Size([5, 305])
Final Merged Passage dim:  torch.Size([5, 305, 800])
Modeled Passage dim:  torch.Size([5, 305, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 305, 1000])
Span start logits:  torch.Size([5, 305])
span start probs dim:  torch.Size([5, 305])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 305]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 16])
Passage ques attention dim:  torch.Size([5, 70, 16])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 41, 200])
Passage Length:  41
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 41, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 41, 15])
Passage ques attention dim:  torch.Size([5, 41, 15])
Passage question vectors dim:  torch.Size([5, 41, 200])
Question Passage Similarity dim:  torch.Size([5, 41])
Question passage attention dim:  torch.Size([5, 41])
Final Merged Passage dim:  torch.Size([5, 41, 800])
Modeled Passage dim:  torch.Size([5, 41, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 41, 1000])
Span start logits:  torch.Size([5, 41])
span start probs dim:  torch.Size([5, 41])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 41]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 15])
Passage ques attention dim:  torch.Size([5, 154, 15])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 20])
Passage ques attention dim:  torch.Size([5, 174, 20])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 71, 17])
Passage ques attention dim:  torch.Size([5, 71, 17])
Passage question vectors dim:  torch.Size([5, 71, 200])
Question Passage Similarity dim:  torch.Size([5, 71])
Question passage attention dim:  torch.Size([5, 71])
Final Merged Passage dim:  torch.Size([5, 71, 800])
Modeled Passage dim:  torch.Size([5, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 71, 1000])
Span start logits:  torch.Size([5, 71])
span start probs dim:  torch.Size([5, 71])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 71]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 15])
Passage ques attention dim:  torch.Size([5, 124, 15])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 17])
Passage ques attention dim:  torch.Size([5, 118, 17])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 196, 17])
Passage ques attention dim:  torch.Size([5, 196, 17])
Passage question vectors dim:  torch.Size([5, 196, 200])
Question Passage Similarity dim:  torch.Size([5, 196])
Question passage attention dim:  torch.Size([5, 196])
Final Merged Passage dim:  torch.Size([5, 196, 800])
Modeled Passage dim:  torch.Size([5, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 196, 1000])
Span start logits:  torch.Size([5, 196])
span start probs dim:  torch.Size([5, 196])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 196]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 18])
Passage ques attention dim:  torch.Size([5, 130, 18])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 12])
Passage ques attention dim:  torch.Size([5, 139, 12])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 170, 14])
Passage ques attention dim:  torch.Size([5, 170, 14])
Passage question vectors dim:  torch.Size([5, 170, 200])
Question Passage Similarity dim:  torch.Size([5, 170])
Question passage attention dim:  torch.Size([5, 170])
Final Merged Passage dim:  torch.Size([5, 170, 800])
Modeled Passage dim:  torch.Size([5, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 170, 1000])
Span start logits:  torch.Size([5, 170])
span start probs dim:  torch.Size([5, 170])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 170]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 16])
Passage ques attention dim:  torch.Size([5, 94, 16])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 11])
Passage ques attention dim:  torch.Size([5, 135, 11])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 22])
Passage ques attention dim:  torch.Size([5, 161, 22])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 13])
Passage ques attention dim:  torch.Size([5, 104, 13])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 16])
Passage ques attention dim:  torch.Size([5, 177, 16])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 14])
Passage ques attention dim:  torch.Size([5, 116, 14])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 12])
Passage ques attention dim:  torch.Size([5, 152, 12])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 21])
Passage ques attention dim:  torch.Size([5, 111, 21])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 12])
Passage ques attention dim:  torch.Size([5, 162, 12])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 23])
Passage ques attention dim:  torch.Size([5, 102, 23])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 14])
Passage ques attention dim:  torch.Size([5, 138, 14])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 79, 13])
Passage ques attention dim:  torch.Size([5, 79, 13])
Passage question vectors dim:  torch.Size([5, 79, 200])
Question Passage Similarity dim:  torch.Size([5, 79])
Question passage attention dim:  torch.Size([5, 79])
Final Merged Passage dim:  torch.Size([5, 79, 800])
Modeled Passage dim:  torch.Size([5, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 79, 1000])
Span start logits:  torch.Size([5, 79])
span start probs dim:  torch.Size([5, 79])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 79]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 217, 19])
Passage ques attention dim:  torch.Size([5, 217, 19])
Passage question vectors dim:  torch.Size([5, 217, 200])
Question Passage Similarity dim:  torch.Size([5, 217])
Question passage attention dim:  torch.Size([5, 217])
Final Merged Passage dim:  torch.Size([5, 217, 800])
Modeled Passage dim:  torch.Size([5, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 217, 1000])
Span start logits:  torch.Size([5, 217])
span start probs dim:  torch.Size([5, 217])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 217]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 16])
Passage ques attention dim:  torch.Size([5, 135, 16])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 16])
Passage ques attention dim:  torch.Size([5, 169, 16])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 424, 200])
Passage Length:  424
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 424, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 424, 24])
Passage ques attention dim:  torch.Size([5, 424, 24])
Passage question vectors dim:  torch.Size([5, 424, 200])
Question Passage Similarity dim:  torch.Size([5, 424])
Question passage attention dim:  torch.Size([5, 424])
Final Merged Passage dim:  torch.Size([5, 424, 800])
Modeled Passage dim:  torch.Size([5, 424, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 424, 1000])
Span start logits:  torch.Size([5, 424])
span start probs dim:  torch.Size([5, 424])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 424]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 14])
Passage ques attention dim:  torch.Size([5, 103, 14])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 14])
Passage ques attention dim:  torch.Size([5, 115, 14])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 12])
Passage ques attention dim:  torch.Size([5, 164, 12])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 20])
Passage ques attention dim:  torch.Size([5, 116, 20])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 11])
Passage ques attention dim:  torch.Size([5, 194, 11])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 13])
Passage ques attention dim:  torch.Size([5, 111, 13])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 10])
Passage ques attention dim:  torch.Size([5, 194, 10])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 221, 13])
Passage ques attention dim:  torch.Size([5, 221, 13])
Passage question vectors dim:  torch.Size([5, 221, 200])
Question Passage Similarity dim:  torch.Size([5, 221])
Question passage attention dim:  torch.Size([5, 221])
Final Merged Passage dim:  torch.Size([5, 221, 800])
Modeled Passage dim:  torch.Size([5, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 221, 1000])
Span start logits:  torch.Size([5, 221])
span start probs dim:  torch.Size([5, 221])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 221]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 134, 11])
Passage ques attention dim:  torch.Size([5, 134, 11])
Passage question vectors dim:  torch.Size([5, 134, 200])
Question Passage Similarity dim:  torch.Size([5, 134])
Question passage attention dim:  torch.Size([5, 134])
Final Merged Passage dim:  torch.Size([5, 134, 800])
Modeled Passage dim:  torch.Size([5, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 134, 1000])
Span start logits:  torch.Size([5, 134])
span start probs dim:  torch.Size([5, 134])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 134]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 15])
Passage ques attention dim:  torch.Size([5, 115, 15])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 15])
Passage ques attention dim:  torch.Size([5, 114, 15])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 225, 18])
Passage ques attention dim:  torch.Size([5, 225, 18])
Passage question vectors dim:  torch.Size([5, 225, 200])
Question Passage Similarity dim:  torch.Size([5, 225])
Question passage attention dim:  torch.Size([5, 225])
Final Merged Passage dim:  torch.Size([5, 225, 800])
Modeled Passage dim:  torch.Size([5, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 225, 1000])
Span start logits:  torch.Size([5, 225])
span start probs dim:  torch.Size([5, 225])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 225]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 228, 17])
Passage ques attention dim:  torch.Size([5, 228, 17])
Passage question vectors dim:  torch.Size([5, 228, 200])
Question Passage Similarity dim:  torch.Size([5, 228])
Question passage attention dim:  torch.Size([5, 228])
Final Merged Passage dim:  torch.Size([5, 228, 800])
Modeled Passage dim:  torch.Size([5, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 228, 1000])
Span start logits:  torch.Size([5, 228])
span start probs dim:  torch.Size([5, 228])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 228]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 15])
Passage ques attention dim:  torch.Size([5, 106, 15])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 134, 20])
Passage ques attention dim:  torch.Size([5, 134, 20])
Passage question vectors dim:  torch.Size([5, 134, 200])
Question Passage Similarity dim:  torch.Size([5, 134])
Question passage attention dim:  torch.Size([5, 134])
Final Merged Passage dim:  torch.Size([5, 134, 800])
Modeled Passage dim:  torch.Size([5, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 134, 1000])
Span start logits:  torch.Size([5, 134])
span start probs dim:  torch.Size([5, 134])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 134]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 13])
Passage ques attention dim:  torch.Size([5, 185, 13])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 17])
Passage ques attention dim:  torch.Size([5, 163, 17])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 15])
Passage ques attention dim:  torch.Size([5, 197, 15])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 191, 11])
Passage ques attention dim:  torch.Size([5, 191, 11])
Passage question vectors dim:  torch.Size([5, 191, 200])
Question Passage Similarity dim:  torch.Size([5, 191])
Question passage attention dim:  torch.Size([5, 191])
Final Merged Passage dim:  torch.Size([5, 191, 800])
Modeled Passage dim:  torch.Size([5, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 191, 1000])
Span start logits:  torch.Size([5, 191])
span start probs dim:  torch.Size([5, 191])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 191]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 93, 19])
Passage ques attention dim:  torch.Size([5, 93, 19])
Passage question vectors dim:  torch.Size([5, 93, 200])
Question Passage Similarity dim:  torch.Size([5, 93])
Question passage attention dim:  torch.Size([5, 93])
Final Merged Passage dim:  torch.Size([5, 93, 800])
Modeled Passage dim:  torch.Size([5, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 93, 1000])
Span start logits:  torch.Size([5, 93])
span start probs dim:  torch.Size([5, 93])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 93]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 21])
Passage ques attention dim:  torch.Size([5, 144, 21])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 19])
Passage ques attention dim:  torch.Size([5, 195, 19])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 24])
Passage ques attention dim:  torch.Size([5, 118, 24])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 13])
Passage ques attention dim:  torch.Size([5, 147, 13])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 14])
Passage ques attention dim:  torch.Size([5, 118, 14])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 189, 12])
Passage ques attention dim:  torch.Size([5, 189, 12])
Passage question vectors dim:  torch.Size([5, 189, 200])
Question Passage Similarity dim:  torch.Size([5, 189])
Question passage attention dim:  torch.Size([5, 189])
Final Merged Passage dim:  torch.Size([5, 189, 800])
Modeled Passage dim:  torch.Size([5, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 189, 1000])
Span start logits:  torch.Size([5, 189])
span start probs dim:  torch.Size([5, 189])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 189]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 12])
Passage ques attention dim:  torch.Size([5, 129, 12])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 15])
Passage ques attention dim:  torch.Size([5, 174, 15])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 14])
Passage ques attention dim:  torch.Size([5, 163, 14])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 73, 18])
Passage ques attention dim:  torch.Size([5, 73, 18])
Passage question vectors dim:  torch.Size([5, 73, 200])
Question Passage Similarity dim:  torch.Size([5, 73])
Question passage attention dim:  torch.Size([5, 73])
Final Merged Passage dim:  torch.Size([5, 73, 800])
Modeled Passage dim:  torch.Size([5, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 73, 1000])
Span start logits:  torch.Size([5, 73])
span start probs dim:  torch.Size([5, 73])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 73]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 15])
Passage ques attention dim:  torch.Size([5, 130, 15])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 307, 200])
Passage Length:  307
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 307, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 307, 15])
Passage ques attention dim:  torch.Size([5, 307, 15])
Passage question vectors dim:  torch.Size([5, 307, 200])
Question Passage Similarity dim:  torch.Size([5, 307])
Question passage attention dim:  torch.Size([5, 307])
Final Merged Passage dim:  torch.Size([5, 307, 800])
Modeled Passage dim:  torch.Size([5, 307, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 307, 1000])
Span start logits:  torch.Size([5, 307])
span start probs dim:  torch.Size([5, 307])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 307]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 19])
Passage ques attention dim:  torch.Size([5, 153, 19])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 13])
Passage ques attention dim:  torch.Size([5, 151, 13])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 75, 16])
Passage ques attention dim:  torch.Size([5, 75, 16])
Passage question vectors dim:  torch.Size([5, 75, 200])
Question Passage Similarity dim:  torch.Size([5, 75])
Question passage attention dim:  torch.Size([5, 75])
Final Merged Passage dim:  torch.Size([5, 75, 800])
Modeled Passage dim:  torch.Size([5, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 75, 1000])
Span start logits:  torch.Size([5, 75])
span start probs dim:  torch.Size([5, 75])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 75]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 191, 12])
Passage ques attention dim:  torch.Size([5, 191, 12])
Passage question vectors dim:  torch.Size([5, 191, 200])
Question Passage Similarity dim:  torch.Size([5, 191])
Question passage attention dim:  torch.Size([5, 191])
Final Merged Passage dim:  torch.Size([5, 191, 800])
Modeled Passage dim:  torch.Size([5, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 191, 1000])
Span start logits:  torch.Size([5, 191])
span start probs dim:  torch.Size([5, 191])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 191]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 27, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 27, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 27])
Passage ques attention dim:  torch.Size([5, 175, 27])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 13])
Passage ques attention dim:  torch.Size([5, 171, 13])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 229, 15])
Passage ques attention dim:  torch.Size([5, 229, 15])
Passage question vectors dim:  torch.Size([5, 229, 200])
Question Passage Similarity dim:  torch.Size([5, 229])
Question passage attention dim:  torch.Size([5, 229])
Final Merged Passage dim:  torch.Size([5, 229, 800])
Modeled Passage dim:  torch.Size([5, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 229, 1000])
Span start logits:  torch.Size([5, 229])
span start probs dim:  torch.Size([5, 229])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 229]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 198, 12])
Passage ques attention dim:  torch.Size([5, 198, 12])
Passage question vectors dim:  torch.Size([5, 198, 200])
Question Passage Similarity dim:  torch.Size([5, 198])
Question passage attention dim:  torch.Size([5, 198])
Final Merged Passage dim:  torch.Size([5, 198, 800])
Modeled Passage dim:  torch.Size([5, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 198, 1000])
Span start logits:  torch.Size([5, 198])
span start probs dim:  torch.Size([5, 198])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 198]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 34, 200])
Embedded passage dim:  torch.Size([5, 421, 200])
Passage Length:  421
Encoded question dim:  torch.Size([5, 34, 200])
Encoded passage dim:  torch.Size([5, 421, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 421, 34])
Passage ques attention dim:  torch.Size([5, 421, 34])
Passage question vectors dim:  torch.Size([5, 421, 200])
Question Passage Similarity dim:  torch.Size([5, 421])
Question passage attention dim:  torch.Size([5, 421])
Final Merged Passage dim:  torch.Size([5, 421, 800])
Modeled Passage dim:  torch.Size([5, 421, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 421, 1000])
Span start logits:  torch.Size([5, 421])
span start probs dim:  torch.Size([5, 421])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 421]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 15])
Passage ques attention dim:  torch.Size([5, 110, 15])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 15])
Passage ques attention dim:  torch.Size([5, 118, 15])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 13])
Passage ques attention dim:  torch.Size([5, 131, 13])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 252, 200])
Passage Length:  252
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 252, 17])
Passage ques attention dim:  torch.Size([5, 252, 17])
Passage question vectors dim:  torch.Size([5, 252, 200])
Question Passage Similarity dim:  torch.Size([5, 252])
Question passage attention dim:  torch.Size([5, 252])
Final Merged Passage dim:  torch.Size([5, 252, 800])
Modeled Passage dim:  torch.Size([5, 252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 252, 1000])
Span start logits:  torch.Size([5, 252])
span start probs dim:  torch.Size([5, 252])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 252]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 371, 200])
Passage Length:  371
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 371, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 371, 18])
Passage ques attention dim:  torch.Size([5, 371, 18])
Passage question vectors dim:  torch.Size([5, 371, 200])
Question Passage Similarity dim:  torch.Size([5, 371])
Question passage attention dim:  torch.Size([5, 371])
Final Merged Passage dim:  torch.Size([5, 371, 800])
Modeled Passage dim:  torch.Size([5, 371, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 371, 1000])
Span start logits:  torch.Size([5, 371])
span start probs dim:  torch.Size([5, 371])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 371]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 19])
Passage ques attention dim:  torch.Size([5, 222, 19])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 218, 17])
Passage ques attention dim:  torch.Size([5, 218, 17])
Passage question vectors dim:  torch.Size([5, 218, 200])
Question Passage Similarity dim:  torch.Size([5, 218])
Question passage attention dim:  torch.Size([5, 218])
Final Merged Passage dim:  torch.Size([5, 218, 800])
Modeled Passage dim:  torch.Size([5, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 218, 1000])
Span start logits:  torch.Size([5, 218])
span start probs dim:  torch.Size([5, 218])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 218]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 15])
Passage ques attention dim:  torch.Size([5, 123, 15])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 21])
Passage ques attention dim:  torch.Size([5, 122, 21])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 14])
Passage ques attention dim:  torch.Size([5, 149, 14])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 25])
Passage ques attention dim:  torch.Size([5, 102, 25])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 11])
Passage ques attention dim:  torch.Size([5, 108, 11])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 14])
Passage ques attention dim:  torch.Size([5, 128, 14])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 15])
Passage ques attention dim:  torch.Size([5, 116, 15])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 14])
Passage ques attention dim:  torch.Size([5, 128, 14])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 11])
Passage ques attention dim:  torch.Size([5, 70, 11])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 16])
Passage ques attention dim:  torch.Size([5, 178, 16])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 224, 200])
Passage Length:  224
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 224, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 224, 15])
Passage ques attention dim:  torch.Size([5, 224, 15])
Passage question vectors dim:  torch.Size([5, 224, 200])
Question Passage Similarity dim:  torch.Size([5, 224])
Question passage attention dim:  torch.Size([5, 224])
Final Merged Passage dim:  torch.Size([5, 224, 800])
Modeled Passage dim:  torch.Size([5, 224, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 224, 1000])
Span start logits:  torch.Size([5, 224])
span start probs dim:  torch.Size([5, 224])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 224]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 18])
Passage ques attention dim:  torch.Size([5, 258, 18])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 21])
Passage ques attention dim:  torch.Size([5, 147, 21])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 14])
Passage ques attention dim:  torch.Size([5, 91, 14])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 211, 20])
Passage ques attention dim:  torch.Size([5, 211, 20])
Passage question vectors dim:  torch.Size([5, 211, 200])
Question Passage Similarity dim:  torch.Size([5, 211])
Question passage attention dim:  torch.Size([5, 211])
Final Merged Passage dim:  torch.Size([5, 211, 800])
Modeled Passage dim:  torch.Size([5, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 211, 1000])
Span start logits:  torch.Size([5, 211])
span start probs dim:  torch.Size([5, 211])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 211]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 12])
Passage ques attention dim:  torch.Size([5, 178, 12])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 229, 15])
Passage ques attention dim:  torch.Size([5, 229, 15])
Passage question vectors dim:  torch.Size([5, 229, 200])
Question Passage Similarity dim:  torch.Size([5, 229])
Question passage attention dim:  torch.Size([5, 229])
Final Merged Passage dim:  torch.Size([5, 229, 800])
Modeled Passage dim:  torch.Size([5, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 229, 1000])
Span start logits:  torch.Size([5, 229])
span start probs dim:  torch.Size([5, 229])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 229]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 15])
Passage ques attention dim:  torch.Size([5, 192, 15])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 20])
Passage ques attention dim:  torch.Size([5, 110, 20])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 14])
Passage ques attention dim:  torch.Size([5, 103, 14])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 18])
Passage ques attention dim:  torch.Size([5, 92, 18])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 13])
Passage ques attention dim:  torch.Size([5, 138, 13])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 16])
Passage ques attention dim:  torch.Size([5, 110, 16])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 16])
Passage ques attention dim:  torch.Size([5, 102, 16])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 350, 16])
Passage ques attention dim:  torch.Size([5, 350, 16])
Passage question vectors dim:  torch.Size([5, 350, 200])
Question Passage Similarity dim:  torch.Size([5, 350])
Question passage attention dim:  torch.Size([5, 350])
Final Merged Passage dim:  torch.Size([5, 350, 800])
Modeled Passage dim:  torch.Size([5, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 350, 1000])
Span start logits:  torch.Size([5, 350])
span start probs dim:  torch.Size([5, 350])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 350]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 90, 10])
Passage ques attention dim:  torch.Size([5, 90, 10])
Passage question vectors dim:  torch.Size([5, 90, 200])
Question Passage Similarity dim:  torch.Size([5, 90])
Question passage attention dim:  torch.Size([5, 90])
Final Merged Passage dim:  torch.Size([5, 90, 800])
Modeled Passage dim:  torch.Size([5, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 90, 1000])
Span start logits:  torch.Size([5, 90])
span start probs dim:  torch.Size([5, 90])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 90]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 18])
Passage ques attention dim:  torch.Size([5, 127, 18])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 16])
Passage ques attention dim:  torch.Size([5, 122, 16])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 12])
Passage ques attention dim:  torch.Size([5, 141, 12])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 21])
Passage ques attention dim:  torch.Size([5, 136, 21])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 17])
Passage ques attention dim:  torch.Size([5, 176, 17])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 13])
Passage ques attention dim:  torch.Size([5, 177, 13])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 17])
Passage ques attention dim:  torch.Size([5, 173, 17])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 16])
Passage ques attention dim:  torch.Size([5, 182, 16])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 15])
Passage ques attention dim:  torch.Size([5, 105, 15])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 16])
Passage ques attention dim:  torch.Size([5, 147, 16])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 16])
Passage ques attention dim:  torch.Size([5, 101, 16])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 209, 19])
Passage ques attention dim:  torch.Size([5, 209, 19])
Passage question vectors dim:  torch.Size([5, 209, 200])
Question Passage Similarity dim:  torch.Size([5, 209])
Question passage attention dim:  torch.Size([5, 209])
Final Merged Passage dim:  torch.Size([5, 209, 800])
Modeled Passage dim:  torch.Size([5, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 209, 1000])
Span start logits:  torch.Size([5, 209])
span start probs dim:  torch.Size([5, 209])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 209]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 13])
Passage ques attention dim:  torch.Size([5, 114, 13])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 53, 200])
Passage Length:  53
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 53, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 53, 13])
Passage ques attention dim:  torch.Size([5, 53, 13])
Passage question vectors dim:  torch.Size([5, 53, 200])
Question Passage Similarity dim:  torch.Size([5, 53])
Question passage attention dim:  torch.Size([5, 53])
Final Merged Passage dim:  torch.Size([5, 53, 800])
Modeled Passage dim:  torch.Size([5, 53, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 53, 1000])
Span start logits:  torch.Size([5, 53])
span start probs dim:  torch.Size([5, 53])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 53]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 30, 200])
Passage Length:  30
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 30, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 30, 11])
Passage ques attention dim:  torch.Size([5, 30, 11])
Passage question vectors dim:  torch.Size([5, 30, 200])
Question Passage Similarity dim:  torch.Size([5, 30])
Question passage attention dim:  torch.Size([5, 30])
Final Merged Passage dim:  torch.Size([5, 30, 800])
Modeled Passage dim:  torch.Size([5, 30, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 30, 1000])
Span start logits:  torch.Size([5, 30])
span start probs dim:  torch.Size([5, 30])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 30]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 18])
Passage ques attention dim:  torch.Size([5, 128, 18])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 15])
Passage ques attention dim:  torch.Size([5, 123, 15])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 19])
Passage ques attention dim:  torch.Size([5, 140, 19])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 580, 200])
Passage Length:  580
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 580, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 580, 17])
Passage ques attention dim:  torch.Size([5, 580, 17])
Passage question vectors dim:  torch.Size([5, 580, 200])
Question Passage Similarity dim:  torch.Size([5, 580])
Question passage attention dim:  torch.Size([5, 580])
Final Merged Passage dim:  torch.Size([5, 580, 800])
Modeled Passage dim:  torch.Size([5, 580, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 580, 1000])
Span start logits:  torch.Size([5, 580])
span start probs dim:  torch.Size([5, 580])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 580]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 16])
Passage ques attention dim:  torch.Size([5, 136, 16])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 259, 13])
Passage ques attention dim:  torch.Size([5, 259, 13])
Passage question vectors dim:  torch.Size([5, 259, 200])
Question Passage Similarity dim:  torch.Size([5, 259])
Question passage attention dim:  torch.Size([5, 259])
Final Merged Passage dim:  torch.Size([5, 259, 800])
Modeled Passage dim:  torch.Size([5, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 259, 1000])
Span start logits:  torch.Size([5, 259])
span start probs dim:  torch.Size([5, 259])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 259]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 14])
Passage ques attention dim:  torch.Size([5, 142, 14])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 69, 200])
Passage Length:  69
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 69, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 69, 17])
Passage ques attention dim:  torch.Size([5, 69, 17])
Passage question vectors dim:  torch.Size([5, 69, 200])
Question Passage Similarity dim:  torch.Size([5, 69])
Question passage attention dim:  torch.Size([5, 69])
Final Merged Passage dim:  torch.Size([5, 69, 800])
Modeled Passage dim:  torch.Size([5, 69, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 69, 1000])
Span start logits:  torch.Size([5, 69])
span start probs dim:  torch.Size([5, 69])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 69]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 21])
Passage ques attention dim:  torch.Size([5, 127, 21])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 8])
Passage ques attention dim:  torch.Size([5, 114, 8])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 51, 200])
Passage Length:  51
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 51, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 51, 11])
Passage ques attention dim:  torch.Size([5, 51, 11])
Passage question vectors dim:  torch.Size([5, 51, 200])
Question Passage Similarity dim:  torch.Size([5, 51])
Question passage attention dim:  torch.Size([5, 51])
Final Merged Passage dim:  torch.Size([5, 51, 800])
Modeled Passage dim:  torch.Size([5, 51, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 51, 1000])
Span start logits:  torch.Size([5, 51])
span start probs dim:  torch.Size([5, 51])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 51]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 14])
Passage ques attention dim:  torch.Size([5, 113, 14])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 12])
Passage ques attention dim:  torch.Size([5, 100, 12])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 31, 200])
Passage Length:  31
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 31, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 31, 14])
Passage ques attention dim:  torch.Size([5, 31, 14])
Passage question vectors dim:  torch.Size([5, 31, 200])
Question Passage Similarity dim:  torch.Size([5, 31])
Question passage attention dim:  torch.Size([5, 31])
Final Merged Passage dim:  torch.Size([5, 31, 800])
Modeled Passage dim:  torch.Size([5, 31, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 31, 1000])
Span start logits:  torch.Size([5, 31])
span start probs dim:  torch.Size([5, 31])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 31]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 230, 200])
Passage Length:  230
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 230, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 230, 19])
Passage ques attention dim:  torch.Size([5, 230, 19])
Passage question vectors dim:  torch.Size([5, 230, 200])
Question Passage Similarity dim:  torch.Size([5, 230])
Question passage attention dim:  torch.Size([5, 230])
Final Merged Passage dim:  torch.Size([5, 230, 800])
Modeled Passage dim:  torch.Size([5, 230, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 230, 1000])
Span start logits:  torch.Size([5, 230])
span start probs dim:  torch.Size([5, 230])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 230]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 16])
Passage ques attention dim:  torch.Size([5, 129, 16])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 250, 19])
Passage ques attention dim:  torch.Size([5, 250, 19])
Passage question vectors dim:  torch.Size([5, 250, 200])
Question Passage Similarity dim:  torch.Size([5, 250])
Question passage attention dim:  torch.Size([5, 250])
Final Merged Passage dim:  torch.Size([5, 250, 800])
Modeled Passage dim:  torch.Size([5, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 250, 1000])
Span start logits:  torch.Size([5, 250])
span start probs dim:  torch.Size([5, 250])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 250]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 18])
Passage ques attention dim:  torch.Size([5, 123, 18])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 11])
Passage ques attention dim:  torch.Size([5, 178, 11])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 350, 17])
Passage ques attention dim:  torch.Size([5, 350, 17])
Passage question vectors dim:  torch.Size([5, 350, 200])
Question Passage Similarity dim:  torch.Size([5, 350])
Question passage attention dim:  torch.Size([5, 350])
Final Merged Passage dim:  torch.Size([5, 350, 800])
Modeled Passage dim:  torch.Size([5, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 350, 1000])
Span start logits:  torch.Size([5, 350])
span start probs dim:  torch.Size([5, 350])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 350]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 82, 15])
Passage ques attention dim:  torch.Size([5, 82, 15])
Passage question vectors dim:  torch.Size([5, 82, 200])
Question Passage Similarity dim:  torch.Size([5, 82])
Question passage attention dim:  torch.Size([5, 82])
Final Merged Passage dim:  torch.Size([5, 82, 800])
Modeled Passage dim:  torch.Size([5, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 82, 1000])
Span start logits:  torch.Size([5, 82])
span start probs dim:  torch.Size([5, 82])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 82]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 202, 11])
Passage ques attention dim:  torch.Size([5, 202, 11])
Passage question vectors dim:  torch.Size([5, 202, 200])
Question Passage Similarity dim:  torch.Size([5, 202])
Question passage attention dim:  torch.Size([5, 202])
Final Merged Passage dim:  torch.Size([5, 202, 800])
Modeled Passage dim:  torch.Size([5, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 202, 1000])
Span start logits:  torch.Size([5, 202])
span start probs dim:  torch.Size([5, 202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 19])
Passage ques attention dim:  torch.Size([5, 123, 19])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 19])
Passage ques attention dim:  torch.Size([5, 132, 19])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 13])
Passage ques attention dim:  torch.Size([5, 106, 13])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 17])
Passage ques attention dim:  torch.Size([5, 74, 17])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 18])
Passage ques attention dim:  torch.Size([5, 114, 18])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 13])
Passage ques attention dim:  torch.Size([5, 126, 13])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 21])
Passage ques attention dim:  torch.Size([5, 258, 21])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 232, 23])
Passage ques attention dim:  torch.Size([5, 232, 23])
Passage question vectors dim:  torch.Size([5, 232, 200])
Question Passage Similarity dim:  torch.Size([5, 232])
Question passage attention dim:  torch.Size([5, 232])
Final Merged Passage dim:  torch.Size([5, 232, 800])
Modeled Passage dim:  torch.Size([5, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 232, 1000])
Span start logits:  torch.Size([5, 232])
span start probs dim:  torch.Size([5, 232])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 232]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 38, 200])
Passage Length:  38
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 38, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 38, 20])
Passage ques attention dim:  torch.Size([5, 38, 20])
Passage question vectors dim:  torch.Size([5, 38, 200])
Question Passage Similarity dim:  torch.Size([5, 38])
Question passage attention dim:  torch.Size([5, 38])
Final Merged Passage dim:  torch.Size([5, 38, 800])
Modeled Passage dim:  torch.Size([5, 38, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 38, 1000])
Span start logits:  torch.Size([5, 38])
span start probs dim:  torch.Size([5, 38])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 38]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 13])
Passage ques attention dim:  torch.Size([5, 131, 13])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 13])
Passage ques attention dim:  torch.Size([5, 163, 13])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 17])
Passage ques attention dim:  torch.Size([5, 94, 17])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 12])
Passage ques attention dim:  torch.Size([5, 151, 12])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 52, 13])
Passage ques attention dim:  torch.Size([5, 52, 13])
Passage question vectors dim:  torch.Size([5, 52, 200])
Question Passage Similarity dim:  torch.Size([5, 52])
Question passage attention dim:  torch.Size([5, 52])
Final Merged Passage dim:  torch.Size([5, 52, 800])
Modeled Passage dim:  torch.Size([5, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 52, 1000])
Span start logits:  torch.Size([5, 52])
span start probs dim:  torch.Size([5, 52])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 52]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 20])
Passage ques attention dim:  torch.Size([5, 169, 20])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 14])
Passage ques attention dim:  torch.Size([5, 131, 14])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 22])
Passage ques attention dim:  torch.Size([5, 152, 22])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 21])
Passage ques attention dim:  torch.Size([5, 154, 21])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 64, 13])
Passage ques attention dim:  torch.Size([5, 64, 13])
Passage question vectors dim:  torch.Size([5, 64, 200])
Question Passage Similarity dim:  torch.Size([5, 64])
Question passage attention dim:  torch.Size([5, 64])
Final Merged Passage dim:  torch.Size([5, 64, 800])
Modeled Passage dim:  torch.Size([5, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 64, 1000])
Span start logits:  torch.Size([5, 64])
span start probs dim:  torch.Size([5, 64])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 64]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 16])
Passage ques attention dim:  torch.Size([5, 172, 16])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 19])
Passage ques attention dim:  torch.Size([5, 197, 19])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 18])
Passage ques attention dim:  torch.Size([5, 254, 18])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 12])
Passage ques attention dim:  torch.Size([5, 102, 12])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 10])
Passage ques attention dim:  torch.Size([5, 94, 10])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 16])
Passage ques attention dim:  torch.Size([5, 144, 16])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 18])
Passage ques attention dim:  torch.Size([5, 131, 18])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 168, 12])
Passage ques attention dim:  torch.Size([5, 168, 12])
Passage question vectors dim:  torch.Size([5, 168, 200])
Question Passage Similarity dim:  torch.Size([5, 168])
Question passage attention dim:  torch.Size([5, 168])
Final Merged Passage dim:  torch.Size([5, 168, 800])
Modeled Passage dim:  torch.Size([5, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 168, 1000])
Span start logits:  torch.Size([5, 168])
span start probs dim:  torch.Size([5, 168])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 168]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 13])
Passage ques attention dim:  torch.Size([5, 162, 13])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 14])
Passage ques attention dim:  torch.Size([5, 165, 14])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 15])
Passage ques attention dim:  torch.Size([5, 119, 15])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 14])
Passage ques attention dim:  torch.Size([5, 125, 14])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 19])
Passage ques attention dim:  torch.Size([5, 150, 19])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 13])
Passage ques attention dim:  torch.Size([5, 148, 13])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 16])
Passage ques attention dim:  torch.Size([5, 163, 16])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 15])
Passage ques attention dim:  torch.Size([5, 110, 15])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 260, 200])
Passage Length:  260
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 260, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 260, 18])
Passage ques attention dim:  torch.Size([5, 260, 18])
Passage question vectors dim:  torch.Size([5, 260, 200])
Question Passage Similarity dim:  torch.Size([5, 260])
Question passage attention dim:  torch.Size([5, 260])
Final Merged Passage dim:  torch.Size([5, 260, 800])
Modeled Passage dim:  torch.Size([5, 260, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 260, 1000])
Span start logits:  torch.Size([5, 260])
span start probs dim:  torch.Size([5, 260])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 260]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 20])
Passage ques attention dim:  torch.Size([5, 101, 20])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 16])
Passage ques attention dim:  torch.Size([5, 128, 16])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 22])
Passage ques attention dim:  torch.Size([5, 176, 22])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 57, 200])
Passage Length:  57
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 57, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 57, 12])
Passage ques attention dim:  torch.Size([5, 57, 12])
Passage question vectors dim:  torch.Size([5, 57, 200])
Question Passage Similarity dim:  torch.Size([5, 57])
Question passage attention dim:  torch.Size([5, 57])
Final Merged Passage dim:  torch.Size([5, 57, 800])
Modeled Passage dim:  torch.Size([5, 57, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 57, 1000])
Span start logits:  torch.Size([5, 57])
span start probs dim:  torch.Size([5, 57])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 57]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 22])
Passage ques attention dim:  torch.Size([5, 99, 22])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 75, 13])
Passage ques attention dim:  torch.Size([5, 75, 13])
Passage question vectors dim:  torch.Size([5, 75, 200])
Question Passage Similarity dim:  torch.Size([5, 75])
Question passage attention dim:  torch.Size([5, 75])
Final Merged Passage dim:  torch.Size([5, 75, 800])
Modeled Passage dim:  torch.Size([5, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 75, 1000])
Span start logits:  torch.Size([5, 75])
span start probs dim:  torch.Size([5, 75])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 75]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 275, 200])
Passage Length:  275
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 275, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 275, 17])
Passage ques attention dim:  torch.Size([5, 275, 17])
Passage question vectors dim:  torch.Size([5, 275, 200])
Question Passage Similarity dim:  torch.Size([5, 275])
Question passage attention dim:  torch.Size([5, 275])
Final Merged Passage dim:  torch.Size([5, 275, 800])
Modeled Passage dim:  torch.Size([5, 275, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 275, 1000])
Span start logits:  torch.Size([5, 275])
span start probs dim:  torch.Size([5, 275])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 275]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 17])
Passage ques attention dim:  torch.Size([5, 192, 17])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 20])
Passage ques attention dim:  torch.Size([5, 131, 20])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 13])
Passage ques attention dim:  torch.Size([5, 169, 13])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 16])
Passage ques attention dim:  torch.Size([5, 110, 16])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 18])
Passage ques attention dim:  torch.Size([5, 100, 18])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 13])
Passage ques attention dim:  torch.Size([5, 183, 13])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 20])
Passage ques attention dim:  torch.Size([5, 100, 20])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 22])
Passage ques attention dim:  torch.Size([5, 125, 22])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 14])
Passage ques attention dim:  torch.Size([5, 182, 14])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 16])
Passage ques attention dim:  torch.Size([5, 99, 16])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 16])
Passage ques attention dim:  torch.Size([5, 109, 16])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 17])
Passage ques attention dim:  torch.Size([5, 165, 17])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 15])
Passage ques attention dim:  torch.Size([5, 133, 15])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 11])
Passage ques attention dim:  torch.Size([5, 105, 11])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 18])
Passage ques attention dim:  torch.Size([5, 133, 18])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 13])
Passage ques attention dim:  torch.Size([5, 144, 13])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 19])
Passage ques attention dim:  torch.Size([5, 100, 19])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 67, 17])
Passage ques attention dim:  torch.Size([5, 67, 17])
Passage question vectors dim:  torch.Size([5, 67, 200])
Question Passage Similarity dim:  torch.Size([5, 67])
Question passage attention dim:  torch.Size([5, 67])
Final Merged Passage dim:  torch.Size([5, 67, 800])
Modeled Passage dim:  torch.Size([5, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 67, 1000])
Span start logits:  torch.Size([5, 67])
span start probs dim:  torch.Size([5, 67])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 67]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 15])
Passage ques attention dim:  torch.Size([5, 130, 15])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 15])
Passage ques attention dim:  torch.Size([5, 112, 15])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 16])
Passage ques attention dim:  torch.Size([5, 136, 16])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 201, 200])
Passage Length:  201
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 201, 23])
Passage ques attention dim:  torch.Size([5, 201, 23])
Passage question vectors dim:  torch.Size([5, 201, 200])
Question Passage Similarity dim:  torch.Size([5, 201])
Question passage attention dim:  torch.Size([5, 201])
Final Merged Passage dim:  torch.Size([5, 201, 800])
Modeled Passage dim:  torch.Size([5, 201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 201, 1000])
Span start logits:  torch.Size([5, 201])
span start probs dim:  torch.Size([5, 201])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 201]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 80, 200])
Passage Length:  80
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 80, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 80, 16])
Passage ques attention dim:  torch.Size([5, 80, 16])
Passage question vectors dim:  torch.Size([5, 80, 200])
Question Passage Similarity dim:  torch.Size([5, 80])
Question passage attention dim:  torch.Size([5, 80])
Final Merged Passage dim:  torch.Size([5, 80, 800])
Modeled Passage dim:  torch.Size([5, 80, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 80, 1000])
Span start logits:  torch.Size([5, 80])
span start probs dim:  torch.Size([5, 80])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 80]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 20])
Passage ques attention dim:  torch.Size([5, 160, 20])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 13])
Passage ques attention dim:  torch.Size([5, 101, 13])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 13])
Passage ques attention dim:  torch.Size([5, 193, 13])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 13])
Passage ques attention dim:  torch.Size([5, 177, 13])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 15])
Passage ques attention dim:  torch.Size([5, 175, 15])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 243, 12])
Passage ques attention dim:  torch.Size([5, 243, 12])
Passage question vectors dim:  torch.Size([5, 243, 200])
Question Passage Similarity dim:  torch.Size([5, 243])
Question passage attention dim:  torch.Size([5, 243])
Final Merged Passage dim:  torch.Size([5, 243, 800])
Modeled Passage dim:  torch.Size([5, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 243, 1000])
Span start logits:  torch.Size([5, 243])
span start probs dim:  torch.Size([5, 243])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 243]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 19])
Passage ques attention dim:  torch.Size([5, 118, 19])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 239, 200])
Passage Length:  239
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 239, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 239, 14])
Passage ques attention dim:  torch.Size([5, 239, 14])
Passage question vectors dim:  torch.Size([5, 239, 200])
Question Passage Similarity dim:  torch.Size([5, 239])
Question passage attention dim:  torch.Size([5, 239])
Final Merged Passage dim:  torch.Size([5, 239, 800])
Modeled Passage dim:  torch.Size([5, 239, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 239, 1000])
Span start logits:  torch.Size([5, 239])
span start probs dim:  torch.Size([5, 239])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 239]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 25])
Passage ques attention dim:  torch.Size([5, 99, 25])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 20])
Passage ques attention dim:  torch.Size([5, 125, 20])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 20])
Passage ques attention dim:  torch.Size([5, 130, 20])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 15])
Passage ques attention dim:  torch.Size([5, 159, 15])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 49, 200])
Passage Length:  49
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 49, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 49, 12])
Passage ques attention dim:  torch.Size([5, 49, 12])
Passage question vectors dim:  torch.Size([5, 49, 200])
Question Passage Similarity dim:  torch.Size([5, 49])
Question passage attention dim:  torch.Size([5, 49])
Final Merged Passage dim:  torch.Size([5, 49, 800])
Modeled Passage dim:  torch.Size([5, 49, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 49, 1000])
Span start logits:  torch.Size([5, 49])
span start probs dim:  torch.Size([5, 49])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 49]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 16])
Passage ques attention dim:  torch.Size([5, 74, 16])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 39, 200])
Passage Length:  39
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 39, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 39, 12])
Passage ques attention dim:  torch.Size([5, 39, 12])
Passage question vectors dim:  torch.Size([5, 39, 200])
Question Passage Similarity dim:  torch.Size([5, 39])
Question passage attention dim:  torch.Size([5, 39])
Final Merged Passage dim:  torch.Size([5, 39, 800])
Modeled Passage dim:  torch.Size([5, 39, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 39, 1000])
Span start logits:  torch.Size([5, 39])
span start probs dim:  torch.Size([5, 39])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 39]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 15])
Passage ques attention dim:  torch.Size([5, 158, 15])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 241, 200])
Passage Length:  241
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 241, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 241, 13])
Passage ques attention dim:  torch.Size([5, 241, 13])
Passage question vectors dim:  torch.Size([5, 241, 200])
Question Passage Similarity dim:  torch.Size([5, 241])
Question passage attention dim:  torch.Size([5, 241])
Final Merged Passage dim:  torch.Size([5, 241, 800])
Modeled Passage dim:  torch.Size([5, 241, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 241, 1000])
Span start logits:  torch.Size([5, 241])
span start probs dim:  torch.Size([5, 241])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 241]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 15])
Passage ques attention dim:  torch.Size([5, 128, 15])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 13])
Passage ques attention dim:  torch.Size([5, 130, 13])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 15])
Passage ques attention dim:  torch.Size([5, 107, 15])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 16])
Passage ques attention dim:  torch.Size([5, 169, 16])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 21])
Passage ques attention dim:  torch.Size([5, 153, 21])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 20])
Passage ques attention dim:  torch.Size([5, 148, 20])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 15])
Passage ques attention dim:  torch.Size([5, 119, 15])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 78, 200])
Passage Length:  78
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 78, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 78, 14])
Passage ques attention dim:  torch.Size([5, 78, 14])
Passage question vectors dim:  torch.Size([5, 78, 200])
Question Passage Similarity dim:  torch.Size([5, 78])
Question passage attention dim:  torch.Size([5, 78])
Final Merged Passage dim:  torch.Size([5, 78, 800])
Modeled Passage dim:  torch.Size([5, 78, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 78, 1000])
Span start logits:  torch.Size([5, 78])
span start probs dim:  torch.Size([5, 78])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 78]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 14])
Passage ques attention dim:  torch.Size([5, 135, 14])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 170, 19])
Passage ques attention dim:  torch.Size([5, 170, 19])
Passage question vectors dim:  torch.Size([5, 170, 200])
Question Passage Similarity dim:  torch.Size([5, 170])
Question passage attention dim:  torch.Size([5, 170])
Final Merged Passage dim:  torch.Size([5, 170, 800])
Modeled Passage dim:  torch.Size([5, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 170, 1000])
Span start logits:  torch.Size([5, 170])
span start probs dim:  torch.Size([5, 170])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 170]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 15])
Passage ques attention dim:  torch.Size([5, 106, 15])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 25])
Passage ques attention dim:  torch.Size([5, 174, 25])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 14])
Passage ques attention dim:  torch.Size([5, 146, 14])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 16])
Passage ques attention dim:  torch.Size([5, 179, 16])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 20])
Passage ques attention dim:  torch.Size([5, 149, 20])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 60, 200])
Passage Length:  60
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 60, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 60, 10])
Passage ques attention dim:  torch.Size([5, 60, 10])
Passage question vectors dim:  torch.Size([5, 60, 200])
Question Passage Similarity dim:  torch.Size([5, 60])
Question passage attention dim:  torch.Size([5, 60])
Final Merged Passage dim:  torch.Size([5, 60, 800])
Modeled Passage dim:  torch.Size([5, 60, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 60, 1000])
Span start logits:  torch.Size([5, 60])
span start probs dim:  torch.Size([5, 60])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 60]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 11])
Passage ques attention dim:  torch.Size([5, 99, 11])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 15])
Passage ques attention dim:  torch.Size([5, 125, 15])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 17])
Passage ques attention dim:  torch.Size([5, 154, 17])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 19])
Passage ques attention dim:  torch.Size([5, 92, 19])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 68, 200])
Passage Length:  68
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 68, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 68, 12])
Passage ques attention dim:  torch.Size([5, 68, 12])
Passage question vectors dim:  torch.Size([5, 68, 200])
Question Passage Similarity dim:  torch.Size([5, 68])
Question passage attention dim:  torch.Size([5, 68])
Final Merged Passage dim:  torch.Size([5, 68, 800])
Modeled Passage dim:  torch.Size([5, 68, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 68, 1000])
Span start logits:  torch.Size([5, 68])
span start probs dim:  torch.Size([5, 68])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 68]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 19])
Passage ques attention dim:  torch.Size([5, 95, 19])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 13])
Passage ques attention dim:  torch.Size([5, 74, 13])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 14])
Passage ques attention dim:  torch.Size([5, 136, 14])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 12])
Passage ques attention dim:  torch.Size([5, 169, 12])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 21])
Passage ques attention dim:  torch.Size([5, 222, 21])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 206, 17])
Passage ques attention dim:  torch.Size([5, 206, 17])
Passage question vectors dim:  torch.Size([5, 206, 200])
Question Passage Similarity dim:  torch.Size([5, 206])
Question passage attention dim:  torch.Size([5, 206])
Final Merged Passage dim:  torch.Size([5, 206, 800])
Modeled Passage dim:  torch.Size([5, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 206, 1000])
Span start logits:  torch.Size([5, 206])
span start probs dim:  torch.Size([5, 206])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 206]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 20])
Passage ques attention dim:  torch.Size([5, 178, 20])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 15])
Passage ques attention dim:  torch.Size([5, 131, 15])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 16])
Passage ques attention dim:  torch.Size([5, 156, 16])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 346, 200])
Passage Length:  346
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 346, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 346, 12])
Passage ques attention dim:  torch.Size([5, 346, 12])
Passage question vectors dim:  torch.Size([5, 346, 200])
Question Passage Similarity dim:  torch.Size([5, 346])
Question passage attention dim:  torch.Size([5, 346])
Final Merged Passage dim:  torch.Size([5, 346, 800])
Modeled Passage dim:  torch.Size([5, 346, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 346, 1000])
Span start logits:  torch.Size([5, 346])
span start probs dim:  torch.Size([5, 346])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 346]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 52, 10])
Passage ques attention dim:  torch.Size([5, 52, 10])
Passage question vectors dim:  torch.Size([5, 52, 200])
Question Passage Similarity dim:  torch.Size([5, 52])
Question passage attention dim:  torch.Size([5, 52])
Final Merged Passage dim:  torch.Size([5, 52, 800])
Modeled Passage dim:  torch.Size([5, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 52, 1000])
Span start logits:  torch.Size([5, 52])
span start probs dim:  torch.Size([5, 52])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 52]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 18])
Passage ques attention dim:  torch.Size([5, 123, 18])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 215, 15])
Passage ques attention dim:  torch.Size([5, 215, 15])
Passage question vectors dim:  torch.Size([5, 215, 200])
Question Passage Similarity dim:  torch.Size([5, 215])
Question passage attention dim:  torch.Size([5, 215])
Final Merged Passage dim:  torch.Size([5, 215, 800])
Modeled Passage dim:  torch.Size([5, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 215, 1000])
Span start logits:  torch.Size([5, 215])
span start probs dim:  torch.Size([5, 215])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 215]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 19])
Passage ques attention dim:  torch.Size([5, 74, 19])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 12])
Passage ques attention dim:  torch.Size([5, 116, 12])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 12])
Passage ques attention dim:  torch.Size([5, 108, 12])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 17])
Passage ques attention dim:  torch.Size([5, 139, 17])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 15])
Passage ques attention dim:  torch.Size([5, 161, 15])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 14])
Passage ques attention dim:  torch.Size([5, 145, 14])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 16])
Passage ques attention dim:  torch.Size([5, 143, 16])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 214, 200])
Passage Length:  214
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 214, 16])
Passage ques attention dim:  torch.Size([5, 214, 16])
Passage question vectors dim:  torch.Size([5, 214, 200])
Question Passage Similarity dim:  torch.Size([5, 214])
Question passage attention dim:  torch.Size([5, 214])
Final Merged Passage dim:  torch.Size([5, 214, 800])
Modeled Passage dim:  torch.Size([5, 214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 214, 1000])
Span start logits:  torch.Size([5, 214])
span start probs dim:  torch.Size([5, 214])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 214]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 16])
Passage ques attention dim:  torch.Size([5, 113, 16])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 23])
Passage ques attention dim:  torch.Size([5, 116, 23])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 21])
Passage ques attention dim:  torch.Size([5, 175, 21])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 15])
Passage ques attention dim:  torch.Size([5, 145, 15])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 286, 200])
Passage Length:  286
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 286, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 286, 16])
Passage ques attention dim:  torch.Size([5, 286, 16])
Passage question vectors dim:  torch.Size([5, 286, 200])
Question Passage Similarity dim:  torch.Size([5, 286])
Question passage attention dim:  torch.Size([5, 286])
Final Merged Passage dim:  torch.Size([5, 286, 800])
Modeled Passage dim:  torch.Size([5, 286, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 286, 1000])
Span start logits:  torch.Size([5, 286])
span start probs dim:  torch.Size([5, 286])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 286]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 214, 200])
Passage Length:  214
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 214, 15])
Passage ques attention dim:  torch.Size([5, 214, 15])
Passage question vectors dim:  torch.Size([5, 214, 200])
Question Passage Similarity dim:  torch.Size([5, 214])
Question passage attention dim:  torch.Size([5, 214])
Final Merged Passage dim:  torch.Size([5, 214, 800])
Modeled Passage dim:  torch.Size([5, 214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 214, 1000])
Span start logits:  torch.Size([5, 214])
span start probs dim:  torch.Size([5, 214])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 214]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 259, 16])
Passage ques attention dim:  torch.Size([5, 259, 16])
Passage question vectors dim:  torch.Size([5, 259, 200])
Question Passage Similarity dim:  torch.Size([5, 259])
Question passage attention dim:  torch.Size([5, 259])
Final Merged Passage dim:  torch.Size([5, 259, 800])
Modeled Passage dim:  torch.Size([5, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 259, 1000])
Span start logits:  torch.Size([5, 259])
span start probs dim:  torch.Size([5, 259])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 259]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 13])
Passage ques attention dim:  torch.Size([5, 147, 13])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 17])
Passage ques attention dim:  torch.Size([5, 190, 17])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 15])
Passage ques attention dim:  torch.Size([5, 234, 15])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 12])
Passage ques attention dim:  torch.Size([5, 381, 12])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 67, 18])
Passage ques attention dim:  torch.Size([5, 67, 18])
Passage question vectors dim:  torch.Size([5, 67, 200])
Question Passage Similarity dim:  torch.Size([5, 67])
Question passage attention dim:  torch.Size([5, 67])
Final Merged Passage dim:  torch.Size([5, 67, 800])
Modeled Passage dim:  torch.Size([5, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 67, 1000])
Span start logits:  torch.Size([5, 67])
span start probs dim:  torch.Size([5, 67])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 67]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 16])
Passage ques attention dim:  torch.Size([5, 74, 16])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 84, 19])
Passage ques attention dim:  torch.Size([5, 84, 19])
Passage question vectors dim:  torch.Size([5, 84, 200])
Question Passage Similarity dim:  torch.Size([5, 84])
Question passage attention dim:  torch.Size([5, 84])
Final Merged Passage dim:  torch.Size([5, 84, 800])
Modeled Passage dim:  torch.Size([5, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 84, 1000])
Span start logits:  torch.Size([5, 84])
span start probs dim:  torch.Size([5, 84])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 84]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 33, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 33, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 33])
Passage ques attention dim:  torch.Size([5, 190, 33])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 12])
Passage ques attention dim:  torch.Size([5, 111, 12])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 82, 15])
Passage ques attention dim:  torch.Size([5, 82, 15])
Passage question vectors dim:  torch.Size([5, 82, 200])
Question Passage Similarity dim:  torch.Size([5, 82])
Question passage attention dim:  torch.Size([5, 82])
Final Merged Passage dim:  torch.Size([5, 82, 800])
Modeled Passage dim:  torch.Size([5, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 82, 1000])
Span start logits:  torch.Size([5, 82])
span start probs dim:  torch.Size([5, 82])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 82]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 13])
Passage ques attention dim:  torch.Size([5, 147, 13])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 16])
Passage ques attention dim:  torch.Size([5, 114, 16])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 19])
Passage ques attention dim:  torch.Size([5, 138, 19])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 18])
Passage ques attention dim:  torch.Size([5, 106, 18])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 239, 200])
Passage Length:  239
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 239, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 239, 9])
Passage ques attention dim:  torch.Size([5, 239, 9])
Passage question vectors dim:  torch.Size([5, 239, 200])
Question Passage Similarity dim:  torch.Size([5, 239])
Question passage attention dim:  torch.Size([5, 239])
Final Merged Passage dim:  torch.Size([5, 239, 800])
Modeled Passage dim:  torch.Size([5, 239, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 239, 1000])
Span start logits:  torch.Size([5, 239])
span start probs dim:  torch.Size([5, 239])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 239]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 22])
Passage ques attention dim:  torch.Size([5, 192, 22])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 17])
Passage ques attention dim:  torch.Size([5, 109, 17])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 19])
Passage ques attention dim:  torch.Size([5, 117, 19])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 16])
Passage ques attention dim:  torch.Size([5, 156, 16])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 23])
Passage ques attention dim:  torch.Size([5, 180, 23])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 14])
Passage ques attention dim:  torch.Size([5, 116, 14])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 13])
Passage ques attention dim:  torch.Size([5, 111, 13])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 17])
Passage ques attention dim:  torch.Size([5, 112, 17])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 15])
Passage ques attention dim:  torch.Size([5, 164, 15])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 93, 12])
Passage ques attention dim:  torch.Size([5, 93, 12])
Passage question vectors dim:  torch.Size([5, 93, 200])
Question Passage Similarity dim:  torch.Size([5, 93])
Question passage attention dim:  torch.Size([5, 93])
Final Merged Passage dim:  torch.Size([5, 93, 800])
Modeled Passage dim:  torch.Size([5, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 93, 1000])
Span start logits:  torch.Size([5, 93])
span start probs dim:  torch.Size([5, 93])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 93]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 13])
Passage ques attention dim:  torch.Size([5, 125, 13])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 41, 200])
Passage Length:  41
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 41, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 41, 14])
Passage ques attention dim:  torch.Size([5, 41, 14])
Passage question vectors dim:  torch.Size([5, 41, 200])
Question Passage Similarity dim:  torch.Size([5, 41])
Question passage attention dim:  torch.Size([5, 41])
Final Merged Passage dim:  torch.Size([5, 41, 800])
Modeled Passage dim:  torch.Size([5, 41, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 41, 1000])
Span start logits:  torch.Size([5, 41])
span start probs dim:  torch.Size([5, 41])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 41]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 90, 13])
Passage ques attention dim:  torch.Size([5, 90, 13])
Passage question vectors dim:  torch.Size([5, 90, 200])
Question Passage Similarity dim:  torch.Size([5, 90])
Question passage attention dim:  torch.Size([5, 90])
Final Merged Passage dim:  torch.Size([5, 90, 800])
Modeled Passage dim:  torch.Size([5, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 90, 1000])
Span start logits:  torch.Size([5, 90])
span start probs dim:  torch.Size([5, 90])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 90]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 12])
Passage ques attention dim:  torch.Size([5, 111, 12])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 15])
Passage ques attention dim:  torch.Size([5, 136, 15])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 17])
Passage ques attention dim:  torch.Size([5, 125, 17])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 18])
Passage ques attention dim:  torch.Size([5, 190, 18])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 18])
Passage ques attention dim:  torch.Size([5, 107, 18])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 14])
Passage ques attention dim:  torch.Size([5, 143, 14])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 39, 200])
Passage Length:  39
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 39, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 39, 14])
Passage ques attention dim:  torch.Size([5, 39, 14])
Passage question vectors dim:  torch.Size([5, 39, 200])
Question Passage Similarity dim:  torch.Size([5, 39])
Question passage attention dim:  torch.Size([5, 39])
Final Merged Passage dim:  torch.Size([5, 39, 800])
Modeled Passage dim:  torch.Size([5, 39, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 39, 1000])
Span start logits:  torch.Size([5, 39])
span start probs dim:  torch.Size([5, 39])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 39]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 32, 200])
Passage Length:  32
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 32, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 32, 21])
Passage ques attention dim:  torch.Size([5, 32, 21])
Passage question vectors dim:  torch.Size([5, 32, 200])
Question Passage Similarity dim:  torch.Size([5, 32])
Question passage attention dim:  torch.Size([5, 32])
Final Merged Passage dim:  torch.Size([5, 32, 800])
Modeled Passage dim:  torch.Size([5, 32, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 32, 1000])
Span start logits:  torch.Size([5, 32])
span start probs dim:  torch.Size([5, 32])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 32]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 16])
Passage ques attention dim:  torch.Size([5, 127, 16])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 11])
Passage ques attention dim:  torch.Size([5, 95, 11])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 17])
Passage ques attention dim:  torch.Size([5, 121, 17])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 75, 21])
Passage ques attention dim:  torch.Size([5, 75, 21])
Passage question vectors dim:  torch.Size([5, 75, 200])
Question Passage Similarity dim:  torch.Size([5, 75])
Question passage attention dim:  torch.Size([5, 75])
Final Merged Passage dim:  torch.Size([5, 75, 800])
Modeled Passage dim:  torch.Size([5, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 75, 1000])
Span start logits:  torch.Size([5, 75])
span start probs dim:  torch.Size([5, 75])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 75]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 12])
Passage ques attention dim:  torch.Size([5, 152, 12])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 17])
Passage ques attention dim:  torch.Size([5, 156, 17])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 19])
Passage ques attention dim:  torch.Size([5, 108, 19])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 15])
Passage ques attention dim:  torch.Size([5, 125, 15])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 10])
Passage ques attention dim:  torch.Size([5, 139, 10])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 15])
Passage ques attention dim:  torch.Size([5, 139, 15])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 12])
Passage ques attention dim:  torch.Size([5, 74, 12])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 15])
Passage ques attention dim:  torch.Size([5, 273, 15])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 18])
Passage ques attention dim:  torch.Size([5, 192, 18])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 15])
Passage ques attention dim:  torch.Size([5, 205, 15])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 13])
Passage ques attention dim:  torch.Size([5, 176, 13])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 16])
Passage ques attention dim:  torch.Size([5, 182, 16])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 257, 200])
Passage Length:  257
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 257, 13])
Passage ques attention dim:  torch.Size([5, 257, 13])
Passage question vectors dim:  torch.Size([5, 257, 200])
Question Passage Similarity dim:  torch.Size([5, 257])
Question passage attention dim:  torch.Size([5, 257])
Final Merged Passage dim:  torch.Size([5, 257, 800])
Modeled Passage dim:  torch.Size([5, 257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 257, 1000])
Span start logits:  torch.Size([5, 257])
span start probs dim:  torch.Size([5, 257])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 257]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 24])
Passage ques attention dim:  torch.Size([5, 118, 24])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 13])
Passage ques attention dim:  torch.Size([5, 149, 13])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 292, 200])
Passage Length:  292
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 292, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 292, 14])
Passage ques attention dim:  torch.Size([5, 292, 14])
Passage question vectors dim:  torch.Size([5, 292, 200])
Question Passage Similarity dim:  torch.Size([5, 292])
Question passage attention dim:  torch.Size([5, 292])
Final Merged Passage dim:  torch.Size([5, 292, 800])
Modeled Passage dim:  torch.Size([5, 292, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 292, 1000])
Span start logits:  torch.Size([5, 292])
span start probs dim:  torch.Size([5, 292])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 292]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 20])
Passage ques attention dim:  torch.Size([5, 96, 20])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 14])
Passage ques attention dim:  torch.Size([5, 107, 14])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 16])
Passage ques attention dim:  torch.Size([5, 222, 16])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 297, 15])
Passage ques attention dim:  torch.Size([5, 297, 15])
Passage question vectors dim:  torch.Size([5, 297, 200])
Question Passage Similarity dim:  torch.Size([5, 297])
Question passage attention dim:  torch.Size([5, 297])
Final Merged Passage dim:  torch.Size([5, 297, 800])
Modeled Passage dim:  torch.Size([5, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 297, 1000])
Span start logits:  torch.Size([5, 297])
span start probs dim:  torch.Size([5, 297])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 297]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 19])
Passage ques attention dim:  torch.Size([5, 122, 19])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 27, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 27, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 27])
Passage ques attention dim:  torch.Size([5, 151, 27])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 73, 19])
Passage ques attention dim:  torch.Size([5, 73, 19])
Passage question vectors dim:  torch.Size([5, 73, 200])
Question Passage Similarity dim:  torch.Size([5, 73])
Question passage attention dim:  torch.Size([5, 73])
Final Merged Passage dim:  torch.Size([5, 73, 800])
Modeled Passage dim:  torch.Size([5, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 73, 1000])
Span start logits:  torch.Size([5, 73])
span start probs dim:  torch.Size([5, 73])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 73]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 52, 16])
Passage ques attention dim:  torch.Size([5, 52, 16])
Passage question vectors dim:  torch.Size([5, 52, 200])
Question Passage Similarity dim:  torch.Size([5, 52])
Question passage attention dim:  torch.Size([5, 52])
Final Merged Passage dim:  torch.Size([5, 52, 800])
Modeled Passage dim:  torch.Size([5, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 52, 1000])
Span start logits:  torch.Size([5, 52])
span start probs dim:  torch.Size([5, 52])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 52]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 15])
Passage ques attention dim:  torch.Size([5, 222, 15])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 17])
Passage ques attention dim:  torch.Size([5, 130, 17])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 20])
Passage ques attention dim:  torch.Size([5, 133, 20])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 17])
Passage ques attention dim:  torch.Size([5, 139, 17])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 15])
Passage ques attention dim:  torch.Size([5, 107, 15])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 11])
Passage ques attention dim:  torch.Size([5, 163, 11])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 218, 14])
Passage ques attention dim:  torch.Size([5, 218, 14])
Passage question vectors dim:  torch.Size([5, 218, 200])
Question Passage Similarity dim:  torch.Size([5, 218])
Question passage attention dim:  torch.Size([5, 218])
Final Merged Passage dim:  torch.Size([5, 218, 800])
Modeled Passage dim:  torch.Size([5, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 218, 1000])
Span start logits:  torch.Size([5, 218])
span start probs dim:  torch.Size([5, 218])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 218]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 17])
Passage ques attention dim:  torch.Size([5, 150, 17])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 15])
Passage ques attention dim:  torch.Size([5, 171, 15])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 17])
Passage ques attention dim:  torch.Size([5, 112, 17])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 11])
Passage ques attention dim:  torch.Size([5, 116, 11])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 12])
Passage ques attention dim:  torch.Size([5, 205, 12])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 16])
Passage ques attention dim:  torch.Size([5, 129, 16])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 16])
Passage ques attention dim:  torch.Size([5, 182, 16])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 38, 200])
Passage Length:  38
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 38, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 38, 15])
Passage ques attention dim:  torch.Size([5, 38, 15])
Passage question vectors dim:  torch.Size([5, 38, 200])
Question Passage Similarity dim:  torch.Size([5, 38])
Question passage attention dim:  torch.Size([5, 38])
Final Merged Passage dim:  torch.Size([5, 38, 800])
Modeled Passage dim:  torch.Size([5, 38, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 38, 1000])
Span start logits:  torch.Size([5, 38])
span start probs dim:  torch.Size([5, 38])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 38]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 14])
Passage ques attention dim:  torch.Size([5, 115, 14])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 18])
Passage ques attention dim:  torch.Size([5, 161, 18])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 15])
Passage ques attention dim:  torch.Size([5, 116, 15])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 15])
Passage ques attention dim:  torch.Size([5, 273, 15])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 16])
Passage ques attention dim:  torch.Size([5, 127, 16])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 166, 13])
Passage ques attention dim:  torch.Size([5, 166, 13])
Passage question vectors dim:  torch.Size([5, 166, 200])
Question Passage Similarity dim:  torch.Size([5, 166])
Question passage attention dim:  torch.Size([5, 166])
Final Merged Passage dim:  torch.Size([5, 166, 800])
Modeled Passage dim:  torch.Size([5, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 166, 1000])
Span start logits:  torch.Size([5, 166])
span start probs dim:  torch.Size([5, 166])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 166]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 86, 14])
Passage ques attention dim:  torch.Size([5, 86, 14])
Passage question vectors dim:  torch.Size([5, 86, 200])
Question Passage Similarity dim:  torch.Size([5, 86])
Question passage attention dim:  torch.Size([5, 86])
Final Merged Passage dim:  torch.Size([5, 86, 800])
Modeled Passage dim:  torch.Size([5, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 86, 1000])
Span start logits:  torch.Size([5, 86])
span start probs dim:  torch.Size([5, 86])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 86]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 19])
Passage ques attention dim:  torch.Size([5, 156, 19])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 12])
Passage ques attention dim:  torch.Size([5, 97, 12])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 16])
Passage ques attention dim:  torch.Size([5, 137, 16])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 18])
Passage ques attention dim:  torch.Size([5, 165, 18])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 20])
Passage ques attention dim:  torch.Size([5, 102, 20])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 73, 17])
Passage ques attention dim:  torch.Size([5, 73, 17])
Passage question vectors dim:  torch.Size([5, 73, 200])
Question Passage Similarity dim:  torch.Size([5, 73])
Question passage attention dim:  torch.Size([5, 73])
Final Merged Passage dim:  torch.Size([5, 73, 800])
Modeled Passage dim:  torch.Size([5, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 73, 1000])
Span start logits:  torch.Size([5, 73])
span start probs dim:  torch.Size([5, 73])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 73]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 14])
Passage ques attention dim:  torch.Size([5, 158, 14])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 12])
Passage ques attention dim:  torch.Size([5, 122, 12])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 323, 19])
Passage ques attention dim:  torch.Size([5, 323, 19])
Passage question vectors dim:  torch.Size([5, 323, 200])
Question Passage Similarity dim:  torch.Size([5, 323])
Question passage attention dim:  torch.Size([5, 323])
Final Merged Passage dim:  torch.Size([5, 323, 800])
Modeled Passage dim:  torch.Size([5, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 323, 1000])
Span start logits:  torch.Size([5, 323])
span start probs dim:  torch.Size([5, 323])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 323]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 16])
Passage ques attention dim:  torch.Size([5, 234, 16])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 15])
Passage ques attention dim:  torch.Size([5, 173, 15])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 12])
Passage ques attention dim:  torch.Size([5, 190, 12])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 196, 12])
Passage ques attention dim:  torch.Size([5, 196, 12])
Passage question vectors dim:  torch.Size([5, 196, 200])
Question Passage Similarity dim:  torch.Size([5, 196])
Question passage attention dim:  torch.Size([5, 196])
Final Merged Passage dim:  torch.Size([5, 196, 800])
Modeled Passage dim:  torch.Size([5, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 196, 1000])
Span start logits:  torch.Size([5, 196])
span start probs dim:  torch.Size([5, 196])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 196]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 16])
Passage ques attention dim:  torch.Size([5, 140, 16])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 84, 14])
Passage ques attention dim:  torch.Size([5, 84, 14])
Passage question vectors dim:  torch.Size([5, 84, 200])
Question Passage Similarity dim:  torch.Size([5, 84])
Question passage attention dim:  torch.Size([5, 84])
Final Merged Passage dim:  torch.Size([5, 84, 800])
Modeled Passage dim:  torch.Size([5, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 84, 1000])
Span start logits:  torch.Size([5, 84])
span start probs dim:  torch.Size([5, 84])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 84]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 11])
Passage ques attention dim:  torch.Size([5, 114, 11])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 31, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 31, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 31])
Passage ques attention dim:  torch.Size([5, 158, 31])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 16])
Passage ques attention dim:  torch.Size([5, 97, 16])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 14])
Passage ques attention dim:  torch.Size([5, 115, 14])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 228, 18])
Passage ques attention dim:  torch.Size([5, 228, 18])
Passage question vectors dim:  torch.Size([5, 228, 200])
Question Passage Similarity dim:  torch.Size([5, 228])
Question passage attention dim:  torch.Size([5, 228])
Final Merged Passage dim:  torch.Size([5, 228, 800])
Modeled Passage dim:  torch.Size([5, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 228, 1000])
Span start logits:  torch.Size([5, 228])
span start probs dim:  torch.Size([5, 228])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 228]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 16])
Passage ques attention dim:  torch.Size([5, 173, 16])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 269, 200])
Passage Length:  269
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 269, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 269, 15])
Passage ques attention dim:  torch.Size([5, 269, 15])
Passage question vectors dim:  torch.Size([5, 269, 200])
Question Passage Similarity dim:  torch.Size([5, 269])
Question passage attention dim:  torch.Size([5, 269])
Final Merged Passage dim:  torch.Size([5, 269, 800])
Modeled Passage dim:  torch.Size([5, 269, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 269, 1000])
Span start logits:  torch.Size([5, 269])
span start probs dim:  torch.Size([5, 269])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 269]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 12])
Passage ques attention dim:  torch.Size([5, 126, 12])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 18])
Passage ques attention dim:  torch.Size([5, 124, 18])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 18])
Passage ques attention dim:  torch.Size([5, 95, 18])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 43, 200])
Passage Length:  43
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 43, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 43, 12])
Passage ques attention dim:  torch.Size([5, 43, 12])
Passage question vectors dim:  torch.Size([5, 43, 200])
Question Passage Similarity dim:  torch.Size([5, 43])
Question passage attention dim:  torch.Size([5, 43])
Final Merged Passage dim:  torch.Size([5, 43, 800])
Modeled Passage dim:  torch.Size([5, 43, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 43, 1000])
Span start logits:  torch.Size([5, 43])
span start probs dim:  torch.Size([5, 43])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 43]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 13])
Passage ques attention dim:  torch.Size([5, 130, 13])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 97, 19])
Passage ques attention dim:  torch.Size([5, 97, 19])
Passage question vectors dim:  torch.Size([5, 97, 200])
Question Passage Similarity dim:  torch.Size([5, 97])
Question passage attention dim:  torch.Size([5, 97])
Final Merged Passage dim:  torch.Size([5, 97, 800])
Modeled Passage dim:  torch.Size([5, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 97, 1000])
Span start logits:  torch.Size([5, 97])
span start probs dim:  torch.Size([5, 97])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 97]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 14])
Passage ques attention dim:  torch.Size([5, 120, 14])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 202, 14])
Passage ques attention dim:  torch.Size([5, 202, 14])
Passage question vectors dim:  torch.Size([5, 202, 200])
Question Passage Similarity dim:  torch.Size([5, 202])
Question passage attention dim:  torch.Size([5, 202])
Final Merged Passage dim:  torch.Size([5, 202, 800])
Modeled Passage dim:  torch.Size([5, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 202, 1000])
Span start logits:  torch.Size([5, 202])
span start probs dim:  torch.Size([5, 202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 12])
Passage ques attention dim:  torch.Size([5, 190, 12])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 217, 26])
Passage ques attention dim:  torch.Size([5, 217, 26])
Passage question vectors dim:  torch.Size([5, 217, 200])
Question Passage Similarity dim:  torch.Size([5, 217])
Question passage attention dim:  torch.Size([5, 217])
Final Merged Passage dim:  torch.Size([5, 217, 800])
Modeled Passage dim:  torch.Size([5, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 217, 1000])
Span start logits:  torch.Size([5, 217])
span start probs dim:  torch.Size([5, 217])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 217]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 17])
Passage ques attention dim:  torch.Size([5, 138, 17])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 15])
Passage ques attention dim:  torch.Size([5, 129, 15])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 230, 200])
Passage Length:  230
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 230, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 230, 11])
Passage ques attention dim:  torch.Size([5, 230, 11])
Passage question vectors dim:  torch.Size([5, 230, 200])
Question Passage Similarity dim:  torch.Size([5, 230])
Question passage attention dim:  torch.Size([5, 230])
Final Merged Passage dim:  torch.Size([5, 230, 800])
Modeled Passage dim:  torch.Size([5, 230, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 230, 1000])
Span start logits:  torch.Size([5, 230])
span start probs dim:  torch.Size([5, 230])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 230]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 14])
Passage ques attention dim:  torch.Size([5, 147, 14])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 13])
Passage ques attention dim:  torch.Size([5, 128, 13])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 206, 18])
Passage ques attention dim:  torch.Size([5, 206, 18])
Passage question vectors dim:  torch.Size([5, 206, 200])
Question Passage Similarity dim:  torch.Size([5, 206])
Question passage attention dim:  torch.Size([5, 206])
Final Merged Passage dim:  torch.Size([5, 206, 800])
Modeled Passage dim:  torch.Size([5, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 206, 1000])
Span start logits:  torch.Size([5, 206])
span start probs dim:  torch.Size([5, 206])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 206]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 16])
Passage ques attention dim:  torch.Size([5, 195, 16])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 17])
Passage ques attention dim:  torch.Size([5, 107, 17])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 14])
Passage ques attention dim:  torch.Size([5, 109, 14])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 15])
Passage ques attention dim:  torch.Size([5, 160, 15])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 17])
Passage ques attention dim:  torch.Size([5, 125, 17])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 17])
Passage ques attention dim:  torch.Size([5, 163, 17])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 17])
Passage ques attention dim:  torch.Size([5, 175, 17])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 18])
Passage ques attention dim:  torch.Size([5, 169, 18])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 12])
Passage ques attention dim:  torch.Size([5, 112, 12])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 16])
Passage ques attention dim:  torch.Size([5, 195, 16])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 39, 200])
Passage Length:  39
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 39, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 39, 19])
Passage ques attention dim:  torch.Size([5, 39, 19])
Passage question vectors dim:  torch.Size([5, 39, 200])
Question Passage Similarity dim:  torch.Size([5, 39])
Question passage attention dim:  torch.Size([5, 39])
Final Merged Passage dim:  torch.Size([5, 39, 800])
Modeled Passage dim:  torch.Size([5, 39, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 39, 1000])
Span start logits:  torch.Size([5, 39])
span start probs dim:  torch.Size([5, 39])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 39]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 204, 12])
Passage ques attention dim:  torch.Size([5, 204, 12])
Passage question vectors dim:  torch.Size([5, 204, 200])
Question Passage Similarity dim:  torch.Size([5, 204])
Question passage attention dim:  torch.Size([5, 204])
Final Merged Passage dim:  torch.Size([5, 204, 800])
Modeled Passage dim:  torch.Size([5, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 204, 1000])
Span start logits:  torch.Size([5, 204])
span start probs dim:  torch.Size([5, 204])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 204]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 20])
Passage ques attention dim:  torch.Size([5, 121, 20])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 580, 200])
Passage Length:  580
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 580, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 580, 17])
Passage ques attention dim:  torch.Size([5, 580, 17])
Passage question vectors dim:  torch.Size([5, 580, 200])
Question Passage Similarity dim:  torch.Size([5, 580])
Question passage attention dim:  torch.Size([5, 580])
Final Merged Passage dim:  torch.Size([5, 580, 800])
Modeled Passage dim:  torch.Size([5, 580, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 580, 1000])
Span start logits:  torch.Size([5, 580])
span start probs dim:  torch.Size([5, 580])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 580]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 15])
Passage ques attention dim:  torch.Size([5, 125, 15])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 15])
Passage ques attention dim:  torch.Size([5, 142, 15])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 13])
Passage ques attention dim:  torch.Size([5, 121, 13])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 219, 200])
Passage Length:  219
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 219, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 219, 14])
Passage ques attention dim:  torch.Size([5, 219, 14])
Passage question vectors dim:  torch.Size([5, 219, 200])
Question Passage Similarity dim:  torch.Size([5, 219])
Question passage attention dim:  torch.Size([5, 219])
Final Merged Passage dim:  torch.Size([5, 219, 800])
Modeled Passage dim:  torch.Size([5, 219, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 219, 1000])
Span start logits:  torch.Size([5, 219])
span start probs dim:  torch.Size([5, 219])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 219]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 17])
Passage ques attention dim:  torch.Size([5, 106, 17])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 15])
Passage ques attention dim:  torch.Size([5, 111, 15])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 318, 200])
Passage Length:  318
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 318, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 318, 17])
Passage ques attention dim:  torch.Size([5, 318, 17])
Passage question vectors dim:  torch.Size([5, 318, 200])
Question Passage Similarity dim:  torch.Size([5, 318])
Question passage attention dim:  torch.Size([5, 318])
Final Merged Passage dim:  torch.Size([5, 318, 800])
Modeled Passage dim:  torch.Size([5, 318, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 318, 1000])
Span start logits:  torch.Size([5, 318])
span start probs dim:  torch.Size([5, 318])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 318]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 21])
Passage ques attention dim:  torch.Size([5, 158, 21])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 15])
Passage ques attention dim:  torch.Size([5, 113, 15])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 15])
Passage ques attention dim:  torch.Size([5, 130, 15])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 13])
Passage ques attention dim:  torch.Size([5, 110, 13])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 16])
Passage ques attention dim:  torch.Size([5, 116, 16])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 17])
Passage ques attention dim:  torch.Size([5, 99, 17])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 15])
Passage ques attention dim:  torch.Size([5, 123, 15])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 15])
Passage ques attention dim:  torch.Size([5, 226, 15])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 21])
Passage ques attention dim:  torch.Size([5, 92, 21])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 13])
Passage ques attention dim:  torch.Size([5, 116, 13])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 71, 14])
Passage ques attention dim:  torch.Size([5, 71, 14])
Passage question vectors dim:  torch.Size([5, 71, 200])
Question Passage Similarity dim:  torch.Size([5, 71])
Question passage attention dim:  torch.Size([5, 71])
Final Merged Passage dim:  torch.Size([5, 71, 800])
Modeled Passage dim:  torch.Size([5, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 71, 1000])
Span start logits:  torch.Size([5, 71])
span start probs dim:  torch.Size([5, 71])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 71]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 14])
Passage ques attention dim:  torch.Size([5, 144, 14])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 12])
Passage ques attention dim:  torch.Size([5, 226, 12])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 93, 11])
Passage ques attention dim:  torch.Size([5, 93, 11])
Passage question vectors dim:  torch.Size([5, 93, 200])
Question Passage Similarity dim:  torch.Size([5, 93])
Question passage attention dim:  torch.Size([5, 93])
Final Merged Passage dim:  torch.Size([5, 93, 800])
Modeled Passage dim:  torch.Size([5, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 93, 1000])
Span start logits:  torch.Size([5, 93])
span start probs dim:  torch.Size([5, 93])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 93]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 271, 200])
Passage Length:  271
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 271, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 271, 12])
Passage ques attention dim:  torch.Size([5, 271, 12])
Passage question vectors dim:  torch.Size([5, 271, 200])
Question Passage Similarity dim:  torch.Size([5, 271])
Question passage attention dim:  torch.Size([5, 271])
Final Merged Passage dim:  torch.Size([5, 271, 800])
Modeled Passage dim:  torch.Size([5, 271, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 271, 1000])
Span start logits:  torch.Size([5, 271])
span start probs dim:  torch.Size([5, 271])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 271]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 14])
Passage ques attention dim:  torch.Size([5, 190, 14])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 189, 17])
Passage ques attention dim:  torch.Size([5, 189, 17])
Passage question vectors dim:  torch.Size([5, 189, 200])
Question Passage Similarity dim:  torch.Size([5, 189])
Question passage attention dim:  torch.Size([5, 189])
Final Merged Passage dim:  torch.Size([5, 189, 800])
Modeled Passage dim:  torch.Size([5, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 189, 1000])
Span start logits:  torch.Size([5, 189])
span start probs dim:  torch.Size([5, 189])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 189]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 17])
Passage ques attention dim:  torch.Size([5, 147, 17])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 77, 200])
Passage Length:  77
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 77, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 77, 17])
Passage ques attention dim:  torch.Size([5, 77, 17])
Passage question vectors dim:  torch.Size([5, 77, 200])
Question Passage Similarity dim:  torch.Size([5, 77])
Question passage attention dim:  torch.Size([5, 77])
Final Merged Passage dim:  torch.Size([5, 77, 800])
Modeled Passage dim:  torch.Size([5, 77, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 77, 1000])
Span start logits:  torch.Size([5, 77])
span start probs dim:  torch.Size([5, 77])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 77]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 19])
Passage ques attention dim:  torch.Size([5, 179, 19])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 14])
Passage ques attention dim:  torch.Size([5, 142, 14])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 21])
Passage ques attention dim:  torch.Size([5, 182, 21])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 14])
Passage ques attention dim:  torch.Size([5, 128, 14])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 23])
Passage ques attention dim:  torch.Size([5, 101, 23])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 12])
Passage ques attention dim:  torch.Size([5, 179, 12])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 353, 200])
Passage Length:  353
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 353, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 353, 18])
Passage ques attention dim:  torch.Size([5, 353, 18])
Passage question vectors dim:  torch.Size([5, 353, 200])
Question Passage Similarity dim:  torch.Size([5, 353])
Question passage attention dim:  torch.Size([5, 353])
Final Merged Passage dim:  torch.Size([5, 353, 800])
Modeled Passage dim:  torch.Size([5, 353, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 353, 1000])
Span start logits:  torch.Size([5, 353])
span start probs dim:  torch.Size([5, 353])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 353]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 15])
Passage ques attention dim:  torch.Size([5, 144, 15])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 15])
Passage ques attention dim:  torch.Size([5, 96, 15])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 155, 17])
Passage ques attention dim:  torch.Size([5, 155, 17])
Passage question vectors dim:  torch.Size([5, 155, 200])
Question Passage Similarity dim:  torch.Size([5, 155])
Question passage attention dim:  torch.Size([5, 155])
Final Merged Passage dim:  torch.Size([5, 155, 800])
Modeled Passage dim:  torch.Size([5, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 155, 1000])
Span start logits:  torch.Size([5, 155])
span start probs dim:  torch.Size([5, 155])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 155]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 207, 19])
Passage ques attention dim:  torch.Size([5, 207, 19])
Passage question vectors dim:  torch.Size([5, 207, 200])
Question Passage Similarity dim:  torch.Size([5, 207])
Question passage attention dim:  torch.Size([5, 207])
Final Merged Passage dim:  torch.Size([5, 207, 800])
Modeled Passage dim:  torch.Size([5, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 207, 1000])
Span start logits:  torch.Size([5, 207])
span start probs dim:  torch.Size([5, 207])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 207]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 21])
Passage ques attention dim:  torch.Size([5, 125, 21])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 12])
Passage ques attention dim:  torch.Size([5, 148, 12])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 16])
Passage ques attention dim:  torch.Size([5, 147, 16])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 16])
Passage ques attention dim:  torch.Size([5, 133, 16])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 12])
Passage ques attention dim:  torch.Size([5, 110, 12])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 16])
Passage ques attention dim:  torch.Size([5, 161, 16])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 16])
Passage ques attention dim:  torch.Size([5, 110, 16])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 16])
Passage ques attention dim:  torch.Size([5, 154, 16])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 12])
Passage ques attention dim:  torch.Size([5, 160, 12])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 12])
Passage ques attention dim:  torch.Size([5, 126, 12])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 21])
Passage ques attention dim:  torch.Size([5, 95, 21])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 12])
Passage ques attention dim:  torch.Size([5, 222, 12])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 14])
Passage ques attention dim:  torch.Size([5, 107, 14])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 17])
Passage ques attention dim:  torch.Size([5, 132, 17])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 14])
Passage ques attention dim:  torch.Size([5, 154, 14])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 79, 10])
Passage ques attention dim:  torch.Size([5, 79, 10])
Passage question vectors dim:  torch.Size([5, 79, 200])
Question Passage Similarity dim:  torch.Size([5, 79])
Question passage attention dim:  torch.Size([5, 79])
Final Merged Passage dim:  torch.Size([5, 79, 800])
Modeled Passage dim:  torch.Size([5, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 79, 1000])
Span start logits:  torch.Size([5, 79])
span start probs dim:  torch.Size([5, 79])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 79]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 11])
Passage ques attention dim:  torch.Size([5, 74, 11])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 16])
Passage ques attention dim:  torch.Size([5, 152, 16])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 184, 13])
Passage ques attention dim:  torch.Size([5, 184, 13])
Passage question vectors dim:  torch.Size([5, 184, 200])
Question Passage Similarity dim:  torch.Size([5, 184])
Question passage attention dim:  torch.Size([5, 184])
Final Merged Passage dim:  torch.Size([5, 184, 800])
Modeled Passage dim:  torch.Size([5, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 184, 1000])
Span start logits:  torch.Size([5, 184])
span start probs dim:  torch.Size([5, 184])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 184]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 15])
Passage ques attention dim:  torch.Size([5, 173, 15])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 16])
Passage ques attention dim:  torch.Size([5, 143, 16])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 20])
Passage ques attention dim:  torch.Size([5, 110, 20])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 23])
Passage ques attention dim:  torch.Size([5, 152, 23])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 14])
Passage ques attention dim:  torch.Size([5, 135, 14])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 19])
Passage ques attention dim:  torch.Size([5, 112, 19])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 18])
Passage ques attention dim:  torch.Size([5, 142, 18])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 19])
Passage ques attention dim:  torch.Size([5, 131, 19])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 155, 19])
Passage ques attention dim:  torch.Size([5, 155, 19])
Passage question vectors dim:  torch.Size([5, 155, 200])
Question Passage Similarity dim:  torch.Size([5, 155])
Question passage attention dim:  torch.Size([5, 155])
Final Merged Passage dim:  torch.Size([5, 155, 800])
Modeled Passage dim:  torch.Size([5, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 155, 1000])
Span start logits:  torch.Size([5, 155])
span start probs dim:  torch.Size([5, 155])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 155]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 13])
Passage ques attention dim:  torch.Size([5, 163, 13])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 16])
Passage ques attention dim:  torch.Size([5, 169, 16])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 12])
Passage ques attention dim:  torch.Size([5, 152, 12])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 15])
Passage ques attention dim:  torch.Size([5, 149, 15])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 331, 200])
Passage Length:  331
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 331, 18])
Passage ques attention dim:  torch.Size([5, 331, 18])
Passage question vectors dim:  torch.Size([5, 331, 200])
Question Passage Similarity dim:  torch.Size([5, 331])
Question passage attention dim:  torch.Size([5, 331])
Final Merged Passage dim:  torch.Size([5, 331, 800])
Modeled Passage dim:  torch.Size([5, 331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 331, 1000])
Span start logits:  torch.Size([5, 331])
span start probs dim:  torch.Size([5, 331])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 331]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 22])
Passage ques attention dim:  torch.Size([5, 106, 22])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 16])
Passage ques attention dim:  torch.Size([5, 254, 16])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 16])
Passage ques attention dim:  torch.Size([5, 127, 16])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 16])
Passage ques attention dim:  torch.Size([5, 162, 16])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 20])
Passage ques attention dim:  torch.Size([5, 107, 20])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 11])
Passage ques attention dim:  torch.Size([5, 154, 11])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 11])
Passage ques attention dim:  torch.Size([5, 149, 11])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 16])
Passage ques attention dim:  torch.Size([5, 115, 16])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 12])
Passage ques attention dim:  torch.Size([5, 94, 12])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 17])
Passage ques attention dim:  torch.Size([5, 156, 17])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 10])
Passage ques attention dim:  torch.Size([5, 146, 10])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 20])
Passage ques attention dim:  torch.Size([5, 197, 20])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 17])
Passage ques attention dim:  torch.Size([5, 158, 17])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 16])
Passage ques attention dim:  torch.Size([5, 174, 16])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 260, 200])
Passage Length:  260
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 260, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 260, 14])
Passage ques attention dim:  torch.Size([5, 260, 14])
Passage question vectors dim:  torch.Size([5, 260, 200])
Question Passage Similarity dim:  torch.Size([5, 260])
Question passage attention dim:  torch.Size([5, 260])
Final Merged Passage dim:  torch.Size([5, 260, 800])
Modeled Passage dim:  torch.Size([5, 260, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 260, 1000])
Span start logits:  torch.Size([5, 260])
span start probs dim:  torch.Size([5, 260])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 260]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 15])
Passage ques attention dim:  torch.Size([5, 126, 15])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 21])
Passage ques attention dim:  torch.Size([5, 157, 21])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 19])
Passage ques attention dim:  torch.Size([5, 258, 19])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 10])
Passage ques attention dim:  torch.Size([5, 193, 10])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 23])
Passage ques attention dim:  torch.Size([5, 187, 23])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 83, 18])
Passage ques attention dim:  torch.Size([5, 83, 18])
Passage question vectors dim:  torch.Size([5, 83, 200])
Question Passage Similarity dim:  torch.Size([5, 83])
Question passage attention dim:  torch.Size([5, 83])
Final Merged Passage dim:  torch.Size([5, 83, 800])
Modeled Passage dim:  torch.Size([5, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 83, 1000])
Span start logits:  torch.Size([5, 83])
span start probs dim:  torch.Size([5, 83])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 83]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 22])
Passage ques attention dim:  torch.Size([5, 121, 22])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 15])
Passage ques attention dim:  torch.Size([5, 187, 15])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 17])
Passage ques attention dim:  torch.Size([5, 234, 17])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 14])
Passage ques attention dim:  torch.Size([5, 222, 14])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 13])
Passage ques attention dim:  torch.Size([5, 172, 13])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 11])
Passage ques attention dim:  torch.Size([5, 128, 11])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 14])
Passage ques attention dim:  torch.Size([5, 142, 14])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 43, 200])
Passage Length:  43
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 43, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 43, 13])
Passage ques attention dim:  torch.Size([5, 43, 13])
Passage question vectors dim:  torch.Size([5, 43, 200])
Question Passage Similarity dim:  torch.Size([5, 43])
Question passage attention dim:  torch.Size([5, 43])
Final Merged Passage dim:  torch.Size([5, 43, 800])
Modeled Passage dim:  torch.Size([5, 43, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 43, 1000])
Span start logits:  torch.Size([5, 43])
span start probs dim:  torch.Size([5, 43])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 43]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 18])
Passage ques attention dim:  torch.Size([5, 192, 18])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 20])
Passage ques attention dim:  torch.Size([5, 157, 20])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 16])
Passage ques attention dim:  torch.Size([5, 104, 16])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 14])
Passage ques attention dim:  torch.Size([5, 176, 14])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 218, 16])
Passage ques attention dim:  torch.Size([5, 218, 16])
Passage question vectors dim:  torch.Size([5, 218, 200])
Question Passage Similarity dim:  torch.Size([5, 218])
Question passage attention dim:  torch.Size([5, 218])
Final Merged Passage dim:  torch.Size([5, 218, 800])
Modeled Passage dim:  torch.Size([5, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 218, 1000])
Span start logits:  torch.Size([5, 218])
span start probs dim:  torch.Size([5, 218])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 218]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 41, 200])
Passage Length:  41
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 41, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 41, 22])
Passage ques attention dim:  torch.Size([5, 41, 22])
Passage question vectors dim:  torch.Size([5, 41, 200])
Question Passage Similarity dim:  torch.Size([5, 41])
Question passage attention dim:  torch.Size([5, 41])
Final Merged Passage dim:  torch.Size([5, 41, 800])
Modeled Passage dim:  torch.Size([5, 41, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 41, 1000])
Span start logits:  torch.Size([5, 41])
span start probs dim:  torch.Size([5, 41])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 41]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 12])
Passage ques attention dim:  torch.Size([5, 105, 12])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 16])
Passage ques attention dim:  torch.Size([5, 165, 16])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 13])
Passage ques attention dim:  torch.Size([5, 125, 13])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 22])
Passage ques attention dim:  torch.Size([5, 146, 22])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 26])
Passage ques attention dim:  torch.Size([5, 103, 26])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 16])
Passage ques attention dim:  torch.Size([5, 114, 16])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 12])
Passage ques attention dim:  torch.Size([5, 143, 12])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 170, 13])
Passage ques attention dim:  torch.Size([5, 170, 13])
Passage question vectors dim:  torch.Size([5, 170, 200])
Question Passage Similarity dim:  torch.Size([5, 170])
Question passage attention dim:  torch.Size([5, 170])
Final Merged Passage dim:  torch.Size([5, 170, 800])
Modeled Passage dim:  torch.Size([5, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 170, 1000])
Span start logits:  torch.Size([5, 170])
span start probs dim:  torch.Size([5, 170])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 170]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 167, 15])
Passage ques attention dim:  torch.Size([5, 167, 15])
Passage question vectors dim:  torch.Size([5, 167, 200])
Question Passage Similarity dim:  torch.Size([5, 167])
Question passage attention dim:  torch.Size([5, 167])
Final Merged Passage dim:  torch.Size([5, 167, 800])
Modeled Passage dim:  torch.Size([5, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 167, 1000])
Span start logits:  torch.Size([5, 167])
span start probs dim:  torch.Size([5, 167])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 167]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 17])
Passage ques attention dim:  torch.Size([5, 130, 17])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 337, 200])
Passage Length:  337
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 337, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 337, 18])
Passage ques attention dim:  torch.Size([5, 337, 18])
Passage question vectors dim:  torch.Size([5, 337, 200])
Question Passage Similarity dim:  torch.Size([5, 337])
Question passage attention dim:  torch.Size([5, 337])
Final Merged Passage dim:  torch.Size([5, 337, 800])
Modeled Passage dim:  torch.Size([5, 337, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 337, 1000])
Span start logits:  torch.Size([5, 337])
span start probs dim:  torch.Size([5, 337])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 337]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 13])
Passage ques attention dim:  torch.Size([5, 114, 13])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 15])
Passage ques attention dim:  torch.Size([5, 117, 15])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 14])
Passage ques attention dim:  torch.Size([5, 149, 14])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 19])
Passage ques attention dim:  torch.Size([5, 195, 19])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 11])
Passage ques attention dim:  torch.Size([5, 136, 11])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 21])
Passage ques attention dim:  torch.Size([5, 141, 21])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 14])
Passage ques attention dim:  torch.Size([5, 131, 14])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 15])
Passage ques attention dim:  torch.Size([5, 149, 15])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 13])
Passage ques attention dim:  torch.Size([5, 190, 13])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 17])
Passage ques attention dim:  torch.Size([5, 149, 17])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 16])
Passage ques attention dim:  torch.Size([5, 113, 16])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 47, 200])
Passage Length:  47
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 47, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 47, 13])
Passage ques attention dim:  torch.Size([5, 47, 13])
Passage question vectors dim:  torch.Size([5, 47, 200])
Question Passage Similarity dim:  torch.Size([5, 47])
Question passage attention dim:  torch.Size([5, 47])
Final Merged Passage dim:  torch.Size([5, 47, 800])
Modeled Passage dim:  torch.Size([5, 47, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 47, 1000])
Span start logits:  torch.Size([5, 47])
span start probs dim:  torch.Size([5, 47])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 47]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 24])
Passage ques attention dim:  torch.Size([5, 107, 24])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 16])
Passage ques attention dim:  torch.Size([5, 169, 16])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 47, 200])
Passage Length:  47
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 47, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 47, 15])
Passage ques attention dim:  torch.Size([5, 47, 15])
Passage question vectors dim:  torch.Size([5, 47, 200])
Question Passage Similarity dim:  torch.Size([5, 47])
Question passage attention dim:  torch.Size([5, 47])
Final Merged Passage dim:  torch.Size([5, 47, 800])
Modeled Passage dim:  torch.Size([5, 47, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 47, 1000])
Span start logits:  torch.Size([5, 47])
span start probs dim:  torch.Size([5, 47])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 47]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 64, 15])
Passage ques attention dim:  torch.Size([5, 64, 15])
Passage question vectors dim:  torch.Size([5, 64, 200])
Question Passage Similarity dim:  torch.Size([5, 64])
Question passage attention dim:  torch.Size([5, 64])
Final Merged Passage dim:  torch.Size([5, 64, 800])
Modeled Passage dim:  torch.Size([5, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 64, 1000])
Span start logits:  torch.Size([5, 64])
span start probs dim:  torch.Size([5, 64])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 64]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 23])
Passage ques attention dim:  torch.Size([5, 158, 23])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 17])
Passage ques attention dim:  torch.Size([5, 104, 17])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 21])
Passage ques attention dim:  torch.Size([5, 107, 21])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 15])
Passage ques attention dim:  torch.Size([5, 143, 15])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 14])
Passage ques attention dim:  torch.Size([5, 140, 14])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 191, 18])
Passage ques attention dim:  torch.Size([5, 191, 18])
Passage question vectors dim:  torch.Size([5, 191, 200])
Question Passage Similarity dim:  torch.Size([5, 191])
Question passage attention dim:  torch.Size([5, 191])
Final Merged Passage dim:  torch.Size([5, 191, 800])
Modeled Passage dim:  torch.Size([5, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 191, 1000])
Span start logits:  torch.Size([5, 191])
span start probs dim:  torch.Size([5, 191])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 191]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 20])
Passage ques attention dim:  torch.Size([5, 106, 20])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 12])
Passage ques attention dim:  torch.Size([5, 96, 12])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 21])
Passage ques attention dim:  torch.Size([5, 133, 21])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 12])
Passage ques attention dim:  torch.Size([5, 107, 12])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 14])
Passage ques attention dim:  torch.Size([5, 116, 14])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 21])
Passage ques attention dim:  torch.Size([5, 174, 21])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 11])
Passage ques attention dim:  torch.Size([5, 136, 11])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 626, 200])
Passage Length:  626
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 626, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 626, 24])
Passage ques attention dim:  torch.Size([5, 626, 24])
Passage question vectors dim:  torch.Size([5, 626, 200])
Question Passage Similarity dim:  torch.Size([5, 626])
Question passage attention dim:  torch.Size([5, 626])
Final Merged Passage dim:  torch.Size([5, 626, 800])
Modeled Passage dim:  torch.Size([5, 626, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 626, 1000])
Span start logits:  torch.Size([5, 626])
span start probs dim:  torch.Size([5, 626])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 626]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 19])
Passage ques attention dim:  torch.Size([5, 108, 19])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 14])
Passage ques attention dim:  torch.Size([5, 159, 14])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 85, 200])
Passage Length:  85
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 85, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 85, 15])
Passage ques attention dim:  torch.Size([5, 85, 15])
Passage question vectors dim:  torch.Size([5, 85, 200])
Question Passage Similarity dim:  torch.Size([5, 85])
Question passage attention dim:  torch.Size([5, 85])
Final Merged Passage dim:  torch.Size([5, 85, 800])
Modeled Passage dim:  torch.Size([5, 85, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 85, 1000])
Span start logits:  torch.Size([5, 85])
span start probs dim:  torch.Size([5, 85])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 85]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 22])
Passage ques attention dim:  torch.Size([5, 156, 22])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 14])
Passage ques attention dim:  torch.Size([5, 147, 14])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 14])
Passage ques attention dim:  torch.Size([5, 110, 14])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 18])
Passage ques attention dim:  torch.Size([5, 163, 18])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 16])
Passage ques attention dim:  torch.Size([5, 108, 16])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 20])
Passage ques attention dim:  torch.Size([5, 157, 20])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 16])
Passage ques attention dim:  torch.Size([5, 174, 16])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 11])
Passage ques attention dim:  torch.Size([5, 92, 11])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 225, 17])
Passage ques attention dim:  torch.Size([5, 225, 17])
Passage question vectors dim:  torch.Size([5, 225, 200])
Question Passage Similarity dim:  torch.Size([5, 225])
Question passage attention dim:  torch.Size([5, 225])
Final Merged Passage dim:  torch.Size([5, 225, 800])
Modeled Passage dim:  torch.Size([5, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 225, 1000])
Span start logits:  torch.Size([5, 225])
span start probs dim:  torch.Size([5, 225])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 225]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 14])
Passage ques attention dim:  torch.Size([5, 140, 14])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 12])
Passage ques attention dim:  torch.Size([5, 124, 12])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 26])
Passage ques attention dim:  torch.Size([5, 129, 26])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 14])
Passage ques attention dim:  torch.Size([5, 151, 14])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 13])
Passage ques attention dim:  torch.Size([5, 116, 13])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 353, 200])
Passage Length:  353
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 353, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 353, 16])
Passage ques attention dim:  torch.Size([5, 353, 16])
Passage question vectors dim:  torch.Size([5, 353, 200])
Question Passage Similarity dim:  torch.Size([5, 353])
Question passage attention dim:  torch.Size([5, 353])
Final Merged Passage dim:  torch.Size([5, 353, 800])
Modeled Passage dim:  torch.Size([5, 353, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 353, 1000])
Span start logits:  torch.Size([5, 353])
span start probs dim:  torch.Size([5, 353])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 353]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 15])
Passage ques attention dim:  torch.Size([5, 165, 15])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 21])
Passage ques attention dim:  torch.Size([5, 199, 21])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 16])
Passage ques attention dim:  torch.Size([5, 176, 16])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 626, 200])
Passage Length:  626
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 626, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 626, 15])
Passage ques attention dim:  torch.Size([5, 626, 15])
Passage question vectors dim:  torch.Size([5, 626, 200])
Question Passage Similarity dim:  torch.Size([5, 626])
Question passage attention dim:  torch.Size([5, 626])
Final Merged Passage dim:  torch.Size([5, 626, 800])
Modeled Passage dim:  torch.Size([5, 626, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 626, 1000])
Span start logits:  torch.Size([5, 626])
span start probs dim:  torch.Size([5, 626])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 626]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 13])
Passage ques attention dim:  torch.Size([5, 113, 13])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 14])
Passage ques attention dim:  torch.Size([5, 94, 14])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 17])
Passage ques attention dim:  torch.Size([5, 176, 17])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 198, 12])
Passage ques attention dim:  torch.Size([5, 198, 12])
Passage question vectors dim:  torch.Size([5, 198, 200])
Question Passage Similarity dim:  torch.Size([5, 198])
Question passage attention dim:  torch.Size([5, 198])
Final Merged Passage dim:  torch.Size([5, 198, 800])
Modeled Passage dim:  torch.Size([5, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 198, 1000])
Span start logits:  torch.Size([5, 198])
span start probs dim:  torch.Size([5, 198])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 198]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 14])
Passage ques attention dim:  torch.Size([5, 164, 14])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 13])
Passage ques attention dim:  torch.Size([5, 115, 13])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 18])
Passage ques attention dim:  torch.Size([5, 171, 18])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 14])
Passage ques attention dim:  torch.Size([5, 102, 14])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 16])
Passage ques attention dim:  torch.Size([5, 157, 16])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 21])
Passage ques attention dim:  torch.Size([5, 123, 21])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 19])
Passage ques attention dim:  torch.Size([5, 185, 19])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 12])
Passage ques attention dim:  torch.Size([5, 102, 12])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 20])
Passage ques attention dim:  torch.Size([5, 148, 20])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 11])
Passage ques attention dim:  torch.Size([5, 183, 11])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 16])
Passage ques attention dim:  torch.Size([5, 205, 16])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 68, 200])
Passage Length:  68
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 68, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 68, 17])
Passage ques attention dim:  torch.Size([5, 68, 17])
Passage question vectors dim:  torch.Size([5, 68, 200])
Question Passage Similarity dim:  torch.Size([5, 68])
Question passage attention dim:  torch.Size([5, 68])
Final Merged Passage dim:  torch.Size([5, 68, 800])
Modeled Passage dim:  torch.Size([5, 68, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 68, 1000])
Span start logits:  torch.Size([5, 68])
span start probs dim:  torch.Size([5, 68])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 68]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 113, 19])
Passage ques attention dim:  torch.Size([5, 113, 19])
Passage question vectors dim:  torch.Size([5, 113, 200])
Question Passage Similarity dim:  torch.Size([5, 113])
Question passage attention dim:  torch.Size([5, 113])
Final Merged Passage dim:  torch.Size([5, 113, 800])
Modeled Passage dim:  torch.Size([5, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 113, 1000])
Span start logits:  torch.Size([5, 113])
span start probs dim:  torch.Size([5, 113])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 113]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 197, 17])
Passage ques attention dim:  torch.Size([5, 197, 17])
Passage question vectors dim:  torch.Size([5, 197, 200])
Question Passage Similarity dim:  torch.Size([5, 197])
Question passage attention dim:  torch.Size([5, 197])
Final Merged Passage dim:  torch.Size([5, 197, 800])
Modeled Passage dim:  torch.Size([5, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 197, 1000])
Span start logits:  torch.Size([5, 197])
span start probs dim:  torch.Size([5, 197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 16])
Passage ques attention dim:  torch.Size([5, 103, 16])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 18])
Passage ques attention dim:  torch.Size([5, 185, 18])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 16])
Passage ques attention dim:  torch.Size([5, 182, 16])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 11])
Passage ques attention dim:  torch.Size([5, 176, 11])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 23])
Passage ques attention dim:  torch.Size([5, 149, 23])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 22])
Passage ques attention dim:  torch.Size([5, 234, 22])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 259, 17])
Passage ques attention dim:  torch.Size([5, 259, 17])
Passage question vectors dim:  torch.Size([5, 259, 200])
Question Passage Similarity dim:  torch.Size([5, 259])
Question passage attention dim:  torch.Size([5, 259])
Final Merged Passage dim:  torch.Size([5, 259, 800])
Modeled Passage dim:  torch.Size([5, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 259, 1000])
Span start logits:  torch.Size([5, 259])
span start probs dim:  torch.Size([5, 259])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 259]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 19])
Passage ques attention dim:  torch.Size([5, 115, 19])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 214, 200])
Passage Length:  214
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 214, 21])
Passage ques attention dim:  torch.Size([5, 214, 21])
Passage question vectors dim:  torch.Size([5, 214, 200])
Question Passage Similarity dim:  torch.Size([5, 214])
Question passage attention dim:  torch.Size([5, 214])
Final Merged Passage dim:  torch.Size([5, 214, 800])
Modeled Passage dim:  torch.Size([5, 214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 214, 1000])
Span start logits:  torch.Size([5, 214])
span start probs dim:  torch.Size([5, 214])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 214]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 27, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 27, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 27])
Passage ques attention dim:  torch.Size([5, 116, 27])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 18])
Passage ques attention dim:  torch.Size([5, 165, 18])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 14])
Passage ques attention dim:  torch.Size([5, 148, 14])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 198, 15])
Passage ques attention dim:  torch.Size([5, 198, 15])
Passage question vectors dim:  torch.Size([5, 198, 200])
Question Passage Similarity dim:  torch.Size([5, 198])
Question passage attention dim:  torch.Size([5, 198])
Final Merged Passage dim:  torch.Size([5, 198, 800])
Modeled Passage dim:  torch.Size([5, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 198, 1000])
Span start logits:  torch.Size([5, 198])
span start probs dim:  torch.Size([5, 198])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 198]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 14])
Passage ques attention dim:  torch.Size([5, 70, 14])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 15])
Passage ques attention dim:  torch.Size([5, 188, 15])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 10])
Passage ques attention dim:  torch.Size([5, 149, 10])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 20])
Passage ques attention dim:  torch.Size([5, 187, 20])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 12])
Passage ques attention dim:  torch.Size([5, 126, 12])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 319, 200])
Passage Length:  319
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 319, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 319, 17])
Passage ques attention dim:  torch.Size([5, 319, 17])
Passage question vectors dim:  torch.Size([5, 319, 200])
Question Passage Similarity dim:  torch.Size([5, 319])
Question passage attention dim:  torch.Size([5, 319])
Final Merged Passage dim:  torch.Size([5, 319, 800])
Modeled Passage dim:  torch.Size([5, 319, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 319, 1000])
Span start logits:  torch.Size([5, 319])
span start probs dim:  torch.Size([5, 319])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 319]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 20])
Passage ques attention dim:  torch.Size([5, 177, 20])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 262, 200])
Passage Length:  262
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 262, 20])
Passage ques attention dim:  torch.Size([5, 262, 20])
Passage question vectors dim:  torch.Size([5, 262, 200])
Question Passage Similarity dim:  torch.Size([5, 262])
Question passage attention dim:  torch.Size([5, 262])
Final Merged Passage dim:  torch.Size([5, 262, 800])
Modeled Passage dim:  torch.Size([5, 262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 262, 1000])
Span start logits:  torch.Size([5, 262])
span start probs dim:  torch.Size([5, 262])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 262]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 13])
Passage ques attention dim:  torch.Size([5, 129, 13])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 20])
Passage ques attention dim:  torch.Size([5, 192, 20])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 87, 200])
Passage Length:  87
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 87, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 87, 16])
Passage ques attention dim:  torch.Size([5, 87, 16])
Passage question vectors dim:  torch.Size([5, 87, 200])
Question Passage Similarity dim:  torch.Size([5, 87])
Question passage attention dim:  torch.Size([5, 87])
Final Merged Passage dim:  torch.Size([5, 87, 800])
Modeled Passage dim:  torch.Size([5, 87, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 87, 1000])
Span start logits:  torch.Size([5, 87])
span start probs dim:  torch.Size([5, 87])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 87]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 15])
Passage ques attention dim:  torch.Size([5, 139, 15])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 23])
Passage ques attention dim:  torch.Size([5, 103, 23])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 19])
Passage ques attention dim:  torch.Size([5, 138, 19])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 24])
Passage ques attention dim:  torch.Size([5, 190, 24])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 68, 200])
Passage Length:  68
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 68, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 68, 15])
Passage ques attention dim:  torch.Size([5, 68, 15])
Passage question vectors dim:  torch.Size([5, 68, 200])
Question Passage Similarity dim:  torch.Size([5, 68])
Question passage attention dim:  torch.Size([5, 68])
Final Merged Passage dim:  torch.Size([5, 68, 800])
Modeled Passage dim:  torch.Size([5, 68, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 68, 1000])
Span start logits:  torch.Size([5, 68])
span start probs dim:  torch.Size([5, 68])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 68]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 211, 14])
Passage ques attention dim:  torch.Size([5, 211, 14])
Passage question vectors dim:  torch.Size([5, 211, 200])
Question Passage Similarity dim:  torch.Size([5, 211])
Question passage attention dim:  torch.Size([5, 211])
Final Merged Passage dim:  torch.Size([5, 211, 800])
Modeled Passage dim:  torch.Size([5, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 211, 1000])
Span start logits:  torch.Size([5, 211])
span start probs dim:  torch.Size([5, 211])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 211]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 14])
Passage ques attention dim:  torch.Size([5, 103, 14])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 15])
Passage ques attention dim:  torch.Size([5, 95, 15])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 15])
Passage ques attention dim:  torch.Size([5, 179, 15])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 17])
Passage ques attention dim:  torch.Size([5, 163, 17])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 18])
Passage ques attention dim:  torch.Size([5, 154, 18])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 204, 18])
Passage ques attention dim:  torch.Size([5, 204, 18])
Passage question vectors dim:  torch.Size([5, 204, 200])
Question Passage Similarity dim:  torch.Size([5, 204])
Question passage attention dim:  torch.Size([5, 204])
Final Merged Passage dim:  torch.Size([5, 204, 800])
Modeled Passage dim:  torch.Size([5, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 204, 1000])
Span start logits:  torch.Size([5, 204])
span start probs dim:  torch.Size([5, 204])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 204]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 25])
Passage ques attention dim:  torch.Size([5, 163, 25])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 84, 9])
Passage ques attention dim:  torch.Size([5, 84, 9])
Passage question vectors dim:  torch.Size([5, 84, 200])
Question Passage Similarity dim:  torch.Size([5, 84])
Question passage attention dim:  torch.Size([5, 84])
Final Merged Passage dim:  torch.Size([5, 84, 800])
Modeled Passage dim:  torch.Size([5, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 84, 1000])
Span start logits:  torch.Size([5, 84])
span start probs dim:  torch.Size([5, 84])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 84]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 14])
Passage ques attention dim:  torch.Size([5, 126, 14])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 18])
Passage ques attention dim:  torch.Size([5, 157, 18])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 21])
Passage ques attention dim:  torch.Size([5, 169, 21])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 11])
Passage ques attention dim:  torch.Size([5, 147, 11])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 75, 16])
Passage ques attention dim:  torch.Size([5, 75, 16])
Passage question vectors dim:  torch.Size([5, 75, 200])
Question Passage Similarity dim:  torch.Size([5, 75])
Question passage attention dim:  torch.Size([5, 75])
Final Merged Passage dim:  torch.Size([5, 75, 800])
Modeled Passage dim:  torch.Size([5, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 75, 1000])
Span start logits:  torch.Size([5, 75])
span start probs dim:  torch.Size([5, 75])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 75]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 229, 17])
Passage ques attention dim:  torch.Size([5, 229, 17])
Passage question vectors dim:  torch.Size([5, 229, 200])
Question Passage Similarity dim:  torch.Size([5, 229])
Question passage attention dim:  torch.Size([5, 229])
Final Merged Passage dim:  torch.Size([5, 229, 800])
Modeled Passage dim:  torch.Size([5, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 229, 1000])
Span start logits:  torch.Size([5, 229])
span start probs dim:  torch.Size([5, 229])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 229]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 15])
Passage ques attention dim:  torch.Size([5, 132, 15])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 71, 18])
Passage ques attention dim:  torch.Size([5, 71, 18])
Passage question vectors dim:  torch.Size([5, 71, 200])
Question Passage Similarity dim:  torch.Size([5, 71])
Question passage attention dim:  torch.Size([5, 71])
Final Merged Passage dim:  torch.Size([5, 71, 800])
Modeled Passage dim:  torch.Size([5, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 71, 1000])
Span start logits:  torch.Size([5, 71])
span start probs dim:  torch.Size([5, 71])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 71]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 18])
Passage ques attention dim:  torch.Size([5, 185, 18])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 37, 200])
Passage Length:  37
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 37, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 37, 14])
Passage ques attention dim:  torch.Size([5, 37, 14])
Passage question vectors dim:  torch.Size([5, 37, 200])
Question Passage Similarity dim:  torch.Size([5, 37])
Question passage attention dim:  torch.Size([5, 37])
Final Merged Passage dim:  torch.Size([5, 37, 800])
Modeled Passage dim:  torch.Size([5, 37, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 37, 1000])
Span start logits:  torch.Size([5, 37])
span start probs dim:  torch.Size([5, 37])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 37]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 15])
Passage ques attention dim:  torch.Size([5, 105, 15])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 243, 18])
Passage ques attention dim:  torch.Size([5, 243, 18])
Passage question vectors dim:  torch.Size([5, 243, 200])
Question Passage Similarity dim:  torch.Size([5, 243])
Question passage attention dim:  torch.Size([5, 243])
Final Merged Passage dim:  torch.Size([5, 243, 800])
Modeled Passage dim:  torch.Size([5, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 243, 1000])
Span start logits:  torch.Size([5, 243])
span start probs dim:  torch.Size([5, 243])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 243]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 13])
Passage ques attention dim:  torch.Size([5, 205, 13])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 172, 20])
Passage ques attention dim:  torch.Size([5, 172, 20])
Passage question vectors dim:  torch.Size([5, 172, 200])
Question Passage Similarity dim:  torch.Size([5, 172])
Question passage attention dim:  torch.Size([5, 172])
Final Merged Passage dim:  torch.Size([5, 172, 800])
Modeled Passage dim:  torch.Size([5, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 172, 1000])
Span start logits:  torch.Size([5, 172])
span start probs dim:  torch.Size([5, 172])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 172]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 15])
Passage ques attention dim:  torch.Size([5, 143, 15])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 50, 200])
Passage Length:  50
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 50, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 50, 19])
Passage ques attention dim:  torch.Size([5, 50, 19])
Passage question vectors dim:  torch.Size([5, 50, 200])
Question Passage Similarity dim:  torch.Size([5, 50])
Question passage attention dim:  torch.Size([5, 50])
Final Merged Passage dim:  torch.Size([5, 50, 800])
Modeled Passage dim:  torch.Size([5, 50, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 50, 1000])
Span start logits:  torch.Size([5, 50])
span start probs dim:  torch.Size([5, 50])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 50]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 15])
Passage ques attention dim:  torch.Size([5, 150, 15])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 201, 200])
Passage Length:  201
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 201, 12])
Passage ques attention dim:  torch.Size([5, 201, 12])
Passage question vectors dim:  torch.Size([5, 201, 200])
Question Passage Similarity dim:  torch.Size([5, 201])
Question passage attention dim:  torch.Size([5, 201])
Final Merged Passage dim:  torch.Size([5, 201, 800])
Modeled Passage dim:  torch.Size([5, 201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 201, 1000])
Span start logits:  torch.Size([5, 201])
span start probs dim:  torch.Size([5, 201])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 201]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 20])
Passage ques attention dim:  torch.Size([5, 103, 20])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 17])
Passage ques attention dim:  torch.Size([5, 122, 17])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 47, 200])
Passage Length:  47
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 47, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 47, 17])
Passage ques attention dim:  torch.Size([5, 47, 17])
Passage question vectors dim:  torch.Size([5, 47, 200])
Question Passage Similarity dim:  torch.Size([5, 47])
Question passage attention dim:  torch.Size([5, 47])
Final Merged Passage dim:  torch.Size([5, 47, 800])
Modeled Passage dim:  torch.Size([5, 47, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 47, 1000])
Span start logits:  torch.Size([5, 47])
span start probs dim:  torch.Size([5, 47])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 47]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 90, 15])
Passage ques attention dim:  torch.Size([5, 90, 15])
Passage question vectors dim:  torch.Size([5, 90, 200])
Question Passage Similarity dim:  torch.Size([5, 90])
Question passage attention dim:  torch.Size([5, 90])
Final Merged Passage dim:  torch.Size([5, 90, 800])
Modeled Passage dim:  torch.Size([5, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 90, 1000])
Span start logits:  torch.Size([5, 90])
span start probs dim:  torch.Size([5, 90])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 90]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 13])
Passage ques attention dim:  torch.Size([5, 123, 13])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 170, 20])
Passage ques attention dim:  torch.Size([5, 170, 20])
Passage question vectors dim:  torch.Size([5, 170, 200])
Question Passage Similarity dim:  torch.Size([5, 170])
Question passage attention dim:  torch.Size([5, 170])
Final Merged Passage dim:  torch.Size([5, 170, 800])
Modeled Passage dim:  torch.Size([5, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 170, 1000])
Span start logits:  torch.Size([5, 170])
span start probs dim:  torch.Size([5, 170])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 170]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 200, 12])
Passage ques attention dim:  torch.Size([5, 200, 12])
Passage question vectors dim:  torch.Size([5, 200, 200])
Question Passage Similarity dim:  torch.Size([5, 200])
Question passage attention dim:  torch.Size([5, 200])
Final Merged Passage dim:  torch.Size([5, 200, 800])
Modeled Passage dim:  torch.Size([5, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 200, 1000])
Span start logits:  torch.Size([5, 200])
span start probs dim:  torch.Size([5, 200])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 200]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 15])
Passage ques attention dim:  torch.Size([5, 94, 15])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 12])
Passage ques attention dim:  torch.Size([5, 179, 12])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 14])
Passage ques attention dim:  torch.Size([5, 177, 14])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 22])
Passage ques attention dim:  torch.Size([5, 124, 22])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 20])
Passage ques attention dim:  torch.Size([5, 128, 20])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 47, 200])
Passage Length:  47
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 47, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 47, 16])
Passage ques attention dim:  torch.Size([5, 47, 16])
Passage question vectors dim:  torch.Size([5, 47, 200])
Question Passage Similarity dim:  torch.Size([5, 47])
Question passage attention dim:  torch.Size([5, 47])
Final Merged Passage dim:  torch.Size([5, 47, 800])
Modeled Passage dim:  torch.Size([5, 47, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 47, 1000])
Span start logits:  torch.Size([5, 47])
span start probs dim:  torch.Size([5, 47])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 47]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 19])
Passage ques attention dim:  torch.Size([5, 112, 19])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 10])
Passage ques attention dim:  torch.Size([5, 132, 10])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 14])
Passage ques attention dim:  torch.Size([5, 139, 14])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 170, 14])
Passage ques attention dim:  torch.Size([5, 170, 14])
Passage question vectors dim:  torch.Size([5, 170, 200])
Question Passage Similarity dim:  torch.Size([5, 170])
Question passage attention dim:  torch.Size([5, 170])
Final Merged Passage dim:  torch.Size([5, 170, 800])
Modeled Passage dim:  torch.Size([5, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 170, 1000])
Span start logits:  torch.Size([5, 170])
span start probs dim:  torch.Size([5, 170])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 170]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 12])
Passage ques attention dim:  torch.Size([5, 226, 12])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 83, 16])
Passage ques attention dim:  torch.Size([5, 83, 16])
Passage question vectors dim:  torch.Size([5, 83, 200])
Question Passage Similarity dim:  torch.Size([5, 83])
Question passage attention dim:  torch.Size([5, 83])
Final Merged Passage dim:  torch.Size([5, 83, 800])
Modeled Passage dim:  torch.Size([5, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 83, 1000])
Span start logits:  torch.Size([5, 83])
span start probs dim:  torch.Size([5, 83])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 83]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 15])
Passage ques attention dim:  torch.Size([5, 116, 15])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 15])
Passage ques attention dim:  torch.Size([5, 91, 15])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 13])
Passage ques attention dim:  torch.Size([5, 146, 13])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 19])
Passage ques attention dim:  torch.Size([5, 118, 19])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 14])
Passage ques attention dim:  torch.Size([5, 120, 14])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 18])
Passage ques attention dim:  torch.Size([5, 222, 18])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 227, 14])
Passage ques attention dim:  torch.Size([5, 227, 14])
Passage question vectors dim:  torch.Size([5, 227, 200])
Question Passage Similarity dim:  torch.Size([5, 227])
Question passage attention dim:  torch.Size([5, 227])
Final Merged Passage dim:  torch.Size([5, 227, 800])
Modeled Passage dim:  torch.Size([5, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 227, 1000])
Span start logits:  torch.Size([5, 227])
span start probs dim:  torch.Size([5, 227])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 227]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 207, 17])
Passage ques attention dim:  torch.Size([5, 207, 17])
Passage question vectors dim:  torch.Size([5, 207, 200])
Question Passage Similarity dim:  torch.Size([5, 207])
Question passage attention dim:  torch.Size([5, 207])
Final Merged Passage dim:  torch.Size([5, 207, 800])
Modeled Passage dim:  torch.Size([5, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 207, 1000])
Span start logits:  torch.Size([5, 207])
span start probs dim:  torch.Size([5, 207])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 207]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 12])
Passage ques attention dim:  torch.Size([5, 117, 12])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 76, 200])
Passage Length:  76
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 76, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 76, 16])
Passage ques attention dim:  torch.Size([5, 76, 16])
Passage question vectors dim:  torch.Size([5, 76, 200])
Question Passage Similarity dim:  torch.Size([5, 76])
Question passage attention dim:  torch.Size([5, 76])
Final Merged Passage dim:  torch.Size([5, 76, 800])
Modeled Passage dim:  torch.Size([5, 76, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 76, 1000])
Span start logits:  torch.Size([5, 76])
span start probs dim:  torch.Size([5, 76])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 76]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 14])
Passage ques attention dim:  torch.Size([5, 128, 14])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 14])
Passage ques attention dim:  torch.Size([5, 111, 14])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 25])
Passage ques attention dim:  torch.Size([5, 112, 25])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 167, 15])
Passage ques attention dim:  torch.Size([5, 167, 15])
Passage question vectors dim:  torch.Size([5, 167, 200])
Question Passage Similarity dim:  torch.Size([5, 167])
Question passage attention dim:  torch.Size([5, 167])
Final Merged Passage dim:  torch.Size([5, 167, 800])
Modeled Passage dim:  torch.Size([5, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 167, 1000])
Span start logits:  torch.Size([5, 167])
span start probs dim:  torch.Size([5, 167])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 167]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 16])
Passage ques attention dim:  torch.Size([5, 102, 16])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 17])
Passage ques attention dim:  torch.Size([5, 112, 17])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 14])
Passage ques attention dim:  torch.Size([5, 150, 14])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 67, 12])
Passage ques attention dim:  torch.Size([5, 67, 12])
Passage question vectors dim:  torch.Size([5, 67, 200])
Question Passage Similarity dim:  torch.Size([5, 67])
Question passage attention dim:  torch.Size([5, 67])
Final Merged Passage dim:  torch.Size([5, 67, 800])
Modeled Passage dim:  torch.Size([5, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 67, 1000])
Span start logits:  torch.Size([5, 67])
span start probs dim:  torch.Size([5, 67])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 67]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 18])
Passage ques attention dim:  torch.Size([5, 194, 18])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 23])
Passage ques attention dim:  torch.Size([5, 118, 23])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 17])
Passage ques attention dim:  torch.Size([5, 145, 17])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 143, 12])
Passage ques attention dim:  torch.Size([5, 143, 12])
Passage question vectors dim:  torch.Size([5, 143, 200])
Question Passage Similarity dim:  torch.Size([5, 143])
Question passage attention dim:  torch.Size([5, 143])
Final Merged Passage dim:  torch.Size([5, 143, 800])
Modeled Passage dim:  torch.Size([5, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 143, 1000])
Span start logits:  torch.Size([5, 143])
span start probs dim:  torch.Size([5, 143])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 143]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 212, 13])
Passage ques attention dim:  torch.Size([5, 212, 13])
Passage question vectors dim:  torch.Size([5, 212, 200])
Question Passage Similarity dim:  torch.Size([5, 212])
Question passage attention dim:  torch.Size([5, 212])
Final Merged Passage dim:  torch.Size([5, 212, 800])
Modeled Passage dim:  torch.Size([5, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 212, 1000])
Span start logits:  torch.Size([5, 212])
span start probs dim:  torch.Size([5, 212])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 212]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 15])
Passage ques attention dim:  torch.Size([5, 120, 15])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 15])
Passage ques attention dim:  torch.Size([5, 140, 15])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 21])
Passage ques attention dim:  torch.Size([5, 176, 21])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 20])
Passage ques attention dim:  torch.Size([5, 273, 20])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 16])
Passage ques attention dim:  torch.Size([5, 258, 16])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 207, 16])
Passage ques attention dim:  torch.Size([5, 207, 16])
Passage question vectors dim:  torch.Size([5, 207, 200])
Question Passage Similarity dim:  torch.Size([5, 207])
Question passage attention dim:  torch.Size([5, 207])
Final Merged Passage dim:  torch.Size([5, 207, 800])
Modeled Passage dim:  torch.Size([5, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 207, 1000])
Span start logits:  torch.Size([5, 207])
span start probs dim:  torch.Size([5, 207])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 207]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 13])
Passage ques attention dim:  torch.Size([5, 162, 13])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 23])
Passage ques attention dim:  torch.Size([5, 114, 23])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 11])
Passage ques attention dim:  torch.Size([5, 121, 11])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 17])
Passage ques attention dim:  torch.Size([5, 139, 17])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 15])
Passage ques attention dim:  torch.Size([5, 121, 15])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 244, 200])
Passage Length:  244
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 244, 18])
Passage ques attention dim:  torch.Size([5, 244, 18])
Passage question vectors dim:  torch.Size([5, 244, 200])
Question Passage Similarity dim:  torch.Size([5, 244])
Question passage attention dim:  torch.Size([5, 244])
Final Merged Passage dim:  torch.Size([5, 244, 800])
Modeled Passage dim:  torch.Size([5, 244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 244, 1000])
Span start logits:  torch.Size([5, 244])
span start probs dim:  torch.Size([5, 244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 21])
Passage ques attention dim:  torch.Size([5, 137, 21])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 17])
Passage ques attention dim:  torch.Size([5, 188, 17])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 10])
Passage ques attention dim:  torch.Size([5, 108, 10])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 13])
Passage ques attention dim:  torch.Size([5, 165, 13])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 24])
Passage ques attention dim:  torch.Size([5, 111, 24])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 219, 200])
Passage Length:  219
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 219, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 219, 19])
Passage ques attention dim:  torch.Size([5, 219, 19])
Passage question vectors dim:  torch.Size([5, 219, 200])
Question Passage Similarity dim:  torch.Size([5, 219])
Question passage attention dim:  torch.Size([5, 219])
Final Merged Passage dim:  torch.Size([5, 219, 800])
Modeled Passage dim:  torch.Size([5, 219, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 219, 1000])
Span start logits:  torch.Size([5, 219])
span start probs dim:  torch.Size([5, 219])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 219]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 285, 200])
Passage Length:  285
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 285, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 285, 20])
Passage ques attention dim:  torch.Size([5, 285, 20])
Passage question vectors dim:  torch.Size([5, 285, 200])
Question Passage Similarity dim:  torch.Size([5, 285])
Question passage attention dim:  torch.Size([5, 285])
Final Merged Passage dim:  torch.Size([5, 285, 800])
Modeled Passage dim:  torch.Size([5, 285, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 285, 1000])
Span start logits:  torch.Size([5, 285])
span start probs dim:  torch.Size([5, 285])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 285]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 13])
Passage ques attention dim:  torch.Size([5, 127, 13])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 16])
Passage ques attention dim:  torch.Size([5, 114, 16])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 155, 22])
Passage ques attention dim:  torch.Size([5, 155, 22])
Passage question vectors dim:  torch.Size([5, 155, 200])
Question Passage Similarity dim:  torch.Size([5, 155])
Question passage attention dim:  torch.Size([5, 155])
Final Merged Passage dim:  torch.Size([5, 155, 800])
Modeled Passage dim:  torch.Size([5, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 155, 1000])
Span start logits:  torch.Size([5, 155])
span start probs dim:  torch.Size([5, 155])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 155]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 227, 16])
Passage ques attention dim:  torch.Size([5, 227, 16])
Passage question vectors dim:  torch.Size([5, 227, 200])
Question Passage Similarity dim:  torch.Size([5, 227])
Question passage attention dim:  torch.Size([5, 227])
Final Merged Passage dim:  torch.Size([5, 227, 800])
Modeled Passage dim:  torch.Size([5, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 227, 1000])
Span start logits:  torch.Size([5, 227])
span start probs dim:  torch.Size([5, 227])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 227]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 27, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 27, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 27])
Passage ques attention dim:  torch.Size([5, 441, 27])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 67, 12])
Passage ques attention dim:  torch.Size([5, 67, 12])
Passage question vectors dim:  torch.Size([5, 67, 200])
Question Passage Similarity dim:  torch.Size([5, 67])
Question passage attention dim:  torch.Size([5, 67])
Final Merged Passage dim:  torch.Size([5, 67, 800])
Modeled Passage dim:  torch.Size([5, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 67, 1000])
Span start logits:  torch.Size([5, 67])
span start probs dim:  torch.Size([5, 67])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 67]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 13])
Passage ques attention dim:  torch.Size([5, 163, 13])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 12])
Passage ques attention dim:  torch.Size([5, 96, 12])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 157, 13])
Passage ques attention dim:  torch.Size([5, 157, 13])
Passage question vectors dim:  torch.Size([5, 157, 200])
Question Passage Similarity dim:  torch.Size([5, 157])
Question passage attention dim:  torch.Size([5, 157])
Final Merged Passage dim:  torch.Size([5, 157, 800])
Modeled Passage dim:  torch.Size([5, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 157, 1000])
Span start logits:  torch.Size([5, 157])
span start probs dim:  torch.Size([5, 157])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 157]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 98, 11])
Passage ques attention dim:  torch.Size([5, 98, 11])
Passage question vectors dim:  torch.Size([5, 98, 200])
Question Passage Similarity dim:  torch.Size([5, 98])
Question passage attention dim:  torch.Size([5, 98])
Final Merged Passage dim:  torch.Size([5, 98, 800])
Modeled Passage dim:  torch.Size([5, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 98, 1000])
Span start logits:  torch.Size([5, 98])
span start probs dim:  torch.Size([5, 98])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 98]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 14])
Passage ques attention dim:  torch.Size([5, 121, 14])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 22])
Passage ques attention dim:  torch.Size([5, 137, 22])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 20])
Passage ques attention dim:  torch.Size([5, 199, 20])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 15])
Passage ques attention dim:  torch.Size([5, 147, 15])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 20])
Passage ques attention dim:  torch.Size([5, 70, 20])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 13])
Passage ques attention dim:  torch.Size([5, 94, 13])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 73, 23])
Passage ques attention dim:  torch.Size([5, 73, 23])
Passage question vectors dim:  torch.Size([5, 73, 200])
Question Passage Similarity dim:  torch.Size([5, 73])
Question passage attention dim:  torch.Size([5, 73])
Final Merged Passage dim:  torch.Size([5, 73, 800])
Modeled Passage dim:  torch.Size([5, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 73, 1000])
Span start logits:  torch.Size([5, 73])
span start probs dim:  torch.Size([5, 73])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 73]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 17])
Passage ques attention dim:  torch.Size([5, 119, 17])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 12])
Passage ques attention dim:  torch.Size([5, 122, 12])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 181, 15])
Passage ques attention dim:  torch.Size([5, 181, 15])
Passage question vectors dim:  torch.Size([5, 181, 200])
Question Passage Similarity dim:  torch.Size([5, 181])
Question passage attention dim:  torch.Size([5, 181])
Final Merged Passage dim:  torch.Size([5, 181, 800])
Modeled Passage dim:  torch.Size([5, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 181, 1000])
Span start logits:  torch.Size([5, 181])
span start probs dim:  torch.Size([5, 181])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 181]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 14])
Passage ques attention dim:  torch.Size([5, 140, 14])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 240, 200])
Passage Length:  240
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 240, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 240, 14])
Passage ques attention dim:  torch.Size([5, 240, 14])
Passage question vectors dim:  torch.Size([5, 240, 200])
Question Passage Similarity dim:  torch.Size([5, 240])
Question passage attention dim:  torch.Size([5, 240])
Final Merged Passage dim:  torch.Size([5, 240, 800])
Modeled Passage dim:  torch.Size([5, 240, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 240, 1000])
Span start logits:  torch.Size([5, 240])
span start probs dim:  torch.Size([5, 240])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 240]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 57, 200])
Passage Length:  57
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 57, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 57, 11])
Passage ques attention dim:  torch.Size([5, 57, 11])
Passage question vectors dim:  torch.Size([5, 57, 200])
Question Passage Similarity dim:  torch.Size([5, 57])
Question passage attention dim:  torch.Size([5, 57])
Final Merged Passage dim:  torch.Size([5, 57, 800])
Modeled Passage dim:  torch.Size([5, 57, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 57, 1000])
Span start logits:  torch.Size([5, 57])
span start probs dim:  torch.Size([5, 57])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 57]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 424, 200])
Passage Length:  424
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 424, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 424, 17])
Passage ques attention dim:  torch.Size([5, 424, 17])
Passage question vectors dim:  torch.Size([5, 424, 200])
Question Passage Similarity dim:  torch.Size([5, 424])
Question passage attention dim:  torch.Size([5, 424])
Final Merged Passage dim:  torch.Size([5, 424, 800])
Modeled Passage dim:  torch.Size([5, 424, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 424, 1000])
Span start logits:  torch.Size([5, 424])
span start probs dim:  torch.Size([5, 424])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 424]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 15])
Passage ques attention dim:  torch.Size([5, 92, 15])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 84, 15])
Passage ques attention dim:  torch.Size([5, 84, 15])
Passage question vectors dim:  torch.Size([5, 84, 200])
Question Passage Similarity dim:  torch.Size([5, 84])
Question passage attention dim:  torch.Size([5, 84])
Final Merged Passage dim:  torch.Size([5, 84, 800])
Modeled Passage dim:  torch.Size([5, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 84, 1000])
Span start logits:  torch.Size([5, 84])
span start probs dim:  torch.Size([5, 84])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 84]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 15])
Passage ques attention dim:  torch.Size([5, 94, 15])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 17])
Passage ques attention dim:  torch.Size([5, 145, 17])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 343, 19])
Passage ques attention dim:  torch.Size([5, 343, 19])
Passage question vectors dim:  torch.Size([5, 343, 200])
Question Passage Similarity dim:  torch.Size([5, 343])
Question passage attention dim:  torch.Size([5, 343])
Final Merged Passage dim:  torch.Size([5, 343, 800])
Modeled Passage dim:  torch.Size([5, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 343, 1000])
Span start logits:  torch.Size([5, 343])
span start probs dim:  torch.Size([5, 343])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 343]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 15])
Passage ques attention dim:  torch.Size([5, 128, 15])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 10])
Passage ques attention dim:  torch.Size([5, 135, 10])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 32, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 32, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 32])
Passage ques attention dim:  torch.Size([5, 120, 32])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 243, 14])
Passage ques attention dim:  torch.Size([5, 243, 14])
Passage question vectors dim:  torch.Size([5, 243, 200])
Question Passage Similarity dim:  torch.Size([5, 243])
Question passage attention dim:  torch.Size([5, 243])
Final Merged Passage dim:  torch.Size([5, 243, 800])
Modeled Passage dim:  torch.Size([5, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 243, 1000])
Span start logits:  torch.Size([5, 243])
span start probs dim:  torch.Size([5, 243])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 243]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 21])
Passage ques attention dim:  torch.Size([5, 141, 21])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 18])
Passage ques attention dim:  torch.Size([5, 101, 18])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 15])
Passage ques attention dim:  torch.Size([5, 138, 15])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 15])
Passage ques attention dim:  torch.Size([5, 128, 15])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 82, 18])
Passage ques attention dim:  torch.Size([5, 82, 18])
Passage question vectors dim:  torch.Size([5, 82, 200])
Question Passage Similarity dim:  torch.Size([5, 82])
Question passage attention dim:  torch.Size([5, 82])
Final Merged Passage dim:  torch.Size([5, 82, 800])
Modeled Passage dim:  torch.Size([5, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 82, 1000])
Span start logits:  torch.Size([5, 82])
span start probs dim:  torch.Size([5, 82])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 82]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 14])
Passage ques attention dim:  torch.Size([5, 171, 14])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 15])
Passage ques attention dim:  torch.Size([5, 160, 15])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 271, 200])
Passage Length:  271
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 271, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 271, 13])
Passage ques attention dim:  torch.Size([5, 271, 13])
Passage question vectors dim:  torch.Size([5, 271, 200])
Question Passage Similarity dim:  torch.Size([5, 271])
Question passage attention dim:  torch.Size([5, 271])
Final Merged Passage dim:  torch.Size([5, 271, 800])
Modeled Passage dim:  torch.Size([5, 271, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 271, 1000])
Span start logits:  torch.Size([5, 271])
span start probs dim:  torch.Size([5, 271])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 271]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 13])
Passage ques attention dim:  torch.Size([5, 102, 13])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 166, 19])
Passage ques attention dim:  torch.Size([5, 166, 19])
Passage question vectors dim:  torch.Size([5, 166, 200])
Question Passage Similarity dim:  torch.Size([5, 166])
Question passage attention dim:  torch.Size([5, 166])
Final Merged Passage dim:  torch.Size([5, 166, 800])
Modeled Passage dim:  torch.Size([5, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 166, 1000])
Span start logits:  torch.Size([5, 166])
span start probs dim:  torch.Size([5, 166])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 166]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 23])
Passage ques attention dim:  torch.Size([5, 154, 23])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 16])
Passage ques attention dim:  torch.Size([5, 104, 16])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 17])
Passage ques attention dim:  torch.Size([5, 137, 17])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 11])
Passage ques attention dim:  torch.Size([5, 141, 11])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 41, 200])
Passage Length:  41
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 41, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 41, 13])
Passage ques attention dim:  torch.Size([5, 41, 13])
Passage question vectors dim:  torch.Size([5, 41, 200])
Question Passage Similarity dim:  torch.Size([5, 41])
Question passage attention dim:  torch.Size([5, 41])
Final Merged Passage dim:  torch.Size([5, 41, 800])
Modeled Passage dim:  torch.Size([5, 41, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 41, 1000])
Span start logits:  torch.Size([5, 41])
span start probs dim:  torch.Size([5, 41])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 41]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 192, 13])
Passage ques attention dim:  torch.Size([5, 192, 13])
Passage question vectors dim:  torch.Size([5, 192, 200])
Question Passage Similarity dim:  torch.Size([5, 192])
Question passage attention dim:  torch.Size([5, 192])
Final Merged Passage dim:  torch.Size([5, 192, 800])
Modeled Passage dim:  torch.Size([5, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 192, 1000])
Span start logits:  torch.Size([5, 192])
span start probs dim:  torch.Size([5, 192])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 192]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 17])
Passage ques attention dim:  torch.Size([5, 164, 17])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 13])
Passage ques attention dim:  torch.Size([5, 125, 13])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 26])
Passage ques attention dim:  torch.Size([5, 132, 26])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 18])
Passage ques attention dim:  torch.Size([5, 156, 18])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 243, 14])
Passage ques attention dim:  torch.Size([5, 243, 14])
Passage question vectors dim:  torch.Size([5, 243, 200])
Question Passage Similarity dim:  torch.Size([5, 243])
Question passage attention dim:  torch.Size([5, 243])
Final Merged Passage dim:  torch.Size([5, 243, 800])
Modeled Passage dim:  torch.Size([5, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 243, 1000])
Span start logits:  torch.Size([5, 243])
span start probs dim:  torch.Size([5, 243])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 243]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 253, 200])
Passage Length:  253
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 253, 19])
Passage ques attention dim:  torch.Size([5, 253, 19])
Passage question vectors dim:  torch.Size([5, 253, 200])
Question Passage Similarity dim:  torch.Size([5, 253])
Question passage attention dim:  torch.Size([5, 253])
Final Merged Passage dim:  torch.Size([5, 253, 800])
Modeled Passage dim:  torch.Size([5, 253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 253, 1000])
Span start logits:  torch.Size([5, 253])
span start probs dim:  torch.Size([5, 253])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 253]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 217, 21])
Passage ques attention dim:  torch.Size([5, 217, 21])
Passage question vectors dim:  torch.Size([5, 217, 200])
Question Passage Similarity dim:  torch.Size([5, 217])
Question passage attention dim:  torch.Size([5, 217])
Final Merged Passage dim:  torch.Size([5, 217, 800])
Modeled Passage dim:  torch.Size([5, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 217, 1000])
Span start logits:  torch.Size([5, 217])
span start probs dim:  torch.Size([5, 217])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 217]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 19])
Passage ques attention dim:  torch.Size([5, 131, 19])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 12])
Passage ques attention dim:  torch.Size([5, 193, 12])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 16])
Passage ques attention dim:  torch.Size([5, 116, 16])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 30, 200])
Embedded passage dim:  torch.Size([5, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([5, 30, 200])
Encoded passage dim:  torch.Size([5, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 83, 30])
Passage ques attention dim:  torch.Size([5, 83, 30])
Passage question vectors dim:  torch.Size([5, 83, 200])
Question Passage Similarity dim:  torch.Size([5, 83])
Question passage attention dim:  torch.Size([5, 83])
Final Merged Passage dim:  torch.Size([5, 83, 800])
Modeled Passage dim:  torch.Size([5, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 83, 1000])
Span start logits:  torch.Size([5, 83])
span start probs dim:  torch.Size([5, 83])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 83]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 14])
Passage ques attention dim:  torch.Size([5, 140, 14])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 134, 23])
Passage ques attention dim:  torch.Size([5, 134, 23])
Passage question vectors dim:  torch.Size([5, 134, 200])
Question Passage Similarity dim:  torch.Size([5, 134])
Question passage attention dim:  torch.Size([5, 134])
Final Merged Passage dim:  torch.Size([5, 134, 800])
Modeled Passage dim:  torch.Size([5, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 134, 1000])
Span start logits:  torch.Size([5, 134])
span start probs dim:  torch.Size([5, 134])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 134]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 253, 200])
Passage Length:  253
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 253, 16])
Passage ques attention dim:  torch.Size([5, 253, 16])
Passage question vectors dim:  torch.Size([5, 253, 200])
Question Passage Similarity dim:  torch.Size([5, 253])
Question passage attention dim:  torch.Size([5, 253])
Final Merged Passage dim:  torch.Size([5, 253, 800])
Modeled Passage dim:  torch.Size([5, 253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 253, 1000])
Span start logits:  torch.Size([5, 253])
span start probs dim:  torch.Size([5, 253])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 253]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 31, 200])
Passage Length:  31
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 31, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 31, 16])
Passage ques attention dim:  torch.Size([5, 31, 16])
Passage question vectors dim:  torch.Size([5, 31, 200])
Question Passage Similarity dim:  torch.Size([5, 31])
Question passage attention dim:  torch.Size([5, 31])
Final Merged Passage dim:  torch.Size([5, 31, 800])
Modeled Passage dim:  torch.Size([5, 31, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 31, 1000])
Span start logits:  torch.Size([5, 31])
span start probs dim:  torch.Size([5, 31])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 31]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 10])
Passage ques attention dim:  torch.Size([5, 124, 10])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 30, 200])
Embedded passage dim:  torch.Size([5, 525, 200])
Passage Length:  525
Encoded question dim:  torch.Size([5, 30, 200])
Encoded passage dim:  torch.Size([5, 525, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 525, 30])
Passage ques attention dim:  torch.Size([5, 525, 30])
Passage question vectors dim:  torch.Size([5, 525, 200])
Question Passage Similarity dim:  torch.Size([5, 525])
Question passage attention dim:  torch.Size([5, 525])
Final Merged Passage dim:  torch.Size([5, 525, 800])
Modeled Passage dim:  torch.Size([5, 525, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 525, 1000])
Span start logits:  torch.Size([5, 525])
span start probs dim:  torch.Size([5, 525])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 525]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 17])
Passage ques attention dim:  torch.Size([5, 126, 17])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 240, 200])
Passage Length:  240
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 240, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 240, 14])
Passage ques attention dim:  torch.Size([5, 240, 14])
Passage question vectors dim:  torch.Size([5, 240, 200])
Question Passage Similarity dim:  torch.Size([5, 240])
Question passage attention dim:  torch.Size([5, 240])
Final Merged Passage dim:  torch.Size([5, 240, 800])
Modeled Passage dim:  torch.Size([5, 240, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 240, 1000])
Span start logits:  torch.Size([5, 240])
span start probs dim:  torch.Size([5, 240])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 240]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 232, 18])
Passage ques attention dim:  torch.Size([5, 232, 18])
Passage question vectors dim:  torch.Size([5, 232, 200])
Question Passage Similarity dim:  torch.Size([5, 232])
Question passage attention dim:  torch.Size([5, 232])
Final Merged Passage dim:  torch.Size([5, 232, 800])
Modeled Passage dim:  torch.Size([5, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 232, 1000])
Span start logits:  torch.Size([5, 232])
span start probs dim:  torch.Size([5, 232])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 232]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 21])
Passage ques attention dim:  torch.Size([5, 70, 21])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 21])
Passage ques attention dim:  torch.Size([5, 152, 21])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 203, 200])
Passage Length:  203
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 203, 13])
Passage ques attention dim:  torch.Size([5, 203, 13])
Passage question vectors dim:  torch.Size([5, 203, 200])
Question Passage Similarity dim:  torch.Size([5, 203])
Question passage attention dim:  torch.Size([5, 203])
Final Merged Passage dim:  torch.Size([5, 203, 800])
Modeled Passage dim:  torch.Size([5, 203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 203, 1000])
Span start logits:  torch.Size([5, 203])
span start probs dim:  torch.Size([5, 203])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 203]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 216, 200])
Passage Length:  216
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 216, 20])
Passage ques attention dim:  torch.Size([5, 216, 20])
Passage question vectors dim:  torch.Size([5, 216, 200])
Question Passage Similarity dim:  torch.Size([5, 216])
Question passage attention dim:  torch.Size([5, 216])
Final Merged Passage dim:  torch.Size([5, 216, 800])
Modeled Passage dim:  torch.Size([5, 216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 216, 1000])
Span start logits:  torch.Size([5, 216])
span start probs dim:  torch.Size([5, 216])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 216]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 13])
Passage ques attention dim:  torch.Size([5, 140, 13])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 163, 18])
Passage ques attention dim:  torch.Size([5, 163, 18])
Passage question vectors dim:  torch.Size([5, 163, 200])
Question Passage Similarity dim:  torch.Size([5, 163])
Question passage attention dim:  torch.Size([5, 163])
Final Merged Passage dim:  torch.Size([5, 163, 800])
Modeled Passage dim:  torch.Size([5, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 163, 1000])
Span start logits:  torch.Size([5, 163])
span start probs dim:  torch.Size([5, 163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 243, 15])
Passage ques attention dim:  torch.Size([5, 243, 15])
Passage question vectors dim:  torch.Size([5, 243, 200])
Question Passage Similarity dim:  torch.Size([5, 243])
Question passage attention dim:  torch.Size([5, 243])
Final Merged Passage dim:  torch.Size([5, 243, 800])
Modeled Passage dim:  torch.Size([5, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 243, 1000])
Span start logits:  torch.Size([5, 243])
span start probs dim:  torch.Size([5, 243])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 243]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 16])
Passage ques attention dim:  torch.Size([5, 140, 16])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 15])
Passage ques attention dim:  torch.Size([5, 100, 15])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 182, 24])
Passage ques attention dim:  torch.Size([5, 182, 24])
Passage question vectors dim:  torch.Size([5, 182, 200])
Question Passage Similarity dim:  torch.Size([5, 182])
Question passage attention dim:  torch.Size([5, 182])
Final Merged Passage dim:  torch.Size([5, 182, 800])
Modeled Passage dim:  torch.Size([5, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 182, 1000])
Span start logits:  torch.Size([5, 182])
span start probs dim:  torch.Size([5, 182])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 182]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 205, 20])
Passage ques attention dim:  torch.Size([5, 205, 20])
Passage question vectors dim:  torch.Size([5, 205, 200])
Question Passage Similarity dim:  torch.Size([5, 205])
Question passage attention dim:  torch.Size([5, 205])
Final Merged Passage dim:  torch.Size([5, 205, 800])
Modeled Passage dim:  torch.Size([5, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 205, 1000])
Span start logits:  torch.Size([5, 205])
span start probs dim:  torch.Size([5, 205])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 205]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 126, 14])
Passage ques attention dim:  torch.Size([5, 126, 14])
Passage question vectors dim:  torch.Size([5, 126, 200])
Question Passage Similarity dim:  torch.Size([5, 126])
Question passage attention dim:  torch.Size([5, 126])
Final Merged Passage dim:  torch.Size([5, 126, 800])
Modeled Passage dim:  torch.Size([5, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 126, 1000])
Span start logits:  torch.Size([5, 126])
span start probs dim:  torch.Size([5, 126])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 126]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 25])
Passage ques attention dim:  torch.Size([5, 132, 25])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 16])
Passage ques attention dim:  torch.Size([5, 108, 16])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 13])
Passage ques attention dim:  torch.Size([5, 145, 13])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 17])
Passage ques attention dim:  torch.Size([5, 130, 17])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 16])
Passage ques attention dim:  torch.Size([5, 179, 16])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 60, 200])
Passage Length:  60
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 60, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 60, 14])
Passage ques attention dim:  torch.Size([5, 60, 14])
Passage question vectors dim:  torch.Size([5, 60, 200])
Question Passage Similarity dim:  torch.Size([5, 60])
Question passage attention dim:  torch.Size([5, 60])
Final Merged Passage dim:  torch.Size([5, 60, 800])
Modeled Passage dim:  torch.Size([5, 60, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 60, 1000])
Span start logits:  torch.Size([5, 60])
span start probs dim:  torch.Size([5, 60])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 60]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 152, 14])
Passage ques attention dim:  torch.Size([5, 152, 14])
Passage question vectors dim:  torch.Size([5, 152, 200])
Question Passage Similarity dim:  torch.Size([5, 152])
Question passage attention dim:  torch.Size([5, 152])
Final Merged Passage dim:  torch.Size([5, 152, 800])
Modeled Passage dim:  torch.Size([5, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 152, 1000])
Span start logits:  torch.Size([5, 152])
span start probs dim:  torch.Size([5, 152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 20])
Passage ques attention dim:  torch.Size([5, 104, 20])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 180, 17])
Passage ques attention dim:  torch.Size([5, 180, 17])
Passage question vectors dim:  torch.Size([5, 180, 200])
Question Passage Similarity dim:  torch.Size([5, 180])
Question passage attention dim:  torch.Size([5, 180])
Final Merged Passage dim:  torch.Size([5, 180, 800])
Modeled Passage dim:  torch.Size([5, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 180, 1000])
Span start logits:  torch.Size([5, 180])
span start probs dim:  torch.Size([5, 180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 184, 19])
Passage ques attention dim:  torch.Size([5, 184, 19])
Passage question vectors dim:  torch.Size([5, 184, 200])
Question Passage Similarity dim:  torch.Size([5, 184])
Question passage attention dim:  torch.Size([5, 184])
Final Merged Passage dim:  torch.Size([5, 184, 800])
Modeled Passage dim:  torch.Size([5, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 184, 1000])
Span start logits:  torch.Size([5, 184])
span start probs dim:  torch.Size([5, 184])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 184]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 19])
Passage ques attention dim:  torch.Size([5, 117, 19])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 22])
Passage ques attention dim:  torch.Size([5, 149, 22])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 15])
Passage ques attention dim:  torch.Size([5, 226, 15])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 14])
Passage ques attention dim:  torch.Size([5, 109, 14])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 15])
Passage ques attention dim:  torch.Size([5, 154, 15])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 13])
Passage ques attention dim:  torch.Size([5, 159, 13])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 16])
Passage ques attention dim:  torch.Size([5, 130, 16])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 15])
Passage ques attention dim:  torch.Size([5, 145, 15])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 18])
Passage ques attention dim:  torch.Size([5, 138, 18])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 350, 19])
Passage ques attention dim:  torch.Size([5, 350, 19])
Passage question vectors dim:  torch.Size([5, 350, 200])
Question Passage Similarity dim:  torch.Size([5, 350])
Question passage attention dim:  torch.Size([5, 350])
Final Merged Passage dim:  torch.Size([5, 350, 800])
Modeled Passage dim:  torch.Size([5, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 350, 1000])
Span start logits:  torch.Size([5, 350])
span start probs dim:  torch.Size([5, 350])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 350]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 15])
Passage ques attention dim:  torch.Size([5, 128, 15])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 16])
Passage ques attention dim:  torch.Size([5, 118, 16])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 13])
Passage ques attention dim:  torch.Size([5, 124, 13])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 17])
Passage ques attention dim:  torch.Size([5, 160, 17])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 168, 14])
Passage ques attention dim:  torch.Size([5, 168, 14])
Passage question vectors dim:  torch.Size([5, 168, 200])
Question Passage Similarity dim:  torch.Size([5, 168])
Question passage attention dim:  torch.Size([5, 168])
Final Merged Passage dim:  torch.Size([5, 168, 800])
Modeled Passage dim:  torch.Size([5, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 168, 1000])
Span start logits:  torch.Size([5, 168])
span start probs dim:  torch.Size([5, 168])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 168]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 260, 200])
Passage Length:  260
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 260, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 260, 13])
Passage ques attention dim:  torch.Size([5, 260, 13])
Passage question vectors dim:  torch.Size([5, 260, 200])
Question Passage Similarity dim:  torch.Size([5, 260])
Question passage attention dim:  torch.Size([5, 260])
Final Merged Passage dim:  torch.Size([5, 260, 800])
Modeled Passage dim:  torch.Size([5, 260, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 260, 1000])
Span start logits:  torch.Size([5, 260])
span start probs dim:  torch.Size([5, 260])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 260]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 18])
Passage ques attention dim:  torch.Size([5, 118, 18])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 11])
Passage ques attention dim:  torch.Size([5, 149, 11])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 305, 200])
Passage Length:  305
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 305, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 305, 17])
Passage ques attention dim:  torch.Size([5, 305, 17])
Passage question vectors dim:  torch.Size([5, 305, 200])
Question Passage Similarity dim:  torch.Size([5, 305])
Question passage attention dim:  torch.Size([5, 305])
Final Merged Passage dim:  torch.Size([5, 305, 800])
Modeled Passage dim:  torch.Size([5, 305, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 305, 1000])
Span start logits:  torch.Size([5, 305])
span start probs dim:  torch.Size([5, 305])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 305]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 18])
Passage ques attention dim:  torch.Size([5, 107, 18])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 12])
Passage ques attention dim:  torch.Size([5, 116, 12])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 19])
Passage ques attention dim:  torch.Size([5, 171, 19])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 16])
Passage ques attention dim:  torch.Size([5, 108, 16])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 11])
Passage ques attention dim:  torch.Size([5, 130, 11])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 18])
Passage ques attention dim:  torch.Size([5, 138, 18])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 12])
Passage ques attention dim:  torch.Size([5, 149, 12])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 17])
Passage ques attention dim:  torch.Size([5, 124, 17])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 15])
Passage ques attention dim:  torch.Size([5, 142, 15])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 15])
Passage ques attention dim:  torch.Size([5, 119, 15])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 12])
Passage ques attention dim:  torch.Size([5, 148, 12])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 11])
Passage ques attention dim:  torch.Size([5, 147, 11])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 15])
Passage ques attention dim:  torch.Size([5, 154, 15])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 14])
Passage ques attention dim:  torch.Size([5, 133, 14])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 228, 16])
Passage ques attention dim:  torch.Size([5, 228, 16])
Passage question vectors dim:  torch.Size([5, 228, 200])
Question Passage Similarity dim:  torch.Size([5, 228])
Question passage attention dim:  torch.Size([5, 228])
Final Merged Passage dim:  torch.Size([5, 228, 800])
Modeled Passage dim:  torch.Size([5, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 228, 1000])
Span start logits:  torch.Size([5, 228])
span start probs dim:  torch.Size([5, 228])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 228]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 13])
Passage ques attention dim:  torch.Size([5, 101, 13])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 14])
Passage ques attention dim:  torch.Size([5, 174, 14])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 297, 11])
Passage ques attention dim:  torch.Size([5, 297, 11])
Passage question vectors dim:  torch.Size([5, 297, 200])
Question Passage Similarity dim:  torch.Size([5, 297])
Question passage attention dim:  torch.Size([5, 297])
Final Merged Passage dim:  torch.Size([5, 297, 800])
Modeled Passage dim:  torch.Size([5, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 297, 1000])
Span start logits:  torch.Size([5, 297])
span start probs dim:  torch.Size([5, 297])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 297]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 17])
Passage ques attention dim:  torch.Size([5, 149, 17])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 151, 11])
Passage ques attention dim:  torch.Size([5, 151, 11])
Passage question vectors dim:  torch.Size([5, 151, 200])
Question Passage Similarity dim:  torch.Size([5, 151])
Question passage attention dim:  torch.Size([5, 151])
Final Merged Passage dim:  torch.Size([5, 151, 800])
Modeled Passage dim:  torch.Size([5, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 151, 1000])
Span start logits:  torch.Size([5, 151])
span start probs dim:  torch.Size([5, 151])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 151]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 16])
Passage ques attention dim:  torch.Size([5, 111, 16])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 105, 11])
Passage ques attention dim:  torch.Size([5, 105, 11])
Passage question vectors dim:  torch.Size([5, 105, 200])
Question Passage Similarity dim:  torch.Size([5, 105])
Question passage attention dim:  torch.Size([5, 105])
Final Merged Passage dim:  torch.Size([5, 105, 800])
Modeled Passage dim:  torch.Size([5, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 105, 1000])
Span start logits:  torch.Size([5, 105])
span start probs dim:  torch.Size([5, 105])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 105]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 13])
Passage ques attention dim:  torch.Size([5, 122, 13])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 173, 17])
Passage ques attention dim:  torch.Size([5, 173, 17])
Passage question vectors dim:  torch.Size([5, 173, 200])
Question Passage Similarity dim:  torch.Size([5, 173])
Question passage attention dim:  torch.Size([5, 173])
Final Merged Passage dim:  torch.Size([5, 173, 800])
Modeled Passage dim:  torch.Size([5, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 173, 1000])
Span start logits:  torch.Size([5, 173])
span start probs dim:  torch.Size([5, 173])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 173]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 95, 15])
Passage ques attention dim:  torch.Size([5, 95, 15])
Passage question vectors dim:  torch.Size([5, 95, 200])
Question Passage Similarity dim:  torch.Size([5, 95])
Question passage attention dim:  torch.Size([5, 95])
Final Merged Passage dim:  torch.Size([5, 95, 800])
Modeled Passage dim:  torch.Size([5, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 95, 1000])
Span start logits:  torch.Size([5, 95])
span start probs dim:  torch.Size([5, 95])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 95]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 25])
Passage ques attention dim:  torch.Size([5, 147, 25])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 18])
Passage ques attention dim:  torch.Size([5, 160, 18])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 212, 22])
Passage ques attention dim:  torch.Size([5, 212, 22])
Passage question vectors dim:  torch.Size([5, 212, 200])
Question Passage Similarity dim:  torch.Size([5, 212])
Question passage attention dim:  torch.Size([5, 212])
Final Merged Passage dim:  torch.Size([5, 212, 800])
Modeled Passage dim:  torch.Size([5, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 212, 1000])
Span start logits:  torch.Size([5, 212])
span start probs dim:  torch.Size([5, 212])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 212]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 16])
Passage ques attention dim:  torch.Size([5, 114, 16])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 15])
Passage ques attention dim:  torch.Size([5, 159, 15])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 15])
Passage ques attention dim:  torch.Size([5, 122, 15])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 52, 16])
Passage ques attention dim:  torch.Size([5, 52, 16])
Passage question vectors dim:  torch.Size([5, 52, 200])
Question Passage Similarity dim:  torch.Size([5, 52])
Question passage attention dim:  torch.Size([5, 52])
Final Merged Passage dim:  torch.Size([5, 52, 800])
Modeled Passage dim:  torch.Size([5, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 52, 1000])
Span start logits:  torch.Size([5, 52])
span start probs dim:  torch.Size([5, 52])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 52]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 12])
Passage ques attention dim:  torch.Size([5, 119, 12])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 13])
Passage ques attention dim:  torch.Size([5, 107, 13])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 12])
Passage ques attention dim:  torch.Size([5, 146, 12])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 18])
Passage ques attention dim:  torch.Size([5, 176, 18])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 86, 16])
Passage ques attention dim:  torch.Size([5, 86, 16])
Passage question vectors dim:  torch.Size([5, 86, 200])
Question Passage Similarity dim:  torch.Size([5, 86])
Question passage attention dim:  torch.Size([5, 86])
Final Merged Passage dim:  torch.Size([5, 86, 800])
Modeled Passage dim:  torch.Size([5, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 86, 1000])
Span start logits:  torch.Size([5, 86])
span start probs dim:  torch.Size([5, 86])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 86]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 215, 17])
Passage ques attention dim:  torch.Size([5, 215, 17])
Passage question vectors dim:  torch.Size([5, 215, 200])
Question Passage Similarity dim:  torch.Size([5, 215])
Question passage attention dim:  torch.Size([5, 215])
Final Merged Passage dim:  torch.Size([5, 215, 800])
Modeled Passage dim:  torch.Size([5, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 215, 1000])
Span start logits:  torch.Size([5, 215])
span start probs dim:  torch.Size([5, 215])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 215]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 15])
Passage ques attention dim:  torch.Size([5, 118, 15])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 16])
Passage ques attention dim:  torch.Size([5, 190, 16])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 12])
Passage ques attention dim:  torch.Size([5, 116, 12])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 15])
Passage ques attention dim:  torch.Size([5, 132, 15])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 153, 13])
Passage ques attention dim:  torch.Size([5, 153, 13])
Passage question vectors dim:  torch.Size([5, 153, 200])
Question Passage Similarity dim:  torch.Size([5, 153])
Question passage attention dim:  torch.Size([5, 153])
Final Merged Passage dim:  torch.Size([5, 153, 800])
Modeled Passage dim:  torch.Size([5, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 153, 1000])
Span start logits:  torch.Size([5, 153])
span start probs dim:  torch.Size([5, 153])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 153]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 71, 14])
Passage ques attention dim:  torch.Size([5, 71, 14])
Passage question vectors dim:  torch.Size([5, 71, 200])
Question Passage Similarity dim:  torch.Size([5, 71])
Question passage attention dim:  torch.Size([5, 71])
Final Merged Passage dim:  torch.Size([5, 71, 800])
Modeled Passage dim:  torch.Size([5, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 71, 1000])
Span start logits:  torch.Size([5, 71])
span start probs dim:  torch.Size([5, 71])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 71]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 202, 18])
Passage ques attention dim:  torch.Size([5, 202, 18])
Passage question vectors dim:  torch.Size([5, 202, 200])
Question Passage Similarity dim:  torch.Size([5, 202])
Question passage attention dim:  torch.Size([5, 202])
Final Merged Passage dim:  torch.Size([5, 202, 800])
Modeled Passage dim:  torch.Size([5, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 202, 1000])
Span start logits:  torch.Size([5, 202])
span start probs dim:  torch.Size([5, 202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 17])
Passage ques attention dim:  torch.Size([5, 94, 17])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 17])
Passage ques attention dim:  torch.Size([5, 118, 17])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 21])
Passage ques attention dim:  torch.Size([5, 199, 21])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 11])
Passage ques attention dim:  torch.Size([5, 104, 11])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 16])
Passage ques attention dim:  torch.Size([5, 195, 16])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 17])
Passage ques attention dim:  torch.Size([5, 111, 17])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 114, 18])
Passage ques attention dim:  torch.Size([5, 114, 18])
Passage question vectors dim:  torch.Size([5, 114, 200])
Question Passage Similarity dim:  torch.Size([5, 114])
Question passage attention dim:  torch.Size([5, 114])
Final Merged Passage dim:  torch.Size([5, 114, 800])
Modeled Passage dim:  torch.Size([5, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 114, 1000])
Span start logits:  torch.Size([5, 114])
span start probs dim:  torch.Size([5, 114])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 114]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 18])
Passage ques attention dim:  torch.Size([5, 149, 18])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 14])
Passage ques attention dim:  torch.Size([5, 177, 14])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 222, 12])
Passage ques attention dim:  torch.Size([5, 222, 12])
Passage question vectors dim:  torch.Size([5, 222, 200])
Question Passage Similarity dim:  torch.Size([5, 222])
Question passage attention dim:  torch.Size([5, 222])
Final Merged Passage dim:  torch.Size([5, 222, 800])
Modeled Passage dim:  torch.Size([5, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 222, 1000])
Span start logits:  torch.Size([5, 222])
span start probs dim:  torch.Size([5, 222])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 222]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 13])
Passage ques attention dim:  torch.Size([5, 110, 13])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 25])
Passage ques attention dim:  torch.Size([5, 110, 25])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 17])
Passage ques attention dim:  torch.Size([5, 124, 17])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 12])
Passage ques attention dim:  torch.Size([5, 123, 12])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 19])
Passage ques attention dim:  torch.Size([5, 154, 19])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 26])
Passage ques attention dim:  torch.Size([5, 131, 26])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 259, 17])
Passage ques attention dim:  torch.Size([5, 259, 17])
Passage question vectors dim:  torch.Size([5, 259, 200])
Question Passage Similarity dim:  torch.Size([5, 259])
Question passage attention dim:  torch.Size([5, 259])
Final Merged Passage dim:  torch.Size([5, 259, 800])
Modeled Passage dim:  torch.Size([5, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 259, 1000])
Span start logits:  torch.Size([5, 259])
span start probs dim:  torch.Size([5, 259])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 259]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 21])
Passage ques attention dim:  torch.Size([5, 117, 21])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 12])
Passage ques attention dim:  torch.Size([5, 127, 12])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 17])
Passage ques attention dim:  torch.Size([5, 188, 17])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 144, 14])
Passage ques attention dim:  torch.Size([5, 144, 14])
Passage question vectors dim:  torch.Size([5, 144, 200])
Question Passage Similarity dim:  torch.Size([5, 144])
Question passage attention dim:  torch.Size([5, 144])
Final Merged Passage dim:  torch.Size([5, 144, 800])
Modeled Passage dim:  torch.Size([5, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 144, 1000])
Span start logits:  torch.Size([5, 144])
span start probs dim:  torch.Size([5, 144])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 144]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 20])
Passage ques attention dim:  torch.Size([5, 116, 20])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 88, 17])
Passage ques attention dim:  torch.Size([5, 88, 17])
Passage question vectors dim:  torch.Size([5, 88, 200])
Question Passage Similarity dim:  torch.Size([5, 88])
Question passage attention dim:  torch.Size([5, 88])
Final Merged Passage dim:  torch.Size([5, 88, 800])
Modeled Passage dim:  torch.Size([5, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 88, 1000])
Span start logits:  torch.Size([5, 88])
span start probs dim:  torch.Size([5, 88])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 88]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 127, 13])
Passage ques attention dim:  torch.Size([5, 127, 13])
Passage question vectors dim:  torch.Size([5, 127, 200])
Question Passage Similarity dim:  torch.Size([5, 127])
Question passage attention dim:  torch.Size([5, 127])
Final Merged Passage dim:  torch.Size([5, 127, 800])
Modeled Passage dim:  torch.Size([5, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 127, 1000])
Span start logits:  torch.Size([5, 127])
span start probs dim:  torch.Size([5, 127])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 127]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 14])
Passage ques attention dim:  torch.Size([5, 138, 14])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 14])
Passage ques attention dim:  torch.Size([5, 193, 14])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 83, 19])
Passage ques attention dim:  torch.Size([5, 83, 19])
Passage question vectors dim:  torch.Size([5, 83, 200])
Question Passage Similarity dim:  torch.Size([5, 83])
Question passage attention dim:  torch.Size([5, 83])
Final Merged Passage dim:  torch.Size([5, 83, 800])
Modeled Passage dim:  torch.Size([5, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 83, 1000])
Span start logits:  torch.Size([5, 83])
span start probs dim:  torch.Size([5, 83])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 83]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 183, 15])
Passage ques attention dim:  torch.Size([5, 183, 15])
Passage question vectors dim:  torch.Size([5, 183, 200])
Question Passage Similarity dim:  torch.Size([5, 183])
Question passage attention dim:  torch.Size([5, 183])
Final Merged Passage dim:  torch.Size([5, 183, 800])
Modeled Passage dim:  torch.Size([5, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 183, 1000])
Span start logits:  torch.Size([5, 183])
span start probs dim:  torch.Size([5, 183])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 183]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 86, 13])
Passage ques attention dim:  torch.Size([5, 86, 13])
Passage question vectors dim:  torch.Size([5, 86, 200])
Question Passage Similarity dim:  torch.Size([5, 86])
Question passage attention dim:  torch.Size([5, 86])
Final Merged Passage dim:  torch.Size([5, 86, 800])
Modeled Passage dim:  torch.Size([5, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 86, 1000])
Span start logits:  torch.Size([5, 86])
span start probs dim:  torch.Size([5, 86])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 86]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 22])
Passage ques attention dim:  torch.Size([5, 119, 22])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 27, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 27, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 27])
Passage ques attention dim:  torch.Size([5, 116, 27])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 211, 17])
Passage ques attention dim:  torch.Size([5, 211, 17])
Passage question vectors dim:  torch.Size([5, 211, 200])
Question Passage Similarity dim:  torch.Size([5, 211])
Question passage attention dim:  torch.Size([5, 211])
Final Merged Passage dim:  torch.Size([5, 211, 800])
Modeled Passage dim:  torch.Size([5, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 211, 1000])
Span start logits:  torch.Size([5, 211])
span start probs dim:  torch.Size([5, 211])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 211]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 15])
Passage ques attention dim:  torch.Size([5, 154, 15])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 17])
Passage ques attention dim:  torch.Size([5, 137, 17])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 20])
Passage ques attention dim:  torch.Size([5, 136, 20])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 94, 21])
Passage ques attention dim:  torch.Size([5, 94, 21])
Passage question vectors dim:  torch.Size([5, 94, 200])
Question Passage Similarity dim:  torch.Size([5, 94])
Question passage attention dim:  torch.Size([5, 94])
Final Merged Passage dim:  torch.Size([5, 94, 800])
Modeled Passage dim:  torch.Size([5, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 94, 1000])
Span start logits:  torch.Size([5, 94])
span start probs dim:  torch.Size([5, 94])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 94]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 26])
Passage ques attention dim:  torch.Size([5, 194, 26])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 18])
Passage ques attention dim:  torch.Size([5, 115, 18])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 15])
Passage ques attention dim:  torch.Size([5, 138, 15])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 13])
Passage ques attention dim:  torch.Size([5, 171, 13])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 33, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 33, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 33])
Passage ques attention dim:  torch.Size([5, 441, 33])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 12])
Passage ques attention dim:  torch.Size([5, 178, 12])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 17])
Passage ques attention dim:  torch.Size([5, 176, 17])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 17])
Passage ques attention dim:  torch.Size([5, 121, 17])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 17])
Passage ques attention dim:  torch.Size([5, 119, 17])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 231, 13])
Passage ques attention dim:  torch.Size([5, 231, 13])
Passage question vectors dim:  torch.Size([5, 231, 200])
Question Passage Similarity dim:  torch.Size([5, 231])
Question passage attention dim:  torch.Size([5, 231])
Final Merged Passage dim:  torch.Size([5, 231, 800])
Modeled Passage dim:  torch.Size([5, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 231, 1000])
Span start logits:  torch.Size([5, 231])
span start probs dim:  torch.Size([5, 231])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 231]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 13])
Passage ques attention dim:  torch.Size([5, 125, 13])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 12])
Passage ques attention dim:  torch.Size([5, 125, 12])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 78, 200])
Passage Length:  78
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 78, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 78, 17])
Passage ques attention dim:  torch.Size([5, 78, 17])
Passage question vectors dim:  torch.Size([5, 78, 200])
Question Passage Similarity dim:  torch.Size([5, 78])
Question passage attention dim:  torch.Size([5, 78])
Final Merged Passage dim:  torch.Size([5, 78, 800])
Modeled Passage dim:  torch.Size([5, 78, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 78, 1000])
Span start logits:  torch.Size([5, 78])
span start probs dim:  torch.Size([5, 78])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 78]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 245, 11])
Passage ques attention dim:  torch.Size([5, 245, 11])
Passage question vectors dim:  torch.Size([5, 245, 200])
Question Passage Similarity dim:  torch.Size([5, 245])
Question passage attention dim:  torch.Size([5, 245])
Final Merged Passage dim:  torch.Size([5, 245, 800])
Modeled Passage dim:  torch.Size([5, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 245, 1000])
Span start logits:  torch.Size([5, 245])
span start probs dim:  torch.Size([5, 245])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 245]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 225, 25])
Passage ques attention dim:  torch.Size([5, 225, 25])
Passage question vectors dim:  torch.Size([5, 225, 200])
Question Passage Similarity dim:  torch.Size([5, 225])
Question passage attention dim:  torch.Size([5, 225])
Final Merged Passage dim:  torch.Size([5, 225, 800])
Modeled Passage dim:  torch.Size([5, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 225, 1000])
Span start logits:  torch.Size([5, 225])
span start probs dim:  torch.Size([5, 225])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 225]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 76, 200])
Passage Length:  76
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 76, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 76, 20])
Passage ques attention dim:  torch.Size([5, 76, 20])
Passage question vectors dim:  torch.Size([5, 76, 200])
Question Passage Similarity dim:  torch.Size([5, 76])
Question passage attention dim:  torch.Size([5, 76])
Final Merged Passage dim:  torch.Size([5, 76, 800])
Modeled Passage dim:  torch.Size([5, 76, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 76, 1000])
Span start logits:  torch.Size([5, 76])
span start probs dim:  torch.Size([5, 76])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 76]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 17])
Passage ques attention dim:  torch.Size([5, 159, 17])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 15])
Passage ques attention dim:  torch.Size([5, 112, 15])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 18])
Passage ques attention dim:  torch.Size([5, 199, 18])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 413, 15])
Passage ques attention dim:  torch.Size([5, 413, 15])
Passage question vectors dim:  torch.Size([5, 413, 200])
Question Passage Similarity dim:  torch.Size([5, 413])
Question passage attention dim:  torch.Size([5, 413])
Final Merged Passage dim:  torch.Size([5, 413, 800])
Modeled Passage dim:  torch.Size([5, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 413, 1000])
Span start logits:  torch.Size([5, 413])
span start probs dim:  torch.Size([5, 413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 16])
Passage ques attention dim:  torch.Size([5, 121, 16])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 38, 200])
Passage Length:  38
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 38, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 38, 15])
Passage ques attention dim:  torch.Size([5, 38, 15])
Passage question vectors dim:  torch.Size([5, 38, 200])
Question Passage Similarity dim:  torch.Size([5, 38])
Question passage attention dim:  torch.Size([5, 38])
Final Merged Passage dim:  torch.Size([5, 38, 800])
Modeled Passage dim:  torch.Size([5, 38, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 38, 1000])
Span start logits:  torch.Size([5, 38])
span start probs dim:  torch.Size([5, 38])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 38]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 14])
Passage ques attention dim:  torch.Size([5, 131, 14])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 31, 200])
Passage Length:  31
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 31, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 31, 12])
Passage ques attention dim:  torch.Size([5, 31, 12])
Passage question vectors dim:  torch.Size([5, 31, 200])
Question Passage Similarity dim:  torch.Size([5, 31])
Question passage attention dim:  torch.Size([5, 31])
Final Merged Passage dim:  torch.Size([5, 31, 800])
Modeled Passage dim:  torch.Size([5, 31, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 31, 1000])
Span start logits:  torch.Size([5, 31])
span start probs dim:  torch.Size([5, 31])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 31]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 15])
Passage ques attention dim:  torch.Size([5, 195, 15])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 61, 200])
Passage Length:  61
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 61, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 61, 13])
Passage ques attention dim:  torch.Size([5, 61, 13])
Passage question vectors dim:  torch.Size([5, 61, 200])
Question Passage Similarity dim:  torch.Size([5, 61])
Question passage attention dim:  torch.Size([5, 61])
Final Merged Passage dim:  torch.Size([5, 61, 800])
Modeled Passage dim:  torch.Size([5, 61, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 61, 1000])
Span start logits:  torch.Size([5, 61])
span start probs dim:  torch.Size([5, 61])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 61]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 90, 15])
Passage ques attention dim:  torch.Size([5, 90, 15])
Passage question vectors dim:  torch.Size([5, 90, 200])
Question Passage Similarity dim:  torch.Size([5, 90])
Question passage attention dim:  torch.Size([5, 90])
Final Merged Passage dim:  torch.Size([5, 90, 800])
Modeled Passage dim:  torch.Size([5, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 90, 1000])
Span start logits:  torch.Size([5, 90])
span start probs dim:  torch.Size([5, 90])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 90]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 70, 18])
Passage ques attention dim:  torch.Size([5, 70, 18])
Passage question vectors dim:  torch.Size([5, 70, 200])
Question Passage Similarity dim:  torch.Size([5, 70])
Question passage attention dim:  torch.Size([5, 70])
Final Merged Passage dim:  torch.Size([5, 70, 800])
Modeled Passage dim:  torch.Size([5, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 70, 1000])
Span start logits:  torch.Size([5, 70])
span start probs dim:  torch.Size([5, 70])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 70]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 185, 23])
Passage ques attention dim:  torch.Size([5, 185, 23])
Passage question vectors dim:  torch.Size([5, 185, 200])
Question Passage Similarity dim:  torch.Size([5, 185])
Question passage attention dim:  torch.Size([5, 185])
Final Merged Passage dim:  torch.Size([5, 185, 800])
Modeled Passage dim:  torch.Size([5, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 185, 1000])
Span start logits:  torch.Size([5, 185])
span start probs dim:  torch.Size([5, 185])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 185]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 19])
Passage ques attention dim:  torch.Size([5, 159, 19])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 92, 19])
Passage ques attention dim:  torch.Size([5, 92, 19])
Passage question vectors dim:  torch.Size([5, 92, 200])
Question Passage Similarity dim:  torch.Size([5, 92])
Question passage attention dim:  torch.Size([5, 92])
Final Merged Passage dim:  torch.Size([5, 92, 800])
Modeled Passage dim:  torch.Size([5, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 92, 1000])
Span start logits:  torch.Size([5, 92])
span start probs dim:  torch.Size([5, 92])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 92]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 15])
Passage ques attention dim:  torch.Size([5, 159, 15])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 139, 13])
Passage ques attention dim:  torch.Size([5, 139, 13])
Passage question vectors dim:  torch.Size([5, 139, 200])
Question Passage Similarity dim:  torch.Size([5, 139])
Question passage attention dim:  torch.Size([5, 139])
Final Merged Passage dim:  torch.Size([5, 139, 800])
Modeled Passage dim:  torch.Size([5, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 139, 1000])
Span start logits:  torch.Size([5, 139])
span start probs dim:  torch.Size([5, 139])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 139]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 11])
Passage ques attention dim:  torch.Size([5, 159, 11])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 12])
Passage ques attention dim:  torch.Size([5, 107, 12])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 16])
Passage ques attention dim:  torch.Size([5, 169, 16])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 58, 200])
Passage Length:  58
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 58, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 58, 14])
Passage ques attention dim:  torch.Size([5, 58, 14])
Passage question vectors dim:  torch.Size([5, 58, 200])
Question Passage Similarity dim:  torch.Size([5, 58])
Question passage attention dim:  torch.Size([5, 58])
Final Merged Passage dim:  torch.Size([5, 58, 800])
Modeled Passage dim:  torch.Size([5, 58, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 58, 1000])
Span start logits:  torch.Size([5, 58])
span start probs dim:  torch.Size([5, 58])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 58]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 16])
Passage ques attention dim:  torch.Size([5, 162, 16])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 170, 19])
Passage ques attention dim:  torch.Size([5, 170, 19])
Passage question vectors dim:  torch.Size([5, 170, 200])
Question Passage Similarity dim:  torch.Size([5, 170])
Question passage attention dim:  torch.Size([5, 170])
Final Merged Passage dim:  torch.Size([5, 170, 800])
Modeled Passage dim:  torch.Size([5, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 170, 1000])
Span start logits:  torch.Size([5, 170])
span start probs dim:  torch.Size([5, 170])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 170]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 22])
Passage ques attention dim:  torch.Size([5, 154, 22])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 12])
Passage ques attention dim:  torch.Size([5, 133, 12])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 190, 16])
Passage ques attention dim:  torch.Size([5, 190, 16])
Passage question vectors dim:  torch.Size([5, 190, 200])
Question Passage Similarity dim:  torch.Size([5, 190])
Question passage attention dim:  torch.Size([5, 190])
Final Merged Passage dim:  torch.Size([5, 190, 800])
Modeled Passage dim:  torch.Size([5, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 190, 1000])
Span start logits:  torch.Size([5, 190])
span start probs dim:  torch.Size([5, 190])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 190]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 12])
Passage ques attention dim:  torch.Size([5, 148, 12])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 18])
Passage ques attention dim:  torch.Size([5, 111, 18])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 188, 22])
Passage ques attention dim:  torch.Size([5, 188, 22])
Passage question vectors dim:  torch.Size([5, 188, 200])
Question Passage Similarity dim:  torch.Size([5, 188])
Question passage attention dim:  torch.Size([5, 188])
Final Merged Passage dim:  torch.Size([5, 188, 800])
Modeled Passage dim:  torch.Size([5, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 188, 1000])
Span start logits:  torch.Size([5, 188])
span start probs dim:  torch.Size([5, 188])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 188]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 16])
Passage ques attention dim:  torch.Size([5, 165, 16])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 282, 200])
Passage Length:  282
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 282, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 282, 15])
Passage ques attention dim:  torch.Size([5, 282, 15])
Passage question vectors dim:  torch.Size([5, 282, 200])
Question Passage Similarity dim:  torch.Size([5, 282])
Question passage attention dim:  torch.Size([5, 282])
Final Merged Passage dim:  torch.Size([5, 282, 800])
Modeled Passage dim:  torch.Size([5, 282, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 282, 1000])
Span start logits:  torch.Size([5, 282])
span start probs dim:  torch.Size([5, 282])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 282]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 19])
Passage ques attention dim:  torch.Size([5, 179, 19])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 13])
Passage ques attention dim:  torch.Size([5, 226, 13])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 117, 17])
Passage ques attention dim:  torch.Size([5, 117, 17])
Passage question vectors dim:  torch.Size([5, 117, 200])
Question Passage Similarity dim:  torch.Size([5, 117])
Question passage attention dim:  torch.Size([5, 117])
Final Merged Passage dim:  torch.Size([5, 117, 800])
Modeled Passage dim:  torch.Size([5, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 117, 1000])
Span start logits:  torch.Size([5, 117])
span start probs dim:  torch.Size([5, 117])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 117]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 280, 200])
Passage Length:  280
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 280, 18])
Passage ques attention dim:  torch.Size([5, 280, 18])
Passage question vectors dim:  torch.Size([5, 280, 200])
Question Passage Similarity dim:  torch.Size([5, 280])
Question passage attention dim:  torch.Size([5, 280])
Final Merged Passage dim:  torch.Size([5, 280, 800])
Modeled Passage dim:  torch.Size([5, 280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 280, 1000])
Span start logits:  torch.Size([5, 280])
span start probs dim:  torch.Size([5, 280])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 280]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 35, 200])
Passage Length:  35
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 35, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 35, 12])
Passage ques attention dim:  torch.Size([5, 35, 12])
Passage question vectors dim:  torch.Size([5, 35, 200])
Question Passage Similarity dim:  torch.Size([5, 35])
Question passage attention dim:  torch.Size([5, 35])
Final Merged Passage dim:  torch.Size([5, 35, 800])
Modeled Passage dim:  torch.Size([5, 35, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 35, 1000])
Span start logits:  torch.Size([5, 35])
span start probs dim:  torch.Size([5, 35])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 35]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 385, 18])
Passage ques attention dim:  torch.Size([5, 385, 18])
Passage question vectors dim:  torch.Size([5, 385, 200])
Question Passage Similarity dim:  torch.Size([5, 385])
Question passage attention dim:  torch.Size([5, 385])
Final Merged Passage dim:  torch.Size([5, 385, 800])
Modeled Passage dim:  torch.Size([5, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 385, 1000])
Span start logits:  torch.Size([5, 385])
span start probs dim:  torch.Size([5, 385])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 385]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 110, 12])
Passage ques attention dim:  torch.Size([5, 110, 12])
Passage question vectors dim:  torch.Size([5, 110, 200])
Question Passage Similarity dim:  torch.Size([5, 110])
Question passage attention dim:  torch.Size([5, 110])
Final Merged Passage dim:  torch.Size([5, 110, 800])
Modeled Passage dim:  torch.Size([5, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 110, 1000])
Span start logits:  torch.Size([5, 110])
span start probs dim:  torch.Size([5, 110])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 110]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 213, 12])
Passage ques attention dim:  torch.Size([5, 213, 12])
Passage question vectors dim:  torch.Size([5, 213, 200])
Question Passage Similarity dim:  torch.Size([5, 213])
Question passage attention dim:  torch.Size([5, 213])
Final Merged Passage dim:  torch.Size([5, 213, 800])
Modeled Passage dim:  torch.Size([5, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 213, 1000])
Span start logits:  torch.Size([5, 213])
span start probs dim:  torch.Size([5, 213])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 213]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 16])
Passage ques attention dim:  torch.Size([5, 194, 16])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 13])
Passage ques attention dim:  torch.Size([5, 128, 13])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 121, 22])
Passage ques attention dim:  torch.Size([5, 121, 22])
Passage question vectors dim:  torch.Size([5, 121, 200])
Question Passage Similarity dim:  torch.Size([5, 121])
Question passage attention dim:  torch.Size([5, 121])
Final Merged Passage dim:  torch.Size([5, 121, 800])
Modeled Passage dim:  torch.Size([5, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 121, 1000])
Span start logits:  torch.Size([5, 121])
span start probs dim:  torch.Size([5, 121])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 121]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 14])
Passage ques attention dim:  torch.Size([5, 147, 14])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 218, 15])
Passage ques attention dim:  torch.Size([5, 218, 15])
Passage question vectors dim:  torch.Size([5, 218, 200])
Question Passage Similarity dim:  torch.Size([5, 218])
Question passage attention dim:  torch.Size([5, 218])
Final Merged Passage dim:  torch.Size([5, 218, 800])
Modeled Passage dim:  torch.Size([5, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 218, 1000])
Span start logits:  torch.Size([5, 218])
span start probs dim:  torch.Size([5, 218])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 218]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 15])
Passage ques attention dim:  torch.Size([5, 112, 15])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 46, 200])
Passage Length:  46
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 46, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 46, 16])
Passage ques attention dim:  torch.Size([5, 46, 16])
Passage question vectors dim:  torch.Size([5, 46, 200])
Question Passage Similarity dim:  torch.Size([5, 46])
Question passage attention dim:  torch.Size([5, 46])
Final Merged Passage dim:  torch.Size([5, 46, 800])
Modeled Passage dim:  torch.Size([5, 46, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 46, 1000])
Span start logits:  torch.Size([5, 46])
span start probs dim:  torch.Size([5, 46])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 46]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 96, 21])
Passage ques attention dim:  torch.Size([5, 96, 21])
Passage question vectors dim:  torch.Size([5, 96, 200])
Question Passage Similarity dim:  torch.Size([5, 96])
Question passage attention dim:  torch.Size([5, 96])
Final Merged Passage dim:  torch.Size([5, 96, 800])
Modeled Passage dim:  torch.Size([5, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 96, 1000])
Span start logits:  torch.Size([5, 96])
span start probs dim:  torch.Size([5, 96])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 96]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 19])
Passage ques attention dim:  torch.Size([5, 123, 19])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 228, 14])
Passage ques attention dim:  torch.Size([5, 228, 14])
Passage question vectors dim:  torch.Size([5, 228, 200])
Question Passage Similarity dim:  torch.Size([5, 228])
Question passage attention dim:  torch.Size([5, 228])
Final Merged Passage dim:  torch.Size([5, 228, 800])
Modeled Passage dim:  torch.Size([5, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 228, 1000])
Span start logits:  torch.Size([5, 228])
span start probs dim:  torch.Size([5, 228])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 228]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 28, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 28, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 28])
Passage ques attention dim:  torch.Size([5, 160, 28])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 253, 200])
Passage Length:  253
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 253, 17])
Passage ques attention dim:  torch.Size([5, 253, 17])
Passage question vectors dim:  torch.Size([5, 253, 200])
Question Passage Similarity dim:  torch.Size([5, 253])
Question passage attention dim:  torch.Size([5, 253])
Final Merged Passage dim:  torch.Size([5, 253, 800])
Modeled Passage dim:  torch.Size([5, 253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 253, 1000])
Span start logits:  torch.Size([5, 253])
span start probs dim:  torch.Size([5, 253])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 253]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 243, 12])
Passage ques attention dim:  torch.Size([5, 243, 12])
Passage question vectors dim:  torch.Size([5, 243, 200])
Question Passage Similarity dim:  torch.Size([5, 243])
Question passage attention dim:  torch.Size([5, 243])
Final Merged Passage dim:  torch.Size([5, 243, 800])
Modeled Passage dim:  torch.Size([5, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 243, 1000])
Span start logits:  torch.Size([5, 243])
span start probs dim:  torch.Size([5, 243])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 243]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 13])
Passage ques attention dim:  torch.Size([5, 149, 13])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 215, 21])
Passage ques attention dim:  torch.Size([5, 215, 21])
Passage question vectors dim:  torch.Size([5, 215, 200])
Question Passage Similarity dim:  torch.Size([5, 215])
Question passage attention dim:  torch.Size([5, 215])
Final Merged Passage dim:  torch.Size([5, 215, 800])
Modeled Passage dim:  torch.Size([5, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 215, 1000])
Span start logits:  torch.Size([5, 215])
span start probs dim:  torch.Size([5, 215])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 215]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 122, 16])
Passage ques attention dim:  torch.Size([5, 122, 16])
Passage question vectors dim:  torch.Size([5, 122, 200])
Question Passage Similarity dim:  torch.Size([5, 122])
Question passage attention dim:  torch.Size([5, 122])
Final Merged Passage dim:  torch.Size([5, 122, 800])
Modeled Passage dim:  torch.Size([5, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 122, 1000])
Span start logits:  torch.Size([5, 122])
span start probs dim:  torch.Size([5, 122])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 122]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 142, 12])
Passage ques attention dim:  torch.Size([5, 142, 12])
Passage question vectors dim:  torch.Size([5, 142, 200])
Question Passage Similarity dim:  torch.Size([5, 142])
Question passage attention dim:  torch.Size([5, 142])
Final Merged Passage dim:  torch.Size([5, 142, 800])
Modeled Passage dim:  torch.Size([5, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 142, 1000])
Span start logits:  torch.Size([5, 142])
span start probs dim:  torch.Size([5, 142])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 142]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 232, 16])
Passage ques attention dim:  torch.Size([5, 232, 16])
Passage question vectors dim:  torch.Size([5, 232, 200])
Question Passage Similarity dim:  torch.Size([5, 232])
Question passage attention dim:  torch.Size([5, 232])
Final Merged Passage dim:  torch.Size([5, 232, 800])
Modeled Passage dim:  torch.Size([5, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 232, 1000])
Span start logits:  torch.Size([5, 232])
span start probs dim:  torch.Size([5, 232])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 232]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 120, 13])
Passage ques attention dim:  torch.Size([5, 120, 13])
Passage question vectors dim:  torch.Size([5, 120, 200])
Question Passage Similarity dim:  torch.Size([5, 120])
Question passage attention dim:  torch.Size([5, 120])
Final Merged Passage dim:  torch.Size([5, 120, 800])
Modeled Passage dim:  torch.Size([5, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 120, 1000])
Span start logits:  torch.Size([5, 120])
span start probs dim:  torch.Size([5, 120])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 120]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 106, 20])
Passage ques attention dim:  torch.Size([5, 106, 20])
Passage question vectors dim:  torch.Size([5, 106, 200])
Question Passage Similarity dim:  torch.Size([5, 106])
Question passage attention dim:  torch.Size([5, 106])
Final Merged Passage dim:  torch.Size([5, 106, 800])
Modeled Passage dim:  torch.Size([5, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 106, 1000])
Span start logits:  torch.Size([5, 106])
span start probs dim:  torch.Size([5, 106])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 106]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 67, 16])
Passage ques attention dim:  torch.Size([5, 67, 16])
Passage question vectors dim:  torch.Size([5, 67, 200])
Question Passage Similarity dim:  torch.Size([5, 67])
Question passage attention dim:  torch.Size([5, 67])
Final Merged Passage dim:  torch.Size([5, 67, 800])
Modeled Passage dim:  torch.Size([5, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 67, 1000])
Span start logits:  torch.Size([5, 67])
span start probs dim:  torch.Size([5, 67])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 67]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 229, 13])
Passage ques attention dim:  torch.Size([5, 229, 13])
Passage question vectors dim:  torch.Size([5, 229, 200])
Question Passage Similarity dim:  torch.Size([5, 229])
Question passage attention dim:  torch.Size([5, 229])
Final Merged Passage dim:  torch.Size([5, 229, 800])
Modeled Passage dim:  torch.Size([5, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 229, 1000])
Span start logits:  torch.Size([5, 229])
span start probs dim:  torch.Size([5, 229])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 229]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 195, 18])
Passage ques attention dim:  torch.Size([5, 195, 18])
Passage question vectors dim:  torch.Size([5, 195, 200])
Question Passage Similarity dim:  torch.Size([5, 195])
Question passage attention dim:  torch.Size([5, 195])
Final Merged Passage dim:  torch.Size([5, 195, 800])
Modeled Passage dim:  torch.Size([5, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 195, 1000])
Span start logits:  torch.Size([5, 195])
span start probs dim:  torch.Size([5, 195])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 195]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 472, 200])
Passage Length:  472
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 472, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 472, 14])
Passage ques attention dim:  torch.Size([5, 472, 14])
Passage question vectors dim:  torch.Size([5, 472, 200])
Question Passage Similarity dim:  torch.Size([5, 472])
Question passage attention dim:  torch.Size([5, 472])
Final Merged Passage dim:  torch.Size([5, 472, 800])
Modeled Passage dim:  torch.Size([5, 472, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 472, 1000])
Span start logits:  torch.Size([5, 472])
span start probs dim:  torch.Size([5, 472])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 472]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 305, 200])
Passage Length:  305
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 305, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 305, 17])
Passage ques attention dim:  torch.Size([5, 305, 17])
Passage question vectors dim:  torch.Size([5, 305, 200])
Question Passage Similarity dim:  torch.Size([5, 305])
Question passage attention dim:  torch.Size([5, 305])
Final Merged Passage dim:  torch.Size([5, 305, 800])
Modeled Passage dim:  torch.Size([5, 305, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 305, 1000])
Span start logits:  torch.Size([5, 305])
span start probs dim:  torch.Size([5, 305])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 305]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 17])
Passage ques attention dim:  torch.Size([5, 102, 17])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 13])
Passage ques attention dim:  torch.Size([5, 138, 13])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 16])
Passage ques attention dim:  torch.Size([5, 150, 16])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 385, 10])
Passage ques attention dim:  torch.Size([5, 385, 10])
Passage question vectors dim:  torch.Size([5, 385, 200])
Question Passage Similarity dim:  torch.Size([5, 385])
Question passage attention dim:  torch.Size([5, 385])
Final Merged Passage dim:  torch.Size([5, 385, 800])
Modeled Passage dim:  torch.Size([5, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 385, 1000])
Span start logits:  torch.Size([5, 385])
span start probs dim:  torch.Size([5, 385])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 385]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 385, 13])
Passage ques attention dim:  torch.Size([5, 385, 13])
Passage question vectors dim:  torch.Size([5, 385, 200])
Question Passage Similarity dim:  torch.Size([5, 385])
Question passage attention dim:  torch.Size([5, 385])
Final Merged Passage dim:  torch.Size([5, 385, 800])
Modeled Passage dim:  torch.Size([5, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 385, 1000])
Span start logits:  torch.Size([5, 385])
span start probs dim:  torch.Size([5, 385])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 385]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 307, 200])
Passage Length:  307
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 307, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 307, 13])
Passage ques attention dim:  torch.Size([5, 307, 13])
Passage question vectors dim:  torch.Size([5, 307, 200])
Question Passage Similarity dim:  torch.Size([5, 307])
Question passage attention dim:  torch.Size([5, 307])
Final Merged Passage dim:  torch.Size([5, 307, 800])
Modeled Passage dim:  torch.Size([5, 307, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 307, 1000])
Span start logits:  torch.Size([5, 307])
span start probs dim:  torch.Size([5, 307])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 307]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 314, 200])
Passage Length:  314
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 314, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 314, 15])
Passage ques attention dim:  torch.Size([5, 314, 15])
Passage question vectors dim:  torch.Size([5, 314, 200])
Question Passage Similarity dim:  torch.Size([5, 314])
Question passage attention dim:  torch.Size([5, 314])
Final Merged Passage dim:  torch.Size([5, 314, 800])
Modeled Passage dim:  torch.Size([5, 314, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 314, 1000])
Span start logits:  torch.Size([5, 314])
span start probs dim:  torch.Size([5, 314])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 314]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 19])
Passage ques attention dim:  torch.Size([5, 124, 19])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 13])
Passage ques attention dim:  torch.Size([5, 169, 13])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 14])
Passage ques attention dim:  torch.Size([5, 119, 14])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 231, 16])
Passage ques attention dim:  torch.Size([5, 231, 16])
Passage question vectors dim:  torch.Size([5, 231, 200])
Question Passage Similarity dim:  torch.Size([5, 231])
Question passage attention dim:  torch.Size([5, 231])
Final Merged Passage dim:  torch.Size([5, 231, 800])
Modeled Passage dim:  torch.Size([5, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 231, 1000])
Span start logits:  torch.Size([5, 231])
span start probs dim:  torch.Size([5, 231])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 231]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 241, 200])
Passage Length:  241
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 241, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 241, 13])
Passage ques attention dim:  torch.Size([5, 241, 13])
Passage question vectors dim:  torch.Size([5, 241, 200])
Question Passage Similarity dim:  torch.Size([5, 241])
Question passage attention dim:  torch.Size([5, 241])
Final Merged Passage dim:  torch.Size([5, 241, 800])
Modeled Passage dim:  torch.Size([5, 241, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 241, 1000])
Span start logits:  torch.Size([5, 241])
span start probs dim:  torch.Size([5, 241])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 241]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 13])
Passage ques attention dim:  torch.Size([5, 116, 13])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 16])
Passage ques attention dim:  torch.Size([5, 124, 16])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 118, 19])
Passage ques attention dim:  torch.Size([5, 118, 19])
Passage question vectors dim:  torch.Size([5, 118, 200])
Question Passage Similarity dim:  torch.Size([5, 118])
Question passage attention dim:  torch.Size([5, 118])
Final Merged Passage dim:  torch.Size([5, 118, 800])
Modeled Passage dim:  torch.Size([5, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 118, 1000])
Span start logits:  torch.Size([5, 118])
span start probs dim:  torch.Size([5, 118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 265, 200])
Passage Length:  265
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 265, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 265, 21])
Passage ques attention dim:  torch.Size([5, 265, 21])
Passage question vectors dim:  torch.Size([5, 265, 200])
Question Passage Similarity dim:  torch.Size([5, 265])
Question passage attention dim:  torch.Size([5, 265])
Final Merged Passage dim:  torch.Size([5, 265, 800])
Modeled Passage dim:  torch.Size([5, 265, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 265, 1000])
Span start logits:  torch.Size([5, 265])
span start probs dim:  torch.Size([5, 265])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 265]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 123, 17])
Passage ques attention dim:  torch.Size([5, 123, 17])
Passage question vectors dim:  torch.Size([5, 123, 200])
Question Passage Similarity dim:  torch.Size([5, 123])
Question passage attention dim:  torch.Size([5, 123])
Final Merged Passage dim:  torch.Size([5, 123, 800])
Modeled Passage dim:  torch.Size([5, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 123, 1000])
Span start logits:  torch.Size([5, 123])
span start probs dim:  torch.Size([5, 123])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 123]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 16])
Passage ques attention dim:  torch.Size([5, 258, 16])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 179, 17])
Passage ques attention dim:  torch.Size([5, 179, 17])
Passage question vectors dim:  torch.Size([5, 179, 200])
Question Passage Similarity dim:  torch.Size([5, 179])
Question passage attention dim:  torch.Size([5, 179])
Final Merged Passage dim:  torch.Size([5, 179, 800])
Modeled Passage dim:  torch.Size([5, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 179, 1000])
Span start logits:  torch.Size([5, 179])
span start probs dim:  torch.Size([5, 179])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 179]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 18])
Passage ques attention dim:  torch.Size([5, 132, 18])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 141, 14])
Passage ques attention dim:  torch.Size([5, 141, 14])
Passage question vectors dim:  torch.Size([5, 141, 200])
Question Passage Similarity dim:  torch.Size([5, 141])
Question passage attention dim:  torch.Size([5, 141])
Final Merged Passage dim:  torch.Size([5, 141, 800])
Modeled Passage dim:  torch.Size([5, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 141, 1000])
Span start logits:  torch.Size([5, 141])
span start probs dim:  torch.Size([5, 141])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 141]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 145, 12])
Passage ques attention dim:  torch.Size([5, 145, 12])
Passage question vectors dim:  torch.Size([5, 145, 200])
Question Passage Similarity dim:  torch.Size([5, 145])
Question passage attention dim:  torch.Size([5, 145])
Final Merged Passage dim:  torch.Size([5, 145, 800])
Modeled Passage dim:  torch.Size([5, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 145, 1000])
Span start logits:  torch.Size([5, 145])
span start probs dim:  torch.Size([5, 145])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 145]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 138, 16])
Passage ques attention dim:  torch.Size([5, 138, 16])
Passage question vectors dim:  torch.Size([5, 138, 200])
Question Passage Similarity dim:  torch.Size([5, 138])
Question passage attention dim:  torch.Size([5, 138])
Final Merged Passage dim:  torch.Size([5, 138, 800])
Modeled Passage dim:  torch.Size([5, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 138, 1000])
Span start logits:  torch.Size([5, 138])
span start probs dim:  torch.Size([5, 138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 56, 200])
Passage Length:  56
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 56, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 56, 11])
Passage ques attention dim:  torch.Size([5, 56, 11])
Passage question vectors dim:  torch.Size([5, 56, 200])
Question Passage Similarity dim:  torch.Size([5, 56])
Question passage attention dim:  torch.Size([5, 56])
Final Merged Passage dim:  torch.Size([5, 56, 800])
Modeled Passage dim:  torch.Size([5, 56, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 56, 1000])
Span start logits:  torch.Size([5, 56])
span start probs dim:  torch.Size([5, 56])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 56]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 20])
Passage ques attention dim:  torch.Size([5, 104, 20])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 91, 13])
Passage ques attention dim:  torch.Size([5, 91, 13])
Passage question vectors dim:  torch.Size([5, 91, 200])
Question Passage Similarity dim:  torch.Size([5, 91])
Question passage attention dim:  torch.Size([5, 91])
Final Merged Passage dim:  torch.Size([5, 91, 800])
Modeled Passage dim:  torch.Size([5, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 91, 1000])
Span start logits:  torch.Size([5, 91])
span start probs dim:  torch.Size([5, 91])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 91]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 150, 26])
Passage ques attention dim:  torch.Size([5, 150, 26])
Passage question vectors dim:  torch.Size([5, 150, 200])
Question Passage Similarity dim:  torch.Size([5, 150])
Question passage attention dim:  torch.Size([5, 150])
Final Merged Passage dim:  torch.Size([5, 150, 800])
Modeled Passage dim:  torch.Size([5, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 150, 1000])
Span start logits:  torch.Size([5, 150])
span start probs dim:  torch.Size([5, 150])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 150]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 64, 11])
Passage ques attention dim:  torch.Size([5, 64, 11])
Passage question vectors dim:  torch.Size([5, 64, 200])
Question Passage Similarity dim:  torch.Size([5, 64])
Question passage attention dim:  torch.Size([5, 64])
Final Merged Passage dim:  torch.Size([5, 64, 800])
Modeled Passage dim:  torch.Size([5, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 64, 1000])
Span start logits:  torch.Size([5, 64])
span start probs dim:  torch.Size([5, 64])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 64]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 212, 17])
Passage ques attention dim:  torch.Size([5, 212, 17])
Passage question vectors dim:  torch.Size([5, 212, 200])
Question Passage Similarity dim:  torch.Size([5, 212])
Question passage attention dim:  torch.Size([5, 212])
Final Merged Passage dim:  torch.Size([5, 212, 800])
Modeled Passage dim:  torch.Size([5, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 212, 1000])
Span start logits:  torch.Size([5, 212])
span start probs dim:  torch.Size([5, 212])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 212]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 57, 200])
Passage Length:  57
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 57, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 57, 13])
Passage ques attention dim:  torch.Size([5, 57, 13])
Passage question vectors dim:  torch.Size([5, 57, 200])
Question Passage Similarity dim:  torch.Size([5, 57])
Question passage attention dim:  torch.Size([5, 57])
Final Merged Passage dim:  torch.Size([5, 57, 800])
Modeled Passage dim:  torch.Size([5, 57, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 57, 1000])
Span start logits:  torch.Size([5, 57])
span start probs dim:  torch.Size([5, 57])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 57]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 59, 200])
Passage Length:  59
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 59, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 59, 12])
Passage ques attention dim:  torch.Size([5, 59, 12])
Passage question vectors dim:  torch.Size([5, 59, 200])
Question Passage Similarity dim:  torch.Size([5, 59])
Question passage attention dim:  torch.Size([5, 59])
Final Merged Passage dim:  torch.Size([5, 59, 800])
Modeled Passage dim:  torch.Size([5, 59, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 59, 1000])
Span start logits:  torch.Size([5, 59])
span start probs dim:  torch.Size([5, 59])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 59]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 25])
Passage ques attention dim:  torch.Size([5, 129, 25])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 19])
Passage ques attention dim:  torch.Size([5, 104, 19])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 22])
Passage ques attention dim:  torch.Size([5, 177, 22])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 119, 14])
Passage ques attention dim:  torch.Size([5, 119, 14])
Passage question vectors dim:  torch.Size([5, 119, 200])
Question Passage Similarity dim:  torch.Size([5, 119])
Question passage attention dim:  torch.Size([5, 119])
Final Merged Passage dim:  torch.Size([5, 119, 800])
Modeled Passage dim:  torch.Size([5, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 119, 1000])
Span start logits:  torch.Size([5, 119])
span start probs dim:  torch.Size([5, 119])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 119]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 149, 19])
Passage ques attention dim:  torch.Size([5, 149, 19])
Passage question vectors dim:  torch.Size([5, 149, 200])
Question Passage Similarity dim:  torch.Size([5, 149])
Question passage attention dim:  torch.Size([5, 149])
Final Merged Passage dim:  torch.Size([5, 149, 800])
Modeled Passage dim:  torch.Size([5, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 149, 1000])
Span start logits:  torch.Size([5, 149])
span start probs dim:  torch.Size([5, 149])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 149]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 129, 20])
Passage ques attention dim:  torch.Size([5, 129, 20])
Passage question vectors dim:  torch.Size([5, 129, 200])
Question Passage Similarity dim:  torch.Size([5, 129])
Question passage attention dim:  torch.Size([5, 129])
Final Merged Passage dim:  torch.Size([5, 129, 800])
Modeled Passage dim:  torch.Size([5, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 129, 1000])
Span start logits:  torch.Size([5, 129])
span start probs dim:  torch.Size([5, 129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 86, 12])
Passage ques attention dim:  torch.Size([5, 86, 12])
Passage question vectors dim:  torch.Size([5, 86, 200])
Question Passage Similarity dim:  torch.Size([5, 86])
Question passage attention dim:  torch.Size([5, 86])
Final Merged Passage dim:  torch.Size([5, 86, 800])
Modeled Passage dim:  torch.Size([5, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 86, 1000])
Span start logits:  torch.Size([5, 86])
span start probs dim:  torch.Size([5, 86])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 86]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 108, 15])
Passage ques attention dim:  torch.Size([5, 108, 15])
Passage question vectors dim:  torch.Size([5, 108, 200])
Question Passage Similarity dim:  torch.Size([5, 108])
Question passage attention dim:  torch.Size([5, 108])
Final Merged Passage dim:  torch.Size([5, 108, 800])
Modeled Passage dim:  torch.Size([5, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 108, 1000])
Span start logits:  torch.Size([5, 108])
span start probs dim:  torch.Size([5, 108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 177, 11])
Passage ques attention dim:  torch.Size([5, 177, 11])
Passage question vectors dim:  torch.Size([5, 177, 200])
Question Passage Similarity dim:  torch.Size([5, 177])
Question passage attention dim:  torch.Size([5, 177])
Final Merged Passage dim:  torch.Size([5, 177, 800])
Modeled Passage dim:  torch.Size([5, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 177, 1000])
Span start logits:  torch.Size([5, 177])
span start probs dim:  torch.Size([5, 177])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 177]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 17])
Passage ques attention dim:  torch.Size([5, 102, 17])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 14])
Passage ques attention dim:  torch.Size([5, 112, 14])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 22])
Passage ques attention dim:  torch.Size([5, 165, 22])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 20])
Passage ques attention dim:  torch.Size([5, 161, 20])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 147, 13])
Passage ques attention dim:  torch.Size([5, 147, 13])
Passage question vectors dim:  torch.Size([5, 147, 200])
Question Passage Similarity dim:  torch.Size([5, 147])
Question passage attention dim:  torch.Size([5, 147])
Final Merged Passage dim:  torch.Size([5, 147, 800])
Modeled Passage dim:  torch.Size([5, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 147, 1000])
Span start logits:  torch.Size([5, 147])
span start probs dim:  torch.Size([5, 147])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 147]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 175, 17])
Passage ques attention dim:  torch.Size([5, 175, 17])
Passage question vectors dim:  torch.Size([5, 175, 200])
Question Passage Similarity dim:  torch.Size([5, 175])
Question passage attention dim:  torch.Size([5, 175])
Final Merged Passage dim:  torch.Size([5, 175, 800])
Modeled Passage dim:  torch.Size([5, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 175, 1000])
Span start logits:  torch.Size([5, 175])
span start probs dim:  torch.Size([5, 175])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 175]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 24, 200])
Embedded passage dim:  torch.Size([5, 706, 200])
Passage Length:  706
Encoded question dim:  torch.Size([5, 24, 200])
Encoded passage dim:  torch.Size([5, 706, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 706, 24])
Passage ques attention dim:  torch.Size([5, 706, 24])
Passage question vectors dim:  torch.Size([5, 706, 200])
Question Passage Similarity dim:  torch.Size([5, 706])
Question passage attention dim:  torch.Size([5, 706])
Final Merged Passage dim:  torch.Size([5, 706, 800])
Modeled Passage dim:  torch.Size([5, 706, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 706, 1000])
Span start logits:  torch.Size([5, 706])
span start probs dim:  torch.Size([5, 706])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 706]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 198, 21])
Passage ques attention dim:  torch.Size([5, 198, 21])
Passage question vectors dim:  torch.Size([5, 198, 200])
Question Passage Similarity dim:  torch.Size([5, 198])
Question passage attention dim:  torch.Size([5, 198])
Final Merged Passage dim:  torch.Size([5, 198, 800])
Modeled Passage dim:  torch.Size([5, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 198, 1000])
Span start logits:  torch.Size([5, 198])
span start probs dim:  torch.Size([5, 198])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 198]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 17])
Passage ques attention dim:  torch.Size([5, 128, 17])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 23, 200])
Embedded passage dim:  torch.Size([5, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([5, 23, 200])
Encoded passage dim:  torch.Size([5, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 107, 23])
Passage ques attention dim:  torch.Size([5, 107, 23])
Passage question vectors dim:  torch.Size([5, 107, 200])
Question Passage Similarity dim:  torch.Size([5, 107])
Question passage attention dim:  torch.Size([5, 107])
Final Merged Passage dim:  torch.Size([5, 107, 800])
Modeled Passage dim:  torch.Size([5, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 107, 1000])
Span start logits:  torch.Size([5, 107])
span start probs dim:  torch.Size([5, 107])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 107]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 135, 22])
Passage ques attention dim:  torch.Size([5, 135, 22])
Passage question vectors dim:  torch.Size([5, 135, 200])
Question Passage Similarity dim:  torch.Size([5, 135])
Question passage attention dim:  torch.Size([5, 135])
Final Merged Passage dim:  torch.Size([5, 135, 800])
Modeled Passage dim:  torch.Size([5, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 135, 1000])
Span start logits:  torch.Size([5, 135])
span start probs dim:  torch.Size([5, 135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 227, 17])
Passage ques attention dim:  torch.Size([5, 227, 17])
Passage question vectors dim:  torch.Size([5, 227, 200])
Question Passage Similarity dim:  torch.Size([5, 227])
Question passage attention dim:  torch.Size([5, 227])
Final Merged Passage dim:  torch.Size([5, 227, 800])
Modeled Passage dim:  torch.Size([5, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 227, 1000])
Span start logits:  torch.Size([5, 227])
span start probs dim:  torch.Size([5, 227])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 227]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 130, 17])
Passage ques attention dim:  torch.Size([5, 130, 17])
Passage question vectors dim:  torch.Size([5, 130, 200])
Question Passage Similarity dim:  torch.Size([5, 130])
Question passage attention dim:  torch.Size([5, 130])
Final Merged Passage dim:  torch.Size([5, 130, 800])
Modeled Passage dim:  torch.Size([5, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 130, 1000])
Span start logits:  torch.Size([5, 130])
span start probs dim:  torch.Size([5, 130])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 130]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 131, 15])
Passage ques attention dim:  torch.Size([5, 131, 15])
Passage question vectors dim:  torch.Size([5, 131, 200])
Question Passage Similarity dim:  torch.Size([5, 131])
Question passage attention dim:  torch.Size([5, 131])
Final Merged Passage dim:  torch.Size([5, 131, 800])
Modeled Passage dim:  torch.Size([5, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 131, 1000])
Span start logits:  torch.Size([5, 131])
span start probs dim:  torch.Size([5, 131])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 131]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 100, 16])
Passage ques attention dim:  torch.Size([5, 100, 16])
Passage question vectors dim:  torch.Size([5, 100, 200])
Question Passage Similarity dim:  torch.Size([5, 100])
Question passage attention dim:  torch.Size([5, 100])
Final Merged Passage dim:  torch.Size([5, 100, 800])
Modeled Passage dim:  torch.Size([5, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 100, 1000])
Span start logits:  torch.Size([5, 100])
span start probs dim:  torch.Size([5, 100])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 100]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 231, 17])
Passage ques attention dim:  torch.Size([5, 231, 17])
Passage question vectors dim:  torch.Size([5, 231, 200])
Question Passage Similarity dim:  torch.Size([5, 231])
Question passage attention dim:  torch.Size([5, 231])
Final Merged Passage dim:  torch.Size([5, 231, 800])
Modeled Passage dim:  torch.Size([5, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 231, 1000])
Span start logits:  torch.Size([5, 231])
span start probs dim:  torch.Size([5, 231])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 231]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 174, 15])
Passage ques attention dim:  torch.Size([5, 174, 15])
Passage question vectors dim:  torch.Size([5, 174, 200])
Question Passage Similarity dim:  torch.Size([5, 174])
Question passage attention dim:  torch.Size([5, 174])
Final Merged Passage dim:  torch.Size([5, 174, 800])
Modeled Passage dim:  torch.Size([5, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 174, 1000])
Span start logits:  torch.Size([5, 174])
span start probs dim:  torch.Size([5, 174])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 174]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 25, 200])
Embedded passage dim:  torch.Size([5, 265, 200])
Passage Length:  265
Encoded question dim:  torch.Size([5, 25, 200])
Encoded passage dim:  torch.Size([5, 265, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 265, 25])
Passage ques attention dim:  torch.Size([5, 265, 25])
Passage question vectors dim:  torch.Size([5, 265, 200])
Question Passage Similarity dim:  torch.Size([5, 265])
Question passage attention dim:  torch.Size([5, 265])
Final Merged Passage dim:  torch.Size([5, 265, 800])
Modeled Passage dim:  torch.Size([5, 265, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 265, 1000])
Span start logits:  torch.Size([5, 265])
span start probs dim:  torch.Size([5, 265])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 265]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 19])
Passage ques attention dim:  torch.Size([5, 159, 19])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 14])
Passage ques attention dim:  torch.Size([5, 128, 14])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 14])
Passage ques attention dim:  torch.Size([5, 187, 14])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 15])
Passage ques attention dim:  torch.Size([5, 116, 15])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 15])
Passage ques attention dim:  torch.Size([5, 171, 15])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 16])
Passage ques attention dim:  torch.Size([5, 104, 16])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 101, 18])
Passage ques attention dim:  torch.Size([5, 101, 18])
Passage question vectors dim:  torch.Size([5, 101, 200])
Question Passage Similarity dim:  torch.Size([5, 101])
Question passage attention dim:  torch.Size([5, 101])
Final Merged Passage dim:  torch.Size([5, 101, 800])
Modeled Passage dim:  torch.Size([5, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 101, 1000])
Span start logits:  torch.Size([5, 101])
span start probs dim:  torch.Size([5, 101])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 101]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 146, 19])
Passage ques attention dim:  torch.Size([5, 146, 19])
Passage question vectors dim:  torch.Size([5, 146, 200])
Question Passage Similarity dim:  torch.Size([5, 146])
Question passage attention dim:  torch.Size([5, 146])
Final Merged Passage dim:  torch.Size([5, 146, 800])
Modeled Passage dim:  torch.Size([5, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 146, 1000])
Span start logits:  torch.Size([5, 146])
span start probs dim:  torch.Size([5, 146])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 146]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 15])
Passage ques attention dim:  torch.Size([5, 234, 15])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 168, 14])
Passage ques attention dim:  torch.Size([5, 168, 14])
Passage question vectors dim:  torch.Size([5, 168, 200])
Question Passage Similarity dim:  torch.Size([5, 168])
Question passage attention dim:  torch.Size([5, 168])
Final Merged Passage dim:  torch.Size([5, 168, 800])
Modeled Passage dim:  torch.Size([5, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 168, 1000])
Span start logits:  torch.Size([5, 168])
span start probs dim:  torch.Size([5, 168])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 168]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 17])
Passage ques attention dim:  torch.Size([5, 178, 17])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 159, 16])
Passage ques attention dim:  torch.Size([5, 159, 16])
Passage question vectors dim:  torch.Size([5, 159, 200])
Question Passage Similarity dim:  torch.Size([5, 159])
Question passage attention dim:  torch.Size([5, 159])
Final Merged Passage dim:  torch.Size([5, 159, 800])
Modeled Passage dim:  torch.Size([5, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 159, 1000])
Span start logits:  torch.Size([5, 159])
span start probs dim:  torch.Size([5, 159])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 159]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 39, 200])
Passage Length:  39
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 39, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 39, 26])
Passage ques attention dim:  torch.Size([5, 39, 26])
Passage question vectors dim:  torch.Size([5, 39, 200])
Question Passage Similarity dim:  torch.Size([5, 39])
Question passage attention dim:  torch.Size([5, 39])
Final Merged Passage dim:  torch.Size([5, 39, 800])
Modeled Passage dim:  torch.Size([5, 39, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 39, 1000])
Span start logits:  torch.Size([5, 39])
span start probs dim:  torch.Size([5, 39])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 39]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 109, 16])
Passage ques attention dim:  torch.Size([5, 109, 16])
Passage question vectors dim:  torch.Size([5, 109, 200])
Question Passage Similarity dim:  torch.Size([5, 109])
Question passage attention dim:  torch.Size([5, 109])
Final Merged Passage dim:  torch.Size([5, 109, 800])
Modeled Passage dim:  torch.Size([5, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 109, 1000])
Span start logits:  torch.Size([5, 109])
span start probs dim:  torch.Size([5, 109])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 109]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 279, 200])
Passage Length:  279
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 279, 14])
Passage ques attention dim:  torch.Size([5, 279, 14])
Passage question vectors dim:  torch.Size([5, 279, 200])
Question Passage Similarity dim:  torch.Size([5, 279])
Question passage attention dim:  torch.Size([5, 279])
Final Merged Passage dim:  torch.Size([5, 279, 800])
Modeled Passage dim:  torch.Size([5, 279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 279, 1000])
Span start logits:  torch.Size([5, 279])
span start probs dim:  torch.Size([5, 279])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 279]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 17])
Passage ques attention dim:  torch.Size([5, 116, 17])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 241, 200])
Passage Length:  241
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 241, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 241, 17])
Passage ques attention dim:  torch.Size([5, 241, 17])
Passage question vectors dim:  torch.Size([5, 241, 200])
Question Passage Similarity dim:  torch.Size([5, 241])
Question passage attention dim:  torch.Size([5, 241])
Final Merged Passage dim:  torch.Size([5, 241, 800])
Modeled Passage dim:  torch.Size([5, 241, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 241, 1000])
Span start logits:  torch.Size([5, 241])
span start probs dim:  torch.Size([5, 241])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 241]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 140, 17])
Passage ques attention dim:  torch.Size([5, 140, 17])
Passage question vectors dim:  torch.Size([5, 140, 200])
Question Passage Similarity dim:  torch.Size([5, 140])
Question passage attention dim:  torch.Size([5, 140])
Final Merged Passage dim:  torch.Size([5, 140, 800])
Modeled Passage dim:  torch.Size([5, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 140, 1000])
Span start logits:  torch.Size([5, 140])
span start probs dim:  torch.Size([5, 140])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 140]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 26])
Passage ques attention dim:  torch.Size([5, 254, 26])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 17])
Passage ques attention dim:  torch.Size([5, 171, 17])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 14])
Passage ques attention dim:  torch.Size([5, 104, 14])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 17])
Passage ques attention dim:  torch.Size([5, 104, 17])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 111, 15])
Passage ques attention dim:  torch.Size([5, 111, 15])
Passage question vectors dim:  torch.Size([5, 111, 200])
Question Passage Similarity dim:  torch.Size([5, 111])
Question passage attention dim:  torch.Size([5, 111])
Final Merged Passage dim:  torch.Size([5, 111, 800])
Modeled Passage dim:  torch.Size([5, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 111, 1000])
Span start logits:  torch.Size([5, 111])
span start probs dim:  torch.Size([5, 111])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 111]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 74, 16])
Passage ques attention dim:  torch.Size([5, 74, 16])
Passage question vectors dim:  torch.Size([5, 74, 200])
Question Passage Similarity dim:  torch.Size([5, 74])
Question passage attention dim:  torch.Size([5, 74])
Final Merged Passage dim:  torch.Size([5, 74, 800])
Modeled Passage dim:  torch.Size([5, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 74, 1000])
Span start logits:  torch.Size([5, 74])
span start probs dim:  torch.Size([5, 74])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 74]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 99, 16])
Passage ques attention dim:  torch.Size([5, 99, 16])
Passage question vectors dim:  torch.Size([5, 99, 200])
Question Passage Similarity dim:  torch.Size([5, 99])
Question passage attention dim:  torch.Size([5, 99])
Final Merged Passage dim:  torch.Size([5, 99, 800])
Modeled Passage dim:  torch.Size([5, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 99, 1000])
Span start logits:  torch.Size([5, 99])
span start probs dim:  torch.Size([5, 99])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 99]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 115, 15])
Passage ques attention dim:  torch.Size([5, 115, 15])
Passage question vectors dim:  torch.Size([5, 115, 200])
Question Passage Similarity dim:  torch.Size([5, 115])
Question passage attention dim:  torch.Size([5, 115])
Final Merged Passage dim:  torch.Size([5, 115, 800])
Modeled Passage dim:  torch.Size([5, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 115, 1000])
Span start logits:  torch.Size([5, 115])
span start probs dim:  torch.Size([5, 115])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 115]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 41, 200])
Passage Length:  41
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 41, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 41, 16])
Passage ques attention dim:  torch.Size([5, 41, 16])
Passage question vectors dim:  torch.Size([5, 41, 200])
Question Passage Similarity dim:  torch.Size([5, 41])
Question passage attention dim:  torch.Size([5, 41])
Final Merged Passage dim:  torch.Size([5, 41, 800])
Modeled Passage dim:  torch.Size([5, 41, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 41, 1000])
Span start logits:  torch.Size([5, 41])
span start probs dim:  torch.Size([5, 41])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 41]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 73, 14])
Passage ques attention dim:  torch.Size([5, 73, 14])
Passage question vectors dim:  torch.Size([5, 73, 200])
Question Passage Similarity dim:  torch.Size([5, 73])
Question passage attention dim:  torch.Size([5, 73])
Final Merged Passage dim:  torch.Size([5, 73, 800])
Modeled Passage dim:  torch.Size([5, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 73, 1000])
Span start logits:  torch.Size([5, 73])
span start probs dim:  torch.Size([5, 73])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 73]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 207, 16])
Passage ques attention dim:  torch.Size([5, 207, 16])
Passage question vectors dim:  torch.Size([5, 207, 200])
Question Passage Similarity dim:  torch.Size([5, 207])
Question passage attention dim:  torch.Size([5, 207])
Final Merged Passage dim:  torch.Size([5, 207, 800])
Modeled Passage dim:  torch.Size([5, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 207, 1000])
Span start logits:  torch.Size([5, 207])
span start probs dim:  torch.Size([5, 207])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 207]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 133, 18])
Passage ques attention dim:  torch.Size([5, 133, 18])
Passage question vectors dim:  torch.Size([5, 133, 200])
Question Passage Similarity dim:  torch.Size([5, 133])
Question passage attention dim:  torch.Size([5, 133])
Final Merged Passage dim:  torch.Size([5, 133, 800])
Modeled Passage dim:  torch.Size([5, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 133, 1000])
Span start logits:  torch.Size([5, 133])
span start probs dim:  torch.Size([5, 133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 61, 200])
Passage Length:  61
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 61, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 61, 17])
Passage ques attention dim:  torch.Size([5, 61, 17])
Passage question vectors dim:  torch.Size([5, 61, 200])
Question Passage Similarity dim:  torch.Size([5, 61])
Question passage attention dim:  torch.Size([5, 61])
Final Merged Passage dim:  torch.Size([5, 61, 800])
Modeled Passage dim:  torch.Size([5, 61, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 61, 1000])
Span start logits:  torch.Size([5, 61])
span start probs dim:  torch.Size([5, 61])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 61]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 125, 13])
Passage ques attention dim:  torch.Size([5, 125, 13])
Passage question vectors dim:  torch.Size([5, 125, 200])
Question Passage Similarity dim:  torch.Size([5, 125])
Question passage attention dim:  torch.Size([5, 125])
Final Merged Passage dim:  torch.Size([5, 125, 800])
Modeled Passage dim:  torch.Size([5, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 125, 1000])
Span start logits:  torch.Size([5, 125])
span start probs dim:  torch.Size([5, 125])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 125]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 31, 200])
Embedded passage dim:  torch.Size([5, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([5, 31, 200])
Encoded passage dim:  torch.Size([5, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 413, 31])
Passage ques attention dim:  torch.Size([5, 413, 31])
Passage question vectors dim:  torch.Size([5, 413, 200])
Question Passage Similarity dim:  torch.Size([5, 413])
Question passage attention dim:  torch.Size([5, 413])
Final Merged Passage dim:  torch.Size([5, 413, 800])
Modeled Passage dim:  torch.Size([5, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 413, 1000])
Span start logits:  torch.Size([5, 413])
span start probs dim:  torch.Size([5, 413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 102, 18])
Passage ques attention dim:  torch.Size([5, 102, 18])
Passage question vectors dim:  torch.Size([5, 102, 200])
Question Passage Similarity dim:  torch.Size([5, 102])
Question passage attention dim:  torch.Size([5, 102])
Final Merged Passage dim:  torch.Size([5, 102, 800])
Modeled Passage dim:  torch.Size([5, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 102, 1000])
Span start logits:  torch.Size([5, 102])
span start probs dim:  torch.Size([5, 102])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 102]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 187, 16])
Passage ques attention dim:  torch.Size([5, 187, 16])
Passage question vectors dim:  torch.Size([5, 187, 200])
Question Passage Similarity dim:  torch.Size([5, 187])
Question passage attention dim:  torch.Size([5, 187])
Final Merged Passage dim:  torch.Size([5, 187, 800])
Modeled Passage dim:  torch.Size([5, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 187, 1000])
Span start logits:  torch.Size([5, 187])
span start probs dim:  torch.Size([5, 187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 15])
Passage ques attention dim:  torch.Size([5, 124, 15])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 103, 15])
Passage ques attention dim:  torch.Size([5, 103, 15])
Passage question vectors dim:  torch.Size([5, 103, 200])
Question Passage Similarity dim:  torch.Size([5, 103])
Question passage attention dim:  torch.Size([5, 103])
Final Merged Passage dim:  torch.Size([5, 103, 800])
Modeled Passage dim:  torch.Size([5, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 103, 1000])
Span start logits:  torch.Size([5, 103])
span start probs dim:  torch.Size([5, 103])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 103]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 14])
Passage ques attention dim:  torch.Size([5, 136, 14])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 137, 16])
Passage ques attention dim:  torch.Size([5, 137, 16])
Passage question vectors dim:  torch.Size([5, 137, 200])
Question Passage Similarity dim:  torch.Size([5, 137])
Question passage attention dim:  torch.Size([5, 137])
Final Merged Passage dim:  torch.Size([5, 137, 800])
Modeled Passage dim:  torch.Size([5, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 137, 1000])
Span start logits:  torch.Size([5, 137])
span start probs dim:  torch.Size([5, 137])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 137]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 98, 17])
Passage ques attention dim:  torch.Size([5, 98, 17])
Passage question vectors dim:  torch.Size([5, 98, 200])
Question Passage Similarity dim:  torch.Size([5, 98])
Question passage attention dim:  torch.Size([5, 98])
Final Merged Passage dim:  torch.Size([5, 98, 800])
Modeled Passage dim:  torch.Size([5, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 98, 1000])
Span start logits:  torch.Size([5, 98])
span start probs dim:  torch.Size([5, 98])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 98]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 162, 17])
Passage ques attention dim:  torch.Size([5, 162, 17])
Passage question vectors dim:  torch.Size([5, 162, 200])
Question Passage Similarity dim:  torch.Size([5, 162])
Question passage attention dim:  torch.Size([5, 162])
Final Merged Passage dim:  torch.Size([5, 162, 800])
Modeled Passage dim:  torch.Size([5, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 162, 1000])
Span start logits:  torch.Size([5, 162])
span start probs dim:  torch.Size([5, 162])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 162]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 112, 12])
Passage ques attention dim:  torch.Size([5, 112, 12])
Passage question vectors dim:  torch.Size([5, 112, 200])
Question Passage Similarity dim:  torch.Size([5, 112])
Question passage attention dim:  torch.Size([5, 112])
Final Merged Passage dim:  torch.Size([5, 112, 800])
Modeled Passage dim:  torch.Size([5, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 112, 1000])
Span start logits:  torch.Size([5, 112])
span start probs dim:  torch.Size([5, 112])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 112]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 13])
Passage ques attention dim:  torch.Size([5, 116, 13])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 194, 19])
Passage ques attention dim:  torch.Size([5, 194, 19])
Passage question vectors dim:  torch.Size([5, 194, 200])
Question Passage Similarity dim:  torch.Size([5, 194])
Question passage attention dim:  torch.Size([5, 194])
Final Merged Passage dim:  torch.Size([5, 194, 800])
Modeled Passage dim:  torch.Size([5, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 194, 1000])
Span start logits:  torch.Size([5, 194])
span start probs dim:  torch.Size([5, 194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 148, 14])
Passage ques attention dim:  torch.Size([5, 148, 14])
Passage question vectors dim:  torch.Size([5, 148, 200])
Question Passage Similarity dim:  torch.Size([5, 148])
Question passage attention dim:  torch.Size([5, 148])
Final Merged Passage dim:  torch.Size([5, 148, 800])
Modeled Passage dim:  torch.Size([5, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 148, 1000])
Span start logits:  torch.Size([5, 148])
span start probs dim:  torch.Size([5, 148])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 148]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 26, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 26, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 26])
Passage ques attention dim:  torch.Size([5, 171, 26])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 212, 20])
Passage ques attention dim:  torch.Size([5, 212, 20])
Passage question vectors dim:  torch.Size([5, 212, 200])
Question Passage Similarity dim:  torch.Size([5, 212])
Question passage attention dim:  torch.Size([5, 212])
Final Merged Passage dim:  torch.Size([5, 212, 800])
Modeled Passage dim:  torch.Size([5, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 212, 1000])
Span start logits:  torch.Size([5, 212])
span start probs dim:  torch.Size([5, 212])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 212]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 132, 15])
Passage ques attention dim:  torch.Size([5, 132, 15])
Passage question vectors dim:  torch.Size([5, 132, 200])
Question Passage Similarity dim:  torch.Size([5, 132])
Question passage attention dim:  torch.Size([5, 132])
Final Merged Passage dim:  torch.Size([5, 132, 800])
Modeled Passage dim:  torch.Size([5, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 132, 1000])
Span start logits:  torch.Size([5, 132])
span start probs dim:  torch.Size([5, 132])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 132]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 14])
Passage ques attention dim:  torch.Size([5, 199, 14])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 104, 13])
Passage ques attention dim:  torch.Size([5, 104, 13])
Passage question vectors dim:  torch.Size([5, 104, 200])
Question Passage Similarity dim:  torch.Size([5, 104])
Question passage attention dim:  torch.Size([5, 104])
Final Merged Passage dim:  torch.Size([5, 104, 800])
Modeled Passage dim:  torch.Size([5, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 104, 1000])
Span start logits:  torch.Size([5, 104])
span start probs dim:  torch.Size([5, 104])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 104]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 13])
Passage ques attention dim:  torch.Size([5, 176, 13])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 136, 12])
Passage ques attention dim:  torch.Size([5, 136, 12])
Passage question vectors dim:  torch.Size([5, 136, 200])
Question Passage Similarity dim:  torch.Size([5, 136])
Question passage attention dim:  torch.Size([5, 136])
Final Merged Passage dim:  torch.Size([5, 136, 800])
Modeled Passage dim:  torch.Size([5, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 136, 1000])
Span start logits:  torch.Size([5, 136])
span start probs dim:  torch.Size([5, 136])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 136]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 158, 12])
Passage ques attention dim:  torch.Size([5, 158, 12])
Passage question vectors dim:  torch.Size([5, 158, 200])
Question Passage Similarity dim:  torch.Size([5, 158])
Question passage attention dim:  torch.Size([5, 158])
Final Merged Passage dim:  torch.Size([5, 158, 800])
Modeled Passage dim:  torch.Size([5, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 158, 1000])
Span start logits:  torch.Size([5, 158])
span start probs dim:  torch.Size([5, 158])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 158]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 13])
Passage ques attention dim:  torch.Size([5, 161, 13])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 199, 12])
Passage ques attention dim:  torch.Size([5, 199, 12])
Passage question vectors dim:  torch.Size([5, 199, 200])
Question Passage Similarity dim:  torch.Size([5, 199])
Question passage attention dim:  torch.Size([5, 199])
Final Merged Passage dim:  torch.Size([5, 199, 800])
Modeled Passage dim:  torch.Size([5, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 199, 1000])
Span start logits:  torch.Size([5, 199])
span start probs dim:  torch.Size([5, 199])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 199]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 15])
Passage ques attention dim:  torch.Size([5, 116, 15])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 116, 17])
Passage ques attention dim:  torch.Size([5, 116, 17])
Passage question vectors dim:  torch.Size([5, 116, 200])
Question Passage Similarity dim:  torch.Size([5, 116])
Question passage attention dim:  torch.Size([5, 116])
Final Merged Passage dim:  torch.Size([5, 116, 800])
Modeled Passage dim:  torch.Size([5, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 116, 1000])
Span start logits:  torch.Size([5, 116])
span start probs dim:  torch.Size([5, 116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 160, 20])
Passage ques attention dim:  torch.Size([5, 160, 20])
Passage question vectors dim:  torch.Size([5, 160, 200])
Question Passage Similarity dim:  torch.Size([5, 160])
Question passage attention dim:  torch.Size([5, 160])
Final Merged Passage dim:  torch.Size([5, 160, 800])
Modeled Passage dim:  torch.Size([5, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 160, 1000])
Span start logits:  torch.Size([5, 160])
span start probs dim:  torch.Size([5, 160])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 160]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 178, 18])
Passage ques attention dim:  torch.Size([5, 178, 18])
Passage question vectors dim:  torch.Size([5, 178, 200])
Question Passage Similarity dim:  torch.Size([5, 178])
Question passage attention dim:  torch.Size([5, 178])
Final Merged Passage dim:  torch.Size([5, 178, 800])
Modeled Passage dim:  torch.Size([5, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 178, 1000])
Span start logits:  torch.Size([5, 178])
span start probs dim:  torch.Size([5, 178])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 178]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 154, 19])
Passage ques attention dim:  torch.Size([5, 154, 19])
Passage question vectors dim:  torch.Size([5, 154, 200])
Question Passage Similarity dim:  torch.Size([5, 154])
Question passage attention dim:  torch.Size([5, 154])
Final Merged Passage dim:  torch.Size([5, 154, 800])
Modeled Passage dim:  torch.Size([5, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 154, 1000])
Span start logits:  torch.Size([5, 154])
span start probs dim:  torch.Size([5, 154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 128, 15])
Passage ques attention dim:  torch.Size([5, 128, 15])
Passage question vectors dim:  torch.Size([5, 128, 200])
Question Passage Similarity dim:  torch.Size([5, 128])
Question passage attention dim:  torch.Size([5, 128])
Final Merged Passage dim:  torch.Size([5, 128, 800])
Modeled Passage dim:  torch.Size([5, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 128, 1000])
Span start logits:  torch.Size([5, 128])
span start probs dim:  torch.Size([5, 128])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 128]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 124, 15])
Passage ques attention dim:  torch.Size([5, 124, 15])
Passage question vectors dim:  torch.Size([5, 124, 200])
Question Passage Similarity dim:  torch.Size([5, 124])
Question passage attention dim:  torch.Size([5, 124])
Final Merged Passage dim:  torch.Size([5, 124, 800])
Modeled Passage dim:  torch.Size([5, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 124, 1000])
Span start logits:  torch.Size([5, 124])
span start probs dim:  torch.Size([5, 124])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 124]) 5
0
4871
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 426, 200])
Passage Length:  426
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 426, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 426, 8])
Passage ques attention dim:  torch.Size([5, 426, 8])
Passage question vectors dim:  torch.Size([5, 426, 200])
Question Passage Similarity dim:  torch.Size([5, 426])
Question passage attention dim:  torch.Size([5, 426])
Final Merged Passage dim:  torch.Size([5, 426, 800])
Modeled Passage dim:  torch.Size([5, 426, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 426, 1000])
Span start logits:  torch.Size([5, 426])
span start probs dim:  torch.Size([5, 426])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 426]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 304, 200])
Passage Length:  304
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 304, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 304, 7])
Passage ques attention dim:  torch.Size([5, 304, 7])
Passage question vectors dim:  torch.Size([5, 304, 200])
Question Passage Similarity dim:  torch.Size([5, 304])
Question passage attention dim:  torch.Size([5, 304])
Final Merged Passage dim:  torch.Size([5, 304, 800])
Modeled Passage dim:  torch.Size([5, 304, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 304, 1000])
Span start logits:  torch.Size([5, 304])
span start probs dim:  torch.Size([5, 304])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 304]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 13])
Passage ques attention dim:  torch.Size([5, 1094, 13])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 675, 200])
Passage Length:  675
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 675, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 675, 10])
Passage ques attention dim:  torch.Size([5, 675, 10])
Passage question vectors dim:  torch.Size([5, 675, 200])
Question Passage Similarity dim:  torch.Size([5, 675])
Question passage attention dim:  torch.Size([5, 675])
Final Merged Passage dim:  torch.Size([5, 675, 800])
Modeled Passage dim:  torch.Size([5, 675, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 675, 1000])
Span start logits:  torch.Size([5, 675])
span start probs dim:  torch.Size([5, 675])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 675]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1201, 200])
Passage Length:  1201
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1201, 10])
Passage ques attention dim:  torch.Size([5, 1201, 10])
Passage question vectors dim:  torch.Size([5, 1201, 200])
Question Passage Similarity dim:  torch.Size([5, 1201])
Question passage attention dim:  torch.Size([5, 1201])
Final Merged Passage dim:  torch.Size([5, 1201, 800])
Modeled Passage dim:  torch.Size([5, 1201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1201, 1000])
Span start logits:  torch.Size([5, 1201])
span start probs dim:  torch.Size([5, 1201])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1201]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 925, 200])
Passage Length:  925
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 925, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 925, 8])
Passage ques attention dim:  torch.Size([5, 925, 8])
Passage question vectors dim:  torch.Size([5, 925, 200])
Question Passage Similarity dim:  torch.Size([5, 925])
Question passage attention dim:  torch.Size([5, 925])
Final Merged Passage dim:  torch.Size([5, 925, 800])
Modeled Passage dim:  torch.Size([5, 925, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 925, 1000])
Span start logits:  torch.Size([5, 925])
span start probs dim:  torch.Size([5, 925])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 925]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1449, 200])
Passage Length:  1449
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1449, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1449, 9])
Passage ques attention dim:  torch.Size([5, 1449, 9])
Passage question vectors dim:  torch.Size([5, 1449, 200])
Question Passage Similarity dim:  torch.Size([5, 1449])
Question passage attention dim:  torch.Size([5, 1449])
Final Merged Passage dim:  torch.Size([5, 1449, 800])
Modeled Passage dim:  torch.Size([5, 1449, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1449, 1000])
Span start logits:  torch.Size([5, 1449])
span start probs dim:  torch.Size([5, 1449])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1449]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 714, 12])
Passage ques attention dim:  torch.Size([5, 714, 12])
Passage question vectors dim:  torch.Size([5, 714, 200])
Question Passage Similarity dim:  torch.Size([5, 714])
Question passage attention dim:  torch.Size([5, 714])
Final Merged Passage dim:  torch.Size([5, 714, 800])
Modeled Passage dim:  torch.Size([5, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 714, 1000])
Span start logits:  torch.Size([5, 714])
span start probs dim:  torch.Size([5, 714])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 714]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1467, 200])
Passage Length:  1467
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1467, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1467, 12])
Passage ques attention dim:  torch.Size([5, 1467, 12])
Passage question vectors dim:  torch.Size([5, 1467, 200])
Question Passage Similarity dim:  torch.Size([5, 1467])
Question passage attention dim:  torch.Size([5, 1467])
Final Merged Passage dim:  torch.Size([5, 1467, 800])
Modeled Passage dim:  torch.Size([5, 1467, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1467, 1000])
Span start logits:  torch.Size([5, 1467])
span start probs dim:  torch.Size([5, 1467])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1467]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 403, 200])
Passage Length:  403
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 403, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 403, 11])
Passage ques attention dim:  torch.Size([5, 403, 11])
Passage question vectors dim:  torch.Size([5, 403, 200])
Question Passage Similarity dim:  torch.Size([5, 403])
Question passage attention dim:  torch.Size([5, 403])
Final Merged Passage dim:  torch.Size([5, 403, 800])
Modeled Passage dim:  torch.Size([5, 403, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 403, 1000])
Span start logits:  torch.Size([5, 403])
span start probs dim:  torch.Size([5, 403])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 403]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 915, 200])
Passage Length:  915
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 915, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 915, 12])
Passage ques attention dim:  torch.Size([5, 915, 12])
Passage question vectors dim:  torch.Size([5, 915, 200])
Question Passage Similarity dim:  torch.Size([5, 915])
Question passage attention dim:  torch.Size([5, 915])
Final Merged Passage dim:  torch.Size([5, 915, 800])
Modeled Passage dim:  torch.Size([5, 915, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 915, 1000])
Span start logits:  torch.Size([5, 915])
span start probs dim:  torch.Size([5, 915])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 915]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 425, 200])
Passage Length:  425
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 425, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 425, 8])
Passage ques attention dim:  torch.Size([5, 425, 8])
Passage question vectors dim:  torch.Size([5, 425, 200])
Question Passage Similarity dim:  torch.Size([5, 425])
Question passage attention dim:  torch.Size([5, 425])
Final Merged Passage dim:  torch.Size([5, 425, 800])
Modeled Passage dim:  torch.Size([5, 425, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 425, 1000])
Span start logits:  torch.Size([5, 425])
span start probs dim:  torch.Size([5, 425])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 425]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 387, 200])
Passage Length:  387
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 387, 12])
Passage ques attention dim:  torch.Size([5, 387, 12])
Passage question vectors dim:  torch.Size([5, 387, 200])
Question Passage Similarity dim:  torch.Size([5, 387])
Question passage attention dim:  torch.Size([5, 387])
Final Merged Passage dim:  torch.Size([5, 387, 800])
Modeled Passage dim:  torch.Size([5, 387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 387, 1000])
Span start logits:  torch.Size([5, 387])
span start probs dim:  torch.Size([5, 387])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 387]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 2025, 200])
Passage Length:  2025
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 2025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 2025, 9])
Passage ques attention dim:  torch.Size([5, 2025, 9])
Passage question vectors dim:  torch.Size([5, 2025, 200])
Question Passage Similarity dim:  torch.Size([5, 2025])
Question passage attention dim:  torch.Size([5, 2025])
Final Merged Passage dim:  torch.Size([5, 2025, 800])
Modeled Passage dim:  torch.Size([5, 2025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 2025, 1000])
Span start logits:  torch.Size([5, 2025])
span start probs dim:  torch.Size([5, 2025])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 2025]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 323, 9])
Passage ques attention dim:  torch.Size([5, 323, 9])
Passage question vectors dim:  torch.Size([5, 323, 200])
Question Passage Similarity dim:  torch.Size([5, 323])
Question passage attention dim:  torch.Size([5, 323])
Final Merged Passage dim:  torch.Size([5, 323, 800])
Modeled Passage dim:  torch.Size([5, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 323, 1000])
Span start logits:  torch.Size([5, 323])
span start probs dim:  torch.Size([5, 323])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 323]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 355, 200])
Passage Length:  355
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 355, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 355, 12])
Passage ques attention dim:  torch.Size([5, 355, 12])
Passage question vectors dim:  torch.Size([5, 355, 200])
Question Passage Similarity dim:  torch.Size([5, 355])
Question passage attention dim:  torch.Size([5, 355])
Final Merged Passage dim:  torch.Size([5, 355, 800])
Modeled Passage dim:  torch.Size([5, 355, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 355, 1000])
Span start logits:  torch.Size([5, 355])
span start probs dim:  torch.Size([5, 355])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 355]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 961, 200])
Passage Length:  961
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 961, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 961, 9])
Passage ques attention dim:  torch.Size([5, 961, 9])
Passage question vectors dim:  torch.Size([5, 961, 200])
Question Passage Similarity dim:  torch.Size([5, 961])
Question passage attention dim:  torch.Size([5, 961])
Final Merged Passage dim:  torch.Size([5, 961, 800])
Modeled Passage dim:  torch.Size([5, 961, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 961, 1000])
Span start logits:  torch.Size([5, 961])
span start probs dim:  torch.Size([5, 961])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 961]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 932, 200])
Passage Length:  932
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 932, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 932, 13])
Passage ques attention dim:  torch.Size([5, 932, 13])
Passage question vectors dim:  torch.Size([5, 932, 200])
Question Passage Similarity dim:  torch.Size([5, 932])
Question passage attention dim:  torch.Size([5, 932])
Final Merged Passage dim:  torch.Size([5, 932, 800])
Modeled Passage dim:  torch.Size([5, 932, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 932, 1000])
Span start logits:  torch.Size([5, 932])
span start probs dim:  torch.Size([5, 932])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 932]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 848, 200])
Passage Length:  848
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 848, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 848, 18])
Passage ques attention dim:  torch.Size([5, 848, 18])
Passage question vectors dim:  torch.Size([5, 848, 200])
Question Passage Similarity dim:  torch.Size([5, 848])
Question passage attention dim:  torch.Size([5, 848])
Final Merged Passage dim:  torch.Size([5, 848, 800])
Modeled Passage dim:  torch.Size([5, 848, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 848, 1000])
Span start logits:  torch.Size([5, 848])
span start probs dim:  torch.Size([5, 848])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 848]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 990, 200])
Passage Length:  990
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 990, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 990, 12])
Passage ques attention dim:  torch.Size([5, 990, 12])
Passage question vectors dim:  torch.Size([5, 990, 200])
Question Passage Similarity dim:  torch.Size([5, 990])
Question passage attention dim:  torch.Size([5, 990])
Final Merged Passage dim:  torch.Size([5, 990, 800])
Modeled Passage dim:  torch.Size([5, 990, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 990, 1000])
Span start logits:  torch.Size([5, 990])
span start probs dim:  torch.Size([5, 990])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 990]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1067, 200])
Passage Length:  1067
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1067, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1067, 13])
Passage ques attention dim:  torch.Size([5, 1067, 13])
Passage question vectors dim:  torch.Size([5, 1067, 200])
Question Passage Similarity dim:  torch.Size([5, 1067])
Question passage attention dim:  torch.Size([5, 1067])
Final Merged Passage dim:  torch.Size([5, 1067, 800])
Modeled Passage dim:  torch.Size([5, 1067, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1067, 1000])
Span start logits:  torch.Size([5, 1067])
span start probs dim:  torch.Size([5, 1067])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1067]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 238, 11])
Passage ques attention dim:  torch.Size([5, 238, 11])
Passage question vectors dim:  torch.Size([5, 238, 200])
Question Passage Similarity dim:  torch.Size([5, 238])
Question passage attention dim:  torch.Size([5, 238])
Final Merged Passage dim:  torch.Size([5, 238, 800])
Modeled Passage dim:  torch.Size([5, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 238, 1000])
Span start logits:  torch.Size([5, 238])
span start probs dim:  torch.Size([5, 238])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 238]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 576, 8])
Passage ques attention dim:  torch.Size([5, 576, 8])
Passage question vectors dim:  torch.Size([5, 576, 200])
Question Passage Similarity dim:  torch.Size([5, 576])
Question passage attention dim:  torch.Size([5, 576])
Final Merged Passage dim:  torch.Size([5, 576, 800])
Modeled Passage dim:  torch.Size([5, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 576, 1000])
Span start logits:  torch.Size([5, 576])
span start probs dim:  torch.Size([5, 576])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 576]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 914, 200])
Passage Length:  914
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 914, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 914, 11])
Passage ques attention dim:  torch.Size([5, 914, 11])
Passage question vectors dim:  torch.Size([5, 914, 200])
Question Passage Similarity dim:  torch.Size([5, 914])
Question passage attention dim:  torch.Size([5, 914])
Final Merged Passage dim:  torch.Size([5, 914, 800])
Modeled Passage dim:  torch.Size([5, 914, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 914, 1000])
Span start logits:  torch.Size([5, 914])
span start probs dim:  torch.Size([5, 914])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 914]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 200, 10])
Passage ques attention dim:  torch.Size([5, 200, 10])
Passage question vectors dim:  torch.Size([5, 200, 200])
Question Passage Similarity dim:  torch.Size([5, 200])
Question passage attention dim:  torch.Size([5, 200])
Final Merged Passage dim:  torch.Size([5, 200, 800])
Modeled Passage dim:  torch.Size([5, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 200, 1000])
Span start logits:  torch.Size([5, 200])
span start probs dim:  torch.Size([5, 200])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 200]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 304, 200])
Passage Length:  304
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 304, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 304, 8])
Passage ques attention dim:  torch.Size([5, 304, 8])
Passage question vectors dim:  torch.Size([5, 304, 200])
Question Passage Similarity dim:  torch.Size([5, 304])
Question passage attention dim:  torch.Size([5, 304])
Final Merged Passage dim:  torch.Size([5, 304, 800])
Modeled Passage dim:  torch.Size([5, 304, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 304, 1000])
Span start logits:  torch.Size([5, 304])
span start probs dim:  torch.Size([5, 304])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 304]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 740, 200])
Passage Length:  740
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 740, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 740, 10])
Passage ques attention dim:  torch.Size([5, 740, 10])
Passage question vectors dim:  torch.Size([5, 740, 200])
Question Passage Similarity dim:  torch.Size([5, 740])
Question passage attention dim:  torch.Size([5, 740])
Final Merged Passage dim:  torch.Size([5, 740, 800])
Modeled Passage dim:  torch.Size([5, 740, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 740, 1000])
Span start logits:  torch.Size([5, 740])
span start probs dim:  torch.Size([5, 740])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 740]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 450, 200])
Passage Length:  450
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 450, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 450, 7])
Passage ques attention dim:  torch.Size([5, 450, 7])
Passage question vectors dim:  torch.Size([5, 450, 200])
Question Passage Similarity dim:  torch.Size([5, 450])
Question passage attention dim:  torch.Size([5, 450])
Final Merged Passage dim:  torch.Size([5, 450, 800])
Modeled Passage dim:  torch.Size([5, 450, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 450, 1000])
Span start logits:  torch.Size([5, 450])
span start probs dim:  torch.Size([5, 450])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 450]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1520, 200])
Passage Length:  1520
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1520, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1520, 11])
Passage ques attention dim:  torch.Size([5, 1520, 11])
Passage question vectors dim:  torch.Size([5, 1520, 200])
Question Passage Similarity dim:  torch.Size([5, 1520])
Question passage attention dim:  torch.Size([5, 1520])
Final Merged Passage dim:  torch.Size([5, 1520, 800])
Modeled Passage dim:  torch.Size([5, 1520, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1520, 1000])
Span start logits:  torch.Size([5, 1520])
span start probs dim:  torch.Size([5, 1520])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1520]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1152, 200])
Passage Length:  1152
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1152, 10])
Passage ques attention dim:  torch.Size([5, 1152, 10])
Passage question vectors dim:  torch.Size([5, 1152, 200])
Question Passage Similarity dim:  torch.Size([5, 1152])
Question passage attention dim:  torch.Size([5, 1152])
Final Merged Passage dim:  torch.Size([5, 1152, 800])
Modeled Passage dim:  torch.Size([5, 1152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1152, 1000])
Span start logits:  torch.Size([5, 1152])
span start probs dim:  torch.Size([5, 1152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1413, 200])
Passage Length:  1413
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1413, 9])
Passage ques attention dim:  torch.Size([5, 1413, 9])
Passage question vectors dim:  torch.Size([5, 1413, 200])
Question Passage Similarity dim:  torch.Size([5, 1413])
Question passage attention dim:  torch.Size([5, 1413])
Final Merged Passage dim:  torch.Size([5, 1413, 800])
Modeled Passage dim:  torch.Size([5, 1413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1413, 1000])
Span start logits:  torch.Size([5, 1413])
span start probs dim:  torch.Size([5, 1413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 431, 200])
Passage Length:  431
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 431, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 431, 11])
Passage ques attention dim:  torch.Size([5, 431, 11])
Passage question vectors dim:  torch.Size([5, 431, 200])
Question Passage Similarity dim:  torch.Size([5, 431])
Question passage attention dim:  torch.Size([5, 431])
Final Merged Passage dim:  torch.Size([5, 431, 800])
Modeled Passage dim:  torch.Size([5, 431, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 431, 1000])
Span start logits:  torch.Size([5, 431])
span start probs dim:  torch.Size([5, 431])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 431]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 651, 200])
Passage Length:  651
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 651, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 651, 15])
Passage ques attention dim:  torch.Size([5, 651, 15])
Passage question vectors dim:  torch.Size([5, 651, 200])
Question Passage Similarity dim:  torch.Size([5, 651])
Question passage attention dim:  torch.Size([5, 651])
Final Merged Passage dim:  torch.Size([5, 651, 800])
Modeled Passage dim:  torch.Size([5, 651, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 651, 1000])
Span start logits:  torch.Size([5, 651])
span start probs dim:  torch.Size([5, 651])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 651]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 11])
Passage ques attention dim:  torch.Size([5, 254, 11])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 458, 200])
Passage Length:  458
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 458, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 458, 15])
Passage ques attention dim:  torch.Size([5, 458, 15])
Passage question vectors dim:  torch.Size([5, 458, 200])
Question Passage Similarity dim:  torch.Size([5, 458])
Question passage attention dim:  torch.Size([5, 458])
Final Merged Passage dim:  torch.Size([5, 458, 800])
Modeled Passage dim:  torch.Size([5, 458, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 458, 1000])
Span start logits:  torch.Size([5, 458])
span start probs dim:  torch.Size([5, 458])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 458]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 783, 200])
Passage Length:  783
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 783, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 783, 13])
Passage ques attention dim:  torch.Size([5, 783, 13])
Passage question vectors dim:  torch.Size([5, 783, 200])
Question Passage Similarity dim:  torch.Size([5, 783])
Question passage attention dim:  torch.Size([5, 783])
Final Merged Passage dim:  torch.Size([5, 783, 800])
Modeled Passage dim:  torch.Size([5, 783, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 783, 1000])
Span start logits:  torch.Size([5, 783])
span start probs dim:  torch.Size([5, 783])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 783]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 674, 200])
Passage Length:  674
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 674, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 674, 10])
Passage ques attention dim:  torch.Size([5, 674, 10])
Passage question vectors dim:  torch.Size([5, 674, 200])
Question Passage Similarity dim:  torch.Size([5, 674])
Question passage attention dim:  torch.Size([5, 674])
Final Merged Passage dim:  torch.Size([5, 674, 800])
Modeled Passage dim:  torch.Size([5, 674, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 674, 1000])
Span start logits:  torch.Size([5, 674])
span start probs dim:  torch.Size([5, 674])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 674]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1311, 200])
Passage Length:  1311
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1311, 8])
Passage ques attention dim:  torch.Size([5, 1311, 8])
Passage question vectors dim:  torch.Size([5, 1311, 200])
Question Passage Similarity dim:  torch.Size([5, 1311])
Question passage attention dim:  torch.Size([5, 1311])
Final Merged Passage dim:  torch.Size([5, 1311, 800])
Modeled Passage dim:  torch.Size([5, 1311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1311, 1000])
Span start logits:  torch.Size([5, 1311])
span start probs dim:  torch.Size([5, 1311])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1311]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 395, 200])
Passage Length:  395
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 395, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 395, 15])
Passage ques attention dim:  torch.Size([5, 395, 15])
Passage question vectors dim:  torch.Size([5, 395, 200])
Question Passage Similarity dim:  torch.Size([5, 395])
Question passage attention dim:  torch.Size([5, 395])
Final Merged Passage dim:  torch.Size([5, 395, 800])
Modeled Passage dim:  torch.Size([5, 395, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 395, 1000])
Span start logits:  torch.Size([5, 395])
span start probs dim:  torch.Size([5, 395])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 395]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 780, 200])
Passage Length:  780
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 780, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 780, 11])
Passage ques attention dim:  torch.Size([5, 780, 11])
Passage question vectors dim:  torch.Size([5, 780, 200])
Question Passage Similarity dim:  torch.Size([5, 780])
Question passage attention dim:  torch.Size([5, 780])
Final Merged Passage dim:  torch.Size([5, 780, 800])
Modeled Passage dim:  torch.Size([5, 780, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 780, 1000])
Span start logits:  torch.Size([5, 780])
span start probs dim:  torch.Size([5, 780])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 780]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 850, 200])
Passage Length:  850
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 850, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 850, 9])
Passage ques attention dim:  torch.Size([5, 850, 9])
Passage question vectors dim:  torch.Size([5, 850, 200])
Question Passage Similarity dim:  torch.Size([5, 850])
Question passage attention dim:  torch.Size([5, 850])
Final Merged Passage dim:  torch.Size([5, 850, 800])
Modeled Passage dim:  torch.Size([5, 850, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 850, 1000])
Span start logits:  torch.Size([5, 850])
span start probs dim:  torch.Size([5, 850])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 850]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 985, 200])
Passage Length:  985
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 985, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 985, 11])
Passage ques attention dim:  torch.Size([5, 985, 11])
Passage question vectors dim:  torch.Size([5, 985, 200])
Question Passage Similarity dim:  torch.Size([5, 985])
Question passage attention dim:  torch.Size([5, 985])
Final Merged Passage dim:  torch.Size([5, 985, 800])
Modeled Passage dim:  torch.Size([5, 985, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 985, 1000])
Span start logits:  torch.Size([5, 985])
span start probs dim:  torch.Size([5, 985])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 985]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1312, 200])
Passage Length:  1312
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1312, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1312, 9])
Passage ques attention dim:  torch.Size([5, 1312, 9])
Passage question vectors dim:  torch.Size([5, 1312, 200])
Question Passage Similarity dim:  torch.Size([5, 1312])
Question passage attention dim:  torch.Size([5, 1312])
Final Merged Passage dim:  torch.Size([5, 1312, 800])
Modeled Passage dim:  torch.Size([5, 1312, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1312, 1000])
Span start logits:  torch.Size([5, 1312])
span start probs dim:  torch.Size([5, 1312])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1312]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 8])
Passage ques attention dim:  torch.Size([5, 161, 8])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 336, 200])
Passage Length:  336
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 336, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 336, 12])
Passage ques attention dim:  torch.Size([5, 336, 12])
Passage question vectors dim:  torch.Size([5, 336, 200])
Question Passage Similarity dim:  torch.Size([5, 336])
Question passage attention dim:  torch.Size([5, 336])
Final Merged Passage dim:  torch.Size([5, 336, 800])
Modeled Passage dim:  torch.Size([5, 336, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 336, 1000])
Span start logits:  torch.Size([5, 336])
span start probs dim:  torch.Size([5, 336])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 336]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 586, 200])
Passage Length:  586
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 586, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 586, 11])
Passage ques attention dim:  torch.Size([5, 586, 11])
Passage question vectors dim:  torch.Size([5, 586, 200])
Question Passage Similarity dim:  torch.Size([5, 586])
Question passage attention dim:  torch.Size([5, 586])
Final Merged Passage dim:  torch.Size([5, 586, 800])
Modeled Passage dim:  torch.Size([5, 586, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 586, 1000])
Span start logits:  torch.Size([5, 586])
span start probs dim:  torch.Size([5, 586])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 586]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 449, 200])
Passage Length:  449
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 449, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 449, 9])
Passage ques attention dim:  torch.Size([5, 449, 9])
Passage question vectors dim:  torch.Size([5, 449, 200])
Question Passage Similarity dim:  torch.Size([5, 449])
Question passage attention dim:  torch.Size([5, 449])
Final Merged Passage dim:  torch.Size([5, 449, 800])
Modeled Passage dim:  torch.Size([5, 449, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 449, 1000])
Span start logits:  torch.Size([5, 449])
span start probs dim:  torch.Size([5, 449])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 449]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 765, 200])
Passage Length:  765
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 765, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 765, 8])
Passage ques attention dim:  torch.Size([5, 765, 8])
Passage question vectors dim:  torch.Size([5, 765, 200])
Question Passage Similarity dim:  torch.Size([5, 765])
Question passage attention dim:  torch.Size([5, 765])
Final Merged Passage dim:  torch.Size([5, 765, 800])
Modeled Passage dim:  torch.Size([5, 765, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 765, 1000])
Span start logits:  torch.Size([5, 765])
span start probs dim:  torch.Size([5, 765])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 765]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 221, 11])
Passage ques attention dim:  torch.Size([5, 221, 11])
Passage question vectors dim:  torch.Size([5, 221, 200])
Question Passage Similarity dim:  torch.Size([5, 221])
Question passage attention dim:  torch.Size([5, 221])
Final Merged Passage dim:  torch.Size([5, 221, 800])
Modeled Passage dim:  torch.Size([5, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 221, 1000])
Span start logits:  torch.Size([5, 221])
span start probs dim:  torch.Size([5, 221])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 221]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 929, 200])
Passage Length:  929
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 929, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 929, 10])
Passage ques attention dim:  torch.Size([5, 929, 10])
Passage question vectors dim:  torch.Size([5, 929, 200])
Question Passage Similarity dim:  torch.Size([5, 929])
Question passage attention dim:  torch.Size([5, 929])
Final Merged Passage dim:  torch.Size([5, 929, 800])
Modeled Passage dim:  torch.Size([5, 929, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 929, 1000])
Span start logits:  torch.Size([5, 929])
span start probs dim:  torch.Size([5, 929])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 929]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 565, 200])
Passage Length:  565
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 565, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 565, 10])
Passage ques attention dim:  torch.Size([5, 565, 10])
Passage question vectors dim:  torch.Size([5, 565, 200])
Question Passage Similarity dim:  torch.Size([5, 565])
Question passage attention dim:  torch.Size([5, 565])
Final Merged Passage dim:  torch.Size([5, 565, 800])
Modeled Passage dim:  torch.Size([5, 565, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 565, 1000])
Span start logits:  torch.Size([5, 565])
span start probs dim:  torch.Size([5, 565])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 565]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 9])
Passage ques attention dim:  torch.Size([5, 441, 9])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 716, 200])
Passage Length:  716
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 716, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 716, 10])
Passage ques attention dim:  torch.Size([5, 716, 10])
Passage question vectors dim:  torch.Size([5, 716, 200])
Question Passage Similarity dim:  torch.Size([5, 716])
Question passage attention dim:  torch.Size([5, 716])
Final Merged Passage dim:  torch.Size([5, 716, 800])
Modeled Passage dim:  torch.Size([5, 716, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 716, 1000])
Span start logits:  torch.Size([5, 716])
span start probs dim:  torch.Size([5, 716])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 716]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 510, 200])
Passage Length:  510
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 510, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 510, 9])
Passage ques attention dim:  torch.Size([5, 510, 9])
Passage question vectors dim:  torch.Size([5, 510, 200])
Question Passage Similarity dim:  torch.Size([5, 510])
Question passage attention dim:  torch.Size([5, 510])
Final Merged Passage dim:  torch.Size([5, 510, 800])
Modeled Passage dim:  torch.Size([5, 510, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 510, 1000])
Span start logits:  torch.Size([5, 510])
span start probs dim:  torch.Size([5, 510])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 510]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1244, 200])
Passage Length:  1244
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1244, 14])
Passage ques attention dim:  torch.Size([5, 1244, 14])
Passage question vectors dim:  torch.Size([5, 1244, 200])
Question Passage Similarity dim:  torch.Size([5, 1244])
Question passage attention dim:  torch.Size([5, 1244])
Final Merged Passage dim:  torch.Size([5, 1244, 800])
Modeled Passage dim:  torch.Size([5, 1244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1244, 1000])
Span start logits:  torch.Size([5, 1244])
span start probs dim:  torch.Size([5, 1244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 591, 200])
Passage Length:  591
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 591, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 591, 9])
Passage ques attention dim:  torch.Size([5, 591, 9])
Passage question vectors dim:  torch.Size([5, 591, 200])
Question Passage Similarity dim:  torch.Size([5, 591])
Question passage attention dim:  torch.Size([5, 591])
Final Merged Passage dim:  torch.Size([5, 591, 800])
Modeled Passage dim:  torch.Size([5, 591, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 591, 1000])
Span start logits:  torch.Size([5, 591])
span start probs dim:  torch.Size([5, 591])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 591]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 591, 200])
Passage Length:  591
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 591, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 591, 11])
Passage ques attention dim:  torch.Size([5, 591, 11])
Passage question vectors dim:  torch.Size([5, 591, 200])
Question Passage Similarity dim:  torch.Size([5, 591])
Question passage attention dim:  torch.Size([5, 591])
Final Merged Passage dim:  torch.Size([5, 591, 800])
Modeled Passage dim:  torch.Size([5, 591, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 591, 1000])
Span start logits:  torch.Size([5, 591])
span start probs dim:  torch.Size([5, 591])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 591]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1163, 200])
Passage Length:  1163
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1163, 11])
Passage ques attention dim:  torch.Size([5, 1163, 11])
Passage question vectors dim:  torch.Size([5, 1163, 200])
Question Passage Similarity dim:  torch.Size([5, 1163])
Question passage attention dim:  torch.Size([5, 1163])
Final Merged Passage dim:  torch.Size([5, 1163, 800])
Modeled Passage dim:  torch.Size([5, 1163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1163, 1000])
Span start logits:  torch.Size([5, 1163])
span start probs dim:  torch.Size([5, 1163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 749, 200])
Passage Length:  749
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 749, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 749, 8])
Passage ques attention dim:  torch.Size([5, 749, 8])
Passage question vectors dim:  torch.Size([5, 749, 200])
Question Passage Similarity dim:  torch.Size([5, 749])
Question passage attention dim:  torch.Size([5, 749])
Final Merged Passage dim:  torch.Size([5, 749, 800])
Modeled Passage dim:  torch.Size([5, 749, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 749, 1000])
Span start logits:  torch.Size([5, 749])
span start probs dim:  torch.Size([5, 749])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 749]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 851, 200])
Passage Length:  851
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 851, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 851, 13])
Passage ques attention dim:  torch.Size([5, 851, 13])
Passage question vectors dim:  torch.Size([5, 851, 200])
Question Passage Similarity dim:  torch.Size([5, 851])
Question passage attention dim:  torch.Size([5, 851])
Final Merged Passage dim:  torch.Size([5, 851, 800])
Modeled Passage dim:  torch.Size([5, 851, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 851, 1000])
Span start logits:  torch.Size([5, 851])
span start probs dim:  torch.Size([5, 851])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 851]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 489, 200])
Passage Length:  489
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 489, 10])
Passage ques attention dim:  torch.Size([5, 489, 10])
Passage question vectors dim:  torch.Size([5, 489, 200])
Question Passage Similarity dim:  torch.Size([5, 489])
Question passage attention dim:  torch.Size([5, 489])
Final Merged Passage dim:  torch.Size([5, 489, 800])
Modeled Passage dim:  torch.Size([5, 489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 489, 1000])
Span start logits:  torch.Size([5, 489])
span start probs dim:  torch.Size([5, 489])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 489]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 692, 200])
Passage Length:  692
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 692, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 692, 15])
Passage ques attention dim:  torch.Size([5, 692, 15])
Passage question vectors dim:  torch.Size([5, 692, 200])
Question Passage Similarity dim:  torch.Size([5, 692])
Question passage attention dim:  torch.Size([5, 692])
Final Merged Passage dim:  torch.Size([5, 692, 800])
Modeled Passage dim:  torch.Size([5, 692, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 692, 1000])
Span start logits:  torch.Size([5, 692])
span start probs dim:  torch.Size([5, 692])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 692]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 10])
Passage ques attention dim:  torch.Size([5, 226, 10])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 929, 200])
Passage Length:  929
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 929, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 929, 8])
Passage ques attention dim:  torch.Size([5, 929, 8])
Passage question vectors dim:  torch.Size([5, 929, 200])
Question Passage Similarity dim:  torch.Size([5, 929])
Question passage attention dim:  torch.Size([5, 929])
Final Merged Passage dim:  torch.Size([5, 929, 800])
Modeled Passage dim:  torch.Size([5, 929, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 929, 1000])
Span start logits:  torch.Size([5, 929])
span start probs dim:  torch.Size([5, 929])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 929]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1288, 200])
Passage Length:  1288
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1288, 13])
Passage ques attention dim:  torch.Size([5, 1288, 13])
Passage question vectors dim:  torch.Size([5, 1288, 200])
Question Passage Similarity dim:  torch.Size([5, 1288])
Question passage attention dim:  torch.Size([5, 1288])
Final Merged Passage dim:  torch.Size([5, 1288, 800])
Modeled Passage dim:  torch.Size([5, 1288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1288, 1000])
Span start logits:  torch.Size([5, 1288])
span start probs dim:  torch.Size([5, 1288])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1288]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 539, 200])
Passage Length:  539
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 539, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 539, 14])
Passage ques attention dim:  torch.Size([5, 539, 14])
Passage question vectors dim:  torch.Size([5, 539, 200])
Question Passage Similarity dim:  torch.Size([5, 539])
Question passage attention dim:  torch.Size([5, 539])
Final Merged Passage dim:  torch.Size([5, 539, 800])
Modeled Passage dim:  torch.Size([5, 539, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 539, 1000])
Span start logits:  torch.Size([5, 539])
span start probs dim:  torch.Size([5, 539])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 539]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1312, 200])
Passage Length:  1312
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1312, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1312, 12])
Passage ques attention dim:  torch.Size([5, 1312, 12])
Passage question vectors dim:  torch.Size([5, 1312, 200])
Question Passage Similarity dim:  torch.Size([5, 1312])
Question passage attention dim:  torch.Size([5, 1312])
Final Merged Passage dim:  torch.Size([5, 1312, 800])
Modeled Passage dim:  torch.Size([5, 1312, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1312, 1000])
Span start logits:  torch.Size([5, 1312])
span start probs dim:  torch.Size([5, 1312])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1312]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1025, 9])
Passage ques attention dim:  torch.Size([5, 1025, 9])
Passage question vectors dim:  torch.Size([5, 1025, 200])
Question Passage Similarity dim:  torch.Size([5, 1025])
Question passage attention dim:  torch.Size([5, 1025])
Final Merged Passage dim:  torch.Size([5, 1025, 800])
Modeled Passage dim:  torch.Size([5, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1025, 1000])
Span start logits:  torch.Size([5, 1025])
span start probs dim:  torch.Size([5, 1025])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1025]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 308, 200])
Passage Length:  308
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 308, 12])
Passage ques attention dim:  torch.Size([5, 308, 12])
Passage question vectors dim:  torch.Size([5, 308, 200])
Question Passage Similarity dim:  torch.Size([5, 308])
Question passage attention dim:  torch.Size([5, 308])
Final Merged Passage dim:  torch.Size([5, 308, 800])
Modeled Passage dim:  torch.Size([5, 308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 308, 1000])
Span start logits:  torch.Size([5, 308])
span start probs dim:  torch.Size([5, 308])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 308]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 967, 14])
Passage ques attention dim:  torch.Size([5, 967, 14])
Passage question vectors dim:  torch.Size([5, 967, 200])
Question Passage Similarity dim:  torch.Size([5, 967])
Question passage attention dim:  torch.Size([5, 967])
Final Merged Passage dim:  torch.Size([5, 967, 800])
Modeled Passage dim:  torch.Size([5, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 967, 1000])
Span start logits:  torch.Size([5, 967])
span start probs dim:  torch.Size([5, 967])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 967]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 370, 200])
Passage Length:  370
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 370, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 370, 12])
Passage ques attention dim:  torch.Size([5, 370, 12])
Passage question vectors dim:  torch.Size([5, 370, 200])
Question Passage Similarity dim:  torch.Size([5, 370])
Question passage attention dim:  torch.Size([5, 370])
Final Merged Passage dim:  torch.Size([5, 370, 800])
Modeled Passage dim:  torch.Size([5, 370, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 370, 1000])
Span start logits:  torch.Size([5, 370])
span start probs dim:  torch.Size([5, 370])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 370]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 2025, 200])
Passage Length:  2025
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 2025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 2025, 10])
Passage ques attention dim:  torch.Size([5, 2025, 10])
Passage question vectors dim:  torch.Size([5, 2025, 200])
Question Passage Similarity dim:  torch.Size([5, 2025])
Question passage attention dim:  torch.Size([5, 2025])
Final Merged Passage dim:  torch.Size([5, 2025, 800])
Modeled Passage dim:  torch.Size([5, 2025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 2025, 1000])
Span start logits:  torch.Size([5, 2025])
span start probs dim:  torch.Size([5, 2025])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 2025]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 1116, 200])
Passage Length:  1116
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 1116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1116, 20])
Passage ques attention dim:  torch.Size([5, 1116, 20])
Passage question vectors dim:  torch.Size([5, 1116, 200])
Question Passage Similarity dim:  torch.Size([5, 1116])
Question passage attention dim:  torch.Size([5, 1116])
Final Merged Passage dim:  torch.Size([5, 1116, 800])
Modeled Passage dim:  torch.Size([5, 1116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1116, 1000])
Span start logits:  torch.Size([5, 1116])
span start probs dim:  torch.Size([5, 1116])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1116]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1897, 200])
Passage Length:  1897
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1897, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1897, 13])
Passage ques attention dim:  torch.Size([5, 1897, 13])
Passage question vectors dim:  torch.Size([5, 1897, 200])
Question Passage Similarity dim:  torch.Size([5, 1897])
Question passage attention dim:  torch.Size([5, 1897])
Final Merged Passage dim:  torch.Size([5, 1897, 800])
Modeled Passage dim:  torch.Size([5, 1897, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1897, 1000])
Span start logits:  torch.Size([5, 1897])
span start probs dim:  torch.Size([5, 1897])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1897]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 663, 200])
Passage Length:  663
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 663, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 663, 13])
Passage ques attention dim:  torch.Size([5, 663, 13])
Passage question vectors dim:  torch.Size([5, 663, 200])
Question Passage Similarity dim:  torch.Size([5, 663])
Question passage attention dim:  torch.Size([5, 663])
Final Merged Passage dim:  torch.Size([5, 663, 800])
Modeled Passage dim:  torch.Size([5, 663, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 663, 1000])
Span start logits:  torch.Size([5, 663])
span start probs dim:  torch.Size([5, 663])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 663]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 491, 200])
Passage Length:  491
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 491, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 491, 10])
Passage ques attention dim:  torch.Size([5, 491, 10])
Passage question vectors dim:  torch.Size([5, 491, 200])
Question Passage Similarity dim:  torch.Size([5, 491])
Question passage attention dim:  torch.Size([5, 491])
Final Merged Passage dim:  torch.Size([5, 491, 800])
Modeled Passage dim:  torch.Size([5, 491, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 491, 1000])
Span start logits:  torch.Size([5, 491])
span start probs dim:  torch.Size([5, 491])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 491]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 419, 200])
Passage Length:  419
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 419, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 419, 14])
Passage ques attention dim:  torch.Size([5, 419, 14])
Passage question vectors dim:  torch.Size([5, 419, 200])
Question Passage Similarity dim:  torch.Size([5, 419])
Question passage attention dim:  torch.Size([5, 419])
Final Merged Passage dim:  torch.Size([5, 419, 800])
Modeled Passage dim:  torch.Size([5, 419, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 419, 1000])
Span start logits:  torch.Size([5, 419])
span start probs dim:  torch.Size([5, 419])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 419]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 282, 200])
Passage Length:  282
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 282, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 282, 11])
Passage ques attention dim:  torch.Size([5, 282, 11])
Passage question vectors dim:  torch.Size([5, 282, 200])
Question Passage Similarity dim:  torch.Size([5, 282])
Question passage attention dim:  torch.Size([5, 282])
Final Merged Passage dim:  torch.Size([5, 282, 800])
Modeled Passage dim:  torch.Size([5, 282, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 282, 1000])
Span start logits:  torch.Size([5, 282])
span start probs dim:  torch.Size([5, 282])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 282]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 415, 200])
Passage Length:  415
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 415, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 415, 10])
Passage ques attention dim:  torch.Size([5, 415, 10])
Passage question vectors dim:  torch.Size([5, 415, 200])
Question Passage Similarity dim:  torch.Size([5, 415])
Question passage attention dim:  torch.Size([5, 415])
Final Merged Passage dim:  torch.Size([5, 415, 800])
Modeled Passage dim:  torch.Size([5, 415, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 415, 1000])
Span start logits:  torch.Size([5, 415])
span start probs dim:  torch.Size([5, 415])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 415]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 708, 200])
Passage Length:  708
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 708, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 708, 11])
Passage ques attention dim:  torch.Size([5, 708, 11])
Passage question vectors dim:  torch.Size([5, 708, 200])
Question Passage Similarity dim:  torch.Size([5, 708])
Question passage attention dim:  torch.Size([5, 708])
Final Merged Passage dim:  torch.Size([5, 708, 800])
Modeled Passage dim:  torch.Size([5, 708, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 708, 1000])
Span start logits:  torch.Size([5, 708])
span start probs dim:  torch.Size([5, 708])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 708]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 229, 10])
Passage ques attention dim:  torch.Size([5, 229, 10])
Passage question vectors dim:  torch.Size([5, 229, 200])
Question Passage Similarity dim:  torch.Size([5, 229])
Question passage attention dim:  torch.Size([5, 229])
Final Merged Passage dim:  torch.Size([5, 229, 800])
Modeled Passage dim:  torch.Size([5, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 229, 1000])
Span start logits:  torch.Size([5, 229])
span start probs dim:  torch.Size([5, 229])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 229]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 961, 200])
Passage Length:  961
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 961, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 961, 12])
Passage ques attention dim:  torch.Size([5, 961, 12])
Passage question vectors dim:  torch.Size([5, 961, 200])
Question Passage Similarity dim:  torch.Size([5, 961])
Question passage attention dim:  torch.Size([5, 961])
Final Merged Passage dim:  torch.Size([5, 961, 800])
Modeled Passage dim:  torch.Size([5, 961, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 961, 1000])
Span start logits:  torch.Size([5, 961])
span start probs dim:  torch.Size([5, 961])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 961]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 537, 200])
Passage Length:  537
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 537, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 537, 15])
Passage ques attention dim:  torch.Size([5, 537, 15])
Passage question vectors dim:  torch.Size([5, 537, 200])
Question Passage Similarity dim:  torch.Size([5, 537])
Question passage attention dim:  torch.Size([5, 537])
Final Merged Passage dim:  torch.Size([5, 537, 800])
Modeled Passage dim:  torch.Size([5, 537, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 537, 1000])
Span start logits:  torch.Size([5, 537])
span start probs dim:  torch.Size([5, 537])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 537]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 534, 200])
Passage Length:  534
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 534, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 534, 10])
Passage ques attention dim:  torch.Size([5, 534, 10])
Passage question vectors dim:  torch.Size([5, 534, 200])
Question Passage Similarity dim:  torch.Size([5, 534])
Question passage attention dim:  torch.Size([5, 534])
Final Merged Passage dim:  torch.Size([5, 534, 800])
Modeled Passage dim:  torch.Size([5, 534, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 534, 1000])
Span start logits:  torch.Size([5, 534])
span start probs dim:  torch.Size([5, 534])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 534]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 497, 200])
Passage Length:  497
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 497, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 497, 13])
Passage ques attention dim:  torch.Size([5, 497, 13])
Passage question vectors dim:  torch.Size([5, 497, 200])
Question Passage Similarity dim:  torch.Size([5, 497])
Question passage attention dim:  torch.Size([5, 497])
Final Merged Passage dim:  torch.Size([5, 497, 800])
Modeled Passage dim:  torch.Size([5, 497, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 497, 1000])
Span start logits:  torch.Size([5, 497])
span start probs dim:  torch.Size([5, 497])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 497]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1099, 200])
Passage Length:  1099
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1099, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1099, 10])
Passage ques attention dim:  torch.Size([5, 1099, 10])
Passage question vectors dim:  torch.Size([5, 1099, 200])
Question Passage Similarity dim:  torch.Size([5, 1099])
Question passage attention dim:  torch.Size([5, 1099])
Final Merged Passage dim:  torch.Size([5, 1099, 800])
Modeled Passage dim:  torch.Size([5, 1099, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1099, 1000])
Span start logits:  torch.Size([5, 1099])
span start probs dim:  torch.Size([5, 1099])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1099]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 906, 10])
Passage ques attention dim:  torch.Size([5, 906, 10])
Passage question vectors dim:  torch.Size([5, 906, 200])
Question Passage Similarity dim:  torch.Size([5, 906])
Question passage attention dim:  torch.Size([5, 906])
Final Merged Passage dim:  torch.Size([5, 906, 800])
Modeled Passage dim:  torch.Size([5, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 906, 1000])
Span start logits:  torch.Size([5, 906])
span start probs dim:  torch.Size([5, 906])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 906]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 686, 200])
Passage Length:  686
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 686, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 686, 12])
Passage ques attention dim:  torch.Size([5, 686, 12])
Passage question vectors dim:  torch.Size([5, 686, 200])
Question Passage Similarity dim:  torch.Size([5, 686])
Question passage attention dim:  torch.Size([5, 686])
Final Merged Passage dim:  torch.Size([5, 686, 800])
Modeled Passage dim:  torch.Size([5, 686, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 686, 1000])
Span start logits:  torch.Size([5, 686])
span start probs dim:  torch.Size([5, 686])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 686]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 555, 200])
Passage Length:  555
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 555, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 555, 9])
Passage ques attention dim:  torch.Size([5, 555, 9])
Passage question vectors dim:  torch.Size([5, 555, 200])
Question Passage Similarity dim:  torch.Size([5, 555])
Question passage attention dim:  torch.Size([5, 555])
Final Merged Passage dim:  torch.Size([5, 555, 800])
Modeled Passage dim:  torch.Size([5, 555, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 555, 1000])
Span start logits:  torch.Size([5, 555])
span start probs dim:  torch.Size([5, 555])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 555]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 434, 200])
Passage Length:  434
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 434, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 434, 14])
Passage ques attention dim:  torch.Size([5, 434, 14])
Passage question vectors dim:  torch.Size([5, 434, 200])
Question Passage Similarity dim:  torch.Size([5, 434])
Question passage attention dim:  torch.Size([5, 434])
Final Merged Passage dim:  torch.Size([5, 434, 800])
Modeled Passage dim:  torch.Size([5, 434, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 434, 1000])
Span start logits:  torch.Size([5, 434])
span start probs dim:  torch.Size([5, 434])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 434]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 329, 200])
Passage Length:  329
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 329, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 329, 14])
Passage ques attention dim:  torch.Size([5, 329, 14])
Passage question vectors dim:  torch.Size([5, 329, 200])
Question Passage Similarity dim:  torch.Size([5, 329])
Question passage attention dim:  torch.Size([5, 329])
Final Merged Passage dim:  torch.Size([5, 329, 800])
Modeled Passage dim:  torch.Size([5, 329, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 329, 1000])
Span start logits:  torch.Size([5, 329])
span start probs dim:  torch.Size([5, 329])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 329]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1342, 200])
Passage Length:  1342
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1342, 10])
Passage ques attention dim:  torch.Size([5, 1342, 10])
Passage question vectors dim:  torch.Size([5, 1342, 200])
Question Passage Similarity dim:  torch.Size([5, 1342])
Question passage attention dim:  torch.Size([5, 1342])
Final Merged Passage dim:  torch.Size([5, 1342, 800])
Modeled Passage dim:  torch.Size([5, 1342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1342, 1000])
Span start logits:  torch.Size([5, 1342])
span start probs dim:  torch.Size([5, 1342])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1342]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1700, 200])
Passage Length:  1700
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1700, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1700, 7])
Passage ques attention dim:  torch.Size([5, 1700, 7])
Passage question vectors dim:  torch.Size([5, 1700, 200])
Question Passage Similarity dim:  torch.Size([5, 1700])
Question passage attention dim:  torch.Size([5, 1700])
Final Merged Passage dim:  torch.Size([5, 1700, 800])
Modeled Passage dim:  torch.Size([5, 1700, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1700, 1000])
Span start logits:  torch.Size([5, 1700])
span start probs dim:  torch.Size([5, 1700])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1700]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 1311, 200])
Passage Length:  1311
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 1311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1311, 15])
Passage ques attention dim:  torch.Size([5, 1311, 15])
Passage question vectors dim:  torch.Size([5, 1311, 200])
Question Passage Similarity dim:  torch.Size([5, 1311])
Question passage attention dim:  torch.Size([5, 1311])
Final Merged Passage dim:  torch.Size([5, 1311, 800])
Modeled Passage dim:  torch.Size([5, 1311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1311, 1000])
Span start logits:  torch.Size([5, 1311])
span start probs dim:  torch.Size([5, 1311])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1311]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1676, 200])
Passage Length:  1676
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1676, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1676, 11])
Passage ques attention dim:  torch.Size([5, 1676, 11])
Passage question vectors dim:  torch.Size([5, 1676, 200])
Question Passage Similarity dim:  torch.Size([5, 1676])
Question passage attention dim:  torch.Size([5, 1676])
Final Merged Passage dim:  torch.Size([5, 1676, 800])
Modeled Passage dim:  torch.Size([5, 1676, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1676, 1000])
Span start logits:  torch.Size([5, 1676])
span start probs dim:  torch.Size([5, 1676])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1676]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 323, 12])
Passage ques attention dim:  torch.Size([5, 323, 12])
Passage question vectors dim:  torch.Size([5, 323, 200])
Question Passage Similarity dim:  torch.Size([5, 323])
Question passage attention dim:  torch.Size([5, 323])
Final Merged Passage dim:  torch.Size([5, 323, 800])
Modeled Passage dim:  torch.Size([5, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 323, 1000])
Span start logits:  torch.Size([5, 323])
span start probs dim:  torch.Size([5, 323])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 323]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 591, 200])
Passage Length:  591
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 591, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 591, 11])
Passage ques attention dim:  torch.Size([5, 591, 11])
Passage question vectors dim:  torch.Size([5, 591, 200])
Question Passage Similarity dim:  torch.Size([5, 591])
Question passage attention dim:  torch.Size([5, 591])
Final Merged Passage dim:  torch.Size([5, 591, 800])
Modeled Passage dim:  torch.Size([5, 591, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 591, 1000])
Span start logits:  torch.Size([5, 591])
span start probs dim:  torch.Size([5, 591])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 591]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 11])
Passage ques attention dim:  torch.Size([5, 193, 11])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 221, 10])
Passage ques attention dim:  torch.Size([5, 221, 10])
Passage question vectors dim:  torch.Size([5, 221, 200])
Question Passage Similarity dim:  torch.Size([5, 221])
Question passage attention dim:  torch.Size([5, 221])
Final Merged Passage dim:  torch.Size([5, 221, 800])
Modeled Passage dim:  torch.Size([5, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 221, 1000])
Span start logits:  torch.Size([5, 221])
span start probs dim:  torch.Size([5, 221])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 221]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1041, 200])
Passage Length:  1041
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1041, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1041, 12])
Passage ques attention dim:  torch.Size([5, 1041, 12])
Passage question vectors dim:  torch.Size([5, 1041, 200])
Question Passage Similarity dim:  torch.Size([5, 1041])
Question passage attention dim:  torch.Size([5, 1041])
Final Merged Passage dim:  torch.Size([5, 1041, 800])
Modeled Passage dim:  torch.Size([5, 1041, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1041, 1000])
Span start logits:  torch.Size([5, 1041])
span start probs dim:  torch.Size([5, 1041])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1041]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 270, 200])
Passage Length:  270
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 270, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 270, 10])
Passage ques attention dim:  torch.Size([5, 270, 10])
Passage question vectors dim:  torch.Size([5, 270, 200])
Question Passage Similarity dim:  torch.Size([5, 270])
Question passage attention dim:  torch.Size([5, 270])
Final Merged Passage dim:  torch.Size([5, 270, 800])
Modeled Passage dim:  torch.Size([5, 270, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 270, 1000])
Span start logits:  torch.Size([5, 270])
span start probs dim:  torch.Size([5, 270])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 270]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1508, 200])
Passage Length:  1508
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1508, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1508, 9])
Passage ques attention dim:  torch.Size([5, 1508, 9])
Passage question vectors dim:  torch.Size([5, 1508, 200])
Question Passage Similarity dim:  torch.Size([5, 1508])
Question passage attention dim:  torch.Size([5, 1508])
Final Merged Passage dim:  torch.Size([5, 1508, 800])
Modeled Passage dim:  torch.Size([5, 1508, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1508, 1000])
Span start logits:  torch.Size([5, 1508])
span start probs dim:  torch.Size([5, 1508])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1508]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 375, 200])
Passage Length:  375
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 375, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 375, 11])
Passage ques attention dim:  torch.Size([5, 375, 11])
Passage question vectors dim:  torch.Size([5, 375, 200])
Question Passage Similarity dim:  torch.Size([5, 375])
Question passage attention dim:  torch.Size([5, 375])
Final Merged Passage dim:  torch.Size([5, 375, 800])
Modeled Passage dim:  torch.Size([5, 375, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 375, 1000])
Span start logits:  torch.Size([5, 375])
span start probs dim:  torch.Size([5, 375])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 375]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1250, 200])
Passage Length:  1250
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1250, 14])
Passage ques attention dim:  torch.Size([5, 1250, 14])
Passage question vectors dim:  torch.Size([5, 1250, 200])
Question Passage Similarity dim:  torch.Size([5, 1250])
Question passage attention dim:  torch.Size([5, 1250])
Final Merged Passage dim:  torch.Size([5, 1250, 800])
Modeled Passage dim:  torch.Size([5, 1250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1250, 1000])
Span start logits:  torch.Size([5, 1250])
span start probs dim:  torch.Size([5, 1250])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1250]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 687, 200])
Passage Length:  687
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 687, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 687, 8])
Passage ques attention dim:  torch.Size([5, 687, 8])
Passage question vectors dim:  torch.Size([5, 687, 200])
Question Passage Similarity dim:  torch.Size([5, 687])
Question passage attention dim:  torch.Size([5, 687])
Final Merged Passage dim:  torch.Size([5, 687, 800])
Modeled Passage dim:  torch.Size([5, 687, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 687, 1000])
Span start logits:  torch.Size([5, 687])
span start probs dim:  torch.Size([5, 687])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 687]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1025, 10])
Passage ques attention dim:  torch.Size([5, 1025, 10])
Passage question vectors dim:  torch.Size([5, 1025, 200])
Question Passage Similarity dim:  torch.Size([5, 1025])
Question passage attention dim:  torch.Size([5, 1025])
Final Merged Passage dim:  torch.Size([5, 1025, 800])
Modeled Passage dim:  torch.Size([5, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1025, 1000])
Span start logits:  torch.Size([5, 1025])
span start probs dim:  torch.Size([5, 1025])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1025]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1252, 200])
Passage Length:  1252
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1252, 13])
Passage ques attention dim:  torch.Size([5, 1252, 13])
Passage question vectors dim:  torch.Size([5, 1252, 200])
Question Passage Similarity dim:  torch.Size([5, 1252])
Question passage attention dim:  torch.Size([5, 1252])
Final Merged Passage dim:  torch.Size([5, 1252, 800])
Modeled Passage dim:  torch.Size([5, 1252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1252, 1000])
Span start logits:  torch.Size([5, 1252])
span start probs dim:  torch.Size([5, 1252])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1252]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1012, 200])
Passage Length:  1012
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1012, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1012, 8])
Passage ques attention dim:  torch.Size([5, 1012, 8])
Passage question vectors dim:  torch.Size([5, 1012, 200])
Question Passage Similarity dim:  torch.Size([5, 1012])
Question passage attention dim:  torch.Size([5, 1012])
Final Merged Passage dim:  torch.Size([5, 1012, 800])
Modeled Passage dim:  torch.Size([5, 1012, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1012, 1000])
Span start logits:  torch.Size([5, 1012])
span start probs dim:  torch.Size([5, 1012])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1012]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 600, 200])
Passage Length:  600
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 600, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 600, 9])
Passage ques attention dim:  torch.Size([5, 600, 9])
Passage question vectors dim:  torch.Size([5, 600, 200])
Question Passage Similarity dim:  torch.Size([5, 600])
Question passage attention dim:  torch.Size([5, 600])
Final Merged Passage dim:  torch.Size([5, 600, 800])
Modeled Passage dim:  torch.Size([5, 600, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 600, 1000])
Span start logits:  torch.Size([5, 600])
span start probs dim:  torch.Size([5, 600])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 600]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 550, 200])
Passage Length:  550
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 550, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 550, 13])
Passage ques attention dim:  torch.Size([5, 550, 13])
Passage question vectors dim:  torch.Size([5, 550, 200])
Question Passage Similarity dim:  torch.Size([5, 550])
Question passage attention dim:  torch.Size([5, 550])
Final Merged Passage dim:  torch.Size([5, 550, 800])
Modeled Passage dim:  torch.Size([5, 550, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 550, 1000])
Span start logits:  torch.Size([5, 550])
span start probs dim:  torch.Size([5, 550])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 550]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1225, 200])
Passage Length:  1225
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1225, 9])
Passage ques attention dim:  torch.Size([5, 1225, 9])
Passage question vectors dim:  torch.Size([5, 1225, 200])
Question Passage Similarity dim:  torch.Size([5, 1225])
Question passage attention dim:  torch.Size([5, 1225])
Final Merged Passage dim:  torch.Size([5, 1225, 800])
Modeled Passage dim:  torch.Size([5, 1225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1225, 1000])
Span start logits:  torch.Size([5, 1225])
span start probs dim:  torch.Size([5, 1225])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1225]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 291, 200])
Passage Length:  291
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 291, 13])
Passage ques attention dim:  torch.Size([5, 291, 13])
Passage question vectors dim:  torch.Size([5, 291, 200])
Question Passage Similarity dim:  torch.Size([5, 291])
Question passage attention dim:  torch.Size([5, 291])
Final Merged Passage dim:  torch.Size([5, 291, 800])
Modeled Passage dim:  torch.Size([5, 291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 291, 1000])
Span start logits:  torch.Size([5, 291])
span start probs dim:  torch.Size([5, 291])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 291]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1897, 200])
Passage Length:  1897
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1897, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1897, 11])
Passage ques attention dim:  torch.Size([5, 1897, 11])
Passage question vectors dim:  torch.Size([5, 1897, 200])
Question Passage Similarity dim:  torch.Size([5, 1897])
Question passage attention dim:  torch.Size([5, 1897])
Final Merged Passage dim:  torch.Size([5, 1897, 800])
Modeled Passage dim:  torch.Size([5, 1897, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1897, 1000])
Span start logits:  torch.Size([5, 1897])
span start probs dim:  torch.Size([5, 1897])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1897]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1068, 200])
Passage Length:  1068
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1068, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1068, 10])
Passage ques attention dim:  torch.Size([5, 1068, 10])
Passage question vectors dim:  torch.Size([5, 1068, 200])
Question Passage Similarity dim:  torch.Size([5, 1068])
Question passage attention dim:  torch.Size([5, 1068])
Final Merged Passage dim:  torch.Size([5, 1068, 800])
Modeled Passage dim:  torch.Size([5, 1068, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1068, 1000])
Span start logits:  torch.Size([5, 1068])
span start probs dim:  torch.Size([5, 1068])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1068]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 787, 200])
Passage Length:  787
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 787, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 787, 10])
Passage ques attention dim:  torch.Size([5, 787, 10])
Passage question vectors dim:  torch.Size([5, 787, 200])
Question Passage Similarity dim:  torch.Size([5, 787])
Question passage attention dim:  torch.Size([5, 787])
Final Merged Passage dim:  torch.Size([5, 787, 800])
Modeled Passage dim:  torch.Size([5, 787, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 787, 1000])
Span start logits:  torch.Size([5, 787])
span start probs dim:  torch.Size([5, 787])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 787]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1429, 200])
Passage Length:  1429
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1429, 13])
Passage ques attention dim:  torch.Size([5, 1429, 13])
Passage question vectors dim:  torch.Size([5, 1429, 200])
Question Passage Similarity dim:  torch.Size([5, 1429])
Question passage attention dim:  torch.Size([5, 1429])
Final Merged Passage dim:  torch.Size([5, 1429, 800])
Modeled Passage dim:  torch.Size([5, 1429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1429, 1000])
Span start logits:  torch.Size([5, 1429])
span start probs dim:  torch.Size([5, 1429])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1429]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 740, 200])
Passage Length:  740
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 740, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 740, 11])
Passage ques attention dim:  torch.Size([5, 740, 11])
Passage question vectors dim:  torch.Size([5, 740, 200])
Question Passage Similarity dim:  torch.Size([5, 740])
Question passage attention dim:  torch.Size([5, 740])
Final Merged Passage dim:  torch.Size([5, 740, 800])
Modeled Passage dim:  torch.Size([5, 740, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 740, 1000])
Span start logits:  torch.Size([5, 740])
span start probs dim:  torch.Size([5, 740])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 740]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 13])
Passage ques attention dim:  torch.Size([5, 462, 13])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1208, 200])
Passage Length:  1208
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1208, 11])
Passage ques attention dim:  torch.Size([5, 1208, 11])
Passage question vectors dim:  torch.Size([5, 1208, 200])
Question Passage Similarity dim:  torch.Size([5, 1208])
Question passage attention dim:  torch.Size([5, 1208])
Final Merged Passage dim:  torch.Size([5, 1208, 800])
Modeled Passage dim:  torch.Size([5, 1208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1208, 1000])
Span start logits:  torch.Size([5, 1208])
span start probs dim:  torch.Size([5, 1208])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1208]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 636, 200])
Passage Length:  636
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 636, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 636, 11])
Passage ques attention dim:  torch.Size([5, 636, 11])
Passage question vectors dim:  torch.Size([5, 636, 200])
Question Passage Similarity dim:  torch.Size([5, 636])
Question passage attention dim:  torch.Size([5, 636])
Final Merged Passage dim:  torch.Size([5, 636, 800])
Modeled Passage dim:  torch.Size([5, 636, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 636, 1000])
Span start logits:  torch.Size([5, 636])
span start probs dim:  torch.Size([5, 636])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 636]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 587, 200])
Passage Length:  587
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 587, 9])
Passage ques attention dim:  torch.Size([5, 587, 9])
Passage question vectors dim:  torch.Size([5, 587, 200])
Question Passage Similarity dim:  torch.Size([5, 587])
Question passage attention dim:  torch.Size([5, 587])
Final Merged Passage dim:  torch.Size([5, 587, 800])
Modeled Passage dim:  torch.Size([5, 587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 587, 1000])
Span start logits:  torch.Size([5, 587])
span start probs dim:  torch.Size([5, 587])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 587]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 1012, 200])
Passage Length:  1012
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 1012, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1012, 17])
Passage ques attention dim:  torch.Size([5, 1012, 17])
Passage question vectors dim:  torch.Size([5, 1012, 200])
Question Passage Similarity dim:  torch.Size([5, 1012])
Question passage attention dim:  torch.Size([5, 1012])
Final Merged Passage dim:  torch.Size([5, 1012, 800])
Modeled Passage dim:  torch.Size([5, 1012, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1012, 1000])
Span start logits:  torch.Size([5, 1012])
span start probs dim:  torch.Size([5, 1012])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1012]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 412, 200])
Passage Length:  412
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 412, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 412, 9])
Passage ques attention dim:  torch.Size([5, 412, 9])
Passage question vectors dim:  torch.Size([5, 412, 200])
Question Passage Similarity dim:  torch.Size([5, 412])
Question passage attention dim:  torch.Size([5, 412])
Final Merged Passage dim:  torch.Size([5, 412, 800])
Modeled Passage dim:  torch.Size([5, 412, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 412, 1000])
Span start logits:  torch.Size([5, 412])
span start probs dim:  torch.Size([5, 412])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 412]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 643, 200])
Passage Length:  643
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 643, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 643, 10])
Passage ques attention dim:  torch.Size([5, 643, 10])
Passage question vectors dim:  torch.Size([5, 643, 200])
Question Passage Similarity dim:  torch.Size([5, 643])
Question passage attention dim:  torch.Size([5, 643])
Final Merged Passage dim:  torch.Size([5, 643, 800])
Modeled Passage dim:  torch.Size([5, 643, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 643, 1000])
Span start logits:  torch.Size([5, 643])
span start probs dim:  torch.Size([5, 643])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 643]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 770, 200])
Passage Length:  770
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 770, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 770, 10])
Passage ques attention dim:  torch.Size([5, 770, 10])
Passage question vectors dim:  torch.Size([5, 770, 200])
Question Passage Similarity dim:  torch.Size([5, 770])
Question passage attention dim:  torch.Size([5, 770])
Final Merged Passage dim:  torch.Size([5, 770, 800])
Modeled Passage dim:  torch.Size([5, 770, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 770, 1000])
Span start logits:  torch.Size([5, 770])
span start probs dim:  torch.Size([5, 770])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 770]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 395, 200])
Passage Length:  395
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 395, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 395, 10])
Passage ques attention dim:  torch.Size([5, 395, 10])
Passage question vectors dim:  torch.Size([5, 395, 200])
Question Passage Similarity dim:  torch.Size([5, 395])
Question passage attention dim:  torch.Size([5, 395])
Final Merged Passage dim:  torch.Size([5, 395, 800])
Modeled Passage dim:  torch.Size([5, 395, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 395, 1000])
Span start logits:  torch.Size([5, 395])
span start probs dim:  torch.Size([5, 395])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 395]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 950, 200])
Passage Length:  950
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 950, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 950, 10])
Passage ques attention dim:  torch.Size([5, 950, 10])
Passage question vectors dim:  torch.Size([5, 950, 200])
Question Passage Similarity dim:  torch.Size([5, 950])
Question passage attention dim:  torch.Size([5, 950])
Final Merged Passage dim:  torch.Size([5, 950, 800])
Modeled Passage dim:  torch.Size([5, 950, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 950, 1000])
Span start logits:  torch.Size([5, 950])
span start probs dim:  torch.Size([5, 950])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 950]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1044, 200])
Passage Length:  1044
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1044, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1044, 9])
Passage ques attention dim:  torch.Size([5, 1044, 9])
Passage question vectors dim:  torch.Size([5, 1044, 200])
Question Passage Similarity dim:  torch.Size([5, 1044])
Question passage attention dim:  torch.Size([5, 1044])
Final Merged Passage dim:  torch.Size([5, 1044, 800])
Modeled Passage dim:  torch.Size([5, 1044, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1044, 1000])
Span start logits:  torch.Size([5, 1044])
span start probs dim:  torch.Size([5, 1044])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1044]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 1603, 200])
Passage Length:  1603
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 1603, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1603, 16])
Passage ques attention dim:  torch.Size([5, 1603, 16])
Passage question vectors dim:  torch.Size([5, 1603, 200])
Question Passage Similarity dim:  torch.Size([5, 1603])
Question passage attention dim:  torch.Size([5, 1603])
Final Merged Passage dim:  torch.Size([5, 1603, 800])
Modeled Passage dim:  torch.Size([5, 1603, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1603, 1000])
Span start logits:  torch.Size([5, 1603])
span start probs dim:  torch.Size([5, 1603])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1603]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 307, 200])
Passage Length:  307
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 307, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 307, 13])
Passage ques attention dim:  torch.Size([5, 307, 13])
Passage question vectors dim:  torch.Size([5, 307, 200])
Question Passage Similarity dim:  torch.Size([5, 307])
Question passage attention dim:  torch.Size([5, 307])
Final Merged Passage dim:  torch.Size([5, 307, 800])
Modeled Passage dim:  torch.Size([5, 307, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 307, 1000])
Span start logits:  torch.Size([5, 307])
span start probs dim:  torch.Size([5, 307])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 307]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 961, 200])
Passage Length:  961
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 961, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 961, 10])
Passage ques attention dim:  torch.Size([5, 961, 10])
Passage question vectors dim:  torch.Size([5, 961, 200])
Question Passage Similarity dim:  torch.Size([5, 961])
Question passage attention dim:  torch.Size([5, 961])
Final Merged Passage dim:  torch.Size([5, 961, 800])
Modeled Passage dim:  torch.Size([5, 961, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 961, 1000])
Span start logits:  torch.Size([5, 961])
span start probs dim:  torch.Size([5, 961])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 961]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 848, 200])
Passage Length:  848
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 848, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 848, 6])
Passage ques attention dim:  torch.Size([5, 848, 6])
Passage question vectors dim:  torch.Size([5, 848, 200])
Question Passage Similarity dim:  torch.Size([5, 848])
Question passage attention dim:  torch.Size([5, 848])
Final Merged Passage dim:  torch.Size([5, 848, 800])
Modeled Passage dim:  torch.Size([5, 848, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 848, 1000])
Span start logits:  torch.Size([5, 848])
span start probs dim:  torch.Size([5, 848])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 848]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1564, 200])
Passage Length:  1564
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1564, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1564, 11])
Passage ques attention dim:  torch.Size([5, 1564, 11])
Passage question vectors dim:  torch.Size([5, 1564, 200])
Question Passage Similarity dim:  torch.Size([5, 1564])
Question passage attention dim:  torch.Size([5, 1564])
Final Merged Passage dim:  torch.Size([5, 1564, 800])
Modeled Passage dim:  torch.Size([5, 1564, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1564, 1000])
Span start logits:  torch.Size([5, 1564])
span start probs dim:  torch.Size([5, 1564])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1564]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 12])
Passage ques attention dim:  torch.Size([5, 1094, 12])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 337, 200])
Passage Length:  337
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 337, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 337, 11])
Passage ques attention dim:  torch.Size([5, 337, 11])
Passage question vectors dim:  torch.Size([5, 337, 200])
Question Passage Similarity dim:  torch.Size([5, 337])
Question passage attention dim:  torch.Size([5, 337])
Final Merged Passage dim:  torch.Size([5, 337, 800])
Modeled Passage dim:  torch.Size([5, 337, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 337, 1000])
Span start logits:  torch.Size([5, 337])
span start probs dim:  torch.Size([5, 337])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 337]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 8])
Passage ques attention dim:  torch.Size([5, 619, 8])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1051, 200])
Passage Length:  1051
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1051, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1051, 11])
Passage ques attention dim:  torch.Size([5, 1051, 11])
Passage question vectors dim:  torch.Size([5, 1051, 200])
Question Passage Similarity dim:  torch.Size([5, 1051])
Question passage attention dim:  torch.Size([5, 1051])
Final Merged Passage dim:  torch.Size([5, 1051, 800])
Modeled Passage dim:  torch.Size([5, 1051, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1051, 1000])
Span start logits:  torch.Size([5, 1051])
span start probs dim:  torch.Size([5, 1051])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1051]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 9])
Passage ques attention dim:  torch.Size([5, 165, 9])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 413, 16])
Passage ques attention dim:  torch.Size([5, 413, 16])
Passage question vectors dim:  torch.Size([5, 413, 200])
Question Passage Similarity dim:  torch.Size([5, 413])
Question passage attention dim:  torch.Size([5, 413])
Final Merged Passage dim:  torch.Size([5, 413, 800])
Modeled Passage dim:  torch.Size([5, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 413, 1000])
Span start logits:  torch.Size([5, 413])
span start probs dim:  torch.Size([5, 413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 571, 200])
Passage Length:  571
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 571, 9])
Passage ques attention dim:  torch.Size([5, 571, 9])
Passage question vectors dim:  torch.Size([5, 571, 200])
Question Passage Similarity dim:  torch.Size([5, 571])
Question passage attention dim:  torch.Size([5, 571])
Final Merged Passage dim:  torch.Size([5, 571, 800])
Modeled Passage dim:  torch.Size([5, 571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 571, 1000])
Span start logits:  torch.Size([5, 571])
span start probs dim:  torch.Size([5, 571])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 571]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 534, 200])
Passage Length:  534
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 534, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 534, 10])
Passage ques attention dim:  torch.Size([5, 534, 10])
Passage question vectors dim:  torch.Size([5, 534, 200])
Question Passage Similarity dim:  torch.Size([5, 534])
Question passage attention dim:  torch.Size([5, 534])
Final Merged Passage dim:  torch.Size([5, 534, 800])
Modeled Passage dim:  torch.Size([5, 534, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 534, 1000])
Span start logits:  torch.Size([5, 534])
span start probs dim:  torch.Size([5, 534])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 534]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 12])
Passage ques attention dim:  torch.Size([5, 254, 12])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 883, 200])
Passage Length:  883
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 883, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 883, 11])
Passage ques attention dim:  torch.Size([5, 883, 11])
Passage question vectors dim:  torch.Size([5, 883, 200])
Question Passage Similarity dim:  torch.Size([5, 883])
Question passage attention dim:  torch.Size([5, 883])
Final Merged Passage dim:  torch.Size([5, 883, 800])
Modeled Passage dim:  torch.Size([5, 883, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 883, 1000])
Span start logits:  torch.Size([5, 883])
span start probs dim:  torch.Size([5, 883])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 883]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 724, 10])
Passage ques attention dim:  torch.Size([5, 724, 10])
Passage question vectors dim:  torch.Size([5, 724, 200])
Question Passage Similarity dim:  torch.Size([5, 724])
Question passage attention dim:  torch.Size([5, 724])
Final Merged Passage dim:  torch.Size([5, 724, 800])
Modeled Passage dim:  torch.Size([5, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 724, 1000])
Span start logits:  torch.Size([5, 724])
span start probs dim:  torch.Size([5, 724])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 724]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 906, 19])
Passage ques attention dim:  torch.Size([5, 906, 19])
Passage question vectors dim:  torch.Size([5, 906, 200])
Question Passage Similarity dim:  torch.Size([5, 906])
Question passage attention dim:  torch.Size([5, 906])
Final Merged Passage dim:  torch.Size([5, 906, 800])
Modeled Passage dim:  torch.Size([5, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 906, 1000])
Span start logits:  torch.Size([5, 906])
span start probs dim:  torch.Size([5, 906])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 906]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 505, 200])
Passage Length:  505
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 505, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 505, 10])
Passage ques attention dim:  torch.Size([5, 505, 10])
Passage question vectors dim:  torch.Size([5, 505, 200])
Question Passage Similarity dim:  torch.Size([5, 505])
Question passage attention dim:  torch.Size([5, 505])
Final Merged Passage dim:  torch.Size([5, 505, 800])
Modeled Passage dim:  torch.Size([5, 505, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 505, 1000])
Span start logits:  torch.Size([5, 505])
span start probs dim:  torch.Size([5, 505])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 505]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1176, 200])
Passage Length:  1176
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1176, 14])
Passage ques attention dim:  torch.Size([5, 1176, 14])
Passage question vectors dim:  torch.Size([5, 1176, 200])
Question Passage Similarity dim:  torch.Size([5, 1176])
Question passage attention dim:  torch.Size([5, 1176])
Final Merged Passage dim:  torch.Size([5, 1176, 800])
Modeled Passage dim:  torch.Size([5, 1176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1176, 1000])
Span start logits:  torch.Size([5, 1176])
span start probs dim:  torch.Size([5, 1176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1062, 200])
Passage Length:  1062
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1062, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1062, 10])
Passage ques attention dim:  torch.Size([5, 1062, 10])
Passage question vectors dim:  torch.Size([5, 1062, 200])
Question Passage Similarity dim:  torch.Size([5, 1062])
Question passage attention dim:  torch.Size([5, 1062])
Final Merged Passage dim:  torch.Size([5, 1062, 800])
Modeled Passage dim:  torch.Size([5, 1062, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1062, 1000])
Span start logits:  torch.Size([5, 1062])
span start probs dim:  torch.Size([5, 1062])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1062]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 990, 200])
Passage Length:  990
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 990, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 990, 10])
Passage ques attention dim:  torch.Size([5, 990, 10])
Passage question vectors dim:  torch.Size([5, 990, 200])
Question Passage Similarity dim:  torch.Size([5, 990])
Question passage attention dim:  torch.Size([5, 990])
Final Merged Passage dim:  torch.Size([5, 990, 800])
Modeled Passage dim:  torch.Size([5, 990, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 990, 1000])
Span start logits:  torch.Size([5, 990])
span start probs dim:  torch.Size([5, 990])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 990]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 743, 200])
Passage Length:  743
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 743, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 743, 11])
Passage ques attention dim:  torch.Size([5, 743, 11])
Passage question vectors dim:  torch.Size([5, 743, 200])
Question Passage Similarity dim:  torch.Size([5, 743])
Question passage attention dim:  torch.Size([5, 743])
Final Merged Passage dim:  torch.Size([5, 743, 800])
Modeled Passage dim:  torch.Size([5, 743, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 743, 1000])
Span start logits:  torch.Size([5, 743])
span start probs dim:  torch.Size([5, 743])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 743]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 362, 200])
Passage Length:  362
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 362, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 362, 12])
Passage ques attention dim:  torch.Size([5, 362, 12])
Passage question vectors dim:  torch.Size([5, 362, 200])
Question Passage Similarity dim:  torch.Size([5, 362])
Question passage attention dim:  torch.Size([5, 362])
Final Merged Passage dim:  torch.Size([5, 362, 800])
Modeled Passage dim:  torch.Size([5, 362, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 362, 1000])
Span start logits:  torch.Size([5, 362])
span start probs dim:  torch.Size([5, 362])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 362]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1197, 200])
Passage Length:  1197
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1197, 12])
Passage ques attention dim:  torch.Size([5, 1197, 12])
Passage question vectors dim:  torch.Size([5, 1197, 200])
Question Passage Similarity dim:  torch.Size([5, 1197])
Question passage attention dim:  torch.Size([5, 1197])
Final Merged Passage dim:  torch.Size([5, 1197, 800])
Modeled Passage dim:  torch.Size([5, 1197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1197, 1000])
Span start logits:  torch.Size([5, 1197])
span start probs dim:  torch.Size([5, 1197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 315, 200])
Passage Length:  315
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 315, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 315, 12])
Passage ques attention dim:  torch.Size([5, 315, 12])
Passage question vectors dim:  torch.Size([5, 315, 200])
Question Passage Similarity dim:  torch.Size([5, 315])
Question passage attention dim:  torch.Size([5, 315])
Final Merged Passage dim:  torch.Size([5, 315, 800])
Modeled Passage dim:  torch.Size([5, 315, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 315, 1000])
Span start logits:  torch.Size([5, 315])
span start probs dim:  torch.Size([5, 315])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 315]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 11])
Passage ques attention dim:  torch.Size([5, 171, 11])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 10])
Passage ques attention dim:  torch.Size([5, 273, 10])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 574, 200])
Passage Length:  574
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 574, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 574, 11])
Passage ques attention dim:  torch.Size([5, 574, 11])
Passage question vectors dim:  torch.Size([5, 574, 200])
Question Passage Similarity dim:  torch.Size([5, 574])
Question passage attention dim:  torch.Size([5, 574])
Final Merged Passage dim:  torch.Size([5, 574, 800])
Modeled Passage dim:  torch.Size([5, 574, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 574, 1000])
Span start logits:  torch.Size([5, 574])
span start probs dim:  torch.Size([5, 574])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 574]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 906, 17])
Passage ques attention dim:  torch.Size([5, 906, 17])
Passage question vectors dim:  torch.Size([5, 906, 200])
Question Passage Similarity dim:  torch.Size([5, 906])
Question passage attention dim:  torch.Size([5, 906])
Final Merged Passage dim:  torch.Size([5, 906, 800])
Modeled Passage dim:  torch.Size([5, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 906, 1000])
Span start logits:  torch.Size([5, 906])
span start probs dim:  torch.Size([5, 906])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 906]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1012, 200])
Passage Length:  1012
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1012, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1012, 12])
Passage ques attention dim:  torch.Size([5, 1012, 12])
Passage question vectors dim:  torch.Size([5, 1012, 200])
Question Passage Similarity dim:  torch.Size([5, 1012])
Question passage attention dim:  torch.Size([5, 1012])
Final Merged Passage dim:  torch.Size([5, 1012, 800])
Modeled Passage dim:  torch.Size([5, 1012, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1012, 1000])
Span start logits:  torch.Size([5, 1012])
span start probs dim:  torch.Size([5, 1012])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1012]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 384, 200])
Passage Length:  384
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 384, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 384, 15])
Passage ques attention dim:  torch.Size([5, 384, 15])
Passage question vectors dim:  torch.Size([5, 384, 200])
Question Passage Similarity dim:  torch.Size([5, 384])
Question passage attention dim:  torch.Size([5, 384])
Final Merged Passage dim:  torch.Size([5, 384, 800])
Modeled Passage dim:  torch.Size([5, 384, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 384, 1000])
Span start logits:  torch.Size([5, 384])
span start probs dim:  torch.Size([5, 384])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 384]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 952, 200])
Passage Length:  952
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 952, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 952, 9])
Passage ques attention dim:  torch.Size([5, 952, 9])
Passage question vectors dim:  torch.Size([5, 952, 200])
Question Passage Similarity dim:  torch.Size([5, 952])
Question passage attention dim:  torch.Size([5, 952])
Final Merged Passage dim:  torch.Size([5, 952, 800])
Modeled Passage dim:  torch.Size([5, 952, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 952, 1000])
Span start logits:  torch.Size([5, 952])
span start probs dim:  torch.Size([5, 952])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 952]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 689, 200])
Passage Length:  689
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 689, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 689, 15])
Passage ques attention dim:  torch.Size([5, 689, 15])
Passage question vectors dim:  torch.Size([5, 689, 200])
Question Passage Similarity dim:  torch.Size([5, 689])
Question passage attention dim:  torch.Size([5, 689])
Final Merged Passage dim:  torch.Size([5, 689, 800])
Modeled Passage dim:  torch.Size([5, 689, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 689, 1000])
Span start logits:  torch.Size([5, 689])
span start probs dim:  torch.Size([5, 689])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 689]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 786, 200])
Passage Length:  786
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 786, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 786, 9])
Passage ques attention dim:  torch.Size([5, 786, 9])
Passage question vectors dim:  torch.Size([5, 786, 200])
Question Passage Similarity dim:  torch.Size([5, 786])
Question passage attention dim:  torch.Size([5, 786])
Final Merged Passage dim:  torch.Size([5, 786, 800])
Modeled Passage dim:  torch.Size([5, 786, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 786, 1000])
Span start logits:  torch.Size([5, 786])
span start probs dim:  torch.Size([5, 786])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 786]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 531, 200])
Passage Length:  531
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 531, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 531, 11])
Passage ques attention dim:  torch.Size([5, 531, 11])
Passage question vectors dim:  torch.Size([5, 531, 200])
Question Passage Similarity dim:  torch.Size([5, 531])
Question passage attention dim:  torch.Size([5, 531])
Final Merged Passage dim:  torch.Size([5, 531, 800])
Modeled Passage dim:  torch.Size([5, 531, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 531, 1000])
Span start logits:  torch.Size([5, 531])
span start probs dim:  torch.Size([5, 531])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 531]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 534, 200])
Passage Length:  534
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 534, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 534, 9])
Passage ques attention dim:  torch.Size([5, 534, 9])
Passage question vectors dim:  torch.Size([5, 534, 200])
Question Passage Similarity dim:  torch.Size([5, 534])
Question passage attention dim:  torch.Size([5, 534])
Final Merged Passage dim:  torch.Size([5, 534, 800])
Modeled Passage dim:  torch.Size([5, 534, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 534, 1000])
Span start logits:  torch.Size([5, 534])
span start probs dim:  torch.Size([5, 534])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 534]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 1267, 200])
Passage Length:  1267
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 1267, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1267, 15])
Passage ques attention dim:  torch.Size([5, 1267, 15])
Passage question vectors dim:  torch.Size([5, 1267, 200])
Question Passage Similarity dim:  torch.Size([5, 1267])
Question passage attention dim:  torch.Size([5, 1267])
Final Merged Passage dim:  torch.Size([5, 1267, 800])
Modeled Passage dim:  torch.Size([5, 1267, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1267, 1000])
Span start logits:  torch.Size([5, 1267])
span start probs dim:  torch.Size([5, 1267])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1267]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1108, 200])
Passage Length:  1108
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1108, 10])
Passage ques attention dim:  torch.Size([5, 1108, 10])
Passage question vectors dim:  torch.Size([5, 1108, 200])
Question Passage Similarity dim:  torch.Size([5, 1108])
Question passage attention dim:  torch.Size([5, 1108])
Final Merged Passage dim:  torch.Size([5, 1108, 800])
Modeled Passage dim:  torch.Size([5, 1108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1108, 1000])
Span start logits:  torch.Size([5, 1108])
span start probs dim:  torch.Size([5, 1108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 391, 200])
Passage Length:  391
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 391, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 391, 8])
Passage ques attention dim:  torch.Size([5, 391, 8])
Passage question vectors dim:  torch.Size([5, 391, 200])
Question Passage Similarity dim:  torch.Size([5, 391])
Question passage attention dim:  torch.Size([5, 391])
Final Merged Passage dim:  torch.Size([5, 391, 800])
Modeled Passage dim:  torch.Size([5, 391, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 391, 1000])
Span start logits:  torch.Size([5, 391])
span start probs dim:  torch.Size([5, 391])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 391]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 360, 200])
Passage Length:  360
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 360, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 360, 13])
Passage ques attention dim:  torch.Size([5, 360, 13])
Passage question vectors dim:  torch.Size([5, 360, 200])
Question Passage Similarity dim:  torch.Size([5, 360])
Question passage attention dim:  torch.Size([5, 360])
Final Merged Passage dim:  torch.Size([5, 360, 800])
Modeled Passage dim:  torch.Size([5, 360, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 360, 1000])
Span start logits:  torch.Size([5, 360])
span start probs dim:  torch.Size([5, 360])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 360]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 906, 11])
Passage ques attention dim:  torch.Size([5, 906, 11])
Passage question vectors dim:  torch.Size([5, 906, 200])
Question Passage Similarity dim:  torch.Size([5, 906])
Question passage attention dim:  torch.Size([5, 906])
Final Merged Passage dim:  torch.Size([5, 906, 800])
Modeled Passage dim:  torch.Size([5, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 906, 1000])
Span start logits:  torch.Size([5, 906])
span start probs dim:  torch.Size([5, 906])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 906]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 752, 200])
Passage Length:  752
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 752, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 752, 10])
Passage ques attention dim:  torch.Size([5, 752, 10])
Passage question vectors dim:  torch.Size([5, 752, 200])
Question Passage Similarity dim:  torch.Size([5, 752])
Question passage attention dim:  torch.Size([5, 752])
Final Merged Passage dim:  torch.Size([5, 752, 800])
Modeled Passage dim:  torch.Size([5, 752, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 752, 1000])
Span start logits:  torch.Size([5, 752])
span start probs dim:  torch.Size([5, 752])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 752]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 416, 200])
Passage Length:  416
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 416, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 416, 9])
Passage ques attention dim:  torch.Size([5, 416, 9])
Passage question vectors dim:  torch.Size([5, 416, 200])
Question Passage Similarity dim:  torch.Size([5, 416])
Question passage attention dim:  torch.Size([5, 416])
Final Merged Passage dim:  torch.Size([5, 416, 800])
Modeled Passage dim:  torch.Size([5, 416, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 416, 1000])
Span start logits:  torch.Size([5, 416])
span start probs dim:  torch.Size([5, 416])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 416]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 761, 200])
Passage Length:  761
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 761, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 761, 11])
Passage ques attention dim:  torch.Size([5, 761, 11])
Passage question vectors dim:  torch.Size([5, 761, 200])
Question Passage Similarity dim:  torch.Size([5, 761])
Question passage attention dim:  torch.Size([5, 761])
Final Merged Passage dim:  torch.Size([5, 761, 800])
Modeled Passage dim:  torch.Size([5, 761, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 761, 1000])
Span start logits:  torch.Size([5, 761])
span start probs dim:  torch.Size([5, 761])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 761]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 538, 200])
Passage Length:  538
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 538, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 538, 7])
Passage ques attention dim:  torch.Size([5, 538, 7])
Passage question vectors dim:  torch.Size([5, 538, 200])
Question Passage Similarity dim:  torch.Size([5, 538])
Question passage attention dim:  torch.Size([5, 538])
Final Merged Passage dim:  torch.Size([5, 538, 800])
Modeled Passage dim:  torch.Size([5, 538, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 538, 1000])
Span start logits:  torch.Size([5, 538])
span start probs dim:  torch.Size([5, 538])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 538]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 291, 200])
Passage Length:  291
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 291, 8])
Passage ques attention dim:  torch.Size([5, 291, 8])
Passage question vectors dim:  torch.Size([5, 291, 200])
Question Passage Similarity dim:  torch.Size([5, 291])
Question passage attention dim:  torch.Size([5, 291])
Final Merged Passage dim:  torch.Size([5, 291, 800])
Modeled Passage dim:  torch.Size([5, 291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 291, 1000])
Span start logits:  torch.Size([5, 291])
span start probs dim:  torch.Size([5, 291])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 291]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 299, 200])
Passage Length:  299
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 299, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 299, 8])
Passage ques attention dim:  torch.Size([5, 299, 8])
Passage question vectors dim:  torch.Size([5, 299, 200])
Question Passage Similarity dim:  torch.Size([5, 299])
Question passage attention dim:  torch.Size([5, 299])
Final Merged Passage dim:  torch.Size([5, 299, 800])
Modeled Passage dim:  torch.Size([5, 299, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 299, 1000])
Span start logits:  torch.Size([5, 299])
span start probs dim:  torch.Size([5, 299])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 299]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1344, 200])
Passage Length:  1344
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1344, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1344, 10])
Passage ques attention dim:  torch.Size([5, 1344, 10])
Passage question vectors dim:  torch.Size([5, 1344, 200])
Question Passage Similarity dim:  torch.Size([5, 1344])
Question passage attention dim:  torch.Size([5, 1344])
Final Merged Passage dim:  torch.Size([5, 1344, 800])
Modeled Passage dim:  torch.Size([5, 1344, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1344, 1000])
Span start logits:  torch.Size([5, 1344])
span start probs dim:  torch.Size([5, 1344])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1344]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 11])
Passage ques attention dim:  torch.Size([5, 560, 11])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 379, 9])
Passage ques attention dim:  torch.Size([5, 379, 9])
Passage question vectors dim:  torch.Size([5, 379, 200])
Question Passage Similarity dim:  torch.Size([5, 379])
Question passage attention dim:  torch.Size([5, 379])
Final Merged Passage dim:  torch.Size([5, 379, 800])
Modeled Passage dim:  torch.Size([5, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 379, 1000])
Span start logits:  torch.Size([5, 379])
span start probs dim:  torch.Size([5, 379])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 379]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 684, 200])
Passage Length:  684
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 684, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 684, 9])
Passage ques attention dim:  torch.Size([5, 684, 9])
Passage question vectors dim:  torch.Size([5, 684, 200])
Question Passage Similarity dim:  torch.Size([5, 684])
Question passage attention dim:  torch.Size([5, 684])
Final Merged Passage dim:  torch.Size([5, 684, 800])
Modeled Passage dim:  torch.Size([5, 684, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 684, 1000])
Span start logits:  torch.Size([5, 684])
span start probs dim:  torch.Size([5, 684])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 684]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 456, 12])
Passage ques attention dim:  torch.Size([5, 456, 12])
Passage question vectors dim:  torch.Size([5, 456, 200])
Question Passage Similarity dim:  torch.Size([5, 456])
Question passage attention dim:  torch.Size([5, 456])
Final Merged Passage dim:  torch.Size([5, 456, 800])
Modeled Passage dim:  torch.Size([5, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 456, 1000])
Span start logits:  torch.Size([5, 456])
span start probs dim:  torch.Size([5, 456])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 456]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 687, 200])
Passage Length:  687
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 687, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 687, 10])
Passage ques attention dim:  torch.Size([5, 687, 10])
Passage question vectors dim:  torch.Size([5, 687, 200])
Question Passage Similarity dim:  torch.Size([5, 687])
Question passage attention dim:  torch.Size([5, 687])
Final Merged Passage dim:  torch.Size([5, 687, 800])
Modeled Passage dim:  torch.Size([5, 687, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 687, 1000])
Span start logits:  torch.Size([5, 687])
span start probs dim:  torch.Size([5, 687])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 687]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 473, 200])
Passage Length:  473
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 473, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 473, 14])
Passage ques attention dim:  torch.Size([5, 473, 14])
Passage question vectors dim:  torch.Size([5, 473, 200])
Question Passage Similarity dim:  torch.Size([5, 473])
Question passage attention dim:  torch.Size([5, 473])
Final Merged Passage dim:  torch.Size([5, 473, 800])
Modeled Passage dim:  torch.Size([5, 473, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 473, 1000])
Span start logits:  torch.Size([5, 473])
span start probs dim:  torch.Size([5, 473])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 473]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 861, 200])
Passage Length:  861
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 861, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 861, 15])
Passage ques attention dim:  torch.Size([5, 861, 15])
Passage question vectors dim:  torch.Size([5, 861, 200])
Question Passage Similarity dim:  torch.Size([5, 861])
Question passage attention dim:  torch.Size([5, 861])
Final Merged Passage dim:  torch.Size([5, 861, 800])
Modeled Passage dim:  torch.Size([5, 861, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 861, 1000])
Span start logits:  torch.Size([5, 861])
span start probs dim:  torch.Size([5, 861])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 861]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 576, 9])
Passage ques attention dim:  torch.Size([5, 576, 9])
Passage question vectors dim:  torch.Size([5, 576, 200])
Question Passage Similarity dim:  torch.Size([5, 576])
Question passage attention dim:  torch.Size([5, 576])
Final Merged Passage dim:  torch.Size([5, 576, 800])
Modeled Passage dim:  torch.Size([5, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 576, 1000])
Span start logits:  torch.Size([5, 576])
span start probs dim:  torch.Size([5, 576])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 576]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1059, 200])
Passage Length:  1059
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1059, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1059, 9])
Passage ques attention dim:  torch.Size([5, 1059, 9])
Passage question vectors dim:  torch.Size([5, 1059, 200])
Question Passage Similarity dim:  torch.Size([5, 1059])
Question passage attention dim:  torch.Size([5, 1059])
Final Merged Passage dim:  torch.Size([5, 1059, 800])
Modeled Passage dim:  torch.Size([5, 1059, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1059, 1000])
Span start logits:  torch.Size([5, 1059])
span start probs dim:  torch.Size([5, 1059])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1059]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 896, 200])
Passage Length:  896
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 896, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 896, 15])
Passage ques attention dim:  torch.Size([5, 896, 15])
Passage question vectors dim:  torch.Size([5, 896, 200])
Question Passage Similarity dim:  torch.Size([5, 896])
Question passage attention dim:  torch.Size([5, 896])
Final Merged Passage dim:  torch.Size([5, 896, 800])
Modeled Passage dim:  torch.Size([5, 896, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 896, 1000])
Span start logits:  torch.Size([5, 896])
span start probs dim:  torch.Size([5, 896])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 896]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 753, 200])
Passage Length:  753
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 753, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 753, 8])
Passage ques attention dim:  torch.Size([5, 753, 8])
Passage question vectors dim:  torch.Size([5, 753, 200])
Question Passage Similarity dim:  torch.Size([5, 753])
Question passage attention dim:  torch.Size([5, 753])
Final Merged Passage dim:  torch.Size([5, 753, 800])
Modeled Passage dim:  torch.Size([5, 753, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 753, 1000])
Span start logits:  torch.Size([5, 753])
span start probs dim:  torch.Size([5, 753])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 753]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1331, 200])
Passage Length:  1331
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1331, 8])
Passage ques attention dim:  torch.Size([5, 1331, 8])
Passage question vectors dim:  torch.Size([5, 1331, 200])
Question Passage Similarity dim:  torch.Size([5, 1331])
Question passage attention dim:  torch.Size([5, 1331])
Final Merged Passage dim:  torch.Size([5, 1331, 800])
Modeled Passage dim:  torch.Size([5, 1331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1331, 1000])
Span start logits:  torch.Size([5, 1331])
span start probs dim:  torch.Size([5, 1331])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1331]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 749, 200])
Passage Length:  749
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 749, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 749, 10])
Passage ques attention dim:  torch.Size([5, 749, 10])
Passage question vectors dim:  torch.Size([5, 749, 200])
Question Passage Similarity dim:  torch.Size([5, 749])
Question passage attention dim:  torch.Size([5, 749])
Final Merged Passage dim:  torch.Size([5, 749, 800])
Modeled Passage dim:  torch.Size([5, 749, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 749, 1000])
Span start logits:  torch.Size([5, 749])
span start probs dim:  torch.Size([5, 749])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 749]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 211, 10])
Passage ques attention dim:  torch.Size([5, 211, 10])
Passage question vectors dim:  torch.Size([5, 211, 200])
Question Passage Similarity dim:  torch.Size([5, 211])
Question passage attention dim:  torch.Size([5, 211])
Final Merged Passage dim:  torch.Size([5, 211, 800])
Modeled Passage dim:  torch.Size([5, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 211, 1000])
Span start logits:  torch.Size([5, 211])
span start probs dim:  torch.Size([5, 211])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 211]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1334, 200])
Passage Length:  1334
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1334, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1334, 9])
Passage ques attention dim:  torch.Size([5, 1334, 9])
Passage question vectors dim:  torch.Size([5, 1334, 200])
Question Passage Similarity dim:  torch.Size([5, 1334])
Question passage attention dim:  torch.Size([5, 1334])
Final Merged Passage dim:  torch.Size([5, 1334, 800])
Modeled Passage dim:  torch.Size([5, 1334, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1334, 1000])
Span start logits:  torch.Size([5, 1334])
span start probs dim:  torch.Size([5, 1334])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1334]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1267, 200])
Passage Length:  1267
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1267, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1267, 9])
Passage ques attention dim:  torch.Size([5, 1267, 9])
Passage question vectors dim:  torch.Size([5, 1267, 200])
Question Passage Similarity dim:  torch.Size([5, 1267])
Question passage attention dim:  torch.Size([5, 1267])
Final Merged Passage dim:  torch.Size([5, 1267, 800])
Modeled Passage dim:  torch.Size([5, 1267, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1267, 1000])
Span start logits:  torch.Size([5, 1267])
span start probs dim:  torch.Size([5, 1267])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1267]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 830, 200])
Passage Length:  830
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 830, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 830, 9])
Passage ques attention dim:  torch.Size([5, 830, 9])
Passage question vectors dim:  torch.Size([5, 830, 200])
Question Passage Similarity dim:  torch.Size([5, 830])
Question passage attention dim:  torch.Size([5, 830])
Final Merged Passage dim:  torch.Size([5, 830, 800])
Modeled Passage dim:  torch.Size([5, 830, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 830, 1000])
Span start logits:  torch.Size([5, 830])
span start probs dim:  torch.Size([5, 830])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 830]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 576, 9])
Passage ques attention dim:  torch.Size([5, 576, 9])
Passage question vectors dim:  torch.Size([5, 576, 200])
Question Passage Similarity dim:  torch.Size([5, 576])
Question passage attention dim:  torch.Size([5, 576])
Final Merged Passage dim:  torch.Size([5, 576, 800])
Modeled Passage dim:  torch.Size([5, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 576, 1000])
Span start logits:  torch.Size([5, 576])
span start probs dim:  torch.Size([5, 576])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 576]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 491, 200])
Passage Length:  491
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 491, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 491, 17])
Passage ques attention dim:  torch.Size([5, 491, 17])
Passage question vectors dim:  torch.Size([5, 491, 200])
Question Passage Similarity dim:  torch.Size([5, 491])
Question passage attention dim:  torch.Size([5, 491])
Final Merged Passage dim:  torch.Size([5, 491, 800])
Modeled Passage dim:  torch.Size([5, 491, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 491, 1000])
Span start logits:  torch.Size([5, 491])
span start probs dim:  torch.Size([5, 491])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 491]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 401, 200])
Passage Length:  401
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 401, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 401, 8])
Passage ques attention dim:  torch.Size([5, 401, 8])
Passage question vectors dim:  torch.Size([5, 401, 200])
Question Passage Similarity dim:  torch.Size([5, 401])
Question passage attention dim:  torch.Size([5, 401])
Final Merged Passage dim:  torch.Size([5, 401, 800])
Modeled Passage dim:  torch.Size([5, 401, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 401, 1000])
Span start logits:  torch.Size([5, 401])
span start probs dim:  torch.Size([5, 401])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 401]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 952, 200])
Passage Length:  952
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 952, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 952, 19])
Passage ques attention dim:  torch.Size([5, 952, 19])
Passage question vectors dim:  torch.Size([5, 952, 200])
Question Passage Similarity dim:  torch.Size([5, 952])
Question passage attention dim:  torch.Size([5, 952])
Final Merged Passage dim:  torch.Size([5, 952, 800])
Modeled Passage dim:  torch.Size([5, 952, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 952, 1000])
Span start logits:  torch.Size([5, 952])
span start probs dim:  torch.Size([5, 952])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 952]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 872, 200])
Passage Length:  872
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 872, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 872, 9])
Passage ques attention dim:  torch.Size([5, 872, 9])
Passage question vectors dim:  torch.Size([5, 872, 200])
Question Passage Similarity dim:  torch.Size([5, 872])
Question passage attention dim:  torch.Size([5, 872])
Final Merged Passage dim:  torch.Size([5, 872, 800])
Modeled Passage dim:  torch.Size([5, 872, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 872, 1000])
Span start logits:  torch.Size([5, 872])
span start probs dim:  torch.Size([5, 872])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 872]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 747, 200])
Passage Length:  747
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 747, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 747, 10])
Passage ques attention dim:  torch.Size([5, 747, 10])
Passage question vectors dim:  torch.Size([5, 747, 200])
Question Passage Similarity dim:  torch.Size([5, 747])
Question passage attention dim:  torch.Size([5, 747])
Final Merged Passage dim:  torch.Size([5, 747, 800])
Modeled Passage dim:  torch.Size([5, 747, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 747, 1000])
Span start logits:  torch.Size([5, 747])
span start probs dim:  torch.Size([5, 747])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 747]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 467, 200])
Passage Length:  467
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 467, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 467, 15])
Passage ques attention dim:  torch.Size([5, 467, 15])
Passage question vectors dim:  torch.Size([5, 467, 200])
Question Passage Similarity dim:  torch.Size([5, 467])
Question passage attention dim:  torch.Size([5, 467])
Final Merged Passage dim:  torch.Size([5, 467, 800])
Modeled Passage dim:  torch.Size([5, 467, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 467, 1000])
Span start logits:  torch.Size([5, 467])
span start probs dim:  torch.Size([5, 467])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 467]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 11])
Passage ques attention dim:  torch.Size([5, 193, 11])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 735, 200])
Passage Length:  735
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 735, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 735, 16])
Passage ques attention dim:  torch.Size([5, 735, 16])
Passage question vectors dim:  torch.Size([5, 735, 200])
Question Passage Similarity dim:  torch.Size([5, 735])
Question passage attention dim:  torch.Size([5, 735])
Final Merged Passage dim:  torch.Size([5, 735, 800])
Modeled Passage dim:  torch.Size([5, 735, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 735, 1000])
Span start logits:  torch.Size([5, 735])
span start probs dim:  torch.Size([5, 735])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 735]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 425, 200])
Passage Length:  425
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 425, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 425, 8])
Passage ques attention dim:  torch.Size([5, 425, 8])
Passage question vectors dim:  torch.Size([5, 425, 200])
Question Passage Similarity dim:  torch.Size([5, 425])
Question passage attention dim:  torch.Size([5, 425])
Final Merged Passage dim:  torch.Size([5, 425, 800])
Modeled Passage dim:  torch.Size([5, 425, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 425, 1000])
Span start logits:  torch.Size([5, 425])
span start probs dim:  torch.Size([5, 425])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 425]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 819, 200])
Passage Length:  819
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 819, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 819, 10])
Passage ques attention dim:  torch.Size([5, 819, 10])
Passage question vectors dim:  torch.Size([5, 819, 200])
Question Passage Similarity dim:  torch.Size([5, 819])
Question passage attention dim:  torch.Size([5, 819])
Final Merged Passage dim:  torch.Size([5, 819, 800])
Modeled Passage dim:  torch.Size([5, 819, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 819, 1000])
Span start logits:  torch.Size([5, 819])
span start probs dim:  torch.Size([5, 819])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 819]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 808, 200])
Passage Length:  808
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 808, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 808, 9])
Passage ques attention dim:  torch.Size([5, 808, 9])
Passage question vectors dim:  torch.Size([5, 808, 200])
Question Passage Similarity dim:  torch.Size([5, 808])
Question passage attention dim:  torch.Size([5, 808])
Final Merged Passage dim:  torch.Size([5, 808, 800])
Modeled Passage dim:  torch.Size([5, 808, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 808, 1000])
Span start logits:  torch.Size([5, 808])
span start probs dim:  torch.Size([5, 808])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 808]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 615, 200])
Passage Length:  615
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 615, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 615, 12])
Passage ques attention dim:  torch.Size([5, 615, 12])
Passage question vectors dim:  torch.Size([5, 615, 200])
Question Passage Similarity dim:  torch.Size([5, 615])
Question passage attention dim:  torch.Size([5, 615])
Final Merged Passage dim:  torch.Size([5, 615, 800])
Modeled Passage dim:  torch.Size([5, 615, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 615, 1000])
Span start logits:  torch.Size([5, 615])
span start probs dim:  torch.Size([5, 615])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 615]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 779, 200])
Passage Length:  779
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 779, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 779, 15])
Passage ques attention dim:  torch.Size([5, 779, 15])
Passage question vectors dim:  torch.Size([5, 779, 200])
Question Passage Similarity dim:  torch.Size([5, 779])
Question passage attention dim:  torch.Size([5, 779])
Final Merged Passage dim:  torch.Size([5, 779, 800])
Modeled Passage dim:  torch.Size([5, 779, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 779, 1000])
Span start logits:  torch.Size([5, 779])
span start probs dim:  torch.Size([5, 779])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 779]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 439, 200])
Passage Length:  439
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 439, 12])
Passage ques attention dim:  torch.Size([5, 439, 12])
Passage question vectors dim:  torch.Size([5, 439, 200])
Question Passage Similarity dim:  torch.Size([5, 439])
Question passage attention dim:  torch.Size([5, 439])
Final Merged Passage dim:  torch.Size([5, 439, 800])
Modeled Passage dim:  torch.Size([5, 439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 439, 1000])
Span start logits:  torch.Size([5, 439])
span start probs dim:  torch.Size([5, 439])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 439]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 684, 200])
Passage Length:  684
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 684, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 684, 11])
Passage ques attention dim:  torch.Size([5, 684, 11])
Passage question vectors dim:  torch.Size([5, 684, 200])
Question Passage Similarity dim:  torch.Size([5, 684])
Question passage attention dim:  torch.Size([5, 684])
Final Merged Passage dim:  torch.Size([5, 684, 800])
Modeled Passage dim:  torch.Size([5, 684, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 684, 1000])
Span start logits:  torch.Size([5, 684])
span start probs dim:  torch.Size([5, 684])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 684]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1062, 200])
Passage Length:  1062
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1062, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1062, 10])
Passage ques attention dim:  torch.Size([5, 1062, 10])
Passage question vectors dim:  torch.Size([5, 1062, 200])
Question Passage Similarity dim:  torch.Size([5, 1062])
Question passage attention dim:  torch.Size([5, 1062])
Final Merged Passage dim:  torch.Size([5, 1062, 800])
Modeled Passage dim:  torch.Size([5, 1062, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1062, 1000])
Span start logits:  torch.Size([5, 1062])
span start probs dim:  torch.Size([5, 1062])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1062]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 656, 200])
Passage Length:  656
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 656, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 656, 9])
Passage ques attention dim:  torch.Size([5, 656, 9])
Passage question vectors dim:  torch.Size([5, 656, 200])
Question Passage Similarity dim:  torch.Size([5, 656])
Question passage attention dim:  torch.Size([5, 656])
Final Merged Passage dim:  torch.Size([5, 656, 800])
Modeled Passage dim:  torch.Size([5, 656, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 656, 1000])
Span start logits:  torch.Size([5, 656])
span start probs dim:  torch.Size([5, 656])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 656]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 563, 200])
Passage Length:  563
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 563, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 563, 9])
Passage ques attention dim:  torch.Size([5, 563, 9])
Passage question vectors dim:  torch.Size([5, 563, 200])
Question Passage Similarity dim:  torch.Size([5, 563])
Question passage attention dim:  torch.Size([5, 563])
Final Merged Passage dim:  torch.Size([5, 563, 800])
Modeled Passage dim:  torch.Size([5, 563, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 563, 1000])
Span start logits:  torch.Size([5, 563])
span start probs dim:  torch.Size([5, 563])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 563]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 501, 200])
Passage Length:  501
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 501, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 501, 9])
Passage ques attention dim:  torch.Size([5, 501, 9])
Passage question vectors dim:  torch.Size([5, 501, 200])
Question Passage Similarity dim:  torch.Size([5, 501])
Question passage attention dim:  torch.Size([5, 501])
Final Merged Passage dim:  torch.Size([5, 501, 800])
Modeled Passage dim:  torch.Size([5, 501, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 501, 1000])
Span start logits:  torch.Size([5, 501])
span start probs dim:  torch.Size([5, 501])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 501]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1040, 200])
Passage Length:  1040
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1040, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1040, 10])
Passage ques attention dim:  torch.Size([5, 1040, 10])
Passage question vectors dim:  torch.Size([5, 1040, 200])
Question Passage Similarity dim:  torch.Size([5, 1040])
Question passage attention dim:  torch.Size([5, 1040])
Final Merged Passage dim:  torch.Size([5, 1040, 800])
Modeled Passage dim:  torch.Size([5, 1040, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1040, 1000])
Span start logits:  torch.Size([5, 1040])
span start probs dim:  torch.Size([5, 1040])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1040]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1244, 200])
Passage Length:  1244
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1244, 12])
Passage ques attention dim:  torch.Size([5, 1244, 12])
Passage question vectors dim:  torch.Size([5, 1244, 200])
Question Passage Similarity dim:  torch.Size([5, 1244])
Question passage attention dim:  torch.Size([5, 1244])
Final Merged Passage dim:  torch.Size([5, 1244, 800])
Modeled Passage dim:  torch.Size([5, 1244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1244, 1000])
Span start logits:  torch.Size([5, 1244])
span start probs dim:  torch.Size([5, 1244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 401, 200])
Passage Length:  401
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 401, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 401, 10])
Passage ques attention dim:  torch.Size([5, 401, 10])
Passage question vectors dim:  torch.Size([5, 401, 200])
Question Passage Similarity dim:  torch.Size([5, 401])
Question passage attention dim:  torch.Size([5, 401])
Final Merged Passage dim:  torch.Size([5, 401, 800])
Modeled Passage dim:  torch.Size([5, 401, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 401, 1000])
Span start logits:  torch.Size([5, 401])
span start probs dim:  torch.Size([5, 401])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 401]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 416, 200])
Passage Length:  416
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 416, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 416, 13])
Passage ques attention dim:  torch.Size([5, 416, 13])
Passage question vectors dim:  torch.Size([5, 416, 200])
Question Passage Similarity dim:  torch.Size([5, 416])
Question passage attention dim:  torch.Size([5, 416])
Final Merged Passage dim:  torch.Size([5, 416, 800])
Modeled Passage dim:  torch.Size([5, 416, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 416, 1000])
Span start logits:  torch.Size([5, 416])
span start probs dim:  torch.Size([5, 416])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 416]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 834, 200])
Passage Length:  834
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 834, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 834, 14])
Passage ques attention dim:  torch.Size([5, 834, 14])
Passage question vectors dim:  torch.Size([5, 834, 200])
Question Passage Similarity dim:  torch.Size([5, 834])
Question passage attention dim:  torch.Size([5, 834])
Final Merged Passage dim:  torch.Size([5, 834, 800])
Modeled Passage dim:  torch.Size([5, 834, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 834, 1000])
Span start logits:  torch.Size([5, 834])
span start probs dim:  torch.Size([5, 834])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 834]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 724, 13])
Passage ques attention dim:  torch.Size([5, 724, 13])
Passage question vectors dim:  torch.Size([5, 724, 200])
Question Passage Similarity dim:  torch.Size([5, 724])
Question passage attention dim:  torch.Size([5, 724])
Final Merged Passage dim:  torch.Size([5, 724, 800])
Modeled Passage dim:  torch.Size([5, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 724, 1000])
Span start logits:  torch.Size([5, 724])
span start probs dim:  torch.Size([5, 724])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 724]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 842, 200])
Passage Length:  842
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 842, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 842, 13])
Passage ques attention dim:  torch.Size([5, 842, 13])
Passage question vectors dim:  torch.Size([5, 842, 200])
Question Passage Similarity dim:  torch.Size([5, 842])
Question passage attention dim:  torch.Size([5, 842])
Final Merged Passage dim:  torch.Size([5, 842, 800])
Modeled Passage dim:  torch.Size([5, 842, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 842, 1000])
Span start logits:  torch.Size([5, 842])
span start probs dim:  torch.Size([5, 842])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 842]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 623, 200])
Passage Length:  623
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 623, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 623, 7])
Passage ques attention dim:  torch.Size([5, 623, 7])
Passage question vectors dim:  torch.Size([5, 623, 200])
Question Passage Similarity dim:  torch.Size([5, 623])
Question passage attention dim:  torch.Size([5, 623])
Final Merged Passage dim:  torch.Size([5, 623, 800])
Modeled Passage dim:  torch.Size([5, 623, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 623, 1000])
Span start logits:  torch.Size([5, 623])
span start probs dim:  torch.Size([5, 623])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 623]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 823, 200])
Passage Length:  823
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 823, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 823, 11])
Passage ques attention dim:  torch.Size([5, 823, 11])
Passage question vectors dim:  torch.Size([5, 823, 200])
Question Passage Similarity dim:  torch.Size([5, 823])
Question passage attention dim:  torch.Size([5, 823])
Final Merged Passage dim:  torch.Size([5, 823, 800])
Modeled Passage dim:  torch.Size([5, 823, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 823, 1000])
Span start logits:  torch.Size([5, 823])
span start probs dim:  torch.Size([5, 823])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 823]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 724, 9])
Passage ques attention dim:  torch.Size([5, 724, 9])
Passage question vectors dim:  torch.Size([5, 724, 200])
Question Passage Similarity dim:  torch.Size([5, 724])
Question passage attention dim:  torch.Size([5, 724])
Final Merged Passage dim:  torch.Size([5, 724, 800])
Modeled Passage dim:  torch.Size([5, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 724, 1000])
Span start logits:  torch.Size([5, 724])
span start probs dim:  torch.Size([5, 724])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 724]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 588, 13])
Passage ques attention dim:  torch.Size([5, 588, 13])
Passage question vectors dim:  torch.Size([5, 588, 200])
Question Passage Similarity dim:  torch.Size([5, 588])
Question passage attention dim:  torch.Size([5, 588])
Final Merged Passage dim:  torch.Size([5, 588, 800])
Modeled Passage dim:  torch.Size([5, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 588, 1000])
Span start logits:  torch.Size([5, 588])
span start probs dim:  torch.Size([5, 588])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 588]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 221, 8])
Passage ques attention dim:  torch.Size([5, 221, 8])
Passage question vectors dim:  torch.Size([5, 221, 200])
Question Passage Similarity dim:  torch.Size([5, 221])
Question passage attention dim:  torch.Size([5, 221])
Final Merged Passage dim:  torch.Size([5, 221, 800])
Modeled Passage dim:  torch.Size([5, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 221, 1000])
Span start logits:  torch.Size([5, 221])
span start probs dim:  torch.Size([5, 221])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 221]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 330, 200])
Passage Length:  330
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 330, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 330, 9])
Passage ques attention dim:  torch.Size([5, 330, 9])
Passage question vectors dim:  torch.Size([5, 330, 200])
Question Passage Similarity dim:  torch.Size([5, 330])
Question passage attention dim:  torch.Size([5, 330])
Final Merged Passage dim:  torch.Size([5, 330, 800])
Modeled Passage dim:  torch.Size([5, 330, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 330, 1000])
Span start logits:  torch.Size([5, 330])
span start probs dim:  torch.Size([5, 330])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 330]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1408, 200])
Passage Length:  1408
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1408, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1408, 7])
Passage ques attention dim:  torch.Size([5, 1408, 7])
Passage question vectors dim:  torch.Size([5, 1408, 200])
Question Passage Similarity dim:  torch.Size([5, 1408])
Question passage attention dim:  torch.Size([5, 1408])
Final Merged Passage dim:  torch.Size([5, 1408, 800])
Modeled Passage dim:  torch.Size([5, 1408, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1408, 1000])
Span start logits:  torch.Size([5, 1408])
span start probs dim:  torch.Size([5, 1408])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1408]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 998, 200])
Passage Length:  998
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 998, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 998, 8])
Passage ques attention dim:  torch.Size([5, 998, 8])
Passage question vectors dim:  torch.Size([5, 998, 200])
Question Passage Similarity dim:  torch.Size([5, 998])
Question passage attention dim:  torch.Size([5, 998])
Final Merged Passage dim:  torch.Size([5, 998, 800])
Modeled Passage dim:  torch.Size([5, 998, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 998, 1000])
Span start logits:  torch.Size([5, 998])
span start probs dim:  torch.Size([5, 998])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 998]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 8])
Passage ques attention dim:  torch.Size([5, 441, 8])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 998, 200])
Passage Length:  998
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 998, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 998, 9])
Passage ques attention dim:  torch.Size([5, 998, 9])
Passage question vectors dim:  torch.Size([5, 998, 200])
Question Passage Similarity dim:  torch.Size([5, 998])
Question passage attention dim:  torch.Size([5, 998])
Final Merged Passage dim:  torch.Size([5, 998, 800])
Modeled Passage dim:  torch.Size([5, 998, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 998, 1000])
Span start logits:  torch.Size([5, 998])
span start probs dim:  torch.Size([5, 998])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 998]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 456, 9])
Passage ques attention dim:  torch.Size([5, 456, 9])
Passage question vectors dim:  torch.Size([5, 456, 200])
Question Passage Similarity dim:  torch.Size([5, 456])
Question passage attention dim:  torch.Size([5, 456])
Final Merged Passage dim:  torch.Size([5, 456, 800])
Modeled Passage dim:  torch.Size([5, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 456, 1000])
Span start logits:  torch.Size([5, 456])
span start probs dim:  torch.Size([5, 456])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 456]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 361, 10])
Passage ques attention dim:  torch.Size([5, 361, 10])
Passage question vectors dim:  torch.Size([5, 361, 200])
Question Passage Similarity dim:  torch.Size([5, 361])
Question passage attention dim:  torch.Size([5, 361])
Final Merged Passage dim:  torch.Size([5, 361, 800])
Modeled Passage dim:  torch.Size([5, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 361, 1000])
Span start logits:  torch.Size([5, 361])
span start probs dim:  torch.Size([5, 361])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 361]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 651, 200])
Passage Length:  651
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 651, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 651, 10])
Passage ques attention dim:  torch.Size([5, 651, 10])
Passage question vectors dim:  torch.Size([5, 651, 200])
Question Passage Similarity dim:  torch.Size([5, 651])
Question passage attention dim:  torch.Size([5, 651])
Final Merged Passage dim:  torch.Size([5, 651, 800])
Modeled Passage dim:  torch.Size([5, 651, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 651, 1000])
Span start logits:  torch.Size([5, 651])
span start probs dim:  torch.Size([5, 651])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 651]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 473, 200])
Passage Length:  473
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 473, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 473, 16])
Passage ques attention dim:  torch.Size([5, 473, 16])
Passage question vectors dim:  torch.Size([5, 473, 200])
Question Passage Similarity dim:  torch.Size([5, 473])
Question passage attention dim:  torch.Size([5, 473])
Final Merged Passage dim:  torch.Size([5, 473, 800])
Modeled Passage dim:  torch.Size([5, 473, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 473, 1000])
Span start logits:  torch.Size([5, 473])
span start probs dim:  torch.Size([5, 473])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 473]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 640, 200])
Passage Length:  640
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 640, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 640, 16])
Passage ques attention dim:  torch.Size([5, 640, 16])
Passage question vectors dim:  torch.Size([5, 640, 200])
Question Passage Similarity dim:  torch.Size([5, 640])
Question passage attention dim:  torch.Size([5, 640])
Final Merged Passage dim:  torch.Size([5, 640, 800])
Modeled Passage dim:  torch.Size([5, 640, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 640, 1000])
Span start logits:  torch.Size([5, 640])
span start probs dim:  torch.Size([5, 640])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 640]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1244, 200])
Passage Length:  1244
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1244, 10])
Passage ques attention dim:  torch.Size([5, 1244, 10])
Passage question vectors dim:  torch.Size([5, 1244, 200])
Question Passage Similarity dim:  torch.Size([5, 1244])
Question passage attention dim:  torch.Size([5, 1244])
Final Merged Passage dim:  torch.Size([5, 1244, 800])
Modeled Passage dim:  torch.Size([5, 1244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1244, 1000])
Span start logits:  torch.Size([5, 1244])
span start probs dim:  torch.Size([5, 1244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1413, 200])
Passage Length:  1413
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1413, 11])
Passage ques attention dim:  torch.Size([5, 1413, 11])
Passage question vectors dim:  torch.Size([5, 1413, 200])
Question Passage Similarity dim:  torch.Size([5, 1413])
Question passage attention dim:  torch.Size([5, 1413])
Final Merged Passage dim:  torch.Size([5, 1413, 800])
Modeled Passage dim:  torch.Size([5, 1413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1413, 1000])
Span start logits:  torch.Size([5, 1413])
span start probs dim:  torch.Size([5, 1413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 486, 200])
Passage Length:  486
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 486, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 486, 14])
Passage ques attention dim:  torch.Size([5, 486, 14])
Passage question vectors dim:  torch.Size([5, 486, 200])
Question Passage Similarity dim:  torch.Size([5, 486])
Question passage attention dim:  torch.Size([5, 486])
Final Merged Passage dim:  torch.Size([5, 486, 800])
Modeled Passage dim:  torch.Size([5, 486, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 486, 1000])
Span start logits:  torch.Size([5, 486])
span start probs dim:  torch.Size([5, 486])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 486]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1208, 200])
Passage Length:  1208
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1208, 11])
Passage ques attention dim:  torch.Size([5, 1208, 11])
Passage question vectors dim:  torch.Size([5, 1208, 200])
Question Passage Similarity dim:  torch.Size([5, 1208])
Question passage attention dim:  torch.Size([5, 1208])
Final Merged Passage dim:  torch.Size([5, 1208, 800])
Modeled Passage dim:  torch.Size([5, 1208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1208, 1000])
Span start logits:  torch.Size([5, 1208])
span start probs dim:  torch.Size([5, 1208])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1208]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 558, 200])
Passage Length:  558
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 558, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 558, 10])
Passage ques attention dim:  torch.Size([5, 558, 10])
Passage question vectors dim:  torch.Size([5, 558, 200])
Question Passage Similarity dim:  torch.Size([5, 558])
Question passage attention dim:  torch.Size([5, 558])
Final Merged Passage dim:  torch.Size([5, 558, 800])
Modeled Passage dim:  torch.Size([5, 558, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 558, 1000])
Span start logits:  torch.Size([5, 558])
span start probs dim:  torch.Size([5, 558])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 558]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 555, 200])
Passage Length:  555
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 555, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 555, 10])
Passage ques attention dim:  torch.Size([5, 555, 10])
Passage question vectors dim:  torch.Size([5, 555, 200])
Question Passage Similarity dim:  torch.Size([5, 555])
Question passage attention dim:  torch.Size([5, 555])
Final Merged Passage dim:  torch.Size([5, 555, 800])
Modeled Passage dim:  torch.Size([5, 555, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 555, 1000])
Span start logits:  torch.Size([5, 555])
span start probs dim:  torch.Size([5, 555])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 555]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 2025, 200])
Passage Length:  2025
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 2025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 2025, 12])
Passage ques attention dim:  torch.Size([5, 2025, 12])
Passage question vectors dim:  torch.Size([5, 2025, 200])
Question Passage Similarity dim:  torch.Size([5, 2025])
Question passage attention dim:  torch.Size([5, 2025])
Final Merged Passage dim:  torch.Size([5, 2025, 800])
Modeled Passage dim:  torch.Size([5, 2025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 2025, 1000])
Span start logits:  torch.Size([5, 2025])
span start probs dim:  torch.Size([5, 2025])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 2025]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 11])
Passage ques attention dim:  torch.Size([5, 560, 11])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 606, 200])
Passage Length:  606
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 606, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 606, 9])
Passage ques attention dim:  torch.Size([5, 606, 9])
Passage question vectors dim:  torch.Size([5, 606, 200])
Question Passage Similarity dim:  torch.Size([5, 606])
Question passage attention dim:  torch.Size([5, 606])
Final Merged Passage dim:  torch.Size([5, 606, 800])
Modeled Passage dim:  torch.Size([5, 606, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 606, 1000])
Span start logits:  torch.Size([5, 606])
span start probs dim:  torch.Size([5, 606])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 606]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 732, 200])
Passage Length:  732
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 732, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 732, 13])
Passage ques attention dim:  torch.Size([5, 732, 13])
Passage question vectors dim:  torch.Size([5, 732, 200])
Question Passage Similarity dim:  torch.Size([5, 732])
Question passage attention dim:  torch.Size([5, 732])
Final Merged Passage dim:  torch.Size([5, 732, 800])
Modeled Passage dim:  torch.Size([5, 732, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 732, 1000])
Span start logits:  torch.Size([5, 732])
span start probs dim:  torch.Size([5, 732])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 732]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 804, 200])
Passage Length:  804
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 804, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 804, 12])
Passage ques attention dim:  torch.Size([5, 804, 12])
Passage question vectors dim:  torch.Size([5, 804, 200])
Question Passage Similarity dim:  torch.Size([5, 804])
Question passage attention dim:  torch.Size([5, 804])
Final Merged Passage dim:  torch.Size([5, 804, 800])
Modeled Passage dim:  torch.Size([5, 804, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 804, 1000])
Span start logits:  torch.Size([5, 804])
span start probs dim:  torch.Size([5, 804])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 804]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 640, 200])
Passage Length:  640
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 640, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 640, 11])
Passage ques attention dim:  torch.Size([5, 640, 11])
Passage question vectors dim:  torch.Size([5, 640, 200])
Question Passage Similarity dim:  torch.Size([5, 640])
Question passage attention dim:  torch.Size([5, 640])
Final Merged Passage dim:  torch.Size([5, 640, 800])
Modeled Passage dim:  torch.Size([5, 640, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 640, 1000])
Span start logits:  torch.Size([5, 640])
span start probs dim:  torch.Size([5, 640])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 640]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1252, 200])
Passage Length:  1252
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1252, 10])
Passage ques attention dim:  torch.Size([5, 1252, 10])
Passage question vectors dim:  torch.Size([5, 1252, 200])
Question Passage Similarity dim:  torch.Size([5, 1252])
Question passage attention dim:  torch.Size([5, 1252])
Final Merged Passage dim:  torch.Size([5, 1252, 800])
Modeled Passage dim:  torch.Size([5, 1252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1252, 1000])
Span start logits:  torch.Size([5, 1252])
span start probs dim:  torch.Size([5, 1252])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1252]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 467, 200])
Passage Length:  467
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 467, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 467, 8])
Passage ques attention dim:  torch.Size([5, 467, 8])
Passage question vectors dim:  torch.Size([5, 467, 200])
Question Passage Similarity dim:  torch.Size([5, 467])
Question passage attention dim:  torch.Size([5, 467])
Final Merged Passage dim:  torch.Size([5, 467, 800])
Modeled Passage dim:  torch.Size([5, 467, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 467, 1000])
Span start logits:  torch.Size([5, 467])
span start probs dim:  torch.Size([5, 467])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 467]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 998, 200])
Passage Length:  998
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 998, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 998, 6])
Passage ques attention dim:  torch.Size([5, 998, 6])
Passage question vectors dim:  torch.Size([5, 998, 200])
Question Passage Similarity dim:  torch.Size([5, 998])
Question passage attention dim:  torch.Size([5, 998])
Final Merged Passage dim:  torch.Size([5, 998, 800])
Modeled Passage dim:  torch.Size([5, 998, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 998, 1000])
Span start logits:  torch.Size([5, 998])
span start probs dim:  torch.Size([5, 998])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 998]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 949, 200])
Passage Length:  949
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 949, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 949, 8])
Passage ques attention dim:  torch.Size([5, 949, 8])
Passage question vectors dim:  torch.Size([5, 949, 200])
Question Passage Similarity dim:  torch.Size([5, 949])
Question passage attention dim:  torch.Size([5, 949])
Final Merged Passage dim:  torch.Size([5, 949, 800])
Modeled Passage dim:  torch.Size([5, 949, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 949, 1000])
Span start logits:  torch.Size([5, 949])
span start probs dim:  torch.Size([5, 949])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 949]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 534, 200])
Passage Length:  534
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 534, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 534, 10])
Passage ques attention dim:  torch.Size([5, 534, 10])
Passage question vectors dim:  torch.Size([5, 534, 200])
Question Passage Similarity dim:  torch.Size([5, 534])
Question passage attention dim:  torch.Size([5, 534])
Final Merged Passage dim:  torch.Size([5, 534, 800])
Modeled Passage dim:  torch.Size([5, 534, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 534, 1000])
Span start logits:  torch.Size([5, 534])
span start probs dim:  torch.Size([5, 534])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 534]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 765, 200])
Passage Length:  765
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 765, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 765, 17])
Passage ques attention dim:  torch.Size([5, 765, 17])
Passage question vectors dim:  torch.Size([5, 765, 200])
Question Passage Similarity dim:  torch.Size([5, 765])
Question passage attention dim:  torch.Size([5, 765])
Final Merged Passage dim:  torch.Size([5, 765, 800])
Modeled Passage dim:  torch.Size([5, 765, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 765, 1000])
Span start logits:  torch.Size([5, 765])
span start probs dim:  torch.Size([5, 765])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 765]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 725, 200])
Passage Length:  725
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 725, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 725, 11])
Passage ques attention dim:  torch.Size([5, 725, 11])
Passage question vectors dim:  torch.Size([5, 725, 200])
Question Passage Similarity dim:  torch.Size([5, 725])
Question passage attention dim:  torch.Size([5, 725])
Final Merged Passage dim:  torch.Size([5, 725, 800])
Modeled Passage dim:  torch.Size([5, 725, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 725, 1000])
Span start logits:  torch.Size([5, 725])
span start probs dim:  torch.Size([5, 725])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 725]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 371, 200])
Passage Length:  371
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 371, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 371, 9])
Passage ques attention dim:  torch.Size([5, 371, 9])
Passage question vectors dim:  torch.Size([5, 371, 200])
Question Passage Similarity dim:  torch.Size([5, 371])
Question passage attention dim:  torch.Size([5, 371])
Final Merged Passage dim:  torch.Size([5, 371, 800])
Modeled Passage dim:  torch.Size([5, 371, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 371, 1000])
Span start logits:  torch.Size([5, 371])
span start probs dim:  torch.Size([5, 371])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 371]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 10])
Passage ques attention dim:  torch.Size([5, 560, 10])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 731, 200])
Passage Length:  731
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 731, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 731, 9])
Passage ques attention dim:  torch.Size([5, 731, 9])
Passage question vectors dim:  torch.Size([5, 731, 200])
Question Passage Similarity dim:  torch.Size([5, 731])
Question passage attention dim:  torch.Size([5, 731])
Final Merged Passage dim:  torch.Size([5, 731, 800])
Modeled Passage dim:  torch.Size([5, 731, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 731, 1000])
Span start logits:  torch.Size([5, 731])
span start probs dim:  torch.Size([5, 731])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 731]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 591, 200])
Passage Length:  591
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 591, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 591, 10])
Passage ques attention dim:  torch.Size([5, 591, 10])
Passage question vectors dim:  torch.Size([5, 591, 200])
Question Passage Similarity dim:  torch.Size([5, 591])
Question passage attention dim:  torch.Size([5, 591])
Final Merged Passage dim:  torch.Size([5, 591, 800])
Modeled Passage dim:  torch.Size([5, 591, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 591, 1000])
Span start logits:  torch.Size([5, 591])
span start probs dim:  torch.Size([5, 591])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 591]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 804, 200])
Passage Length:  804
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 804, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 804, 10])
Passage ques attention dim:  torch.Size([5, 804, 10])
Passage question vectors dim:  torch.Size([5, 804, 200])
Question Passage Similarity dim:  torch.Size([5, 804])
Question passage attention dim:  torch.Size([5, 804])
Final Merged Passage dim:  torch.Size([5, 804, 800])
Modeled Passage dim:  torch.Size([5, 804, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 804, 1000])
Span start logits:  torch.Size([5, 804])
span start probs dim:  torch.Size([5, 804])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 804]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1344, 200])
Passage Length:  1344
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1344, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1344, 11])
Passage ques attention dim:  torch.Size([5, 1344, 11])
Passage question vectors dim:  torch.Size([5, 1344, 200])
Question Passage Similarity dim:  torch.Size([5, 1344])
Question passage attention dim:  torch.Size([5, 1344])
Final Merged Passage dim:  torch.Size([5, 1344, 800])
Modeled Passage dim:  torch.Size([5, 1344, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1344, 1000])
Span start logits:  torch.Size([5, 1344])
span start probs dim:  torch.Size([5, 1344])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1344]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1754, 200])
Passage Length:  1754
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1754, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1754, 10])
Passage ques attention dim:  torch.Size([5, 1754, 10])
Passage question vectors dim:  torch.Size([5, 1754, 200])
Question Passage Similarity dim:  torch.Size([5, 1754])
Question passage attention dim:  torch.Size([5, 1754])
Final Merged Passage dim:  torch.Size([5, 1754, 800])
Modeled Passage dim:  torch.Size([5, 1754, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1754, 1000])
Span start logits:  torch.Size([5, 1754])
span start probs dim:  torch.Size([5, 1754])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1754]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 379, 15])
Passage ques attention dim:  torch.Size([5, 379, 15])
Passage question vectors dim:  torch.Size([5, 379, 200])
Question Passage Similarity dim:  torch.Size([5, 379])
Question passage attention dim:  torch.Size([5, 379])
Final Merged Passage dim:  torch.Size([5, 379, 800])
Modeled Passage dim:  torch.Size([5, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 379, 1000])
Span start logits:  torch.Size([5, 379])
span start probs dim:  torch.Size([5, 379])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 379]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 536, 200])
Passage Length:  536
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 536, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 536, 10])
Passage ques attention dim:  torch.Size([5, 536, 10])
Passage question vectors dim:  torch.Size([5, 536, 200])
Question Passage Similarity dim:  torch.Size([5, 536])
Question passage attention dim:  torch.Size([5, 536])
Final Merged Passage dim:  torch.Size([5, 536, 800])
Modeled Passage dim:  torch.Size([5, 536, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 536, 1000])
Span start logits:  torch.Size([5, 536])
span start probs dim:  torch.Size([5, 536])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 536]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 576, 7])
Passage ques attention dim:  torch.Size([5, 576, 7])
Passage question vectors dim:  torch.Size([5, 576, 200])
Question Passage Similarity dim:  torch.Size([5, 576])
Question passage attention dim:  torch.Size([5, 576])
Final Merged Passage dim:  torch.Size([5, 576, 800])
Modeled Passage dim:  torch.Size([5, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 576, 1000])
Span start logits:  torch.Size([5, 576])
span start probs dim:  torch.Size([5, 576])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 576]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 550, 200])
Passage Length:  550
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 550, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 550, 8])
Passage ques attention dim:  torch.Size([5, 550, 8])
Passage question vectors dim:  torch.Size([5, 550, 200])
Question Passage Similarity dim:  torch.Size([5, 550])
Question passage attention dim:  torch.Size([5, 550])
Final Merged Passage dim:  torch.Size([5, 550, 800])
Modeled Passage dim:  torch.Size([5, 550, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 550, 1000])
Span start logits:  torch.Size([5, 550])
span start probs dim:  torch.Size([5, 550])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 550]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 906, 14])
Passage ques attention dim:  torch.Size([5, 906, 14])
Passage question vectors dim:  torch.Size([5, 906, 200])
Question Passage Similarity dim:  torch.Size([5, 906])
Question passage attention dim:  torch.Size([5, 906])
Final Merged Passage dim:  torch.Size([5, 906, 800])
Modeled Passage dim:  torch.Size([5, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 906, 1000])
Span start logits:  torch.Size([5, 906])
span start probs dim:  torch.Size([5, 906])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 906]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 345, 200])
Passage Length:  345
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 345, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 345, 11])
Passage ques attention dim:  torch.Size([5, 345, 11])
Passage question vectors dim:  torch.Size([5, 345, 200])
Question Passage Similarity dim:  torch.Size([5, 345])
Question passage attention dim:  torch.Size([5, 345])
Final Merged Passage dim:  torch.Size([5, 345, 800])
Modeled Passage dim:  torch.Size([5, 345, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 345, 1000])
Span start logits:  torch.Size([5, 345])
span start probs dim:  torch.Size([5, 345])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 345]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 548, 200])
Passage Length:  548
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 548, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 548, 15])
Passage ques attention dim:  torch.Size([5, 548, 15])
Passage question vectors dim:  torch.Size([5, 548, 200])
Question Passage Similarity dim:  torch.Size([5, 548])
Question passage attention dim:  torch.Size([5, 548])
Final Merged Passage dim:  torch.Size([5, 548, 800])
Modeled Passage dim:  torch.Size([5, 548, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 548, 1000])
Span start logits:  torch.Size([5, 548])
span start probs dim:  torch.Size([5, 548])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 548]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 409, 200])
Passage Length:  409
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 409, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 409, 14])
Passage ques attention dim:  torch.Size([5, 409, 14])
Passage question vectors dim:  torch.Size([5, 409, 200])
Question Passage Similarity dim:  torch.Size([5, 409])
Question passage attention dim:  torch.Size([5, 409])
Final Merged Passage dim:  torch.Size([5, 409, 800])
Modeled Passage dim:  torch.Size([5, 409, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 409, 1000])
Span start logits:  torch.Size([5, 409])
span start probs dim:  torch.Size([5, 409])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 409]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 9])
Passage ques attention dim:  torch.Size([5, 381, 9])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 993, 200])
Passage Length:  993
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 993, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 993, 9])
Passage ques attention dim:  torch.Size([5, 993, 9])
Passage question vectors dim:  torch.Size([5, 993, 200])
Question Passage Similarity dim:  torch.Size([5, 993])
Question passage attention dim:  torch.Size([5, 993])
Final Merged Passage dim:  torch.Size([5, 993, 800])
Modeled Passage dim:  torch.Size([5, 993, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 993, 1000])
Span start logits:  torch.Size([5, 993])
span start probs dim:  torch.Size([5, 993])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 993]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1691, 200])
Passage Length:  1691
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1691, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1691, 13])
Passage ques attention dim:  torch.Size([5, 1691, 13])
Passage question vectors dim:  torch.Size([5, 1691, 200])
Question Passage Similarity dim:  torch.Size([5, 1691])
Question passage attention dim:  torch.Size([5, 1691])
Final Merged Passage dim:  torch.Size([5, 1691, 800])
Modeled Passage dim:  torch.Size([5, 1691, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1691, 1000])
Span start logits:  torch.Size([5, 1691])
span start probs dim:  torch.Size([5, 1691])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1691]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 412, 200])
Passage Length:  412
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 412, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 412, 10])
Passage ques attention dim:  torch.Size([5, 412, 10])
Passage question vectors dim:  torch.Size([5, 412, 200])
Question Passage Similarity dim:  torch.Size([5, 412])
Question passage attention dim:  torch.Size([5, 412])
Final Merged Passage dim:  torch.Size([5, 412, 800])
Modeled Passage dim:  torch.Size([5, 412, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 412, 1000])
Span start logits:  torch.Size([5, 412])
span start probs dim:  torch.Size([5, 412])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 412]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 589, 200])
Passage Length:  589
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 589, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 589, 12])
Passage ques attention dim:  torch.Size([5, 589, 12])
Passage question vectors dim:  torch.Size([5, 589, 200])
Question Passage Similarity dim:  torch.Size([5, 589])
Question passage attention dim:  torch.Size([5, 589])
Final Merged Passage dim:  torch.Size([5, 589, 800])
Modeled Passage dim:  torch.Size([5, 589, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 589, 1000])
Span start logits:  torch.Size([5, 589])
span start probs dim:  torch.Size([5, 589])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 589]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 831, 200])
Passage Length:  831
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 831, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 831, 9])
Passage ques attention dim:  torch.Size([5, 831, 9])
Passage question vectors dim:  torch.Size([5, 831, 200])
Question Passage Similarity dim:  torch.Size([5, 831])
Question passage attention dim:  torch.Size([5, 831])
Final Merged Passage dim:  torch.Size([5, 831, 800])
Modeled Passage dim:  torch.Size([5, 831, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 831, 1000])
Span start logits:  torch.Size([5, 831])
span start probs dim:  torch.Size([5, 831])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 831]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1067, 200])
Passage Length:  1067
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1067, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1067, 13])
Passage ques attention dim:  torch.Size([5, 1067, 13])
Passage question vectors dim:  torch.Size([5, 1067, 200])
Question Passage Similarity dim:  torch.Size([5, 1067])
Question passage attention dim:  torch.Size([5, 1067])
Final Merged Passage dim:  torch.Size([5, 1067, 800])
Modeled Passage dim:  torch.Size([5, 1067, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1067, 1000])
Span start logits:  torch.Size([5, 1067])
span start probs dim:  torch.Size([5, 1067])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1067]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 415, 200])
Passage Length:  415
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 415, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 415, 6])
Passage ques attention dim:  torch.Size([5, 415, 6])
Passage question vectors dim:  torch.Size([5, 415, 200])
Question Passage Similarity dim:  torch.Size([5, 415])
Question passage attention dim:  torch.Size([5, 415])
Final Merged Passage dim:  torch.Size([5, 415, 800])
Modeled Passage dim:  torch.Size([5, 415, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 415, 1000])
Span start logits:  torch.Size([5, 415])
span start probs dim:  torch.Size([5, 415])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 415]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 309, 200])
Passage Length:  309
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 309, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 309, 7])
Passage ques attention dim:  torch.Size([5, 309, 7])
Passage question vectors dim:  torch.Size([5, 309, 200])
Question Passage Similarity dim:  torch.Size([5, 309])
Question passage attention dim:  torch.Size([5, 309])
Final Merged Passage dim:  torch.Size([5, 309, 800])
Modeled Passage dim:  torch.Size([5, 309, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 309, 1000])
Span start logits:  torch.Size([5, 309])
span start probs dim:  torch.Size([5, 309])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 309]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 314, 200])
Passage Length:  314
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 314, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 314, 9])
Passage ques attention dim:  torch.Size([5, 314, 9])
Passage question vectors dim:  torch.Size([5, 314, 200])
Question Passage Similarity dim:  torch.Size([5, 314])
Question passage attention dim:  torch.Size([5, 314])
Final Merged Passage dim:  torch.Size([5, 314, 800])
Modeled Passage dim:  torch.Size([5, 314, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 314, 1000])
Span start logits:  torch.Size([5, 314])
span start probs dim:  torch.Size([5, 314])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 314]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 696, 200])
Passage Length:  696
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 696, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 696, 11])
Passage ques attention dim:  torch.Size([5, 696, 11])
Passage question vectors dim:  torch.Size([5, 696, 200])
Question Passage Similarity dim:  torch.Size([5, 696])
Question passage attention dim:  torch.Size([5, 696])
Final Merged Passage dim:  torch.Size([5, 696, 800])
Modeled Passage dim:  torch.Size([5, 696, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 696, 1000])
Span start logits:  torch.Size([5, 696])
span start probs dim:  torch.Size([5, 696])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 696]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 552, 200])
Passage Length:  552
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 552, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 552, 7])
Passage ques attention dim:  torch.Size([5, 552, 7])
Passage question vectors dim:  torch.Size([5, 552, 200])
Question Passage Similarity dim:  torch.Size([5, 552])
Question passage attention dim:  torch.Size([5, 552])
Final Merged Passage dim:  torch.Size([5, 552, 800])
Modeled Passage dim:  torch.Size([5, 552, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 552, 1000])
Span start logits:  torch.Size([5, 552])
span start probs dim:  torch.Size([5, 552])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 552]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 1245, 200])
Passage Length:  1245
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 1245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1245, 19])
Passage ques attention dim:  torch.Size([5, 1245, 19])
Passage question vectors dim:  torch.Size([5, 1245, 200])
Question Passage Similarity dim:  torch.Size([5, 1245])
Question passage attention dim:  torch.Size([5, 1245])
Final Merged Passage dim:  torch.Size([5, 1245, 800])
Modeled Passage dim:  torch.Size([5, 1245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1245, 1000])
Span start logits:  torch.Size([5, 1245])
span start probs dim:  torch.Size([5, 1245])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1245]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 402, 200])
Passage Length:  402
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 402, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 402, 15])
Passage ques attention dim:  torch.Size([5, 402, 15])
Passage question vectors dim:  torch.Size([5, 402, 200])
Question Passage Similarity dim:  torch.Size([5, 402])
Question passage attention dim:  torch.Size([5, 402])
Final Merged Passage dim:  torch.Size([5, 402, 800])
Modeled Passage dim:  torch.Size([5, 402, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 402, 1000])
Span start logits:  torch.Size([5, 402])
span start probs dim:  torch.Size([5, 402])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 402]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 323, 12])
Passage ques attention dim:  torch.Size([5, 323, 12])
Passage question vectors dim:  torch.Size([5, 323, 200])
Question Passage Similarity dim:  torch.Size([5, 323])
Question passage attention dim:  torch.Size([5, 323])
Final Merged Passage dim:  torch.Size([5, 323, 800])
Modeled Passage dim:  torch.Size([5, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 323, 1000])
Span start logits:  torch.Size([5, 323])
span start probs dim:  torch.Size([5, 323])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 323]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 532, 200])
Passage Length:  532
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 532, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 532, 10])
Passage ques attention dim:  torch.Size([5, 532, 10])
Passage question vectors dim:  torch.Size([5, 532, 200])
Question Passage Similarity dim:  torch.Size([5, 532])
Question passage attention dim:  torch.Size([5, 532])
Final Merged Passage dim:  torch.Size([5, 532, 800])
Modeled Passage dim:  torch.Size([5, 532, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 532, 1000])
Span start logits:  torch.Size([5, 532])
span start probs dim:  torch.Size([5, 532])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 532]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 10])
Passage ques attention dim:  torch.Size([5, 462, 10])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1246, 200])
Passage Length:  1246
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1246, 9])
Passage ques attention dim:  torch.Size([5, 1246, 9])
Passage question vectors dim:  torch.Size([5, 1246, 200])
Question Passage Similarity dim:  torch.Size([5, 1246])
Question passage attention dim:  torch.Size([5, 1246])
Final Merged Passage dim:  torch.Size([5, 1246, 800])
Modeled Passage dim:  torch.Size([5, 1246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1246, 1000])
Span start logits:  torch.Size([5, 1246])
span start probs dim:  torch.Size([5, 1246])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1246]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 539, 200])
Passage Length:  539
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 539, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 539, 11])
Passage ques attention dim:  torch.Size([5, 539, 11])
Passage question vectors dim:  torch.Size([5, 539, 200])
Question Passage Similarity dim:  torch.Size([5, 539])
Question passage attention dim:  torch.Size([5, 539])
Final Merged Passage dim:  torch.Size([5, 539, 800])
Modeled Passage dim:  torch.Size([5, 539, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 539, 1000])
Span start logits:  torch.Size([5, 539])
span start probs dim:  torch.Size([5, 539])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 539]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1152, 200])
Passage Length:  1152
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1152, 13])
Passage ques attention dim:  torch.Size([5, 1152, 13])
Passage question vectors dim:  torch.Size([5, 1152, 200])
Question Passage Similarity dim:  torch.Size([5, 1152])
Question passage attention dim:  torch.Size([5, 1152])
Final Merged Passage dim:  torch.Size([5, 1152, 800])
Modeled Passage dim:  torch.Size([5, 1152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1152, 1000])
Span start logits:  torch.Size([5, 1152])
span start probs dim:  torch.Size([5, 1152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1429, 200])
Passage Length:  1429
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1429, 10])
Passage ques attention dim:  torch.Size([5, 1429, 10])
Passage question vectors dim:  torch.Size([5, 1429, 200])
Question Passage Similarity dim:  torch.Size([5, 1429])
Question passage attention dim:  torch.Size([5, 1429])
Final Merged Passage dim:  torch.Size([5, 1429, 800])
Modeled Passage dim:  torch.Size([5, 1429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1429, 1000])
Span start logits:  torch.Size([5, 1429])
span start probs dim:  torch.Size([5, 1429])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1429]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1163, 200])
Passage Length:  1163
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1163, 9])
Passage ques attention dim:  torch.Size([5, 1163, 9])
Passage question vectors dim:  torch.Size([5, 1163, 200])
Question Passage Similarity dim:  torch.Size([5, 1163])
Question passage attention dim:  torch.Size([5, 1163])
Final Merged Passage dim:  torch.Size([5, 1163, 800])
Modeled Passage dim:  torch.Size([5, 1163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1163, 1000])
Span start logits:  torch.Size([5, 1163])
span start probs dim:  torch.Size([5, 1163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 958, 200])
Passage Length:  958
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 958, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 958, 14])
Passage ques attention dim:  torch.Size([5, 958, 14])
Passage question vectors dim:  torch.Size([5, 958, 200])
Question Passage Similarity dim:  torch.Size([5, 958])
Question passage attention dim:  torch.Size([5, 958])
Final Merged Passage dim:  torch.Size([5, 958, 800])
Modeled Passage dim:  torch.Size([5, 958, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 958, 1000])
Span start logits:  torch.Size([5, 958])
span start probs dim:  torch.Size([5, 958])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 958]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 714, 17])
Passage ques attention dim:  torch.Size([5, 714, 17])
Passage question vectors dim:  torch.Size([5, 714, 200])
Question Passage Similarity dim:  torch.Size([5, 714])
Question passage attention dim:  torch.Size([5, 714])
Final Merged Passage dim:  torch.Size([5, 714, 800])
Modeled Passage dim:  torch.Size([5, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 714, 1000])
Span start logits:  torch.Size([5, 714])
span start probs dim:  torch.Size([5, 714])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 714]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 980, 200])
Passage Length:  980
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 980, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 980, 17])
Passage ques attention dim:  torch.Size([5, 980, 17])
Passage question vectors dim:  torch.Size([5, 980, 200])
Question Passage Similarity dim:  torch.Size([5, 980])
Question passage attention dim:  torch.Size([5, 980])
Final Merged Passage dim:  torch.Size([5, 980, 800])
Modeled Passage dim:  torch.Size([5, 980, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 980, 1000])
Span start logits:  torch.Size([5, 980])
span start probs dim:  torch.Size([5, 980])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 980]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 278, 200])
Passage Length:  278
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 278, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 278, 12])
Passage ques attention dim:  torch.Size([5, 278, 12])
Passage question vectors dim:  torch.Size([5, 278, 200])
Question Passage Similarity dim:  torch.Size([5, 278])
Question passage attention dim:  torch.Size([5, 278])
Final Merged Passage dim:  torch.Size([5, 278, 800])
Modeled Passage dim:  torch.Size([5, 278, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 278, 1000])
Span start logits:  torch.Size([5, 278])
span start probs dim:  torch.Size([5, 278])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 278]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1047, 200])
Passage Length:  1047
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1047, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1047, 13])
Passage ques attention dim:  torch.Size([5, 1047, 13])
Passage question vectors dim:  torch.Size([5, 1047, 200])
Question Passage Similarity dim:  torch.Size([5, 1047])
Question passage attention dim:  torch.Size([5, 1047])
Final Merged Passage dim:  torch.Size([5, 1047, 800])
Modeled Passage dim:  torch.Size([5, 1047, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1047, 1000])
Span start logits:  torch.Size([5, 1047])
span start probs dim:  torch.Size([5, 1047])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1047]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 525, 200])
Passage Length:  525
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 525, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 525, 12])
Passage ques attention dim:  torch.Size([5, 525, 12])
Passage question vectors dim:  torch.Size([5, 525, 200])
Question Passage Similarity dim:  torch.Size([5, 525])
Question passage attention dim:  torch.Size([5, 525])
Final Merged Passage dim:  torch.Size([5, 525, 800])
Modeled Passage dim:  torch.Size([5, 525, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 525, 1000])
Span start logits:  torch.Size([5, 525])
span start probs dim:  torch.Size([5, 525])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 525]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 643, 200])
Passage Length:  643
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 643, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 643, 14])
Passage ques attention dim:  torch.Size([5, 643, 14])
Passage question vectors dim:  torch.Size([5, 643, 200])
Question Passage Similarity dim:  torch.Size([5, 643])
Question passage attention dim:  torch.Size([5, 643])
Final Merged Passage dim:  torch.Size([5, 643, 800])
Modeled Passage dim:  torch.Size([5, 643, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 643, 1000])
Span start logits:  torch.Size([5, 643])
span start probs dim:  torch.Size([5, 643])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 643]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 339, 200])
Passage Length:  339
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 339, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 339, 8])
Passage ques attention dim:  torch.Size([5, 339, 8])
Passage question vectors dim:  torch.Size([5, 339, 200])
Question Passage Similarity dim:  torch.Size([5, 339])
Question passage attention dim:  torch.Size([5, 339])
Final Merged Passage dim:  torch.Size([5, 339, 800])
Modeled Passage dim:  torch.Size([5, 339, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 339, 1000])
Span start logits:  torch.Size([5, 339])
span start probs dim:  torch.Size([5, 339])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 339]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1118, 200])
Passage Length:  1118
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1118, 11])
Passage ques attention dim:  torch.Size([5, 1118, 11])
Passage question vectors dim:  torch.Size([5, 1118, 200])
Question Passage Similarity dim:  torch.Size([5, 1118])
Question passage attention dim:  torch.Size([5, 1118])
Final Merged Passage dim:  torch.Size([5, 1118, 800])
Modeled Passage dim:  torch.Size([5, 1118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1118, 1000])
Span start logits:  torch.Size([5, 1118])
span start probs dim:  torch.Size([5, 1118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1180, 200])
Passage Length:  1180
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1180, 10])
Passage ques attention dim:  torch.Size([5, 1180, 10])
Passage question vectors dim:  torch.Size([5, 1180, 200])
Question Passage Similarity dim:  torch.Size([5, 1180])
Question passage attention dim:  torch.Size([5, 1180])
Final Merged Passage dim:  torch.Size([5, 1180, 800])
Modeled Passage dim:  torch.Size([5, 1180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1180, 1000])
Span start logits:  torch.Size([5, 1180])
span start probs dim:  torch.Size([5, 1180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 845, 200])
Passage Length:  845
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 845, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 845, 11])
Passage ques attention dim:  torch.Size([5, 845, 11])
Passage question vectors dim:  torch.Size([5, 845, 200])
Question Passage Similarity dim:  torch.Size([5, 845])
Question passage attention dim:  torch.Size([5, 845])
Final Merged Passage dim:  torch.Size([5, 845, 800])
Modeled Passage dim:  torch.Size([5, 845, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 845, 1000])
Span start logits:  torch.Size([5, 845])
span start probs dim:  torch.Size([5, 845])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 845]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 10])
Passage ques attention dim:  torch.Size([5, 560, 10])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 184, 10])
Passage ques attention dim:  torch.Size([5, 184, 10])
Passage question vectors dim:  torch.Size([5, 184, 200])
Question Passage Similarity dim:  torch.Size([5, 184])
Question passage attention dim:  torch.Size([5, 184])
Final Merged Passage dim:  torch.Size([5, 184, 800])
Modeled Passage dim:  torch.Size([5, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 184, 1000])
Span start logits:  torch.Size([5, 184])
span start probs dim:  torch.Size([5, 184])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 184]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 741, 200])
Passage Length:  741
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 741, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 741, 17])
Passage ques attention dim:  torch.Size([5, 741, 17])
Passage question vectors dim:  torch.Size([5, 741, 200])
Question Passage Similarity dim:  torch.Size([5, 741])
Question passage attention dim:  torch.Size([5, 741])
Final Merged Passage dim:  torch.Size([5, 741, 800])
Modeled Passage dim:  torch.Size([5, 741, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 741, 1000])
Span start logits:  torch.Size([5, 741])
span start probs dim:  torch.Size([5, 741])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 741]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1795, 200])
Passage Length:  1795
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1795, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1795, 9])
Passage ques attention dim:  torch.Size([5, 1795, 9])
Passage question vectors dim:  torch.Size([5, 1795, 200])
Question Passage Similarity dim:  torch.Size([5, 1795])
Question passage attention dim:  torch.Size([5, 1795])
Final Merged Passage dim:  torch.Size([5, 1795, 800])
Modeled Passage dim:  torch.Size([5, 1795, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1795, 1000])
Span start logits:  torch.Size([5, 1795])
span start probs dim:  torch.Size([5, 1795])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1795]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 11])
Passage ques attention dim:  torch.Size([5, 462, 11])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 10])
Passage ques attention dim:  torch.Size([5, 273, 10])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1864, 200])
Passage Length:  1864
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1864, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1864, 7])
Passage ques attention dim:  torch.Size([5, 1864, 7])
Passage question vectors dim:  torch.Size([5, 1864, 200])
Question Passage Similarity dim:  torch.Size([5, 1864])
Question passage attention dim:  torch.Size([5, 1864])
Final Merged Passage dim:  torch.Size([5, 1864, 800])
Modeled Passage dim:  torch.Size([5, 1864, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1864, 1000])
Span start logits:  torch.Size([5, 1864])
span start probs dim:  torch.Size([5, 1864])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1864]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 555, 200])
Passage Length:  555
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 555, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 555, 10])
Passage ques attention dim:  torch.Size([5, 555, 10])
Passage question vectors dim:  torch.Size([5, 555, 200])
Question Passage Similarity dim:  torch.Size([5, 555])
Question passage attention dim:  torch.Size([5, 555])
Final Merged Passage dim:  torch.Size([5, 555, 800])
Modeled Passage dim:  torch.Size([5, 555, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 555, 1000])
Span start logits:  torch.Size([5, 555])
span start probs dim:  torch.Size([5, 555])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 555]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1429, 200])
Passage Length:  1429
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1429, 13])
Passage ques attention dim:  torch.Size([5, 1429, 13])
Passage question vectors dim:  torch.Size([5, 1429, 200])
Question Passage Similarity dim:  torch.Size([5, 1429])
Question passage attention dim:  torch.Size([5, 1429])
Final Merged Passage dim:  torch.Size([5, 1429, 800])
Modeled Passage dim:  torch.Size([5, 1429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1429, 1000])
Span start logits:  torch.Size([5, 1429])
span start probs dim:  torch.Size([5, 1429])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1429]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1864, 200])
Passage Length:  1864
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1864, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1864, 12])
Passage ques attention dim:  torch.Size([5, 1864, 12])
Passage question vectors dim:  torch.Size([5, 1864, 200])
Question Passage Similarity dim:  torch.Size([5, 1864])
Question passage attention dim:  torch.Size([5, 1864])
Final Merged Passage dim:  torch.Size([5, 1864, 800])
Modeled Passage dim:  torch.Size([5, 1864, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1864, 1000])
Span start logits:  torch.Size([5, 1864])
span start probs dim:  torch.Size([5, 1864])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1864]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1290, 200])
Passage Length:  1290
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1290, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1290, 9])
Passage ques attention dim:  torch.Size([5, 1290, 9])
Passage question vectors dim:  torch.Size([5, 1290, 200])
Question Passage Similarity dim:  torch.Size([5, 1290])
Question passage attention dim:  torch.Size([5, 1290])
Final Merged Passage dim:  torch.Size([5, 1290, 800])
Modeled Passage dim:  torch.Size([5, 1290, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1290, 1000])
Span start logits:  torch.Size([5, 1290])
span start probs dim:  torch.Size([5, 1290])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1290]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 691, 200])
Passage Length:  691
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 691, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 691, 7])
Passage ques attention dim:  torch.Size([5, 691, 7])
Passage question vectors dim:  torch.Size([5, 691, 200])
Question Passage Similarity dim:  torch.Size([5, 691])
Question passage attention dim:  torch.Size([5, 691])
Final Merged Passage dim:  torch.Size([5, 691, 800])
Modeled Passage dim:  torch.Size([5, 691, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 691, 1000])
Span start logits:  torch.Size([5, 691])
span start probs dim:  torch.Size([5, 691])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 691]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 586, 200])
Passage Length:  586
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 586, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 586, 12])
Passage ques attention dim:  torch.Size([5, 586, 12])
Passage question vectors dim:  torch.Size([5, 586, 200])
Question Passage Similarity dim:  torch.Size([5, 586])
Question passage attention dim:  torch.Size([5, 586])
Final Merged Passage dim:  torch.Size([5, 586, 800])
Modeled Passage dim:  torch.Size([5, 586, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 586, 1000])
Span start logits:  torch.Size([5, 586])
span start probs dim:  torch.Size([5, 586])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 586]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 606, 200])
Passage Length:  606
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 606, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 606, 12])
Passage ques attention dim:  torch.Size([5, 606, 12])
Passage question vectors dim:  torch.Size([5, 606, 200])
Question Passage Similarity dim:  torch.Size([5, 606])
Question passage attention dim:  torch.Size([5, 606])
Final Merged Passage dim:  torch.Size([5, 606, 800])
Modeled Passage dim:  torch.Size([5, 606, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 606, 1000])
Span start logits:  torch.Size([5, 606])
span start probs dim:  torch.Size([5, 606])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 606]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 618, 200])
Passage Length:  618
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 618, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 618, 14])
Passage ques attention dim:  torch.Size([5, 618, 14])
Passage question vectors dim:  torch.Size([5, 618, 200])
Question Passage Similarity dim:  torch.Size([5, 618])
Question passage attention dim:  torch.Size([5, 618])
Final Merged Passage dim:  torch.Size([5, 618, 800])
Modeled Passage dim:  torch.Size([5, 618, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 618, 1000])
Span start logits:  torch.Size([5, 618])
span start probs dim:  torch.Size([5, 618])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 618]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 12])
Passage ques attention dim:  torch.Size([5, 619, 12])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 20])
Passage ques attention dim:  torch.Size([5, 1094, 20])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 507, 200])
Passage Length:  507
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 507, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 507, 14])
Passage ques attention dim:  torch.Size([5, 507, 14])
Passage question vectors dim:  torch.Size([5, 507, 200])
Question Passage Similarity dim:  torch.Size([5, 507])
Question passage attention dim:  torch.Size([5, 507])
Final Merged Passage dim:  torch.Size([5, 507, 800])
Modeled Passage dim:  torch.Size([5, 507, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 507, 1000])
Span start logits:  torch.Size([5, 507])
span start probs dim:  torch.Size([5, 507])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 507]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 356, 200])
Passage Length:  356
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 356, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 356, 12])
Passage ques attention dim:  torch.Size([5, 356, 12])
Passage question vectors dim:  torch.Size([5, 356, 200])
Question Passage Similarity dim:  torch.Size([5, 356])
Question passage attention dim:  torch.Size([5, 356])
Final Merged Passage dim:  torch.Size([5, 356, 800])
Modeled Passage dim:  torch.Size([5, 356, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 356, 1000])
Span start logits:  torch.Size([5, 356])
span start probs dim:  torch.Size([5, 356])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 356]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 615, 200])
Passage Length:  615
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 615, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 615, 9])
Passage ques attention dim:  torch.Size([5, 615, 9])
Passage question vectors dim:  torch.Size([5, 615, 200])
Question Passage Similarity dim:  torch.Size([5, 615])
Question passage attention dim:  torch.Size([5, 615])
Final Merged Passage dim:  torch.Size([5, 615, 800])
Modeled Passage dim:  torch.Size([5, 615, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 615, 1000])
Span start logits:  torch.Size([5, 615])
span start probs dim:  torch.Size([5, 615])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 615]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 10])
Passage ques attention dim:  torch.Size([5, 1094, 10])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1331, 200])
Passage Length:  1331
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1331, 11])
Passage ques attention dim:  torch.Size([5, 1331, 11])
Passage question vectors dim:  torch.Size([5, 1331, 200])
Question Passage Similarity dim:  torch.Size([5, 1331])
Question passage attention dim:  torch.Size([5, 1331])
Final Merged Passage dim:  torch.Size([5, 1331, 800])
Modeled Passage dim:  torch.Size([5, 1331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1331, 1000])
Span start logits:  torch.Size([5, 1331])
span start probs dim:  torch.Size([5, 1331])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1331]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 200, 8])
Passage ques attention dim:  torch.Size([5, 200, 8])
Passage question vectors dim:  torch.Size([5, 200, 200])
Question Passage Similarity dim:  torch.Size([5, 200])
Question passage attention dim:  torch.Size([5, 200])
Final Merged Passage dim:  torch.Size([5, 200, 800])
Modeled Passage dim:  torch.Size([5, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 200, 1000])
Span start logits:  torch.Size([5, 200])
span start probs dim:  torch.Size([5, 200])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 200]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 402, 200])
Passage Length:  402
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 402, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 402, 13])
Passage ques attention dim:  torch.Size([5, 402, 13])
Passage question vectors dim:  torch.Size([5, 402, 200])
Question Passage Similarity dim:  torch.Size([5, 402])
Question passage attention dim:  torch.Size([5, 402])
Final Merged Passage dim:  torch.Size([5, 402, 800])
Modeled Passage dim:  torch.Size([5, 402, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 402, 1000])
Span start logits:  torch.Size([5, 402])
span start probs dim:  torch.Size([5, 402])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 402]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1444, 200])
Passage Length:  1444
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1444, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1444, 11])
Passage ques attention dim:  torch.Size([5, 1444, 11])
Passage question vectors dim:  torch.Size([5, 1444, 200])
Question Passage Similarity dim:  torch.Size([5, 1444])
Question passage attention dim:  torch.Size([5, 1444])
Final Merged Passage dim:  torch.Size([5, 1444, 800])
Modeled Passage dim:  torch.Size([5, 1444, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1444, 1000])
Span start logits:  torch.Size([5, 1444])
span start probs dim:  torch.Size([5, 1444])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1444]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 571, 200])
Passage Length:  571
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 571, 10])
Passage ques attention dim:  torch.Size([5, 571, 10])
Passage question vectors dim:  torch.Size([5, 571, 200])
Question Passage Similarity dim:  torch.Size([5, 571])
Question passage attention dim:  torch.Size([5, 571])
Final Merged Passage dim:  torch.Size([5, 571, 800])
Modeled Passage dim:  torch.Size([5, 571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 571, 1000])
Span start logits:  torch.Size([5, 571])
span start probs dim:  torch.Size([5, 571])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 571]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 589, 200])
Passage Length:  589
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 589, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 589, 12])
Passage ques attention dim:  torch.Size([5, 589, 12])
Passage question vectors dim:  torch.Size([5, 589, 200])
Question Passage Similarity dim:  torch.Size([5, 589])
Question passage attention dim:  torch.Size([5, 589])
Final Merged Passage dim:  torch.Size([5, 589, 800])
Modeled Passage dim:  torch.Size([5, 589, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 589, 1000])
Span start logits:  torch.Size([5, 589])
span start probs dim:  torch.Size([5, 589])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 589]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 576, 9])
Passage ques attention dim:  torch.Size([5, 576, 9])
Passage question vectors dim:  torch.Size([5, 576, 200])
Question Passage Similarity dim:  torch.Size([5, 576])
Question passage attention dim:  torch.Size([5, 576])
Final Merged Passage dim:  torch.Size([5, 576, 800])
Modeled Passage dim:  torch.Size([5, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 576, 1000])
Span start logits:  torch.Size([5, 576])
span start probs dim:  torch.Size([5, 576])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 576]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 574, 200])
Passage Length:  574
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 574, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 574, 11])
Passage ques attention dim:  torch.Size([5, 574, 11])
Passage question vectors dim:  torch.Size([5, 574, 200])
Question Passage Similarity dim:  torch.Size([5, 574])
Question passage attention dim:  torch.Size([5, 574])
Final Merged Passage dim:  torch.Size([5, 574, 800])
Modeled Passage dim:  torch.Size([5, 574, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 574, 1000])
Span start logits:  torch.Size([5, 574])
span start probs dim:  torch.Size([5, 574])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 574]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 250, 13])
Passage ques attention dim:  torch.Size([5, 250, 13])
Passage question vectors dim:  torch.Size([5, 250, 200])
Question Passage Similarity dim:  torch.Size([5, 250])
Question passage attention dim:  torch.Size([5, 250])
Final Merged Passage dim:  torch.Size([5, 250, 800])
Modeled Passage dim:  torch.Size([5, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 250, 1000])
Span start logits:  torch.Size([5, 250])
span start probs dim:  torch.Size([5, 250])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 250]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 541, 200])
Passage Length:  541
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 541, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 541, 10])
Passage ques attention dim:  torch.Size([5, 541, 10])
Passage question vectors dim:  torch.Size([5, 541, 200])
Question Passage Similarity dim:  torch.Size([5, 541])
Question passage attention dim:  torch.Size([5, 541])
Final Merged Passage dim:  torch.Size([5, 541, 800])
Modeled Passage dim:  torch.Size([5, 541, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 541, 1000])
Span start logits:  torch.Size([5, 541])
span start probs dim:  torch.Size([5, 541])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 541]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1154, 200])
Passage Length:  1154
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1154, 8])
Passage ques attention dim:  torch.Size([5, 1154, 8])
Passage question vectors dim:  torch.Size([5, 1154, 200])
Question Passage Similarity dim:  torch.Size([5, 1154])
Question passage attention dim:  torch.Size([5, 1154])
Final Merged Passage dim:  torch.Size([5, 1154, 800])
Modeled Passage dim:  torch.Size([5, 1154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1154, 1000])
Span start logits:  torch.Size([5, 1154])
span start probs dim:  torch.Size([5, 1154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1154]) 5
METADATA: 
Embedded question dim:  torch.Size([1, 9, 200])
Embedded passage dim:  torch.Size([1, 1897, 200])
Passage Length:  1897
Encoded question dim:  torch.Size([1, 9, 200])
Encoded passage dim:  torch.Size([1, 1897, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([1, 1897, 9])
Passage ques attention dim:  torch.Size([1, 1897, 9])
Passage question vectors dim:  torch.Size([1, 1897, 200])
Question Passage Similarity dim:  torch.Size([1, 1897])
Question passage attention dim:  torch.Size([1, 1897])
Final Merged Passage dim:  torch.Size([1, 1897, 800])
Modeled Passage dim:  torch.Size([1, 1897, 200])
Modeling dim:  200
Span start input shape:  torch.Size([1, 1897, 1000])
Span start logits:  torch.Size([1, 1897])
span start probs dim:  torch.Size([1, 1897])
Span start representation dim:  torch.Size([1, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([1, 1897]) 1
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1187, 200])
Passage Length:  1187
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1187, 13])
Passage ques attention dim:  torch.Size([5, 1187, 13])
Passage question vectors dim:  torch.Size([5, 1187, 200])
Question Passage Similarity dim:  torch.Size([5, 1187])
Question passage attention dim:  torch.Size([5, 1187])
Final Merged Passage dim:  torch.Size([5, 1187, 800])
Modeled Passage dim:  torch.Size([5, 1187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1187, 1000])
Span start logits:  torch.Size([5, 1187])
span start probs dim:  torch.Size([5, 1187])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1187]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 586, 200])
Passage Length:  586
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 586, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 586, 11])
Passage ques attention dim:  torch.Size([5, 586, 11])
Passage question vectors dim:  torch.Size([5, 586, 200])
Question Passage Similarity dim:  torch.Size([5, 586])
Question passage attention dim:  torch.Size([5, 586])
Final Merged Passage dim:  torch.Size([5, 586, 800])
Modeled Passage dim:  torch.Size([5, 586, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 586, 1000])
Span start logits:  torch.Size([5, 586])
span start probs dim:  torch.Size([5, 586])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 586]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 833, 200])
Passage Length:  833
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 833, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 833, 13])
Passage ques attention dim:  torch.Size([5, 833, 13])
Passage question vectors dim:  torch.Size([5, 833, 200])
Question Passage Similarity dim:  torch.Size([5, 833])
Question passage attention dim:  torch.Size([5, 833])
Final Merged Passage dim:  torch.Size([5, 833, 800])
Modeled Passage dim:  torch.Size([5, 833, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 833, 1000])
Span start logits:  torch.Size([5, 833])
span start probs dim:  torch.Size([5, 833])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 833]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1372, 200])
Passage Length:  1372
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1372, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1372, 10])
Passage ques attention dim:  torch.Size([5, 1372, 10])
Passage question vectors dim:  torch.Size([5, 1372, 200])
Question Passage Similarity dim:  torch.Size([5, 1372])
Question passage attention dim:  torch.Size([5, 1372])
Final Merged Passage dim:  torch.Size([5, 1372, 800])
Modeled Passage dim:  torch.Size([5, 1372, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1372, 1000])
Span start logits:  torch.Size([5, 1372])
span start probs dim:  torch.Size([5, 1372])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1372]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1754, 200])
Passage Length:  1754
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1754, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1754, 13])
Passage ques attention dim:  torch.Size([5, 1754, 13])
Passage question vectors dim:  torch.Size([5, 1754, 200])
Question Passage Similarity dim:  torch.Size([5, 1754])
Question passage attention dim:  torch.Size([5, 1754])
Final Merged Passage dim:  torch.Size([5, 1754, 800])
Modeled Passage dim:  torch.Size([5, 1754, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1754, 1000])
Span start logits:  torch.Size([5, 1754])
span start probs dim:  torch.Size([5, 1754])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1754]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 394, 200])
Passage Length:  394
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 394, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 394, 13])
Passage ques attention dim:  torch.Size([5, 394, 13])
Passage question vectors dim:  torch.Size([5, 394, 200])
Question Passage Similarity dim:  torch.Size([5, 394])
Question passage attention dim:  torch.Size([5, 394])
Final Merged Passage dim:  torch.Size([5, 394, 800])
Modeled Passage dim:  torch.Size([5, 394, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 394, 1000])
Span start logits:  torch.Size([5, 394])
span start probs dim:  torch.Size([5, 394])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 394]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 993, 200])
Passage Length:  993
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 993, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 993, 8])
Passage ques attention dim:  torch.Size([5, 993, 8])
Passage question vectors dim:  torch.Size([5, 993, 200])
Question Passage Similarity dim:  torch.Size([5, 993])
Question passage attention dim:  torch.Size([5, 993])
Final Merged Passage dim:  torch.Size([5, 993, 800])
Modeled Passage dim:  torch.Size([5, 993, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 993, 1000])
Span start logits:  torch.Size([5, 993])
span start probs dim:  torch.Size([5, 993])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 993]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 419, 200])
Passage Length:  419
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 419, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 419, 11])
Passage ques attention dim:  torch.Size([5, 419, 11])
Passage question vectors dim:  torch.Size([5, 419, 200])
Question Passage Similarity dim:  torch.Size([5, 419])
Question passage attention dim:  torch.Size([5, 419])
Final Merged Passage dim:  torch.Size([5, 419, 800])
Modeled Passage dim:  torch.Size([5, 419, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 419, 1000])
Span start logits:  torch.Size([5, 419])
span start probs dim:  torch.Size([5, 419])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 419]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 894, 200])
Passage Length:  894
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 894, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 894, 14])
Passage ques attention dim:  torch.Size([5, 894, 14])
Passage question vectors dim:  torch.Size([5, 894, 200])
Question Passage Similarity dim:  torch.Size([5, 894])
Question passage attention dim:  torch.Size([5, 894])
Final Merged Passage dim:  torch.Size([5, 894, 800])
Modeled Passage dim:  torch.Size([5, 894, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 894, 1000])
Span start logits:  torch.Size([5, 894])
span start probs dim:  torch.Size([5, 894])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 894]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 615, 200])
Passage Length:  615
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 615, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 615, 8])
Passage ques attention dim:  torch.Size([5, 615, 8])
Passage question vectors dim:  torch.Size([5, 615, 200])
Question Passage Similarity dim:  torch.Size([5, 615])
Question passage attention dim:  torch.Size([5, 615])
Final Merged Passage dim:  torch.Size([5, 615, 800])
Modeled Passage dim:  torch.Size([5, 615, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 615, 1000])
Span start logits:  torch.Size([5, 615])
span start probs dim:  torch.Size([5, 615])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 615]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 609, 200])
Passage Length:  609
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 609, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 609, 17])
Passage ques attention dim:  torch.Size([5, 609, 17])
Passage question vectors dim:  torch.Size([5, 609, 200])
Question Passage Similarity dim:  torch.Size([5, 609])
Question passage attention dim:  torch.Size([5, 609])
Final Merged Passage dim:  torch.Size([5, 609, 800])
Modeled Passage dim:  torch.Size([5, 609, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 609, 1000])
Span start logits:  torch.Size([5, 609])
span start probs dim:  torch.Size([5, 609])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 609]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 284, 200])
Passage Length:  284
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 284, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 284, 12])
Passage ques attention dim:  torch.Size([5, 284, 12])
Passage question vectors dim:  torch.Size([5, 284, 200])
Question Passage Similarity dim:  torch.Size([5, 284])
Question passage attention dim:  torch.Size([5, 284])
Final Merged Passage dim:  torch.Size([5, 284, 800])
Modeled Passage dim:  torch.Size([5, 284, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 284, 1000])
Span start logits:  torch.Size([5, 284])
span start probs dim:  torch.Size([5, 284])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 284]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1152, 200])
Passage Length:  1152
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1152, 9])
Passage ques attention dim:  torch.Size([5, 1152, 9])
Passage question vectors dim:  torch.Size([5, 1152, 200])
Question Passage Similarity dim:  torch.Size([5, 1152])
Question passage attention dim:  torch.Size([5, 1152])
Final Merged Passage dim:  torch.Size([5, 1152, 800])
Modeled Passage dim:  torch.Size([5, 1152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1152, 1000])
Span start logits:  torch.Size([5, 1152])
span start probs dim:  torch.Size([5, 1152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 567, 200])
Passage Length:  567
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 567, 10])
Passage ques attention dim:  torch.Size([5, 567, 10])
Passage question vectors dim:  torch.Size([5, 567, 200])
Question Passage Similarity dim:  torch.Size([5, 567])
Question passage attention dim:  torch.Size([5, 567])
Final Merged Passage dim:  torch.Size([5, 567, 800])
Modeled Passage dim:  torch.Size([5, 567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 567, 1000])
Span start logits:  torch.Size([5, 567])
span start probs dim:  torch.Size([5, 567])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 567]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 339, 200])
Passage Length:  339
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 339, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 339, 11])
Passage ques attention dim:  torch.Size([5, 339, 11])
Passage question vectors dim:  torch.Size([5, 339, 200])
Question Passage Similarity dim:  torch.Size([5, 339])
Question passage attention dim:  torch.Size([5, 339])
Final Merged Passage dim:  torch.Size([5, 339, 800])
Modeled Passage dim:  torch.Size([5, 339, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 339, 1000])
Span start logits:  torch.Size([5, 339])
span start probs dim:  torch.Size([5, 339])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 339]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1037, 200])
Passage Length:  1037
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1037, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1037, 12])
Passage ques attention dim:  torch.Size([5, 1037, 12])
Passage question vectors dim:  torch.Size([5, 1037, 200])
Question Passage Similarity dim:  torch.Size([5, 1037])
Question passage attention dim:  torch.Size([5, 1037])
Final Merged Passage dim:  torch.Size([5, 1037, 800])
Modeled Passage dim:  torch.Size([5, 1037, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1037, 1000])
Span start logits:  torch.Size([5, 1037])
span start probs dim:  torch.Size([5, 1037])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1037]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 13])
Passage ques attention dim:  torch.Size([5, 560, 13])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 1346, 200])
Passage Length:  1346
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 1346, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1346, 15])
Passage ques attention dim:  torch.Size([5, 1346, 15])
Passage question vectors dim:  torch.Size([5, 1346, 200])
Question Passage Similarity dim:  torch.Size([5, 1346])
Question passage attention dim:  torch.Size([5, 1346])
Final Merged Passage dim:  torch.Size([5, 1346, 800])
Modeled Passage dim:  torch.Size([5, 1346, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1346, 1000])
Span start logits:  torch.Size([5, 1346])
span start probs dim:  torch.Size([5, 1346])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1346]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1754, 200])
Passage Length:  1754
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1754, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1754, 9])
Passage ques attention dim:  torch.Size([5, 1754, 9])
Passage question vectors dim:  torch.Size([5, 1754, 200])
Question Passage Similarity dim:  torch.Size([5, 1754])
Question passage attention dim:  torch.Size([5, 1754])
Final Merged Passage dim:  torch.Size([5, 1754, 800])
Modeled Passage dim:  torch.Size([5, 1754, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1754, 1000])
Span start logits:  torch.Size([5, 1754])
span start probs dim:  torch.Size([5, 1754])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1754]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 627, 200])
Passage Length:  627
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 627, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 627, 10])
Passage ques attention dim:  torch.Size([5, 627, 10])
Passage question vectors dim:  torch.Size([5, 627, 200])
Question Passage Similarity dim:  torch.Size([5, 627])
Question passage attention dim:  torch.Size([5, 627])
Final Merged Passage dim:  torch.Size([5, 627, 800])
Modeled Passage dim:  torch.Size([5, 627, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 627, 1000])
Span start logits:  torch.Size([5, 627])
span start probs dim:  torch.Size([5, 627])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 627]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 15])
Passage ques attention dim:  torch.Size([5, 381, 15])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 567, 200])
Passage Length:  567
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 567, 13])
Passage ques attention dim:  torch.Size([5, 567, 13])
Passage question vectors dim:  torch.Size([5, 567, 200])
Question Passage Similarity dim:  torch.Size([5, 567])
Question passage attention dim:  torch.Size([5, 567])
Final Merged Passage dim:  torch.Size([5, 567, 800])
Modeled Passage dim:  torch.Size([5, 567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 567, 1000])
Span start logits:  torch.Size([5, 567])
span start probs dim:  torch.Size([5, 567])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 567]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 402, 200])
Passage Length:  402
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 402, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 402, 16])
Passage ques attention dim:  torch.Size([5, 402, 16])
Passage question vectors dim:  torch.Size([5, 402, 200])
Question Passage Similarity dim:  torch.Size([5, 402])
Question passage attention dim:  torch.Size([5, 402])
Final Merged Passage dim:  torch.Size([5, 402, 800])
Modeled Passage dim:  torch.Size([5, 402, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 402, 1000])
Span start logits:  torch.Size([5, 402])
span start probs dim:  torch.Size([5, 402])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 402]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 961, 200])
Passage Length:  961
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 961, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 961, 7])
Passage ques attention dim:  torch.Size([5, 961, 7])
Passage question vectors dim:  torch.Size([5, 961, 200])
Question Passage Similarity dim:  torch.Size([5, 961])
Question passage attention dim:  torch.Size([5, 961])
Final Merged Passage dim:  torch.Size([5, 961, 800])
Modeled Passage dim:  torch.Size([5, 961, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 961, 1000])
Span start logits:  torch.Size([5, 961])
span start probs dim:  torch.Size([5, 961])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 961]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 574, 200])
Passage Length:  574
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 574, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 574, 16])
Passage ques attention dim:  torch.Size([5, 574, 16])
Passage question vectors dim:  torch.Size([5, 574, 200])
Question Passage Similarity dim:  torch.Size([5, 574])
Question passage attention dim:  torch.Size([5, 574])
Final Merged Passage dim:  torch.Size([5, 574, 800])
Modeled Passage dim:  torch.Size([5, 574, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 574, 1000])
Span start logits:  torch.Size([5, 574])
span start probs dim:  torch.Size([5, 574])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 574]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 1202, 200])
Passage Length:  1202
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 1202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1202, 16])
Passage ques attention dim:  torch.Size([5, 1202, 16])
Passage question vectors dim:  torch.Size([5, 1202, 200])
Question Passage Similarity dim:  torch.Size([5, 1202])
Question passage attention dim:  torch.Size([5, 1202])
Final Merged Passage dim:  torch.Size([5, 1202, 800])
Modeled Passage dim:  torch.Size([5, 1202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1202, 1000])
Span start logits:  torch.Size([5, 1202])
span start probs dim:  torch.Size([5, 1202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 456, 11])
Passage ques attention dim:  torch.Size([5, 456, 11])
Passage question vectors dim:  torch.Size([5, 456, 200])
Question Passage Similarity dim:  torch.Size([5, 456])
Question passage attention dim:  torch.Size([5, 456])
Final Merged Passage dim:  torch.Size([5, 456, 800])
Modeled Passage dim:  torch.Size([5, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 456, 1000])
Span start logits:  torch.Size([5, 456])
span start probs dim:  torch.Size([5, 456])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 456]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 1129, 200])
Passage Length:  1129
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 1129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1129, 6])
Passage ques attention dim:  torch.Size([5, 1129, 6])
Passage question vectors dim:  torch.Size([5, 1129, 200])
Question Passage Similarity dim:  torch.Size([5, 1129])
Question passage attention dim:  torch.Size([5, 1129])
Final Merged Passage dim:  torch.Size([5, 1129, 800])
Modeled Passage dim:  torch.Size([5, 1129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1129, 1000])
Span start logits:  torch.Size([5, 1129])
span start probs dim:  torch.Size([5, 1129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 11])
Passage ques attention dim:  torch.Size([5, 462, 11])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1201, 200])
Passage Length:  1201
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1201, 13])
Passage ques attention dim:  torch.Size([5, 1201, 13])
Passage question vectors dim:  torch.Size([5, 1201, 200])
Question Passage Similarity dim:  torch.Size([5, 1201])
Question passage attention dim:  torch.Size([5, 1201])
Final Merged Passage dim:  torch.Size([5, 1201, 800])
Modeled Passage dim:  torch.Size([5, 1201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1201, 1000])
Span start logits:  torch.Size([5, 1201])
span start probs dim:  torch.Size([5, 1201])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1201]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1007, 200])
Passage Length:  1007
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1007, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1007, 14])
Passage ques attention dim:  torch.Size([5, 1007, 14])
Passage question vectors dim:  torch.Size([5, 1007, 200])
Question Passage Similarity dim:  torch.Size([5, 1007])
Question passage attention dim:  torch.Size([5, 1007])
Final Merged Passage dim:  torch.Size([5, 1007, 800])
Modeled Passage dim:  torch.Size([5, 1007, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1007, 1000])
Span start logits:  torch.Size([5, 1007])
span start probs dim:  torch.Size([5, 1007])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1007]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 600, 200])
Passage Length:  600
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 600, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 600, 11])
Passage ques attention dim:  torch.Size([5, 600, 11])
Passage question vectors dim:  torch.Size([5, 600, 200])
Question Passage Similarity dim:  torch.Size([5, 600])
Question passage attention dim:  torch.Size([5, 600])
Final Merged Passage dim:  torch.Size([5, 600, 800])
Modeled Passage dim:  torch.Size([5, 600, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 600, 1000])
Span start logits:  torch.Size([5, 600])
span start probs dim:  torch.Size([5, 600])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 600]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1133, 200])
Passage Length:  1133
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1133, 8])
Passage ques attention dim:  torch.Size([5, 1133, 8])
Passage question vectors dim:  torch.Size([5, 1133, 200])
Question Passage Similarity dim:  torch.Size([5, 1133])
Question passage attention dim:  torch.Size([5, 1133])
Final Merged Passage dim:  torch.Size([5, 1133, 800])
Modeled Passage dim:  torch.Size([5, 1133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1133, 1000])
Span start logits:  torch.Size([5, 1133])
span start probs dim:  torch.Size([5, 1133])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1133]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 718, 200])
Passage Length:  718
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 718, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 718, 9])
Passage ques attention dim:  torch.Size([5, 718, 9])
Passage question vectors dim:  torch.Size([5, 718, 200])
Question Passage Similarity dim:  torch.Size([5, 718])
Question passage attention dim:  torch.Size([5, 718])
Final Merged Passage dim:  torch.Size([5, 718, 800])
Modeled Passage dim:  torch.Size([5, 718, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 718, 1000])
Span start logits:  torch.Size([5, 718])
span start probs dim:  torch.Size([5, 718])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 718]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1864, 200])
Passage Length:  1864
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1864, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1864, 10])
Passage ques attention dim:  torch.Size([5, 1864, 10])
Passage question vectors dim:  torch.Size([5, 1864, 200])
Question Passage Similarity dim:  torch.Size([5, 1864])
Question passage attention dim:  torch.Size([5, 1864])
Final Merged Passage dim:  torch.Size([5, 1864, 800])
Modeled Passage dim:  torch.Size([5, 1864, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1864, 1000])
Span start logits:  torch.Size([5, 1864])
span start probs dim:  torch.Size([5, 1864])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1864]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 606, 200])
Passage Length:  606
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 606, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 606, 11])
Passage ques attention dim:  torch.Size([5, 606, 11])
Passage question vectors dim:  torch.Size([5, 606, 200])
Question Passage Similarity dim:  torch.Size([5, 606])
Question passage attention dim:  torch.Size([5, 606])
Final Merged Passage dim:  torch.Size([5, 606, 800])
Modeled Passage dim:  torch.Size([5, 606, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 606, 1000])
Span start logits:  torch.Size([5, 606])
span start probs dim:  torch.Size([5, 606])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 606]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 12])
Passage ques attention dim:  torch.Size([5, 619, 12])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1209, 200])
Passage Length:  1209
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1209, 12])
Passage ques attention dim:  torch.Size([5, 1209, 12])
Passage question vectors dim:  torch.Size([5, 1209, 200])
Question Passage Similarity dim:  torch.Size([5, 1209])
Question passage attention dim:  torch.Size([5, 1209])
Final Merged Passage dim:  torch.Size([5, 1209, 800])
Modeled Passage dim:  torch.Size([5, 1209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1209, 1000])
Span start logits:  torch.Size([5, 1209])
span start probs dim:  torch.Size([5, 1209])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1209]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 375, 200])
Passage Length:  375
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 375, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 375, 13])
Passage ques attention dim:  torch.Size([5, 375, 13])
Passage question vectors dim:  torch.Size([5, 375, 200])
Question Passage Similarity dim:  torch.Size([5, 375])
Question passage attention dim:  torch.Size([5, 375])
Final Merged Passage dim:  torch.Size([5, 375, 800])
Modeled Passage dim:  torch.Size([5, 375, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 375, 1000])
Span start logits:  torch.Size([5, 375])
span start probs dim:  torch.Size([5, 375])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 375]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 1180, 200])
Passage Length:  1180
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 1180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1180, 6])
Passage ques attention dim:  torch.Size([5, 1180, 6])
Passage question vectors dim:  torch.Size([5, 1180, 200])
Question Passage Similarity dim:  torch.Size([5, 1180])
Question passage attention dim:  torch.Size([5, 1180])
Final Merged Passage dim:  torch.Size([5, 1180, 800])
Modeled Passage dim:  torch.Size([5, 1180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1180, 1000])
Span start logits:  torch.Size([5, 1180])
span start probs dim:  torch.Size([5, 1180])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1180]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 545, 200])
Passage Length:  545
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 545, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 545, 13])
Passage ques attention dim:  torch.Size([5, 545, 13])
Passage question vectors dim:  torch.Size([5, 545, 200])
Question Passage Similarity dim:  torch.Size([5, 545])
Question passage attention dim:  torch.Size([5, 545])
Final Merged Passage dim:  torch.Size([5, 545, 800])
Modeled Passage dim:  torch.Size([5, 545, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 545, 1000])
Span start logits:  torch.Size([5, 545])
span start probs dim:  torch.Size([5, 545])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 545]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 694, 200])
Passage Length:  694
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 694, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 694, 15])
Passage ques attention dim:  torch.Size([5, 694, 15])
Passage question vectors dim:  torch.Size([5, 694, 200])
Question Passage Similarity dim:  torch.Size([5, 694])
Question passage attention dim:  torch.Size([5, 694])
Final Merged Passage dim:  torch.Size([5, 694, 800])
Modeled Passage dim:  torch.Size([5, 694, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 694, 1000])
Span start logits:  torch.Size([5, 694])
span start probs dim:  torch.Size([5, 694])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 694]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1395, 200])
Passage Length:  1395
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1395, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1395, 12])
Passage ques attention dim:  torch.Size([5, 1395, 12])
Passage question vectors dim:  torch.Size([5, 1395, 200])
Question Passage Similarity dim:  torch.Size([5, 1395])
Question passage attention dim:  torch.Size([5, 1395])
Final Merged Passage dim:  torch.Size([5, 1395, 800])
Modeled Passage dim:  torch.Size([5, 1395, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1395, 1000])
Span start logits:  torch.Size([5, 1395])
span start probs dim:  torch.Size([5, 1395])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1395]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 980, 200])
Passage Length:  980
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 980, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 980, 9])
Passage ques attention dim:  torch.Size([5, 980, 9])
Passage question vectors dim:  torch.Size([5, 980, 200])
Question Passage Similarity dim:  torch.Size([5, 980])
Question passage attention dim:  torch.Size([5, 980])
Final Merged Passage dim:  torch.Size([5, 980, 800])
Modeled Passage dim:  torch.Size([5, 980, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 980, 1000])
Span start logits:  torch.Size([5, 980])
span start probs dim:  torch.Size([5, 980])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 980]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 342, 200])
Passage Length:  342
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 342, 8])
Passage ques attention dim:  torch.Size([5, 342, 8])
Passage question vectors dim:  torch.Size([5, 342, 200])
Question Passage Similarity dim:  torch.Size([5, 342])
Question passage attention dim:  torch.Size([5, 342])
Final Merged Passage dim:  torch.Size([5, 342, 800])
Modeled Passage dim:  torch.Size([5, 342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 342, 1000])
Span start logits:  torch.Size([5, 342])
span start probs dim:  torch.Size([5, 342])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 342]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 834, 200])
Passage Length:  834
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 834, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 834, 12])
Passage ques attention dim:  torch.Size([5, 834, 12])
Passage question vectors dim:  torch.Size([5, 834, 200])
Question Passage Similarity dim:  torch.Size([5, 834])
Question passage attention dim:  torch.Size([5, 834])
Final Merged Passage dim:  torch.Size([5, 834, 800])
Modeled Passage dim:  torch.Size([5, 834, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 834, 1000])
Span start logits:  torch.Size([5, 834])
span start probs dim:  torch.Size([5, 834])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 834]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 270, 200])
Passage Length:  270
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 270, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 270, 14])
Passage ques attention dim:  torch.Size([5, 270, 14])
Passage question vectors dim:  torch.Size([5, 270, 200])
Question Passage Similarity dim:  torch.Size([5, 270])
Question passage attention dim:  torch.Size([5, 270])
Final Merged Passage dim:  torch.Size([5, 270, 800])
Modeled Passage dim:  torch.Size([5, 270, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 270, 1000])
Span start logits:  torch.Size([5, 270])
span start probs dim:  torch.Size([5, 270])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 270]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 231, 11])
Passage ques attention dim:  torch.Size([5, 231, 11])
Passage question vectors dim:  torch.Size([5, 231, 200])
Question Passage Similarity dim:  torch.Size([5, 231])
Question passage attention dim:  torch.Size([5, 231])
Final Merged Passage dim:  torch.Size([5, 231, 800])
Modeled Passage dim:  torch.Size([5, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 231, 1000])
Span start logits:  torch.Size([5, 231])
span start probs dim:  torch.Size([5, 231])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 231]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 595, 200])
Passage Length:  595
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 595, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 595, 16])
Passage ques attention dim:  torch.Size([5, 595, 16])
Passage question vectors dim:  torch.Size([5, 595, 200])
Question Passage Similarity dim:  torch.Size([5, 595])
Question passage attention dim:  torch.Size([5, 595])
Final Merged Passage dim:  torch.Size([5, 595, 800])
Modeled Passage dim:  torch.Size([5, 595, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 595, 1000])
Span start logits:  torch.Size([5, 595])
span start probs dim:  torch.Size([5, 595])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 595]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 646, 200])
Passage Length:  646
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 646, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 646, 13])
Passage ques attention dim:  torch.Size([5, 646, 13])
Passage question vectors dim:  torch.Size([5, 646, 200])
Question Passage Similarity dim:  torch.Size([5, 646])
Question passage attention dim:  torch.Size([5, 646])
Final Merged Passage dim:  torch.Size([5, 646, 800])
Modeled Passage dim:  torch.Size([5, 646, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 646, 1000])
Span start logits:  torch.Size([5, 646])
span start probs dim:  torch.Size([5, 646])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 646]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 796, 200])
Passage Length:  796
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 796, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 796, 8])
Passage ques attention dim:  torch.Size([5, 796, 8])
Passage question vectors dim:  torch.Size([5, 796, 200])
Question Passage Similarity dim:  torch.Size([5, 796])
Question passage attention dim:  torch.Size([5, 796])
Final Merged Passage dim:  torch.Size([5, 796, 800])
Modeled Passage dim:  torch.Size([5, 796, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 796, 1000])
Span start logits:  torch.Size([5, 796])
span start probs dim:  torch.Size([5, 796])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 796]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 478, 200])
Passage Length:  478
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 478, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 478, 9])
Passage ques attention dim:  torch.Size([5, 478, 9])
Passage question vectors dim:  torch.Size([5, 478, 200])
Question Passage Similarity dim:  torch.Size([5, 478])
Question passage attention dim:  torch.Size([5, 478])
Final Merged Passage dim:  torch.Size([5, 478, 800])
Modeled Passage dim:  torch.Size([5, 478, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 478, 1000])
Span start logits:  torch.Size([5, 478])
span start probs dim:  torch.Size([5, 478])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 478]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 365, 10])
Passage ques attention dim:  torch.Size([5, 365, 10])
Passage question vectors dim:  torch.Size([5, 365, 200])
Question Passage Similarity dim:  torch.Size([5, 365])
Question passage attention dim:  torch.Size([5, 365])
Final Merged Passage dim:  torch.Size([5, 365, 800])
Modeled Passage dim:  torch.Size([5, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 365, 1000])
Span start logits:  torch.Size([5, 365])
span start probs dim:  torch.Size([5, 365])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 365]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1524, 200])
Passage Length:  1524
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1524, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1524, 13])
Passage ques attention dim:  torch.Size([5, 1524, 13])
Passage question vectors dim:  torch.Size([5, 1524, 200])
Question Passage Similarity dim:  torch.Size([5, 1524])
Question passage attention dim:  torch.Size([5, 1524])
Final Merged Passage dim:  torch.Size([5, 1524, 800])
Modeled Passage dim:  torch.Size([5, 1524, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1524, 1000])
Span start logits:  torch.Size([5, 1524])
span start probs dim:  torch.Size([5, 1524])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1524]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 421, 200])
Passage Length:  421
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 421, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 421, 9])
Passage ques attention dim:  torch.Size([5, 421, 9])
Passage question vectors dim:  torch.Size([5, 421, 200])
Question Passage Similarity dim:  torch.Size([5, 421])
Question passage attention dim:  torch.Size([5, 421])
Final Merged Passage dim:  torch.Size([5, 421, 800])
Modeled Passage dim:  torch.Size([5, 421, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 421, 1000])
Span start logits:  torch.Size([5, 421])
span start probs dim:  torch.Size([5, 421])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 421]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1089, 200])
Passage Length:  1089
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1089, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1089, 12])
Passage ques attention dim:  torch.Size([5, 1089, 12])
Passage question vectors dim:  torch.Size([5, 1089, 200])
Question Passage Similarity dim:  torch.Size([5, 1089])
Question passage attention dim:  torch.Size([5, 1089])
Final Merged Passage dim:  torch.Size([5, 1089, 800])
Modeled Passage dim:  torch.Size([5, 1089, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1089, 1000])
Span start logits:  torch.Size([5, 1089])
span start probs dim:  torch.Size([5, 1089])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1089]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 510, 200])
Passage Length:  510
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 510, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 510, 11])
Passage ques attention dim:  torch.Size([5, 510, 11])
Passage question vectors dim:  torch.Size([5, 510, 200])
Question Passage Similarity dim:  torch.Size([5, 510])
Question passage attention dim:  torch.Size([5, 510])
Final Merged Passage dim:  torch.Size([5, 510, 800])
Modeled Passage dim:  torch.Size([5, 510, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 510, 1000])
Span start logits:  torch.Size([5, 510])
span start probs dim:  torch.Size([5, 510])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 510]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 458, 200])
Passage Length:  458
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 458, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 458, 9])
Passage ques attention dim:  torch.Size([5, 458, 9])
Passage question vectors dim:  torch.Size([5, 458, 200])
Question Passage Similarity dim:  torch.Size([5, 458])
Question passage attention dim:  torch.Size([5, 458])
Final Merged Passage dim:  torch.Size([5, 458, 800])
Modeled Passage dim:  torch.Size([5, 458, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 458, 1000])
Span start logits:  torch.Size([5, 458])
span start probs dim:  torch.Size([5, 458])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 458]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1253, 200])
Passage Length:  1253
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1253, 10])
Passage ques attention dim:  torch.Size([5, 1253, 10])
Passage question vectors dim:  torch.Size([5, 1253, 200])
Question Passage Similarity dim:  torch.Size([5, 1253])
Question passage attention dim:  torch.Size([5, 1253])
Final Merged Passage dim:  torch.Size([5, 1253, 800])
Modeled Passage dim:  torch.Size([5, 1253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1253, 1000])
Span start logits:  torch.Size([5, 1253])
span start probs dim:  torch.Size([5, 1253])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1253]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 11])
Passage ques attention dim:  torch.Size([5, 169, 11])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 507, 200])
Passage Length:  507
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 507, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 507, 9])
Passage ques attention dim:  torch.Size([5, 507, 9])
Passage question vectors dim:  torch.Size([5, 507, 200])
Question Passage Similarity dim:  torch.Size([5, 507])
Question passage attention dim:  torch.Size([5, 507])
Final Merged Passage dim:  torch.Size([5, 507, 800])
Modeled Passage dim:  torch.Size([5, 507, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 507, 1000])
Span start logits:  torch.Size([5, 507])
span start probs dim:  torch.Size([5, 507])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 507]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1394, 200])
Passage Length:  1394
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1394, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1394, 13])
Passage ques attention dim:  torch.Size([5, 1394, 13])
Passage question vectors dim:  torch.Size([5, 1394, 200])
Question Passage Similarity dim:  torch.Size([5, 1394])
Question passage attention dim:  torch.Size([5, 1394])
Final Merged Passage dim:  torch.Size([5, 1394, 800])
Modeled Passage dim:  torch.Size([5, 1394, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1394, 1000])
Span start logits:  torch.Size([5, 1394])
span start probs dim:  torch.Size([5, 1394])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1394]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 749, 200])
Passage Length:  749
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 749, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 749, 20])
Passage ques attention dim:  torch.Size([5, 749, 20])
Passage question vectors dim:  torch.Size([5, 749, 200])
Question Passage Similarity dim:  torch.Size([5, 749])
Question passage attention dim:  torch.Size([5, 749])
Final Merged Passage dim:  torch.Size([5, 749, 800])
Modeled Passage dim:  torch.Size([5, 749, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 749, 1000])
Span start logits:  torch.Size([5, 749])
span start probs dim:  torch.Size([5, 749])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 749]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1163, 200])
Passage Length:  1163
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1163, 11])
Passage ques attention dim:  torch.Size([5, 1163, 11])
Passage question vectors dim:  torch.Size([5, 1163, 200])
Question Passage Similarity dim:  torch.Size([5, 1163])
Question passage attention dim:  torch.Size([5, 1163])
Final Merged Passage dim:  torch.Size([5, 1163, 800])
Modeled Passage dim:  torch.Size([5, 1163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1163, 1000])
Span start logits:  torch.Size([5, 1163])
span start probs dim:  torch.Size([5, 1163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 360, 200])
Passage Length:  360
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 360, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 360, 7])
Passage ques attention dim:  torch.Size([5, 360, 7])
Passage question vectors dim:  torch.Size([5, 360, 200])
Question Passage Similarity dim:  torch.Size([5, 360])
Question passage attention dim:  torch.Size([5, 360])
Final Merged Passage dim:  torch.Size([5, 360, 800])
Modeled Passage dim:  torch.Size([5, 360, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 360, 1000])
Span start logits:  torch.Size([5, 360])
span start probs dim:  torch.Size([5, 360])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 360]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1024, 200])
Passage Length:  1024
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1024, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1024, 13])
Passage ques attention dim:  torch.Size([5, 1024, 13])
Passage question vectors dim:  torch.Size([5, 1024, 200])
Question Passage Similarity dim:  torch.Size([5, 1024])
Question passage attention dim:  torch.Size([5, 1024])
Final Merged Passage dim:  torch.Size([5, 1024, 800])
Modeled Passage dim:  torch.Size([5, 1024, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1024, 1000])
Span start logits:  torch.Size([5, 1024])
span start probs dim:  torch.Size([5, 1024])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1024]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 894, 200])
Passage Length:  894
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 894, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 894, 11])
Passage ques attention dim:  torch.Size([5, 894, 11])
Passage question vectors dim:  torch.Size([5, 894, 200])
Question Passage Similarity dim:  torch.Size([5, 894])
Question passage attention dim:  torch.Size([5, 894])
Final Merged Passage dim:  torch.Size([5, 894, 800])
Modeled Passage dim:  torch.Size([5, 894, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 894, 1000])
Span start logits:  torch.Size([5, 894])
span start probs dim:  torch.Size([5, 894])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 894]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 998, 200])
Passage Length:  998
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 998, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 998, 10])
Passage ques attention dim:  torch.Size([5, 998, 10])
Passage question vectors dim:  torch.Size([5, 998, 200])
Question Passage Similarity dim:  torch.Size([5, 998])
Question passage attention dim:  torch.Size([5, 998])
Final Merged Passage dim:  torch.Size([5, 998, 800])
Modeled Passage dim:  torch.Size([5, 998, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 998, 1000])
Span start logits:  torch.Size([5, 998])
span start probs dim:  torch.Size([5, 998])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 998]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1253, 200])
Passage Length:  1253
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1253, 13])
Passage ques attention dim:  torch.Size([5, 1253, 13])
Passage question vectors dim:  torch.Size([5, 1253, 200])
Question Passage Similarity dim:  torch.Size([5, 1253])
Question passage attention dim:  torch.Size([5, 1253])
Final Merged Passage dim:  torch.Size([5, 1253, 800])
Modeled Passage dim:  torch.Size([5, 1253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1253, 1000])
Span start logits:  torch.Size([5, 1253])
span start probs dim:  torch.Size([5, 1253])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1253]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1713, 200])
Passage Length:  1713
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1713, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1713, 10])
Passage ques attention dim:  torch.Size([5, 1713, 10])
Passage question vectors dim:  torch.Size([5, 1713, 200])
Question Passage Similarity dim:  torch.Size([5, 1713])
Question passage attention dim:  torch.Size([5, 1713])
Final Merged Passage dim:  torch.Size([5, 1713, 800])
Modeled Passage dim:  torch.Size([5, 1713, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1713, 1000])
Span start logits:  torch.Size([5, 1713])
span start probs dim:  torch.Size([5, 1713])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1713]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 361, 12])
Passage ques attention dim:  torch.Size([5, 361, 12])
Passage question vectors dim:  torch.Size([5, 361, 200])
Question Passage Similarity dim:  torch.Size([5, 361])
Question passage attention dim:  torch.Size([5, 361])
Final Merged Passage dim:  torch.Size([5, 361, 800])
Modeled Passage dim:  torch.Size([5, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 361, 1000])
Span start logits:  torch.Size([5, 361])
span start probs dim:  torch.Size([5, 361])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 361]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 510, 200])
Passage Length:  510
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 510, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 510, 13])
Passage ques attention dim:  torch.Size([5, 510, 13])
Passage question vectors dim:  torch.Size([5, 510, 200])
Question Passage Similarity dim:  torch.Size([5, 510])
Question passage attention dim:  torch.Size([5, 510])
Final Merged Passage dim:  torch.Size([5, 510, 800])
Modeled Passage dim:  torch.Size([5, 510, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 510, 1000])
Span start logits:  torch.Size([5, 510])
span start probs dim:  torch.Size([5, 510])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 510]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1040, 200])
Passage Length:  1040
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1040, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1040, 8])
Passage ques attention dim:  torch.Size([5, 1040, 8])
Passage question vectors dim:  torch.Size([5, 1040, 200])
Question Passage Similarity dim:  torch.Size([5, 1040])
Question passage attention dim:  torch.Size([5, 1040])
Final Merged Passage dim:  torch.Size([5, 1040, 800])
Modeled Passage dim:  torch.Size([5, 1040, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1040, 1000])
Span start logits:  torch.Size([5, 1040])
span start probs dim:  torch.Size([5, 1040])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1040]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1064, 200])
Passage Length:  1064
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1064, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1064, 9])
Passage ques attention dim:  torch.Size([5, 1064, 9])
Passage question vectors dim:  torch.Size([5, 1064, 200])
Question Passage Similarity dim:  torch.Size([5, 1064])
Question passage attention dim:  torch.Size([5, 1064])
Final Merged Passage dim:  torch.Size([5, 1064, 800])
Modeled Passage dim:  torch.Size([5, 1064, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1064, 1000])
Span start logits:  torch.Size([5, 1064])
span start probs dim:  torch.Size([5, 1064])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1064]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1129, 200])
Passage Length:  1129
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1129, 7])
Passage ques attention dim:  torch.Size([5, 1129, 7])
Passage question vectors dim:  torch.Size([5, 1129, 200])
Question Passage Similarity dim:  torch.Size([5, 1129])
Question passage attention dim:  torch.Size([5, 1129])
Final Merged Passage dim:  torch.Size([5, 1129, 800])
Modeled Passage dim:  torch.Size([5, 1129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1129, 1000])
Span start logits:  torch.Size([5, 1129])
span start probs dim:  torch.Size([5, 1129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 646, 200])
Passage Length:  646
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 646, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 646, 12])
Passage ques attention dim:  torch.Size([5, 646, 12])
Passage question vectors dim:  torch.Size([5, 646, 200])
Question Passage Similarity dim:  torch.Size([5, 646])
Question passage attention dim:  torch.Size([5, 646])
Final Merged Passage dim:  torch.Size([5, 646, 800])
Modeled Passage dim:  torch.Size([5, 646, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 646, 1000])
Span start logits:  torch.Size([5, 646])
span start probs dim:  torch.Size([5, 646])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 646]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 6])
Passage ques attention dim:  torch.Size([5, 381, 6])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 933, 200])
Passage Length:  933
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 933, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 933, 12])
Passage ques attention dim:  torch.Size([5, 933, 12])
Passage question vectors dim:  torch.Size([5, 933, 200])
Question Passage Similarity dim:  torch.Size([5, 933])
Question passage attention dim:  torch.Size([5, 933])
Final Merged Passage dim:  torch.Size([5, 933, 800])
Modeled Passage dim:  torch.Size([5, 933, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 933, 1000])
Span start logits:  torch.Size([5, 933])
span start probs dim:  torch.Size([5, 933])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 933]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 525, 200])
Passage Length:  525
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 525, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 525, 9])
Passage ques attention dim:  torch.Size([5, 525, 9])
Passage question vectors dim:  torch.Size([5, 525, 200])
Question Passage Similarity dim:  torch.Size([5, 525])
Question passage attention dim:  torch.Size([5, 525])
Final Merged Passage dim:  torch.Size([5, 525, 800])
Modeled Passage dim:  torch.Size([5, 525, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 525, 1000])
Span start logits:  torch.Size([5, 525])
span start probs dim:  torch.Size([5, 525])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 525]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 643, 200])
Passage Length:  643
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 643, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 643, 8])
Passage ques attention dim:  torch.Size([5, 643, 8])
Passage question vectors dim:  torch.Size([5, 643, 200])
Question Passage Similarity dim:  torch.Size([5, 643])
Question passage attention dim:  torch.Size([5, 643])
Final Merged Passage dim:  torch.Size([5, 643, 800])
Modeled Passage dim:  torch.Size([5, 643, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 643, 1000])
Span start logits:  torch.Size([5, 643])
span start probs dim:  torch.Size([5, 643])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 643]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 609, 200])
Passage Length:  609
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 609, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 609, 7])
Passage ques attention dim:  torch.Size([5, 609, 7])
Passage question vectors dim:  torch.Size([5, 609, 200])
Question Passage Similarity dim:  torch.Size([5, 609])
Question passage attention dim:  torch.Size([5, 609])
Final Merged Passage dim:  torch.Size([5, 609, 800])
Modeled Passage dim:  torch.Size([5, 609, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 609, 1000])
Span start logits:  torch.Size([5, 609])
span start probs dim:  torch.Size([5, 609])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 609]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 355, 200])
Passage Length:  355
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 355, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 355, 9])
Passage ques attention dim:  torch.Size([5, 355, 9])
Passage question vectors dim:  torch.Size([5, 355, 200])
Question Passage Similarity dim:  torch.Size([5, 355])
Question passage attention dim:  torch.Size([5, 355])
Final Merged Passage dim:  torch.Size([5, 355, 800])
Modeled Passage dim:  torch.Size([5, 355, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 355, 1000])
Span start logits:  torch.Size([5, 355])
span start probs dim:  torch.Size([5, 355])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 355]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 507, 200])
Passage Length:  507
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 507, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 507, 19])
Passage ques attention dim:  torch.Size([5, 507, 19])
Passage question vectors dim:  torch.Size([5, 507, 200])
Question Passage Similarity dim:  torch.Size([5, 507])
Question passage attention dim:  torch.Size([5, 507])
Final Merged Passage dim:  torch.Size([5, 507, 800])
Modeled Passage dim:  torch.Size([5, 507, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 507, 1000])
Span start logits:  torch.Size([5, 507])
span start probs dim:  torch.Size([5, 507])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 507]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 539, 200])
Passage Length:  539
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 539, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 539, 13])
Passage ques attention dim:  torch.Size([5, 539, 13])
Passage question vectors dim:  torch.Size([5, 539, 200])
Question Passage Similarity dim:  torch.Size([5, 539])
Question passage attention dim:  torch.Size([5, 539])
Final Merged Passage dim:  torch.Size([5, 539, 800])
Modeled Passage dim:  torch.Size([5, 539, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 539, 1000])
Span start logits:  torch.Size([5, 539])
span start probs dim:  torch.Size([5, 539])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 539]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 439, 200])
Passage Length:  439
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 439, 12])
Passage ques attention dim:  torch.Size([5, 439, 12])
Passage question vectors dim:  torch.Size([5, 439, 200])
Question Passage Similarity dim:  torch.Size([5, 439])
Question passage attention dim:  torch.Size([5, 439])
Final Merged Passage dim:  torch.Size([5, 439, 800])
Modeled Passage dim:  torch.Size([5, 439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 439, 1000])
Span start logits:  torch.Size([5, 439])
span start probs dim:  torch.Size([5, 439])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 439]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1299, 200])
Passage Length:  1299
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1299, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1299, 13])
Passage ques attention dim:  torch.Size([5, 1299, 13])
Passage question vectors dim:  torch.Size([5, 1299, 200])
Question Passage Similarity dim:  torch.Size([5, 1299])
Question passage attention dim:  torch.Size([5, 1299])
Final Merged Passage dim:  torch.Size([5, 1299, 800])
Modeled Passage dim:  torch.Size([5, 1299, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1299, 1000])
Span start logits:  torch.Size([5, 1299])
span start probs dim:  torch.Size([5, 1299])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1299]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 545, 200])
Passage Length:  545
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 545, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 545, 14])
Passage ques attention dim:  torch.Size([5, 545, 14])
Passage question vectors dim:  torch.Size([5, 545, 200])
Question Passage Similarity dim:  torch.Size([5, 545])
Question passage attention dim:  torch.Size([5, 545])
Final Merged Passage dim:  torch.Size([5, 545, 800])
Modeled Passage dim:  torch.Size([5, 545, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 545, 1000])
Span start logits:  torch.Size([5, 545])
span start probs dim:  torch.Size([5, 545])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 545]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1075, 200])
Passage Length:  1075
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1075, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1075, 7])
Passage ques attention dim:  torch.Size([5, 1075, 7])
Passage question vectors dim:  torch.Size([5, 1075, 200])
Question Passage Similarity dim:  torch.Size([5, 1075])
Question passage attention dim:  torch.Size([5, 1075])
Final Merged Passage dim:  torch.Size([5, 1075, 800])
Modeled Passage dim:  torch.Size([5, 1075, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1075, 1000])
Span start logits:  torch.Size([5, 1075])
span start probs dim:  torch.Size([5, 1075])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1075]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 834, 200])
Passage Length:  834
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 834, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 834, 12])
Passage ques attention dim:  torch.Size([5, 834, 12])
Passage question vectors dim:  torch.Size([5, 834, 200])
Question Passage Similarity dim:  torch.Size([5, 834])
Question passage attention dim:  torch.Size([5, 834])
Final Merged Passage dim:  torch.Size([5, 834, 800])
Modeled Passage dim:  torch.Size([5, 834, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 834, 1000])
Span start logits:  torch.Size([5, 834])
span start probs dim:  torch.Size([5, 834])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 834]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 22, 200])
Embedded passage dim:  torch.Size([5, 848, 200])
Passage Length:  848
Encoded question dim:  torch.Size([5, 22, 200])
Encoded passage dim:  torch.Size([5, 848, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 848, 22])
Passage ques attention dim:  torch.Size([5, 848, 22])
Passage question vectors dim:  torch.Size([5, 848, 200])
Question Passage Similarity dim:  torch.Size([5, 848])
Question passage attention dim:  torch.Size([5, 848])
Final Merged Passage dim:  torch.Size([5, 848, 800])
Modeled Passage dim:  torch.Size([5, 848, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 848, 1000])
Span start logits:  torch.Size([5, 848])
span start probs dim:  torch.Size([5, 848])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 848]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 861, 200])
Passage Length:  861
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 861, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 861, 9])
Passage ques attention dim:  torch.Size([5, 861, 9])
Passage question vectors dim:  torch.Size([5, 861, 200])
Question Passage Similarity dim:  torch.Size([5, 861])
Question passage attention dim:  torch.Size([5, 861])
Final Merged Passage dim:  torch.Size([5, 861, 800])
Modeled Passage dim:  torch.Size([5, 861, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 861, 1000])
Span start logits:  torch.Size([5, 861])
span start probs dim:  torch.Size([5, 861])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 861]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 719, 200])
Passage Length:  719
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 719, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 719, 10])
Passage ques attention dim:  torch.Size([5, 719, 10])
Passage question vectors dim:  torch.Size([5, 719, 200])
Question Passage Similarity dim:  torch.Size([5, 719])
Question passage attention dim:  torch.Size([5, 719])
Final Merged Passage dim:  torch.Size([5, 719, 800])
Modeled Passage dim:  torch.Size([5, 719, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 719, 1000])
Span start logits:  torch.Size([5, 719])
span start probs dim:  torch.Size([5, 719])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 719]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 248, 200])
Passage Length:  248
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 248, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 248, 7])
Passage ques attention dim:  torch.Size([5, 248, 7])
Passage question vectors dim:  torch.Size([5, 248, 200])
Question Passage Similarity dim:  torch.Size([5, 248])
Question passage attention dim:  torch.Size([5, 248])
Final Merged Passage dim:  torch.Size([5, 248, 800])
Modeled Passage dim:  torch.Size([5, 248, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 248, 1000])
Span start logits:  torch.Size([5, 248])
span start probs dim:  torch.Size([5, 248])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 248]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 9])
Passage ques attention dim:  torch.Size([5, 560, 9])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1244, 200])
Passage Length:  1244
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1244, 11])
Passage ques attention dim:  torch.Size([5, 1244, 11])
Passage question vectors dim:  torch.Size([5, 1244, 200])
Question Passage Similarity dim:  torch.Size([5, 1244])
Question passage attention dim:  torch.Size([5, 1244])
Final Merged Passage dim:  torch.Size([5, 1244, 800])
Modeled Passage dim:  torch.Size([5, 1244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1244, 1000])
Span start logits:  torch.Size([5, 1244])
span start probs dim:  torch.Size([5, 1244])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1244]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 486, 200])
Passage Length:  486
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 486, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 486, 12])
Passage ques attention dim:  torch.Size([5, 486, 12])
Passage question vectors dim:  torch.Size([5, 486, 200])
Question Passage Similarity dim:  torch.Size([5, 486])
Question passage attention dim:  torch.Size([5, 486])
Final Merged Passage dim:  torch.Size([5, 486, 800])
Modeled Passage dim:  torch.Size([5, 486, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 486, 1000])
Span start logits:  torch.Size([5, 486])
span start probs dim:  torch.Size([5, 486])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 486]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1161, 200])
Passage Length:  1161
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1161, 12])
Passage ques attention dim:  torch.Size([5, 1161, 12])
Passage question vectors dim:  torch.Size([5, 1161, 200])
Question Passage Similarity dim:  torch.Size([5, 1161])
Question passage attention dim:  torch.Size([5, 1161])
Final Merged Passage dim:  torch.Size([5, 1161, 800])
Modeled Passage dim:  torch.Size([5, 1161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1161, 1000])
Span start logits:  torch.Size([5, 1161])
span start probs dim:  torch.Size([5, 1161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 835, 200])
Passage Length:  835
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 835, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 835, 10])
Passage ques attention dim:  torch.Size([5, 835, 10])
Passage question vectors dim:  torch.Size([5, 835, 200])
Question Passage Similarity dim:  torch.Size([5, 835])
Question passage attention dim:  torch.Size([5, 835])
Final Merged Passage dim:  torch.Size([5, 835, 800])
Modeled Passage dim:  torch.Size([5, 835, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 835, 1000])
Span start logits:  torch.Size([5, 835])
span start probs dim:  torch.Size([5, 835])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 835]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 502, 200])
Passage Length:  502
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 502, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 502, 13])
Passage ques attention dim:  torch.Size([5, 502, 13])
Passage question vectors dim:  torch.Size([5, 502, 200])
Question Passage Similarity dim:  torch.Size([5, 502])
Question passage attention dim:  torch.Size([5, 502])
Final Merged Passage dim:  torch.Size([5, 502, 800])
Modeled Passage dim:  torch.Size([5, 502, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 502, 1000])
Span start logits:  torch.Size([5, 502])
span start probs dim:  torch.Size([5, 502])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 502]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 737, 200])
Passage Length:  737
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 737, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 737, 14])
Passage ques attention dim:  torch.Size([5, 737, 14])
Passage question vectors dim:  torch.Size([5, 737, 200])
Question Passage Similarity dim:  torch.Size([5, 737])
Question passage attention dim:  torch.Size([5, 737])
Final Merged Passage dim:  torch.Size([5, 737, 800])
Modeled Passage dim:  torch.Size([5, 737, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 737, 1000])
Span start logits:  torch.Size([5, 737])
span start probs dim:  torch.Size([5, 737])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 737]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 291, 200])
Passage Length:  291
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 291, 10])
Passage ques attention dim:  torch.Size([5, 291, 10])
Passage question vectors dim:  torch.Size([5, 291, 200])
Question Passage Similarity dim:  torch.Size([5, 291])
Question passage attention dim:  torch.Size([5, 291])
Final Merged Passage dim:  torch.Size([5, 291, 800])
Modeled Passage dim:  torch.Size([5, 291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 291, 1000])
Span start logits:  torch.Size([5, 291])
span start probs dim:  torch.Size([5, 291])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 291]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 842, 200])
Passage Length:  842
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 842, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 842, 9])
Passage ques attention dim:  torch.Size([5, 842, 9])
Passage question vectors dim:  torch.Size([5, 842, 200])
Question Passage Similarity dim:  torch.Size([5, 842])
Question passage attention dim:  torch.Size([5, 842])
Final Merged Passage dim:  torch.Size([5, 842, 800])
Modeled Passage dim:  torch.Size([5, 842, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 842, 1000])
Span start logits:  torch.Size([5, 842])
span start probs dim:  torch.Size([5, 842])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 842]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 365, 8])
Passage ques attention dim:  torch.Size([5, 365, 8])
Passage question vectors dim:  torch.Size([5, 365, 200])
Question Passage Similarity dim:  torch.Size([5, 365])
Question passage attention dim:  torch.Size([5, 365])
Final Merged Passage dim:  torch.Size([5, 365, 800])
Modeled Passage dim:  torch.Size([5, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 365, 1000])
Span start logits:  torch.Size([5, 365])
span start probs dim:  torch.Size([5, 365])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 365]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 336, 200])
Passage Length:  336
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 336, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 336, 9])
Passage ques attention dim:  torch.Size([5, 336, 9])
Passage question vectors dim:  torch.Size([5, 336, 200])
Question Passage Similarity dim:  torch.Size([5, 336])
Question passage attention dim:  torch.Size([5, 336])
Final Merged Passage dim:  torch.Size([5, 336, 800])
Modeled Passage dim:  torch.Size([5, 336, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 336, 1000])
Span start logits:  torch.Size([5, 336])
span start probs dim:  torch.Size([5, 336])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 336]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 998, 200])
Passage Length:  998
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 998, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 998, 14])
Passage ques attention dim:  torch.Size([5, 998, 14])
Passage question vectors dim:  torch.Size([5, 998, 200])
Question Passage Similarity dim:  torch.Size([5, 998])
Question passage attention dim:  torch.Size([5, 998])
Final Merged Passage dim:  torch.Size([5, 998, 800])
Modeled Passage dim:  torch.Size([5, 998, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 998, 1000])
Span start logits:  torch.Size([5, 998])
span start probs dim:  torch.Size([5, 998])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 998]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 925, 200])
Passage Length:  925
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 925, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 925, 10])
Passage ques attention dim:  torch.Size([5, 925, 10])
Passage question vectors dim:  torch.Size([5, 925, 200])
Question Passage Similarity dim:  torch.Size([5, 925])
Question passage attention dim:  torch.Size([5, 925])
Final Merged Passage dim:  torch.Size([5, 925, 800])
Modeled Passage dim:  torch.Size([5, 925, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 925, 1000])
Span start logits:  torch.Size([5, 925])
span start probs dim:  torch.Size([5, 925])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 925]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 980, 200])
Passage Length:  980
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 980, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 980, 9])
Passage ques attention dim:  torch.Size([5, 980, 9])
Passage question vectors dim:  torch.Size([5, 980, 200])
Question Passage Similarity dim:  torch.Size([5, 980])
Question passage attention dim:  torch.Size([5, 980])
Final Merged Passage dim:  torch.Size([5, 980, 800])
Modeled Passage dim:  torch.Size([5, 980, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 980, 1000])
Span start logits:  torch.Size([5, 980])
span start probs dim:  torch.Size([5, 980])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 980]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1395, 200])
Passage Length:  1395
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1395, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1395, 9])
Passage ques attention dim:  torch.Size([5, 1395, 9])
Passage question vectors dim:  torch.Size([5, 1395, 200])
Question Passage Similarity dim:  torch.Size([5, 1395])
Question passage attention dim:  torch.Size([5, 1395])
Final Merged Passage dim:  torch.Size([5, 1395, 800])
Modeled Passage dim:  torch.Size([5, 1395, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1395, 1000])
Span start logits:  torch.Size([5, 1395])
span start probs dim:  torch.Size([5, 1395])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1395]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 1346, 200])
Passage Length:  1346
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 1346, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1346, 15])
Passage ques attention dim:  torch.Size([5, 1346, 15])
Passage question vectors dim:  torch.Size([5, 1346, 200])
Question Passage Similarity dim:  torch.Size([5, 1346])
Question passage attention dim:  torch.Size([5, 1346])
Final Merged Passage dim:  torch.Size([5, 1346, 800])
Modeled Passage dim:  torch.Size([5, 1346, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1346, 1000])
Span start logits:  torch.Size([5, 1346])
span start probs dim:  torch.Size([5, 1346])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1346]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1237, 200])
Passage Length:  1237
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1237, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1237, 9])
Passage ques attention dim:  torch.Size([5, 1237, 9])
Passage question vectors dim:  torch.Size([5, 1237, 200])
Question Passage Similarity dim:  torch.Size([5, 1237])
Question passage attention dim:  torch.Size([5, 1237])
Final Merged Passage dim:  torch.Size([5, 1237, 800])
Modeled Passage dim:  torch.Size([5, 1237, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1237, 1000])
Span start logits:  torch.Size([5, 1237])
span start probs dim:  torch.Size([5, 1237])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1237]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1138, 200])
Passage Length:  1138
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1138, 10])
Passage ques attention dim:  torch.Size([5, 1138, 10])
Passage question vectors dim:  torch.Size([5, 1138, 200])
Question Passage Similarity dim:  torch.Size([5, 1138])
Question passage attention dim:  torch.Size([5, 1138])
Final Merged Passage dim:  torch.Size([5, 1138, 800])
Modeled Passage dim:  torch.Size([5, 1138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1138, 1000])
Span start logits:  torch.Size([5, 1138])
span start probs dim:  torch.Size([5, 1138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 543, 200])
Passage Length:  543
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 543, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 543, 10])
Passage ques attention dim:  torch.Size([5, 543, 10])
Passage question vectors dim:  torch.Size([5, 543, 200])
Question Passage Similarity dim:  torch.Size([5, 543])
Question passage attention dim:  torch.Size([5, 543])
Final Merged Passage dim:  torch.Size([5, 543, 800])
Modeled Passage dim:  torch.Size([5, 543, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 543, 1000])
Span start logits:  torch.Size([5, 543])
span start probs dim:  torch.Size([5, 543])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 543]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 550, 200])
Passage Length:  550
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 550, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 550, 9])
Passage ques attention dim:  torch.Size([5, 550, 9])
Passage question vectors dim:  torch.Size([5, 550, 200])
Question Passage Similarity dim:  torch.Size([5, 550])
Question passage attention dim:  torch.Size([5, 550])
Final Merged Passage dim:  torch.Size([5, 550, 800])
Modeled Passage dim:  torch.Size([5, 550, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 550, 1000])
Span start logits:  torch.Size([5, 550])
span start probs dim:  torch.Size([5, 550])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 550]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 478, 200])
Passage Length:  478
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 478, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 478, 11])
Passage ques attention dim:  torch.Size([5, 478, 11])
Passage question vectors dim:  torch.Size([5, 478, 200])
Question Passage Similarity dim:  torch.Size([5, 478])
Question passage attention dim:  torch.Size([5, 478])
Final Merged Passage dim:  torch.Size([5, 478, 800])
Modeled Passage dim:  torch.Size([5, 478, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 478, 1000])
Span start logits:  torch.Size([5, 478])
span start probs dim:  torch.Size([5, 478])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 478]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1068, 200])
Passage Length:  1068
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1068, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1068, 13])
Passage ques attention dim:  torch.Size([5, 1068, 13])
Passage question vectors dim:  torch.Size([5, 1068, 200])
Question Passage Similarity dim:  torch.Size([5, 1068])
Question passage attention dim:  torch.Size([5, 1068])
Final Merged Passage dim:  torch.Size([5, 1068, 800])
Modeled Passage dim:  torch.Size([5, 1068, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1068, 1000])
Span start logits:  torch.Size([5, 1068])
span start probs dim:  torch.Size([5, 1068])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1068]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 414, 200])
Passage Length:  414
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 414, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 414, 17])
Passage ques attention dim:  torch.Size([5, 414, 17])
Passage question vectors dim:  torch.Size([5, 414, 200])
Question Passage Similarity dim:  torch.Size([5, 414])
Question passage attention dim:  torch.Size([5, 414])
Final Merged Passage dim:  torch.Size([5, 414, 800])
Modeled Passage dim:  torch.Size([5, 414, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 414, 1000])
Span start logits:  torch.Size([5, 414])
span start probs dim:  torch.Size([5, 414])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 414]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 11])
Passage ques attention dim:  torch.Size([5, 441, 11])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 731, 200])
Passage Length:  731
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 731, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 731, 11])
Passage ques attention dim:  torch.Size([5, 731, 11])
Passage question vectors dim:  torch.Size([5, 731, 200])
Question Passage Similarity dim:  torch.Size([5, 731])
Question passage attention dim:  torch.Size([5, 731])
Final Merged Passage dim:  torch.Size([5, 731, 800])
Modeled Passage dim:  torch.Size([5, 731, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 731, 1000])
Span start logits:  torch.Size([5, 731])
span start probs dim:  torch.Size([5, 731])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 731]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 714, 11])
Passage ques attention dim:  torch.Size([5, 714, 11])
Passage question vectors dim:  torch.Size([5, 714, 200])
Question Passage Similarity dim:  torch.Size([5, 714])
Question passage attention dim:  torch.Size([5, 714])
Final Merged Passage dim:  torch.Size([5, 714, 800])
Modeled Passage dim:  torch.Size([5, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 714, 1000])
Span start logits:  torch.Size([5, 714])
span start probs dim:  torch.Size([5, 714])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 714]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 371, 200])
Passage Length:  371
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 371, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 371, 7])
Passage ques attention dim:  torch.Size([5, 371, 7])
Passage question vectors dim:  torch.Size([5, 371, 200])
Question Passage Similarity dim:  torch.Size([5, 371])
Question passage attention dim:  torch.Size([5, 371])
Final Merged Passage dim:  torch.Size([5, 371, 800])
Modeled Passage dim:  torch.Size([5, 371, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 371, 1000])
Span start logits:  torch.Size([5, 371])
span start probs dim:  torch.Size([5, 371])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 371]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 602, 200])
Passage Length:  602
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 602, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 602, 7])
Passage ques attention dim:  torch.Size([5, 602, 7])
Passage question vectors dim:  torch.Size([5, 602, 200])
Question Passage Similarity dim:  torch.Size([5, 602])
Question passage attention dim:  torch.Size([5, 602])
Final Merged Passage dim:  torch.Size([5, 602, 800])
Modeled Passage dim:  torch.Size([5, 602, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 602, 1000])
Span start logits:  torch.Size([5, 602])
span start probs dim:  torch.Size([5, 602])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 602]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1193, 200])
Passage Length:  1193
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1193, 9])
Passage ques attention dim:  torch.Size([5, 1193, 9])
Passage question vectors dim:  torch.Size([5, 1193, 200])
Question Passage Similarity dim:  torch.Size([5, 1193])
Question passage attention dim:  torch.Size([5, 1193])
Final Merged Passage dim:  torch.Size([5, 1193, 800])
Modeled Passage dim:  torch.Size([5, 1193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1193, 1000])
Span start logits:  torch.Size([5, 1193])
span start probs dim:  torch.Size([5, 1193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 10])
Passage ques attention dim:  torch.Size([5, 1094, 10])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1508, 200])
Passage Length:  1508
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1508, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1508, 7])
Passage ques attention dim:  torch.Size([5, 1508, 7])
Passage question vectors dim:  torch.Size([5, 1508, 200])
Question Passage Similarity dim:  torch.Size([5, 1508])
Question passage attention dim:  torch.Size([5, 1508])
Final Merged Passage dim:  torch.Size([5, 1508, 800])
Modeled Passage dim:  torch.Size([5, 1508, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1508, 1000])
Span start logits:  torch.Size([5, 1508])
span start probs dim:  torch.Size([5, 1508])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1508]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1372, 200])
Passage Length:  1372
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1372, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1372, 8])
Passage ques attention dim:  torch.Size([5, 1372, 8])
Passage question vectors dim:  torch.Size([5, 1372, 200])
Question Passage Similarity dim:  torch.Size([5, 1372])
Question passage attention dim:  torch.Size([5, 1372])
Final Merged Passage dim:  torch.Size([5, 1372, 800])
Modeled Passage dim:  torch.Size([5, 1372, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1372, 1000])
Span start logits:  torch.Size([5, 1372])
span start probs dim:  torch.Size([5, 1372])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1372]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 971, 200])
Passage Length:  971
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 971, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 971, 10])
Passage ques attention dim:  torch.Size([5, 971, 10])
Passage question vectors dim:  torch.Size([5, 971, 200])
Question Passage Similarity dim:  torch.Size([5, 971])
Question passage attention dim:  torch.Size([5, 971])
Final Merged Passage dim:  torch.Size([5, 971, 800])
Modeled Passage dim:  torch.Size([5, 971, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 971, 1000])
Span start logits:  torch.Size([5, 971])
span start probs dim:  torch.Size([5, 971])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 971]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1262, 200])
Passage Length:  1262
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1262, 12])
Passage ques attention dim:  torch.Size([5, 1262, 12])
Passage question vectors dim:  torch.Size([5, 1262, 200])
Question Passage Similarity dim:  torch.Size([5, 1262])
Question passage attention dim:  torch.Size([5, 1262])
Final Merged Passage dim:  torch.Size([5, 1262, 800])
Modeled Passage dim:  torch.Size([5, 1262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1262, 1000])
Span start logits:  torch.Size([5, 1262])
span start probs dim:  torch.Size([5, 1262])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1262]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 330, 200])
Passage Length:  330
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 330, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 330, 9])
Passage ques attention dim:  torch.Size([5, 330, 9])
Passage question vectors dim:  torch.Size([5, 330, 200])
Question Passage Similarity dim:  torch.Size([5, 330])
Question passage attention dim:  torch.Size([5, 330])
Final Merged Passage dim:  torch.Size([5, 330, 800])
Modeled Passage dim:  torch.Size([5, 330, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 330, 1000])
Span start logits:  torch.Size([5, 330])
span start probs dim:  torch.Size([5, 330])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 330]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 13])
Passage ques attention dim:  torch.Size([5, 441, 13])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 427, 200])
Passage Length:  427
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 427, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 427, 12])
Passage ques attention dim:  torch.Size([5, 427, 12])
Passage question vectors dim:  torch.Size([5, 427, 200])
Question Passage Similarity dim:  torch.Size([5, 427])
Question passage attention dim:  torch.Size([5, 427])
Final Merged Passage dim:  torch.Size([5, 427, 800])
Modeled Passage dim:  torch.Size([5, 427, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 427, 1000])
Span start logits:  torch.Size([5, 427])
span start probs dim:  torch.Size([5, 427])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 427]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 321, 200])
Passage Length:  321
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 321, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 321, 9])
Passage ques attention dim:  torch.Size([5, 321, 9])
Passage question vectors dim:  torch.Size([5, 321, 200])
Question Passage Similarity dim:  torch.Size([5, 321])
Question passage attention dim:  torch.Size([5, 321])
Final Merged Passage dim:  torch.Size([5, 321, 800])
Modeled Passage dim:  torch.Size([5, 321, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 321, 1000])
Span start logits:  torch.Size([5, 321])
span start probs dim:  torch.Size([5, 321])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 321]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1560, 200])
Passage Length:  1560
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1560, 12])
Passage ques attention dim:  torch.Size([5, 1560, 12])
Passage question vectors dim:  torch.Size([5, 1560, 200])
Question Passage Similarity dim:  torch.Size([5, 1560])
Question passage attention dim:  torch.Size([5, 1560])
Final Merged Passage dim:  torch.Size([5, 1560, 800])
Modeled Passage dim:  torch.Size([5, 1560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1560, 1000])
Span start logits:  torch.Size([5, 1560])
span start probs dim:  torch.Size([5, 1560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 765, 200])
Passage Length:  765
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 765, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 765, 9])
Passage ques attention dim:  torch.Size([5, 765, 9])
Passage question vectors dim:  torch.Size([5, 765, 200])
Question Passage Similarity dim:  torch.Size([5, 765])
Question passage attention dim:  torch.Size([5, 765])
Final Merged Passage dim:  torch.Size([5, 765, 800])
Modeled Passage dim:  torch.Size([5, 765, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 765, 1000])
Span start logits:  torch.Size([5, 765])
span start probs dim:  torch.Size([5, 765])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 765]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 8])
Passage ques attention dim:  torch.Size([5, 1094, 8])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 446, 200])
Passage Length:  446
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 446, 14])
Passage ques attention dim:  torch.Size([5, 446, 14])
Passage question vectors dim:  torch.Size([5, 446, 200])
Question Passage Similarity dim:  torch.Size([5, 446])
Question passage attention dim:  torch.Size([5, 446])
Final Merged Passage dim:  torch.Size([5, 446, 800])
Modeled Passage dim:  torch.Size([5, 446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 446, 1000])
Span start logits:  torch.Size([5, 446])
span start probs dim:  torch.Size([5, 446])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 446]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 309, 200])
Passage Length:  309
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 309, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 309, 10])
Passage ques attention dim:  torch.Size([5, 309, 10])
Passage question vectors dim:  torch.Size([5, 309, 200])
Question Passage Similarity dim:  torch.Size([5, 309])
Question passage attention dim:  torch.Size([5, 309])
Final Merged Passage dim:  torch.Size([5, 309, 800])
Modeled Passage dim:  torch.Size([5, 309, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 309, 1000])
Span start logits:  torch.Size([5, 309])
span start probs dim:  torch.Size([5, 309])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 309]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 12])
Passage ques attention dim:  torch.Size([5, 1094, 12])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 336, 200])
Passage Length:  336
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 336, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 336, 11])
Passage ques attention dim:  torch.Size([5, 336, 11])
Passage question vectors dim:  torch.Size([5, 336, 200])
Question Passage Similarity dim:  torch.Size([5, 336])
Question passage attention dim:  torch.Size([5, 336])
Final Merged Passage dim:  torch.Size([5, 336, 800])
Modeled Passage dim:  torch.Size([5, 336, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 336, 1000])
Span start logits:  torch.Size([5, 336])
span start probs dim:  torch.Size([5, 336])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 336]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1334, 200])
Passage Length:  1334
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1334, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1334, 11])
Passage ques attention dim:  torch.Size([5, 1334, 11])
Passage question vectors dim:  torch.Size([5, 1334, 200])
Question Passage Similarity dim:  torch.Size([5, 1334])
Question passage attention dim:  torch.Size([5, 1334])
Final Merged Passage dim:  torch.Size([5, 1334, 800])
Modeled Passage dim:  torch.Size([5, 1334, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1334, 1000])
Span start logits:  torch.Size([5, 1334])
span start probs dim:  torch.Size([5, 1334])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1334]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 387, 200])
Passage Length:  387
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 387, 15])
Passage ques attention dim:  torch.Size([5, 387, 15])
Passage question vectors dim:  torch.Size([5, 387, 200])
Question Passage Similarity dim:  torch.Size([5, 387])
Question passage attention dim:  torch.Size([5, 387])
Final Merged Passage dim:  torch.Size([5, 387, 800])
Modeled Passage dim:  torch.Size([5, 387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 387, 1000])
Span start logits:  torch.Size([5, 387])
span start probs dim:  torch.Size([5, 387])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 387]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 753, 200])
Passage Length:  753
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 753, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 753, 19])
Passage ques attention dim:  torch.Size([5, 753, 19])
Passage question vectors dim:  torch.Size([5, 753, 200])
Question Passage Similarity dim:  torch.Size([5, 753])
Question passage attention dim:  torch.Size([5, 753])
Final Merged Passage dim:  torch.Size([5, 753, 800])
Modeled Passage dim:  torch.Size([5, 753, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 753, 1000])
Span start logits:  torch.Size([5, 753])
span start probs dim:  torch.Size([5, 753])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 753]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 10])
Passage ques attention dim:  torch.Size([5, 619, 10])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 308, 200])
Passage Length:  308
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 308, 15])
Passage ques attention dim:  torch.Size([5, 308, 15])
Passage question vectors dim:  torch.Size([5, 308, 200])
Question Passage Similarity dim:  torch.Size([5, 308])
Question passage attention dim:  torch.Size([5, 308])
Final Merged Passage dim:  torch.Size([5, 308, 800])
Modeled Passage dim:  torch.Size([5, 308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 308, 1000])
Span start logits:  torch.Size([5, 308])
span start probs dim:  torch.Size([5, 308])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 308]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1413, 200])
Passage Length:  1413
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1413, 10])
Passage ques attention dim:  torch.Size([5, 1413, 10])
Passage question vectors dim:  torch.Size([5, 1413, 200])
Question Passage Similarity dim:  torch.Size([5, 1413])
Question passage attention dim:  torch.Size([5, 1413])
Final Merged Passage dim:  torch.Size([5, 1413, 800])
Modeled Passage dim:  torch.Size([5, 1413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1413, 1000])
Span start logits:  torch.Size([5, 1413])
span start probs dim:  torch.Size([5, 1413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 663, 200])
Passage Length:  663
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 663, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 663, 10])
Passage ques attention dim:  torch.Size([5, 663, 10])
Passage question vectors dim:  torch.Size([5, 663, 200])
Question Passage Similarity dim:  torch.Size([5, 663])
Question passage attention dim:  torch.Size([5, 663])
Final Merged Passage dim:  torch.Size([5, 663, 800])
Modeled Passage dim:  torch.Size([5, 663, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 663, 1000])
Span start logits:  torch.Size([5, 663])
span start probs dim:  torch.Size([5, 663])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 663]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 807, 200])
Passage Length:  807
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 807, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 807, 16])
Passage ques attention dim:  torch.Size([5, 807, 16])
Passage question vectors dim:  torch.Size([5, 807, 200])
Question Passage Similarity dim:  torch.Size([5, 807])
Question passage attention dim:  torch.Size([5, 807])
Final Merged Passage dim:  torch.Size([5, 807, 800])
Modeled Passage dim:  torch.Size([5, 807, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 807, 1000])
Span start logits:  torch.Size([5, 807])
span start probs dim:  torch.Size([5, 807])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 807]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 704, 200])
Passage Length:  704
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 704, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 704, 8])
Passage ques attention dim:  torch.Size([5, 704, 8])
Passage question vectors dim:  torch.Size([5, 704, 200])
Question Passage Similarity dim:  torch.Size([5, 704])
Question passage attention dim:  torch.Size([5, 704])
Final Merged Passage dim:  torch.Size([5, 704, 800])
Modeled Passage dim:  torch.Size([5, 704, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 704, 1000])
Span start logits:  torch.Size([5, 704])
span start probs dim:  torch.Size([5, 704])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 704]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 47, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 47, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 47])
Passage ques attention dim:  torch.Size([5, 234, 47])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1077, 200])
Passage Length:  1077
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1077, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1077, 9])
Passage ques attention dim:  torch.Size([5, 1077, 9])
Passage question vectors dim:  torch.Size([5, 1077, 200])
Question Passage Similarity dim:  torch.Size([5, 1077])
Question passage attention dim:  torch.Size([5, 1077])
Final Merged Passage dim:  torch.Size([5, 1077, 800])
Modeled Passage dim:  torch.Size([5, 1077, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1077, 1000])
Span start logits:  torch.Size([5, 1077])
span start probs dim:  torch.Size([5, 1077])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1077]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1108, 200])
Passage Length:  1108
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1108, 11])
Passage ques attention dim:  torch.Size([5, 1108, 11])
Passage question vectors dim:  torch.Size([5, 1108, 200])
Question Passage Similarity dim:  torch.Size([5, 1108])
Question passage attention dim:  torch.Size([5, 1108])
Final Merged Passage dim:  torch.Size([5, 1108, 800])
Modeled Passage dim:  torch.Size([5, 1108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1108, 1000])
Span start logits:  torch.Size([5, 1108])
span start probs dim:  torch.Size([5, 1108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 807, 200])
Passage Length:  807
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 807, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 807, 10])
Passage ques attention dim:  torch.Size([5, 807, 10])
Passage question vectors dim:  torch.Size([5, 807, 200])
Question Passage Similarity dim:  torch.Size([5, 807])
Question passage attention dim:  torch.Size([5, 807])
Final Merged Passage dim:  torch.Size([5, 807, 800])
Modeled Passage dim:  torch.Size([5, 807, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 807, 1000])
Span start logits:  torch.Size([5, 807])
span start probs dim:  torch.Size([5, 807])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 807]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 933, 200])
Passage Length:  933
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 933, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 933, 8])
Passage ques attention dim:  torch.Size([5, 933, 8])
Passage question vectors dim:  torch.Size([5, 933, 200])
Question Passage Similarity dim:  torch.Size([5, 933])
Question passage attention dim:  torch.Size([5, 933])
Final Merged Passage dim:  torch.Size([5, 933, 800])
Modeled Passage dim:  torch.Size([5, 933, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 933, 1000])
Span start logits:  torch.Size([5, 933])
span start probs dim:  torch.Size([5, 933])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 933]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 689, 200])
Passage Length:  689
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 689, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 689, 13])
Passage ques attention dim:  torch.Size([5, 689, 13])
Passage question vectors dim:  torch.Size([5, 689, 200])
Question Passage Similarity dim:  torch.Size([5, 689])
Question passage attention dim:  torch.Size([5, 689])
Final Merged Passage dim:  torch.Size([5, 689, 800])
Modeled Passage dim:  torch.Size([5, 689, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 689, 1000])
Span start logits:  torch.Size([5, 689])
span start probs dim:  torch.Size([5, 689])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 689]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 501, 200])
Passage Length:  501
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 501, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 501, 11])
Passage ques attention dim:  torch.Size([5, 501, 11])
Passage question vectors dim:  torch.Size([5, 501, 200])
Question Passage Similarity dim:  torch.Size([5, 501])
Question passage attention dim:  torch.Size([5, 501])
Final Merged Passage dim:  torch.Size([5, 501, 800])
Modeled Passage dim:  torch.Size([5, 501, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 501, 1000])
Span start logits:  torch.Size([5, 501])
span start probs dim:  torch.Size([5, 501])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 501]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 270, 200])
Passage Length:  270
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 270, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 270, 8])
Passage ques attention dim:  torch.Size([5, 270, 8])
Passage question vectors dim:  torch.Size([5, 270, 200])
Question Passage Similarity dim:  torch.Size([5, 270])
Question passage attention dim:  torch.Size([5, 270])
Final Merged Passage dim:  torch.Size([5, 270, 800])
Modeled Passage dim:  torch.Size([5, 270, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 270, 1000])
Span start logits:  torch.Size([5, 270])
span start probs dim:  torch.Size([5, 270])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 270]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 916, 200])
Passage Length:  916
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 916, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 916, 10])
Passage ques attention dim:  torch.Size([5, 916, 10])
Passage question vectors dim:  torch.Size([5, 916, 200])
Question Passage Similarity dim:  torch.Size([5, 916])
Question passage attention dim:  torch.Size([5, 916])
Final Merged Passage dim:  torch.Size([5, 916, 800])
Modeled Passage dim:  torch.Size([5, 916, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 916, 1000])
Span start logits:  torch.Size([5, 916])
span start probs dim:  torch.Size([5, 916])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 916]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 329, 200])
Passage Length:  329
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 329, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 329, 8])
Passage ques attention dim:  torch.Size([5, 329, 8])
Passage question vectors dim:  torch.Size([5, 329, 200])
Question Passage Similarity dim:  torch.Size([5, 329])
Question passage attention dim:  torch.Size([5, 329])
Final Merged Passage dim:  torch.Size([5, 329, 800])
Modeled Passage dim:  torch.Size([5, 329, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 329, 1000])
Span start logits:  torch.Size([5, 329])
span start probs dim:  torch.Size([5, 329])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 329]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 576, 11])
Passage ques attention dim:  torch.Size([5, 576, 11])
Passage question vectors dim:  torch.Size([5, 576, 200])
Question Passage Similarity dim:  torch.Size([5, 576])
Question passage attention dim:  torch.Size([5, 576])
Final Merged Passage dim:  torch.Size([5, 576, 800])
Modeled Passage dim:  torch.Size([5, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 576, 1000])
Span start logits:  torch.Size([5, 576])
span start probs dim:  torch.Size([5, 576])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 576]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 284, 200])
Passage Length:  284
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 284, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 284, 11])
Passage ques attention dim:  torch.Size([5, 284, 11])
Passage question vectors dim:  torch.Size([5, 284, 200])
Question Passage Similarity dim:  torch.Size([5, 284])
Question passage attention dim:  torch.Size([5, 284])
Final Merged Passage dim:  torch.Size([5, 284, 800])
Modeled Passage dim:  torch.Size([5, 284, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 284, 1000])
Span start logits:  torch.Size([5, 284])
span start probs dim:  torch.Size([5, 284])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 284]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 779, 200])
Passage Length:  779
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 779, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 779, 10])
Passage ques attention dim:  torch.Size([5, 779, 10])
Passage question vectors dim:  torch.Size([5, 779, 200])
Question Passage Similarity dim:  torch.Size([5, 779])
Question passage attention dim:  torch.Size([5, 779])
Final Merged Passage dim:  torch.Size([5, 779, 800])
Modeled Passage dim:  torch.Size([5, 779, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 779, 1000])
Span start logits:  torch.Size([5, 779])
span start probs dim:  torch.Size([5, 779])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 779]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 323, 9])
Passage ques attention dim:  torch.Size([5, 323, 9])
Passage question vectors dim:  torch.Size([5, 323, 200])
Question Passage Similarity dim:  torch.Size([5, 323])
Question passage attention dim:  torch.Size([5, 323])
Final Merged Passage dim:  torch.Size([5, 323, 800])
Modeled Passage dim:  torch.Size([5, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 323, 1000])
Span start logits:  torch.Size([5, 323])
span start probs dim:  torch.Size([5, 323])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 323]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 311, 13])
Passage ques attention dim:  torch.Size([5, 311, 13])
Passage question vectors dim:  torch.Size([5, 311, 200])
Question Passage Similarity dim:  torch.Size([5, 311])
Question passage attention dim:  torch.Size([5, 311])
Final Merged Passage dim:  torch.Size([5, 311, 800])
Modeled Passage dim:  torch.Size([5, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 311, 1000])
Span start logits:  torch.Size([5, 311])
span start probs dim:  torch.Size([5, 311])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 311]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 606, 200])
Passage Length:  606
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 606, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 606, 11])
Passage ques attention dim:  torch.Size([5, 606, 11])
Passage question vectors dim:  torch.Size([5, 606, 200])
Question Passage Similarity dim:  torch.Size([5, 606])
Question passage attention dim:  torch.Size([5, 606])
Final Merged Passage dim:  torch.Size([5, 606, 800])
Modeled Passage dim:  torch.Size([5, 606, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 606, 1000])
Span start logits:  torch.Size([5, 606])
span start probs dim:  torch.Size([5, 606])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 606]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 296, 200])
Passage Length:  296
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 296, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 296, 10])
Passage ques attention dim:  torch.Size([5, 296, 10])
Passage question vectors dim:  torch.Size([5, 296, 200])
Question Passage Similarity dim:  torch.Size([5, 296])
Question passage attention dim:  torch.Size([5, 296])
Final Merged Passage dim:  torch.Size([5, 296, 800])
Modeled Passage dim:  torch.Size([5, 296, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 296, 1000])
Span start logits:  torch.Size([5, 296])
span start probs dim:  torch.Size([5, 296])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 296]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 497, 200])
Passage Length:  497
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 497, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 497, 11])
Passage ques attention dim:  torch.Size([5, 497, 11])
Passage question vectors dim:  torch.Size([5, 497, 200])
Question Passage Similarity dim:  torch.Size([5, 497])
Question passage attention dim:  torch.Size([5, 497])
Final Merged Passage dim:  torch.Size([5, 497, 800])
Modeled Passage dim:  torch.Size([5, 497, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 497, 1000])
Span start logits:  torch.Size([5, 497])
span start probs dim:  torch.Size([5, 497])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 497]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 461, 200])
Passage Length:  461
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 461, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 461, 13])
Passage ques attention dim:  torch.Size([5, 461, 13])
Passage question vectors dim:  torch.Size([5, 461, 200])
Question Passage Similarity dim:  torch.Size([5, 461])
Question passage attention dim:  torch.Size([5, 461])
Final Merged Passage dim:  torch.Size([5, 461, 800])
Modeled Passage dim:  torch.Size([5, 461, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 461, 1000])
Span start logits:  torch.Size([5, 461])
span start probs dim:  torch.Size([5, 461])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 461]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 497, 200])
Passage Length:  497
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 497, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 497, 14])
Passage ques attention dim:  torch.Size([5, 497, 14])
Passage question vectors dim:  torch.Size([5, 497, 200])
Question Passage Similarity dim:  torch.Size([5, 497])
Question passage attention dim:  torch.Size([5, 497])
Final Merged Passage dim:  torch.Size([5, 497, 800])
Modeled Passage dim:  torch.Size([5, 497, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 497, 1000])
Span start logits:  torch.Size([5, 497])
span start probs dim:  torch.Size([5, 497])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 497]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 330, 200])
Passage Length:  330
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 330, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 330, 11])
Passage ques attention dim:  torch.Size([5, 330, 11])
Passage question vectors dim:  torch.Size([5, 330, 200])
Question Passage Similarity dim:  torch.Size([5, 330])
Question passage attention dim:  torch.Size([5, 330])
Final Merged Passage dim:  torch.Size([5, 330, 800])
Modeled Passage dim:  torch.Size([5, 330, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 330, 1000])
Span start logits:  torch.Size([5, 330])
span start probs dim:  torch.Size([5, 330])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 330]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1274, 200])
Passage Length:  1274
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1274, 10])
Passage ques attention dim:  torch.Size([5, 1274, 10])
Passage question vectors dim:  torch.Size([5, 1274, 200])
Question Passage Similarity dim:  torch.Size([5, 1274])
Question passage attention dim:  torch.Size([5, 1274])
Final Merged Passage dim:  torch.Size([5, 1274, 800])
Modeled Passage dim:  torch.Size([5, 1274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1274, 1000])
Span start logits:  torch.Size([5, 1274])
span start probs dim:  torch.Size([5, 1274])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1274]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 643, 200])
Passage Length:  643
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 643, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 643, 8])
Passage ques attention dim:  torch.Size([5, 643, 8])
Passage question vectors dim:  torch.Size([5, 643, 200])
Question Passage Similarity dim:  torch.Size([5, 643])
Question passage attention dim:  torch.Size([5, 643])
Final Merged Passage dim:  torch.Size([5, 643, 800])
Modeled Passage dim:  torch.Size([5, 643, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 643, 1000])
Span start logits:  torch.Size([5, 643])
span start probs dim:  torch.Size([5, 643])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 643]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 783, 200])
Passage Length:  783
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 783, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 783, 15])
Passage ques attention dim:  torch.Size([5, 783, 15])
Passage question vectors dim:  torch.Size([5, 783, 200])
Question Passage Similarity dim:  torch.Size([5, 783])
Question passage attention dim:  torch.Size([5, 783])
Final Merged Passage dim:  torch.Size([5, 783, 800])
Modeled Passage dim:  torch.Size([5, 783, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 783, 1000])
Span start logits:  torch.Size([5, 783])
span start probs dim:  torch.Size([5, 783])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 783]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1245, 200])
Passage Length:  1245
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1245, 9])
Passage ques attention dim:  torch.Size([5, 1245, 9])
Passage question vectors dim:  torch.Size([5, 1245, 200])
Question Passage Similarity dim:  torch.Size([5, 1245])
Question passage attention dim:  torch.Size([5, 1245])
Final Merged Passage dim:  torch.Size([5, 1245, 800])
Modeled Passage dim:  torch.Size([5, 1245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1245, 1000])
Span start logits:  torch.Size([5, 1245])
span start probs dim:  torch.Size([5, 1245])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1245]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1066, 200])
Passage Length:  1066
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1066, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1066, 10])
Passage ques attention dim:  torch.Size([5, 1066, 10])
Passage question vectors dim:  torch.Size([5, 1066, 200])
Question Passage Similarity dim:  torch.Size([5, 1066])
Question passage attention dim:  torch.Size([5, 1066])
Final Merged Passage dim:  torch.Size([5, 1066, 800])
Modeled Passage dim:  torch.Size([5, 1066, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1066, 1000])
Span start logits:  torch.Size([5, 1066])
span start probs dim:  torch.Size([5, 1066])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1066]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 370, 200])
Passage Length:  370
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 370, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 370, 9])
Passage ques attention dim:  torch.Size([5, 370, 9])
Passage question vectors dim:  torch.Size([5, 370, 200])
Question Passage Similarity dim:  torch.Size([5, 370])
Question passage attention dim:  torch.Size([5, 370])
Final Merged Passage dim:  torch.Size([5, 370, 800])
Modeled Passage dim:  torch.Size([5, 370, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 370, 1000])
Span start logits:  torch.Size([5, 370])
span start probs dim:  torch.Size([5, 370])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 370]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 808, 200])
Passage Length:  808
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 808, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 808, 12])
Passage ques attention dim:  torch.Size([5, 808, 12])
Passage question vectors dim:  torch.Size([5, 808, 200])
Question Passage Similarity dim:  torch.Size([5, 808])
Question passage attention dim:  torch.Size([5, 808])
Final Merged Passage dim:  torch.Size([5, 808, 800])
Modeled Passage dim:  torch.Size([5, 808, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 808, 1000])
Span start logits:  torch.Size([5, 808])
span start probs dim:  torch.Size([5, 808])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 808]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1299, 200])
Passage Length:  1299
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1299, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1299, 11])
Passage ques attention dim:  torch.Size([5, 1299, 11])
Passage question vectors dim:  torch.Size([5, 1299, 200])
Question Passage Similarity dim:  torch.Size([5, 1299])
Question passage attention dim:  torch.Size([5, 1299])
Final Merged Passage dim:  torch.Size([5, 1299, 800])
Modeled Passage dim:  torch.Size([5, 1299, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1299, 1000])
Span start logits:  torch.Size([5, 1299])
span start probs dim:  torch.Size([5, 1299])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1299]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 16])
Passage ques attention dim:  torch.Size([5, 560, 16])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1342, 200])
Passage Length:  1342
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1342, 10])
Passage ques attention dim:  torch.Size([5, 1342, 10])
Passage question vectors dim:  torch.Size([5, 1342, 200])
Question Passage Similarity dim:  torch.Size([5, 1342])
Question passage attention dim:  torch.Size([5, 1342])
Final Merged Passage dim:  torch.Size([5, 1342, 800])
Modeled Passage dim:  torch.Size([5, 1342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1342, 1000])
Span start logits:  torch.Size([5, 1342])
span start probs dim:  torch.Size([5, 1342])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1342]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 339, 200])
Passage Length:  339
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 339, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 339, 10])
Passage ques attention dim:  torch.Size([5, 339, 10])
Passage question vectors dim:  torch.Size([5, 339, 200])
Question Passage Similarity dim:  torch.Size([5, 339])
Question passage attention dim:  torch.Size([5, 339])
Final Merged Passage dim:  torch.Size([5, 339, 800])
Modeled Passage dim:  torch.Size([5, 339, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 339, 1000])
Span start logits:  torch.Size([5, 339])
span start probs dim:  torch.Size([5, 339])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 339]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 929, 200])
Passage Length:  929
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 929, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 929, 15])
Passage ques attention dim:  torch.Size([5, 929, 15])
Passage question vectors dim:  torch.Size([5, 929, 200])
Question Passage Similarity dim:  torch.Size([5, 929])
Question passage attention dim:  torch.Size([5, 929])
Final Merged Passage dim:  torch.Size([5, 929, 800])
Modeled Passage dim:  torch.Size([5, 929, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 929, 1000])
Span start logits:  torch.Size([5, 929])
span start probs dim:  torch.Size([5, 929])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 929]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 735, 200])
Passage Length:  735
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 735, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 735, 13])
Passage ques attention dim:  torch.Size([5, 735, 13])
Passage question vectors dim:  torch.Size([5, 735, 200])
Question Passage Similarity dim:  torch.Size([5, 735])
Question passage attention dim:  torch.Size([5, 735])
Final Merged Passage dim:  torch.Size([5, 735, 800])
Modeled Passage dim:  torch.Size([5, 735, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 735, 1000])
Span start logits:  torch.Size([5, 735])
span start probs dim:  torch.Size([5, 735])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 735]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 456, 11])
Passage ques attention dim:  torch.Size([5, 456, 11])
Passage question vectors dim:  torch.Size([5, 456, 200])
Question Passage Similarity dim:  torch.Size([5, 456])
Question passage attention dim:  torch.Size([5, 456])
Final Merged Passage dim:  torch.Size([5, 456, 800])
Modeled Passage dim:  torch.Size([5, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 456, 1000])
Span start logits:  torch.Size([5, 456])
span start probs dim:  torch.Size([5, 456])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 456]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 467, 200])
Passage Length:  467
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 467, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 467, 11])
Passage ques attention dim:  torch.Size([5, 467, 11])
Passage question vectors dim:  torch.Size([5, 467, 200])
Question Passage Similarity dim:  torch.Size([5, 467])
Question passage attention dim:  torch.Size([5, 467])
Final Merged Passage dim:  torch.Size([5, 467, 800])
Modeled Passage dim:  torch.Size([5, 467, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 467, 1000])
Span start logits:  torch.Size([5, 467])
span start probs dim:  torch.Size([5, 467])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 467]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1154, 200])
Passage Length:  1154
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1154, 14])
Passage ques attention dim:  torch.Size([5, 1154, 14])
Passage question vectors dim:  torch.Size([5, 1154, 200])
Question Passage Similarity dim:  torch.Size([5, 1154])
Question passage attention dim:  torch.Size([5, 1154])
Final Merged Passage dim:  torch.Size([5, 1154, 800])
Modeled Passage dim:  torch.Size([5, 1154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1154, 1000])
Span start logits:  torch.Size([5, 1154])
span start probs dim:  torch.Size([5, 1154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 714, 9])
Passage ques attention dim:  torch.Size([5, 714, 9])
Passage question vectors dim:  torch.Size([5, 714, 200])
Question Passage Similarity dim:  torch.Size([5, 714])
Question passage attention dim:  torch.Size([5, 714])
Final Merged Passage dim:  torch.Size([5, 714, 800])
Modeled Passage dim:  torch.Size([5, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 714, 1000])
Span start logits:  torch.Size([5, 714])
span start probs dim:  torch.Size([5, 714])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 714]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 539, 200])
Passage Length:  539
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 539, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 539, 13])
Passage ques attention dim:  torch.Size([5, 539, 13])
Passage question vectors dim:  torch.Size([5, 539, 200])
Question Passage Similarity dim:  torch.Size([5, 539])
Question passage attention dim:  torch.Size([5, 539])
Final Merged Passage dim:  torch.Size([5, 539, 800])
Modeled Passage dim:  torch.Size([5, 539, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 539, 1000])
Span start logits:  torch.Size([5, 539])
span start probs dim:  torch.Size([5, 539])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 539]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 836, 200])
Passage Length:  836
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 836, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 836, 10])
Passage ques attention dim:  torch.Size([5, 836, 10])
Passage question vectors dim:  torch.Size([5, 836, 200])
Question Passage Similarity dim:  torch.Size([5, 836])
Question passage attention dim:  torch.Size([5, 836])
Final Merged Passage dim:  torch.Size([5, 836, 800])
Modeled Passage dim:  torch.Size([5, 836, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 836, 1000])
Span start logits:  torch.Size([5, 836])
span start probs dim:  torch.Size([5, 836])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 836]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 891, 200])
Passage Length:  891
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 891, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 891, 12])
Passage ques attention dim:  torch.Size([5, 891, 12])
Passage question vectors dim:  torch.Size([5, 891, 200])
Question Passage Similarity dim:  torch.Size([5, 891])
Question passage attention dim:  torch.Size([5, 891])
Final Merged Passage dim:  torch.Size([5, 891, 800])
Modeled Passage dim:  torch.Size([5, 891, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 891, 1000])
Span start logits:  torch.Size([5, 891])
span start probs dim:  torch.Size([5, 891])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 891]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 544, 200])
Passage Length:  544
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 544, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 544, 15])
Passage ques attention dim:  torch.Size([5, 544, 15])
Passage question vectors dim:  torch.Size([5, 544, 200])
Question Passage Similarity dim:  torch.Size([5, 544])
Question passage attention dim:  torch.Size([5, 544])
Final Merged Passage dim:  torch.Size([5, 544, 800])
Modeled Passage dim:  torch.Size([5, 544, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 544, 1000])
Span start logits:  torch.Size([5, 544])
span start probs dim:  torch.Size([5, 544])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 544]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1138, 200])
Passage Length:  1138
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1138, 11])
Passage ques attention dim:  torch.Size([5, 1138, 11])
Passage question vectors dim:  torch.Size([5, 1138, 200])
Question Passage Similarity dim:  torch.Size([5, 1138])
Question passage attention dim:  torch.Size([5, 1138])
Final Merged Passage dim:  torch.Size([5, 1138, 800])
Modeled Passage dim:  torch.Size([5, 1138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1138, 1000])
Span start logits:  torch.Size([5, 1138])
span start probs dim:  torch.Size([5, 1138])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1138]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 556, 200])
Passage Length:  556
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 556, 10])
Passage ques attention dim:  torch.Size([5, 556, 10])
Passage question vectors dim:  torch.Size([5, 556, 200])
Question Passage Similarity dim:  torch.Size([5, 556])
Question passage attention dim:  torch.Size([5, 556])
Final Merged Passage dim:  torch.Size([5, 556, 800])
Modeled Passage dim:  torch.Size([5, 556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 556, 1000])
Span start logits:  torch.Size([5, 556])
span start probs dim:  torch.Size([5, 556])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 556]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 822, 200])
Passage Length:  822
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 822, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 822, 9])
Passage ques attention dim:  torch.Size([5, 822, 9])
Passage question vectors dim:  torch.Size([5, 822, 200])
Question Passage Similarity dim:  torch.Size([5, 822])
Question passage attention dim:  torch.Size([5, 822])
Final Merged Passage dim:  torch.Size([5, 822, 800])
Modeled Passage dim:  torch.Size([5, 822, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 822, 1000])
Span start logits:  torch.Size([5, 822])
span start probs dim:  torch.Size([5, 822])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 822]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 749, 200])
Passage Length:  749
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 749, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 749, 10])
Passage ques attention dim:  torch.Size([5, 749, 10])
Passage question vectors dim:  torch.Size([5, 749, 200])
Question Passage Similarity dim:  torch.Size([5, 749])
Question passage attention dim:  torch.Size([5, 749])
Final Merged Passage dim:  torch.Size([5, 749, 800])
Modeled Passage dim:  torch.Size([5, 749, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 749, 1000])
Span start logits:  torch.Size([5, 749])
span start probs dim:  torch.Size([5, 749])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 749]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 386, 200])
Passage Length:  386
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 386, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 386, 13])
Passage ques attention dim:  torch.Size([5, 386, 13])
Passage question vectors dim:  torch.Size([5, 386, 200])
Question Passage Similarity dim:  torch.Size([5, 386])
Question passage attention dim:  torch.Size([5, 386])
Final Merged Passage dim:  torch.Size([5, 386, 800])
Modeled Passage dim:  torch.Size([5, 386, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 386, 1000])
Span start logits:  torch.Size([5, 386])
span start probs dim:  torch.Size([5, 386])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 386]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 329, 200])
Passage Length:  329
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 329, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 329, 8])
Passage ques attention dim:  torch.Size([5, 329, 8])
Passage question vectors dim:  torch.Size([5, 329, 200])
Question Passage Similarity dim:  torch.Size([5, 329])
Question passage attention dim:  torch.Size([5, 329])
Final Merged Passage dim:  torch.Size([5, 329, 800])
Modeled Passage dim:  torch.Size([5, 329, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 329, 1000])
Span start logits:  torch.Size([5, 329])
span start probs dim:  torch.Size([5, 329])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 329]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 385, 17])
Passage ques attention dim:  torch.Size([5, 385, 17])
Passage question vectors dim:  torch.Size([5, 385, 200])
Question Passage Similarity dim:  torch.Size([5, 385])
Question passage attention dim:  torch.Size([5, 385])
Final Merged Passage dim:  torch.Size([5, 385, 800])
Modeled Passage dim:  torch.Size([5, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 385, 1000])
Span start logits:  torch.Size([5, 385])
span start probs dim:  torch.Size([5, 385])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 385]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 990, 200])
Passage Length:  990
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 990, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 990, 9])
Passage ques attention dim:  torch.Size([5, 990, 9])
Passage question vectors dim:  torch.Size([5, 990, 200])
Question Passage Similarity dim:  torch.Size([5, 990])
Question passage attention dim:  torch.Size([5, 990])
Final Merged Passage dim:  torch.Size([5, 990, 800])
Modeled Passage dim:  torch.Size([5, 990, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 990, 1000])
Span start logits:  torch.Size([5, 990])
span start probs dim:  torch.Size([5, 990])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 990]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 472, 200])
Passage Length:  472
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 472, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 472, 9])
Passage ques attention dim:  torch.Size([5, 472, 9])
Passage question vectors dim:  torch.Size([5, 472, 200])
Question Passage Similarity dim:  torch.Size([5, 472])
Question passage attention dim:  torch.Size([5, 472])
Final Merged Passage dim:  torch.Size([5, 472, 800])
Modeled Passage dim:  torch.Size([5, 472, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 472, 1000])
Span start logits:  torch.Size([5, 472])
span start probs dim:  torch.Size([5, 472])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 472]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 933, 200])
Passage Length:  933
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 933, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 933, 11])
Passage ques attention dim:  torch.Size([5, 933, 11])
Passage question vectors dim:  torch.Size([5, 933, 200])
Question Passage Similarity dim:  torch.Size([5, 933])
Question passage attention dim:  torch.Size([5, 933])
Final Merged Passage dim:  torch.Size([5, 933, 800])
Modeled Passage dim:  torch.Size([5, 933, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 933, 1000])
Span start logits:  torch.Size([5, 933])
span start probs dim:  torch.Size([5, 933])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 933]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 369, 200])
Passage Length:  369
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 369, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 369, 9])
Passage ques attention dim:  torch.Size([5, 369, 9])
Passage question vectors dim:  torch.Size([5, 369, 200])
Question Passage Similarity dim:  torch.Size([5, 369])
Question passage attention dim:  torch.Size([5, 369])
Final Merged Passage dim:  torch.Size([5, 369, 800])
Modeled Passage dim:  torch.Size([5, 369, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 369, 1000])
Span start logits:  torch.Size([5, 369])
span start probs dim:  torch.Size([5, 369])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 369]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1202, 200])
Passage Length:  1202
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1202, 13])
Passage ques attention dim:  torch.Size([5, 1202, 13])
Passage question vectors dim:  torch.Size([5, 1202, 200])
Question Passage Similarity dim:  torch.Size([5, 1202])
Question passage attention dim:  torch.Size([5, 1202])
Final Merged Passage dim:  torch.Size([5, 1202, 800])
Modeled Passage dim:  torch.Size([5, 1202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1202, 1000])
Span start logits:  torch.Size([5, 1202])
span start probs dim:  torch.Size([5, 1202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 875, 200])
Passage Length:  875
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 875, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 875, 8])
Passage ques attention dim:  torch.Size([5, 875, 8])
Passage question vectors dim:  torch.Size([5, 875, 200])
Question Passage Similarity dim:  torch.Size([5, 875])
Question passage attention dim:  torch.Size([5, 875])
Final Merged Passage dim:  torch.Size([5, 875, 800])
Modeled Passage dim:  torch.Size([5, 875, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 875, 1000])
Span start logits:  torch.Size([5, 875])
span start probs dim:  torch.Size([5, 875])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 875]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 12])
Passage ques attention dim:  torch.Size([5, 273, 12])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 446, 200])
Passage Length:  446
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 446, 16])
Passage ques attention dim:  torch.Size([5, 446, 16])
Passage question vectors dim:  torch.Size([5, 446, 200])
Question Passage Similarity dim:  torch.Size([5, 446])
Question passage attention dim:  torch.Size([5, 446])
Final Merged Passage dim:  torch.Size([5, 446, 800])
Modeled Passage dim:  torch.Size([5, 446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 446, 1000])
Span start logits:  torch.Size([5, 446])
span start probs dim:  torch.Size([5, 446])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 446]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1201, 200])
Passage Length:  1201
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1201, 14])
Passage ques attention dim:  torch.Size([5, 1201, 14])
Passage question vectors dim:  torch.Size([5, 1201, 200])
Question Passage Similarity dim:  torch.Size([5, 1201])
Question passage attention dim:  torch.Size([5, 1201])
Final Merged Passage dim:  torch.Size([5, 1201, 800])
Modeled Passage dim:  torch.Size([5, 1201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1201, 1000])
Span start logits:  torch.Size([5, 1201])
span start probs dim:  torch.Size([5, 1201])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1201]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 296, 200])
Passage Length:  296
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 296, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 296, 13])
Passage ques attention dim:  torch.Size([5, 296, 13])
Passage question vectors dim:  torch.Size([5, 296, 200])
Question Passage Similarity dim:  torch.Size([5, 296])
Question passage attention dim:  torch.Size([5, 296])
Final Merged Passage dim:  torch.Size([5, 296, 800])
Modeled Passage dim:  torch.Size([5, 296, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 296, 1000])
Span start logits:  torch.Size([5, 296])
span start probs dim:  torch.Size([5, 296])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 296]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 549, 200])
Passage Length:  549
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 549, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 549, 14])
Passage ques attention dim:  torch.Size([5, 549, 14])
Passage question vectors dim:  torch.Size([5, 549, 200])
Question Passage Similarity dim:  torch.Size([5, 549])
Question passage attention dim:  torch.Size([5, 549])
Final Merged Passage dim:  torch.Size([5, 549, 800])
Modeled Passage dim:  torch.Size([5, 549, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 549, 1000])
Span start logits:  torch.Size([5, 549])
span start probs dim:  torch.Size([5, 549])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 549]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 507, 200])
Passage Length:  507
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 507, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 507, 9])
Passage ques attention dim:  torch.Size([5, 507, 9])
Passage question vectors dim:  torch.Size([5, 507, 200])
Question Passage Similarity dim:  torch.Size([5, 507])
Question passage attention dim:  torch.Size([5, 507])
Final Merged Passage dim:  torch.Size([5, 507, 800])
Modeled Passage dim:  torch.Size([5, 507, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 507, 1000])
Span start logits:  torch.Size([5, 507])
span start probs dim:  torch.Size([5, 507])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 507]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 13])
Passage ques attention dim:  torch.Size([5, 441, 13])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 752, 200])
Passage Length:  752
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 752, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 752, 13])
Passage ques attention dim:  torch.Size([5, 752, 13])
Passage question vectors dim:  torch.Size([5, 752, 200])
Question Passage Similarity dim:  torch.Size([5, 752])
Question passage attention dim:  torch.Size([5, 752])
Final Merged Passage dim:  torch.Size([5, 752, 800])
Modeled Passage dim:  torch.Size([5, 752, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 752, 1000])
Span start logits:  torch.Size([5, 752])
span start probs dim:  torch.Size([5, 752])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 752]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 986, 200])
Passage Length:  986
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 986, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 986, 9])
Passage ques attention dim:  torch.Size([5, 986, 9])
Passage question vectors dim:  torch.Size([5, 986, 200])
Question Passage Similarity dim:  torch.Size([5, 986])
Question passage attention dim:  torch.Size([5, 986])
Final Merged Passage dim:  torch.Size([5, 986, 800])
Modeled Passage dim:  torch.Size([5, 986, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 986, 1000])
Span start logits:  torch.Size([5, 986])
span start probs dim:  torch.Size([5, 986])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 986]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1025, 13])
Passage ques attention dim:  torch.Size([5, 1025, 13])
Passage question vectors dim:  torch.Size([5, 1025, 200])
Question Passage Similarity dim:  torch.Size([5, 1025])
Question passage attention dim:  torch.Size([5, 1025])
Final Merged Passage dim:  torch.Size([5, 1025, 800])
Modeled Passage dim:  torch.Size([5, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1025, 1000])
Span start logits:  torch.Size([5, 1025])
span start probs dim:  torch.Size([5, 1025])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1025]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1077, 200])
Passage Length:  1077
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1077, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1077, 8])
Passage ques attention dim:  torch.Size([5, 1077, 8])
Passage question vectors dim:  torch.Size([5, 1077, 200])
Question Passage Similarity dim:  torch.Size([5, 1077])
Question passage attention dim:  torch.Size([5, 1077])
Final Merged Passage dim:  torch.Size([5, 1077, 800])
Modeled Passage dim:  torch.Size([5, 1077, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1077, 1000])
Span start logits:  torch.Size([5, 1077])
span start probs dim:  torch.Size([5, 1077])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1077]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1099, 200])
Passage Length:  1099
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1099, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1099, 14])
Passage ques attention dim:  torch.Size([5, 1099, 14])
Passage question vectors dim:  torch.Size([5, 1099, 200])
Question Passage Similarity dim:  torch.Size([5, 1099])
Question passage attention dim:  torch.Size([5, 1099])
Final Merged Passage dim:  torch.Size([5, 1099, 800])
Modeled Passage dim:  torch.Size([5, 1099, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1099, 1000])
Span start logits:  torch.Size([5, 1099])
span start probs dim:  torch.Size([5, 1099])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1099]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1118, 200])
Passage Length:  1118
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1118, 9])
Passage ques attention dim:  torch.Size([5, 1118, 9])
Passage question vectors dim:  torch.Size([5, 1118, 200])
Question Passage Similarity dim:  torch.Size([5, 1118])
Question passage attention dim:  torch.Size([5, 1118])
Final Merged Passage dim:  torch.Size([5, 1118, 800])
Modeled Passage dim:  torch.Size([5, 1118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1118, 1000])
Span start logits:  torch.Size([5, 1118])
span start probs dim:  torch.Size([5, 1118])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1118]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 694, 200])
Passage Length:  694
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 694, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 694, 9])
Passage ques attention dim:  torch.Size([5, 694, 9])
Passage question vectors dim:  torch.Size([5, 694, 200])
Question Passage Similarity dim:  torch.Size([5, 694])
Question passage attention dim:  torch.Size([5, 694])
Final Merged Passage dim:  torch.Size([5, 694, 800])
Modeled Passage dim:  torch.Size([5, 694, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 694, 1000])
Span start logits:  torch.Size([5, 694])
span start probs dim:  torch.Size([5, 694])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 694]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 565, 200])
Passage Length:  565
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 565, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 565, 11])
Passage ques attention dim:  torch.Size([5, 565, 11])
Passage question vectors dim:  torch.Size([5, 565, 200])
Question Passage Similarity dim:  torch.Size([5, 565])
Question passage attention dim:  torch.Size([5, 565])
Final Merged Passage dim:  torch.Size([5, 565, 800])
Modeled Passage dim:  torch.Size([5, 565, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 565, 1000])
Span start logits:  torch.Size([5, 565])
span start probs dim:  torch.Size([5, 565])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 565]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1795, 200])
Passage Length:  1795
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1795, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1795, 10])
Passage ques attention dim:  torch.Size([5, 1795, 10])
Passage question vectors dim:  torch.Size([5, 1795, 200])
Question Passage Similarity dim:  torch.Size([5, 1795])
Question passage attention dim:  torch.Size([5, 1795])
Final Merged Passage dim:  torch.Size([5, 1795, 800])
Modeled Passage dim:  torch.Size([5, 1795, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1795, 1000])
Span start logits:  torch.Size([5, 1795])
span start probs dim:  torch.Size([5, 1795])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1795]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 9])
Passage ques attention dim:  torch.Size([5, 462, 9])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 362, 200])
Passage Length:  362
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 362, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 362, 8])
Passage ques attention dim:  torch.Size([5, 362, 8])
Passage question vectors dim:  torch.Size([5, 362, 200])
Question Passage Similarity dim:  torch.Size([5, 362])
Question passage attention dim:  torch.Size([5, 362])
Final Merged Passage dim:  torch.Size([5, 362, 800])
Modeled Passage dim:  torch.Size([5, 362, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 362, 1000])
Span start logits:  torch.Size([5, 362])
span start probs dim:  torch.Size([5, 362])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 362]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 558, 200])
Passage Length:  558
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 558, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 558, 12])
Passage ques attention dim:  torch.Size([5, 558, 12])
Passage question vectors dim:  torch.Size([5, 558, 200])
Question Passage Similarity dim:  torch.Size([5, 558])
Question passage attention dim:  torch.Size([5, 558])
Final Merged Passage dim:  torch.Size([5, 558, 800])
Modeled Passage dim:  torch.Size([5, 558, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 558, 1000])
Span start logits:  torch.Size([5, 558])
span start probs dim:  torch.Size([5, 558])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 558]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 696, 200])
Passage Length:  696
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 696, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 696, 7])
Passage ques attention dim:  torch.Size([5, 696, 7])
Passage question vectors dim:  torch.Size([5, 696, 200])
Question Passage Similarity dim:  torch.Size([5, 696])
Question passage attention dim:  torch.Size([5, 696])
Final Merged Passage dim:  torch.Size([5, 696, 800])
Modeled Passage dim:  torch.Size([5, 696, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 696, 1000])
Span start logits:  torch.Size([5, 696])
span start probs dim:  torch.Size([5, 696])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 696]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 15])
Passage ques attention dim:  torch.Size([5, 462, 15])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 439, 200])
Passage Length:  439
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 439, 13])
Passage ques attention dim:  torch.Size([5, 439, 13])
Passage question vectors dim:  torch.Size([5, 439, 200])
Question Passage Similarity dim:  torch.Size([5, 439])
Question passage attention dim:  torch.Size([5, 439])
Final Merged Passage dim:  torch.Size([5, 439, 800])
Modeled Passage dim:  torch.Size([5, 439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 439, 1000])
Span start logits:  torch.Size([5, 439])
span start probs dim:  torch.Size([5, 439])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 439]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 467, 200])
Passage Length:  467
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 467, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 467, 13])
Passage ques attention dim:  torch.Size([5, 467, 13])
Passage question vectors dim:  torch.Size([5, 467, 200])
Question Passage Similarity dim:  torch.Size([5, 467])
Question passage attention dim:  torch.Size([5, 467])
Final Merged Passage dim:  torch.Size([5, 467, 800])
Modeled Passage dim:  torch.Size([5, 467, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 467, 1000])
Span start logits:  torch.Size([5, 467])
span start probs dim:  torch.Size([5, 467])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 467]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 507, 200])
Passage Length:  507
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 507, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 507, 11])
Passage ques attention dim:  torch.Size([5, 507, 11])
Passage question vectors dim:  torch.Size([5, 507, 200])
Question Passage Similarity dim:  torch.Size([5, 507])
Question passage attention dim:  torch.Size([5, 507])
Final Merged Passage dim:  torch.Size([5, 507, 800])
Modeled Passage dim:  torch.Size([5, 507, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 507, 1000])
Span start logits:  torch.Size([5, 507])
span start probs dim:  torch.Size([5, 507])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 507]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1025, 11])
Passage ques attention dim:  torch.Size([5, 1025, 11])
Passage question vectors dim:  torch.Size([5, 1025, 200])
Question Passage Similarity dim:  torch.Size([5, 1025])
Question passage attention dim:  torch.Size([5, 1025])
Final Merged Passage dim:  torch.Size([5, 1025, 800])
Modeled Passage dim:  torch.Size([5, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1025, 1000])
Span start logits:  torch.Size([5, 1025])
span start probs dim:  torch.Size([5, 1025])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1025]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 11])
Passage ques attention dim:  torch.Size([5, 462, 11])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 541, 200])
Passage Length:  541
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 541, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 541, 13])
Passage ques attention dim:  torch.Size([5, 541, 13])
Passage question vectors dim:  torch.Size([5, 541, 200])
Question Passage Similarity dim:  torch.Size([5, 541])
Question passage attention dim:  torch.Size([5, 541])
Final Merged Passage dim:  torch.Size([5, 541, 800])
Modeled Passage dim:  torch.Size([5, 541, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 541, 1000])
Span start logits:  torch.Size([5, 541])
span start probs dim:  torch.Size([5, 541])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 541]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 749, 200])
Passage Length:  749
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 749, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 749, 12])
Passage ques attention dim:  torch.Size([5, 749, 12])
Passage question vectors dim:  torch.Size([5, 749, 200])
Question Passage Similarity dim:  torch.Size([5, 749])
Question passage attention dim:  torch.Size([5, 749])
Final Merged Passage dim:  torch.Size([5, 749, 800])
Modeled Passage dim:  torch.Size([5, 749, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 749, 1000])
Span start logits:  torch.Size([5, 749])
span start probs dim:  torch.Size([5, 749])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 749]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 12])
Passage ques attention dim:  torch.Size([5, 258, 12])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 600, 200])
Passage Length:  600
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 600, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 600, 15])
Passage ques attention dim:  torch.Size([5, 600, 15])
Passage question vectors dim:  torch.Size([5, 600, 200])
Question Passage Similarity dim:  torch.Size([5, 600])
Question passage attention dim:  torch.Size([5, 600])
Final Merged Passage dim:  torch.Size([5, 600, 800])
Modeled Passage dim:  torch.Size([5, 600, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 600, 1000])
Span start logits:  torch.Size([5, 600])
span start probs dim:  torch.Size([5, 600])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 600]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1508, 200])
Passage Length:  1508
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1508, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1508, 12])
Passage ques attention dim:  torch.Size([5, 1508, 12])
Passage question vectors dim:  torch.Size([5, 1508, 200])
Question Passage Similarity dim:  torch.Size([5, 1508])
Question passage attention dim:  torch.Size([5, 1508])
Final Merged Passage dim:  torch.Size([5, 1508, 800])
Modeled Passage dim:  torch.Size([5, 1508, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1508, 1000])
Span start logits:  torch.Size([5, 1508])
span start probs dim:  torch.Size([5, 1508])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1508]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 274, 200])
Passage Length:  274
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 274, 11])
Passage ques attention dim:  torch.Size([5, 274, 11])
Passage question vectors dim:  torch.Size([5, 274, 200])
Question Passage Similarity dim:  torch.Size([5, 274])
Question passage attention dim:  torch.Size([5, 274])
Final Merged Passage dim:  torch.Size([5, 274, 800])
Modeled Passage dim:  torch.Size([5, 274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 274, 1000])
Span start logits:  torch.Size([5, 274])
span start probs dim:  torch.Size([5, 274])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 274]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 663, 200])
Passage Length:  663
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 663, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 663, 10])
Passage ques attention dim:  torch.Size([5, 663, 10])
Passage question vectors dim:  torch.Size([5, 663, 200])
Question Passage Similarity dim:  torch.Size([5, 663])
Question passage attention dim:  torch.Size([5, 663])
Final Merged Passage dim:  torch.Size([5, 663, 800])
Modeled Passage dim:  torch.Size([5, 663, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 663, 1000])
Span start logits:  torch.Size([5, 663])
span start probs dim:  torch.Size([5, 663])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 663]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 480, 200])
Passage Length:  480
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 480, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 480, 6])
Passage ques attention dim:  torch.Size([5, 480, 6])
Passage question vectors dim:  torch.Size([5, 480, 200])
Question Passage Similarity dim:  torch.Size([5, 480])
Question passage attention dim:  torch.Size([5, 480])
Final Merged Passage dim:  torch.Size([5, 480, 800])
Modeled Passage dim:  torch.Size([5, 480, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 480, 1000])
Span start logits:  torch.Size([5, 480])
span start probs dim:  torch.Size([5, 480])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 480]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 588, 15])
Passage ques attention dim:  torch.Size([5, 588, 15])
Passage question vectors dim:  torch.Size([5, 588, 200])
Question Passage Similarity dim:  torch.Size([5, 588])
Question passage attention dim:  torch.Size([5, 588])
Final Merged Passage dim:  torch.Size([5, 588, 800])
Modeled Passage dim:  torch.Size([5, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 588, 1000])
Span start logits:  torch.Size([5, 588])
span start probs dim:  torch.Size([5, 588])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 588]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 749, 200])
Passage Length:  749
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 749, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 749, 7])
Passage ques attention dim:  torch.Size([5, 749, 7])
Passage question vectors dim:  torch.Size([5, 749, 200])
Question Passage Similarity dim:  torch.Size([5, 749])
Question passage attention dim:  torch.Size([5, 749])
Final Merged Passage dim:  torch.Size([5, 749, 800])
Modeled Passage dim:  torch.Size([5, 749, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 749, 1000])
Span start logits:  torch.Size([5, 749])
span start probs dim:  torch.Size([5, 749])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 749]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 691, 200])
Passage Length:  691
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 691, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 691, 15])
Passage ques attention dim:  torch.Size([5, 691, 15])
Passage question vectors dim:  torch.Size([5, 691, 200])
Question Passage Similarity dim:  torch.Size([5, 691])
Question passage attention dim:  torch.Size([5, 691])
Final Merged Passage dim:  torch.Size([5, 691, 800])
Modeled Passage dim:  torch.Size([5, 691, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 691, 1000])
Span start logits:  torch.Size([5, 691])
span start probs dim:  torch.Size([5, 691])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 691]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 9])
Passage ques attention dim:  torch.Size([5, 176, 9])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 379, 11])
Passage ques attention dim:  torch.Size([5, 379, 11])
Passage question vectors dim:  torch.Size([5, 379, 200])
Question Passage Similarity dim:  torch.Size([5, 379])
Question passage attention dim:  torch.Size([5, 379])
Final Merged Passage dim:  torch.Size([5, 379, 800])
Modeled Passage dim:  torch.Size([5, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 379, 1000])
Span start logits:  torch.Size([5, 379])
span start probs dim:  torch.Size([5, 379])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 379]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 986, 200])
Passage Length:  986
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 986, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 986, 8])
Passage ques attention dim:  torch.Size([5, 986, 8])
Passage question vectors dim:  torch.Size([5, 986, 200])
Question Passage Similarity dim:  torch.Size([5, 986])
Question passage attention dim:  torch.Size([5, 986])
Final Merged Passage dim:  torch.Size([5, 986, 800])
Modeled Passage dim:  torch.Size([5, 986, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 986, 1000])
Span start logits:  torch.Size([5, 986])
span start probs dim:  torch.Size([5, 986])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 986]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1090, 200])
Passage Length:  1090
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1090, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1090, 12])
Passage ques attention dim:  torch.Size([5, 1090, 12])
Passage question vectors dim:  torch.Size([5, 1090, 200])
Question Passage Similarity dim:  torch.Size([5, 1090])
Question passage attention dim:  torch.Size([5, 1090])
Final Merged Passage dim:  torch.Size([5, 1090, 800])
Modeled Passage dim:  torch.Size([5, 1090, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1090, 1000])
Span start logits:  torch.Size([5, 1090])
span start probs dim:  torch.Size([5, 1090])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1090]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 830, 200])
Passage Length:  830
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 830, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 830, 10])
Passage ques attention dim:  torch.Size([5, 830, 10])
Passage question vectors dim:  torch.Size([5, 830, 200])
Question Passage Similarity dim:  torch.Size([5, 830])
Question passage attention dim:  torch.Size([5, 830])
Final Merged Passage dim:  torch.Size([5, 830, 800])
Modeled Passage dim:  torch.Size([5, 830, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 830, 1000])
Span start logits:  torch.Size([5, 830])
span start probs dim:  torch.Size([5, 830])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 830]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 321, 200])
Passage Length:  321
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 321, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 321, 11])
Passage ques attention dim:  torch.Size([5, 321, 11])
Passage question vectors dim:  torch.Size([5, 321, 200])
Question Passage Similarity dim:  torch.Size([5, 321])
Question passage attention dim:  torch.Size([5, 321])
Final Merged Passage dim:  torch.Size([5, 321, 800])
Modeled Passage dim:  torch.Size([5, 321, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 321, 1000])
Span start logits:  torch.Size([5, 321])
span start probs dim:  torch.Size([5, 321])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 321]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1047, 200])
Passage Length:  1047
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1047, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1047, 11])
Passage ques attention dim:  torch.Size([5, 1047, 11])
Passage question vectors dim:  torch.Size([5, 1047, 200])
Question Passage Similarity dim:  torch.Size([5, 1047])
Question passage attention dim:  torch.Size([5, 1047])
Final Merged Passage dim:  torch.Size([5, 1047, 800])
Modeled Passage dim:  torch.Size([5, 1047, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1047, 1000])
Span start logits:  torch.Size([5, 1047])
span start probs dim:  torch.Size([5, 1047])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1047]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 719, 200])
Passage Length:  719
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 719, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 719, 7])
Passage ques attention dim:  torch.Size([5, 719, 7])
Passage question vectors dim:  torch.Size([5, 719, 200])
Question Passage Similarity dim:  torch.Size([5, 719])
Question passage attention dim:  torch.Size([5, 719])
Final Merged Passage dim:  torch.Size([5, 719, 800])
Modeled Passage dim:  torch.Size([5, 719, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 719, 1000])
Span start logits:  torch.Size([5, 719])
span start probs dim:  torch.Size([5, 719])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 719]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 264, 200])
Passage Length:  264
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 264, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 264, 10])
Passage ques attention dim:  torch.Size([5, 264, 10])
Passage question vectors dim:  torch.Size([5, 264, 200])
Question Passage Similarity dim:  torch.Size([5, 264])
Question passage attention dim:  torch.Size([5, 264])
Final Merged Passage dim:  torch.Size([5, 264, 800])
Modeled Passage dim:  torch.Size([5, 264, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 264, 1000])
Span start logits:  torch.Size([5, 264])
span start probs dim:  torch.Size([5, 264])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 264]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 555, 200])
Passage Length:  555
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 555, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 555, 9])
Passage ques attention dim:  torch.Size([5, 555, 9])
Passage question vectors dim:  torch.Size([5, 555, 200])
Question Passage Similarity dim:  torch.Size([5, 555])
Question passage attention dim:  torch.Size([5, 555])
Final Merged Passage dim:  torch.Size([5, 555, 800])
Modeled Passage dim:  torch.Size([5, 555, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 555, 1000])
Span start logits:  torch.Size([5, 555])
span start probs dim:  torch.Size([5, 555])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 555]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 1033, 200])
Passage Length:  1033
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 1033, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1033, 18])
Passage ques attention dim:  torch.Size([5, 1033, 18])
Passage question vectors dim:  torch.Size([5, 1033, 200])
Question Passage Similarity dim:  torch.Size([5, 1033])
Question passage attention dim:  torch.Size([5, 1033])
Final Merged Passage dim:  torch.Size([5, 1033, 800])
Modeled Passage dim:  torch.Size([5, 1033, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1033, 1000])
Span start logits:  torch.Size([5, 1033])
span start probs dim:  torch.Size([5, 1033])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1033]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 779, 200])
Passage Length:  779
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 779, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 779, 11])
Passage ques attention dim:  torch.Size([5, 779, 11])
Passage question vectors dim:  torch.Size([5, 779, 200])
Question Passage Similarity dim:  torch.Size([5, 779])
Question passage attention dim:  torch.Size([5, 779])
Final Merged Passage dim:  torch.Size([5, 779, 800])
Modeled Passage dim:  torch.Size([5, 779, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 779, 1000])
Span start logits:  torch.Size([5, 779])
span start probs dim:  torch.Size([5, 779])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 779]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1007, 200])
Passage Length:  1007
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1007, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1007, 8])
Passage ques attention dim:  torch.Size([5, 1007, 8])
Passage question vectors dim:  torch.Size([5, 1007, 200])
Question Passage Similarity dim:  torch.Size([5, 1007])
Question passage attention dim:  torch.Size([5, 1007])
Final Merged Passage dim:  torch.Size([5, 1007, 800])
Modeled Passage dim:  torch.Size([5, 1007, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1007, 1000])
Span start logits:  torch.Size([5, 1007])
span start probs dim:  torch.Size([5, 1007])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1007]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 8])
Passage ques attention dim:  torch.Size([5, 381, 8])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1603, 200])
Passage Length:  1603
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1603, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1603, 13])
Passage ques attention dim:  torch.Size([5, 1603, 13])
Passage question vectors dim:  torch.Size([5, 1603, 200])
Question Passage Similarity dim:  torch.Size([5, 1603])
Question passage attention dim:  torch.Size([5, 1603])
Final Merged Passage dim:  torch.Size([5, 1603, 800])
Modeled Passage dim:  torch.Size([5, 1603, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1603, 1000])
Span start logits:  torch.Size([5, 1603])
span start probs dim:  torch.Size([5, 1603])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1603]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 171, 11])
Passage ques attention dim:  torch.Size([5, 171, 11])
Passage question vectors dim:  torch.Size([5, 171, 200])
Question Passage Similarity dim:  torch.Size([5, 171])
Question passage attention dim:  torch.Size([5, 171])
Final Merged Passage dim:  torch.Size([5, 171, 800])
Modeled Passage dim:  torch.Size([5, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 171, 1000])
Span start logits:  torch.Size([5, 171])
span start probs dim:  torch.Size([5, 171])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 171]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 609, 200])
Passage Length:  609
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 609, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 609, 15])
Passage ques attention dim:  torch.Size([5, 609, 15])
Passage question vectors dim:  torch.Size([5, 609, 200])
Question Passage Similarity dim:  torch.Size([5, 609])
Question passage attention dim:  torch.Size([5, 609])
Final Merged Passage dim:  torch.Size([5, 609, 800])
Modeled Passage dim:  torch.Size([5, 609, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 609, 1000])
Span start logits:  torch.Size([5, 609])
span start probs dim:  torch.Size([5, 609])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 609]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 9])
Passage ques attention dim:  torch.Size([5, 1094, 9])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 11])
Passage ques attention dim:  torch.Size([5, 381, 11])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 1001, 200])
Passage Length:  1001
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 1001, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1001, 15])
Passage ques attention dim:  torch.Size([5, 1001, 15])
Passage question vectors dim:  torch.Size([5, 1001, 200])
Question Passage Similarity dim:  torch.Size([5, 1001])
Question passage attention dim:  torch.Size([5, 1001])
Final Merged Passage dim:  torch.Size([5, 1001, 800])
Modeled Passage dim:  torch.Size([5, 1001, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1001, 1000])
Span start logits:  torch.Size([5, 1001])
span start probs dim:  torch.Size([5, 1001])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1001]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 526, 200])
Passage Length:  526
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 526, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 526, 9])
Passage ques attention dim:  torch.Size([5, 526, 9])
Passage question vectors dim:  torch.Size([5, 526, 200])
Question Passage Similarity dim:  torch.Size([5, 526])
Question passage attention dim:  torch.Size([5, 526])
Final Merged Passage dim:  torch.Size([5, 526, 800])
Modeled Passage dim:  torch.Size([5, 526, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 526, 1000])
Span start logits:  torch.Size([5, 526])
span start probs dim:  torch.Size([5, 526])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 526]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 743, 200])
Passage Length:  743
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 743, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 743, 9])
Passage ques attention dim:  torch.Size([5, 743, 9])
Passage question vectors dim:  torch.Size([5, 743, 200])
Question Passage Similarity dim:  torch.Size([5, 743])
Question passage attention dim:  torch.Size([5, 743])
Final Merged Passage dim:  torch.Size([5, 743, 800])
Modeled Passage dim:  torch.Size([5, 743, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 743, 1000])
Span start logits:  torch.Size([5, 743])
span start probs dim:  torch.Size([5, 743])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 743]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 370, 200])
Passage Length:  370
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 370, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 370, 12])
Passage ques attention dim:  torch.Size([5, 370, 12])
Passage question vectors dim:  torch.Size([5, 370, 200])
Question Passage Similarity dim:  torch.Size([5, 370])
Question passage attention dim:  torch.Size([5, 370])
Final Merged Passage dim:  torch.Size([5, 370, 800])
Modeled Passage dim:  torch.Size([5, 370, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 370, 1000])
Span start logits:  torch.Size([5, 370])
span start probs dim:  torch.Size([5, 370])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 370]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 494, 200])
Passage Length:  494
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 494, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 494, 16])
Passage ques attention dim:  torch.Size([5, 494, 16])
Passage question vectors dim:  torch.Size([5, 494, 200])
Question Passage Similarity dim:  torch.Size([5, 494])
Question passage attention dim:  torch.Size([5, 494])
Final Merged Passage dim:  torch.Size([5, 494, 800])
Modeled Passage dim:  torch.Size([5, 494, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 494, 1000])
Span start logits:  torch.Size([5, 494])
span start probs dim:  torch.Size([5, 494])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 494]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 444, 200])
Passage Length:  444
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 444, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 444, 9])
Passage ques attention dim:  torch.Size([5, 444, 9])
Passage question vectors dim:  torch.Size([5, 444, 200])
Question Passage Similarity dim:  torch.Size([5, 444])
Question passage attention dim:  torch.Size([5, 444])
Final Merged Passage dim:  torch.Size([5, 444, 800])
Modeled Passage dim:  torch.Size([5, 444, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 444, 1000])
Span start logits:  torch.Size([5, 444])
span start probs dim:  torch.Size([5, 444])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 444]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 530, 200])
Passage Length:  530
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 530, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 530, 8])
Passage ques attention dim:  torch.Size([5, 530, 8])
Passage question vectors dim:  torch.Size([5, 530, 200])
Question Passage Similarity dim:  torch.Size([5, 530])
Question passage attention dim:  torch.Size([5, 530])
Final Merged Passage dim:  torch.Size([5, 530, 800])
Modeled Passage dim:  torch.Size([5, 530, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 530, 1000])
Span start logits:  torch.Size([5, 530])
span start probs dim:  torch.Size([5, 530])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 530]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 986, 200])
Passage Length:  986
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 986, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 986, 12])
Passage ques attention dim:  torch.Size([5, 986, 12])
Passage question vectors dim:  torch.Size([5, 986, 200])
Question Passage Similarity dim:  torch.Size([5, 986])
Question passage attention dim:  torch.Size([5, 986])
Final Merged Passage dim:  torch.Size([5, 986, 800])
Modeled Passage dim:  torch.Size([5, 986, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 986, 1000])
Span start logits:  torch.Size([5, 986])
span start probs dim:  torch.Size([5, 986])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 986]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1300, 200])
Passage Length:  1300
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1300, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1300, 12])
Passage ques attention dim:  torch.Size([5, 1300, 12])
Passage question vectors dim:  torch.Size([5, 1300, 200])
Question Passage Similarity dim:  torch.Size([5, 1300])
Question passage attention dim:  torch.Size([5, 1300])
Final Merged Passage dim:  torch.Size([5, 1300, 800])
Modeled Passage dim:  torch.Size([5, 1300, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1300, 1000])
Span start logits:  torch.Size([5, 1300])
span start probs dim:  torch.Size([5, 1300])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1300]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1006, 200])
Passage Length:  1006
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1006, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1006, 13])
Passage ques attention dim:  torch.Size([5, 1006, 13])
Passage question vectors dim:  torch.Size([5, 1006, 200])
Question Passage Similarity dim:  torch.Size([5, 1006])
Question passage attention dim:  torch.Size([5, 1006])
Final Merged Passage dim:  torch.Size([5, 1006, 800])
Modeled Passage dim:  torch.Size([5, 1006, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1006, 1000])
Span start logits:  torch.Size([5, 1006])
span start probs dim:  torch.Size([5, 1006])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1006]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 221, 9])
Passage ques attention dim:  torch.Size([5, 221, 9])
Passage question vectors dim:  torch.Size([5, 221, 200])
Question Passage Similarity dim:  torch.Size([5, 221])
Question passage attention dim:  torch.Size([5, 221])
Final Merged Passage dim:  torch.Size([5, 221, 800])
Modeled Passage dim:  torch.Size([5, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 221, 1000])
Span start logits:  torch.Size([5, 221])
span start probs dim:  torch.Size([5, 221])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 221]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 410, 200])
Passage Length:  410
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 410, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 410, 11])
Passage ques attention dim:  torch.Size([5, 410, 11])
Passage question vectors dim:  torch.Size([5, 410, 200])
Question Passage Similarity dim:  torch.Size([5, 410])
Question passage attention dim:  torch.Size([5, 410])
Final Merged Passage dim:  torch.Size([5, 410, 800])
Modeled Passage dim:  torch.Size([5, 410, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 410, 1000])
Span start logits:  torch.Size([5, 410])
span start probs dim:  torch.Size([5, 410])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 410]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 409, 200])
Passage Length:  409
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 409, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 409, 10])
Passage ques attention dim:  torch.Size([5, 409, 10])
Passage question vectors dim:  torch.Size([5, 409, 200])
Question Passage Similarity dim:  torch.Size([5, 409])
Question passage attention dim:  torch.Size([5, 409])
Final Merged Passage dim:  torch.Size([5, 409, 800])
Modeled Passage dim:  torch.Size([5, 409, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 409, 1000])
Span start logits:  torch.Size([5, 409])
span start probs dim:  torch.Size([5, 409])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 409]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 301, 10])
Passage ques attention dim:  torch.Size([5, 301, 10])
Passage question vectors dim:  torch.Size([5, 301, 200])
Question Passage Similarity dim:  torch.Size([5, 301])
Question passage attention dim:  torch.Size([5, 301])
Final Merged Passage dim:  torch.Size([5, 301, 800])
Modeled Passage dim:  torch.Size([5, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 301, 1000])
Span start logits:  torch.Size([5, 301])
span start probs dim:  torch.Size([5, 301])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 301]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 13])
Passage ques attention dim:  torch.Size([5, 619, 13])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 497, 200])
Passage Length:  497
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 497, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 497, 11])
Passage ques attention dim:  torch.Size([5, 497, 11])
Passage question vectors dim:  torch.Size([5, 497, 200])
Question Passage Similarity dim:  torch.Size([5, 497])
Question passage attention dim:  torch.Size([5, 497])
Final Merged Passage dim:  torch.Size([5, 497, 800])
Modeled Passage dim:  torch.Size([5, 497, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 497, 1000])
Span start logits:  torch.Size([5, 497])
span start probs dim:  torch.Size([5, 497])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 497]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 278, 200])
Passage Length:  278
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 278, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 278, 11])
Passage ques attention dim:  torch.Size([5, 278, 11])
Passage question vectors dim:  torch.Size([5, 278, 200])
Question Passage Similarity dim:  torch.Size([5, 278])
Question passage attention dim:  torch.Size([5, 278])
Final Merged Passage dim:  torch.Size([5, 278, 800])
Modeled Passage dim:  torch.Size([5, 278, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 278, 1000])
Span start logits:  torch.Size([5, 278])
span start probs dim:  torch.Size([5, 278])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 278]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1099, 200])
Passage Length:  1099
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1099, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1099, 11])
Passage ques attention dim:  torch.Size([5, 1099, 11])
Passage question vectors dim:  torch.Size([5, 1099, 200])
Question Passage Similarity dim:  torch.Size([5, 1099])
Question passage attention dim:  torch.Size([5, 1099])
Final Merged Passage dim:  torch.Size([5, 1099, 800])
Modeled Passage dim:  torch.Size([5, 1099, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1099, 1000])
Span start logits:  torch.Size([5, 1099])
span start probs dim:  torch.Size([5, 1099])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1099]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1379, 200])
Passage Length:  1379
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1379, 12])
Passage ques attention dim:  torch.Size([5, 1379, 12])
Passage question vectors dim:  torch.Size([5, 1379, 200])
Question Passage Similarity dim:  torch.Size([5, 1379])
Question passage attention dim:  torch.Size([5, 1379])
Final Merged Passage dim:  torch.Size([5, 1379, 800])
Modeled Passage dim:  torch.Size([5, 1379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1379, 1000])
Span start logits:  torch.Size([5, 1379])
span start probs dim:  torch.Size([5, 1379])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1379]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 934, 200])
Passage Length:  934
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 934, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 934, 11])
Passage ques attention dim:  torch.Size([5, 934, 11])
Passage question vectors dim:  torch.Size([5, 934, 200])
Question Passage Similarity dim:  torch.Size([5, 934])
Question passage attention dim:  torch.Size([5, 934])
Final Merged Passage dim:  torch.Size([5, 934, 800])
Modeled Passage dim:  torch.Size([5, 934, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 934, 1000])
Span start logits:  torch.Size([5, 934])
span start probs dim:  torch.Size([5, 934])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 934]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1252, 200])
Passage Length:  1252
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1252, 10])
Passage ques attention dim:  torch.Size([5, 1252, 10])
Passage question vectors dim:  torch.Size([5, 1252, 200])
Question Passage Similarity dim:  torch.Size([5, 1252])
Question passage attention dim:  torch.Size([5, 1252])
Final Merged Passage dim:  torch.Size([5, 1252, 800])
Modeled Passage dim:  torch.Size([5, 1252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1252, 1000])
Span start logits:  torch.Size([5, 1252])
span start probs dim:  torch.Size([5, 1252])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1252]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 934, 200])
Passage Length:  934
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 934, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 934, 8])
Passage ques attention dim:  torch.Size([5, 934, 8])
Passage question vectors dim:  torch.Size([5, 934, 200])
Question Passage Similarity dim:  torch.Size([5, 934])
Question passage attention dim:  torch.Size([5, 934])
Final Merged Passage dim:  torch.Size([5, 934, 800])
Modeled Passage dim:  torch.Size([5, 934, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 934, 1000])
Span start logits:  torch.Size([5, 934])
span start probs dim:  torch.Size([5, 934])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 934]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 845, 200])
Passage Length:  845
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 845, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 845, 8])
Passage ques attention dim:  torch.Size([5, 845, 8])
Passage question vectors dim:  torch.Size([5, 845, 200])
Question Passage Similarity dim:  torch.Size([5, 845])
Question passage attention dim:  torch.Size([5, 845])
Final Merged Passage dim:  torch.Size([5, 845, 800])
Modeled Passage dim:  torch.Size([5, 845, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 845, 1000])
Span start logits:  torch.Size([5, 845])
span start probs dim:  torch.Size([5, 845])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 845]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1795, 200])
Passage Length:  1795
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1795, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1795, 11])
Passage ques attention dim:  torch.Size([5, 1795, 11])
Passage question vectors dim:  torch.Size([5, 1795, 200])
Question Passage Similarity dim:  torch.Size([5, 1795])
Question passage attention dim:  torch.Size([5, 1795])
Final Merged Passage dim:  torch.Size([5, 1795, 800])
Modeled Passage dim:  torch.Size([5, 1795, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1795, 1000])
Span start logits:  torch.Size([5, 1795])
span start probs dim:  torch.Size([5, 1795])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1795]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 413, 10])
Passage ques attention dim:  torch.Size([5, 413, 10])
Passage question vectors dim:  torch.Size([5, 413, 200])
Question Passage Similarity dim:  torch.Size([5, 413])
Question passage attention dim:  torch.Size([5, 413])
Final Merged Passage dim:  torch.Size([5, 413, 800])
Modeled Passage dim:  torch.Size([5, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 413, 1000])
Span start logits:  torch.Size([5, 413])
span start probs dim:  torch.Size([5, 413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 1154, 200])
Passage Length:  1154
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 1154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1154, 19])
Passage ques attention dim:  torch.Size([5, 1154, 19])
Passage question vectors dim:  torch.Size([5, 1154, 200])
Question Passage Similarity dim:  torch.Size([5, 1154])
Question passage attention dim:  torch.Size([5, 1154])
Final Merged Passage dim:  torch.Size([5, 1154, 800])
Modeled Passage dim:  torch.Size([5, 1154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1154, 1000])
Span start logits:  torch.Size([5, 1154])
span start probs dim:  torch.Size([5, 1154])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1154]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 413, 9])
Passage ques attention dim:  torch.Size([5, 413, 9])
Passage question vectors dim:  torch.Size([5, 413, 200])
Question Passage Similarity dim:  torch.Size([5, 413])
Question passage attention dim:  torch.Size([5, 413])
Final Merged Passage dim:  torch.Size([5, 413, 800])
Modeled Passage dim:  torch.Size([5, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 413, 1000])
Span start logits:  torch.Size([5, 413])
span start probs dim:  torch.Size([5, 413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1135, 200])
Passage Length:  1135
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1135, 13])
Passage ques attention dim:  torch.Size([5, 1135, 13])
Passage question vectors dim:  torch.Size([5, 1135, 200])
Question Passage Similarity dim:  torch.Size([5, 1135])
Question passage attention dim:  torch.Size([5, 1135])
Final Merged Passage dim:  torch.Size([5, 1135, 800])
Modeled Passage dim:  torch.Size([5, 1135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1135, 1000])
Span start logits:  torch.Size([5, 1135])
span start probs dim:  torch.Size([5, 1135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 8])
Passage ques attention dim:  torch.Size([5, 176, 8])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 416, 200])
Passage Length:  416
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 416, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 416, 15])
Passage ques attention dim:  torch.Size([5, 416, 15])
Passage question vectors dim:  torch.Size([5, 416, 200])
Question Passage Similarity dim:  torch.Size([5, 416])
Question passage attention dim:  torch.Size([5, 416])
Final Merged Passage dim:  torch.Size([5, 416, 800])
Modeled Passage dim:  torch.Size([5, 416, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 416, 1000])
Span start logits:  torch.Size([5, 416])
span start probs dim:  torch.Size([5, 416])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 416]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 499, 200])
Passage Length:  499
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 499, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 499, 15])
Passage ques attention dim:  torch.Size([5, 499, 15])
Passage question vectors dim:  torch.Size([5, 499, 200])
Question Passage Similarity dim:  torch.Size([5, 499])
Question passage attention dim:  torch.Size([5, 499])
Final Merged Passage dim:  torch.Size([5, 499, 800])
Modeled Passage dim:  torch.Size([5, 499, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 499, 1000])
Span start logits:  torch.Size([5, 499])
span start probs dim:  torch.Size([5, 499])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 499]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 234, 11])
Passage ques attention dim:  torch.Size([5, 234, 11])
Passage question vectors dim:  torch.Size([5, 234, 200])
Question Passage Similarity dim:  torch.Size([5, 234])
Question passage attention dim:  torch.Size([5, 234])
Final Merged Passage dim:  torch.Size([5, 234, 800])
Modeled Passage dim:  torch.Size([5, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 234, 1000])
Span start logits:  torch.Size([5, 234])
span start probs dim:  torch.Size([5, 234])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 234]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 518, 200])
Passage Length:  518
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 518, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 518, 11])
Passage ques attention dim:  torch.Size([5, 518, 11])
Passage question vectors dim:  torch.Size([5, 518, 200])
Question Passage Similarity dim:  torch.Size([5, 518])
Question passage attention dim:  torch.Size([5, 518])
Final Merged Passage dim:  torch.Size([5, 518, 800])
Modeled Passage dim:  torch.Size([5, 518, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 518, 1000])
Span start logits:  torch.Size([5, 518])
span start probs dim:  torch.Size([5, 518])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 518]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1014, 200])
Passage Length:  1014
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1014, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1014, 8])
Passage ques attention dim:  torch.Size([5, 1014, 8])
Passage question vectors dim:  torch.Size([5, 1014, 200])
Question Passage Similarity dim:  torch.Size([5, 1014])
Question passage attention dim:  torch.Size([5, 1014])
Final Merged Passage dim:  torch.Size([5, 1014, 800])
Modeled Passage dim:  torch.Size([5, 1014, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1014, 1000])
Span start logits:  torch.Size([5, 1014])
span start probs dim:  torch.Size([5, 1014])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1014]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 412, 200])
Passage Length:  412
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 412, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 412, 9])
Passage ques attention dim:  torch.Size([5, 412, 9])
Passage question vectors dim:  torch.Size([5, 412, 200])
Question Passage Similarity dim:  torch.Size([5, 412])
Question passage attention dim:  torch.Size([5, 412])
Final Merged Passage dim:  torch.Size([5, 412, 800])
Modeled Passage dim:  torch.Size([5, 412, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 412, 1000])
Span start logits:  torch.Size([5, 412])
span start probs dim:  torch.Size([5, 412])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 412]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 595, 200])
Passage Length:  595
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 595, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 595, 9])
Passage ques attention dim:  torch.Size([5, 595, 9])
Passage question vectors dim:  torch.Size([5, 595, 200])
Question Passage Similarity dim:  torch.Size([5, 595])
Question passage attention dim:  torch.Size([5, 595])
Final Merged Passage dim:  torch.Size([5, 595, 800])
Modeled Passage dim:  torch.Size([5, 595, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 595, 1000])
Span start logits:  torch.Size([5, 595])
span start probs dim:  torch.Size([5, 595])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 595]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1193, 200])
Passage Length:  1193
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1193, 9])
Passage ques attention dim:  torch.Size([5, 1193, 9])
Passage question vectors dim:  torch.Size([5, 1193, 200])
Question Passage Similarity dim:  torch.Size([5, 1193])
Question passage attention dim:  torch.Size([5, 1193])
Final Merged Passage dim:  torch.Size([5, 1193, 800])
Modeled Passage dim:  torch.Size([5, 1193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1193, 1000])
Span start logits:  torch.Size([5, 1193])
span start probs dim:  torch.Size([5, 1193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 356, 200])
Passage Length:  356
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 356, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 356, 9])
Passage ques attention dim:  torch.Size([5, 356, 9])
Passage question vectors dim:  torch.Size([5, 356, 200])
Question Passage Similarity dim:  torch.Size([5, 356])
Question passage attention dim:  torch.Size([5, 356])
Final Merged Passage dim:  torch.Size([5, 356, 800])
Modeled Passage dim:  torch.Size([5, 356, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 356, 1000])
Span start logits:  torch.Size([5, 356])
span start probs dim:  torch.Size([5, 356])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 356]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 656, 200])
Passage Length:  656
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 656, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 656, 14])
Passage ques attention dim:  torch.Size([5, 656, 14])
Passage question vectors dim:  torch.Size([5, 656, 200])
Question Passage Similarity dim:  torch.Size([5, 656])
Question passage attention dim:  torch.Size([5, 656])
Final Merged Passage dim:  torch.Size([5, 656, 800])
Modeled Passage dim:  torch.Size([5, 656, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 656, 1000])
Span start logits:  torch.Size([5, 656])
span start probs dim:  torch.Size([5, 656])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 656]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 10])
Passage ques attention dim:  torch.Size([5, 619, 10])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 591, 200])
Passage Length:  591
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 591, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 591, 12])
Passage ques attention dim:  torch.Size([5, 591, 12])
Passage question vectors dim:  torch.Size([5, 591, 200])
Question Passage Similarity dim:  torch.Size([5, 591])
Question passage attention dim:  torch.Size([5, 591])
Final Merged Passage dim:  torch.Size([5, 591, 800])
Modeled Passage dim:  torch.Size([5, 591, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 591, 1000])
Span start logits:  torch.Size([5, 591])
span start probs dim:  torch.Size([5, 591])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 591]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1713, 200])
Passage Length:  1713
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1713, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1713, 14])
Passage ques attention dim:  torch.Size([5, 1713, 14])
Passage question vectors dim:  torch.Size([5, 1713, 200])
Question Passage Similarity dim:  torch.Size([5, 1713])
Question passage attention dim:  torch.Size([5, 1713])
Final Merged Passage dim:  torch.Size([5, 1713, 800])
Modeled Passage dim:  torch.Size([5, 1713, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1713, 1000])
Span start logits:  torch.Size([5, 1713])
span start probs dim:  torch.Size([5, 1713])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1713]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 854, 200])
Passage Length:  854
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 854, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 854, 10])
Passage ques attention dim:  torch.Size([5, 854, 10])
Passage question vectors dim:  torch.Size([5, 854, 200])
Question Passage Similarity dim:  torch.Size([5, 854])
Question passage attention dim:  torch.Size([5, 854])
Final Merged Passage dim:  torch.Size([5, 854, 800])
Modeled Passage dim:  torch.Size([5, 854, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 854, 1000])
Span start logits:  torch.Size([5, 854])
span start probs dim:  torch.Size([5, 854])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 854]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 10])
Passage ques attention dim:  torch.Size([5, 273, 10])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 952, 200])
Passage Length:  952
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 952, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 952, 14])
Passage ques attention dim:  torch.Size([5, 952, 14])
Passage question vectors dim:  torch.Size([5, 952, 200])
Question Passage Similarity dim:  torch.Size([5, 952])
Question passage attention dim:  torch.Size([5, 952])
Final Merged Passage dim:  torch.Size([5, 952, 800])
Modeled Passage dim:  torch.Size([5, 952, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 952, 1000])
Span start logits:  torch.Size([5, 952])
span start probs dim:  torch.Size([5, 952])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 952]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 361, 11])
Passage ques attention dim:  torch.Size([5, 361, 11])
Passage question vectors dim:  torch.Size([5, 361, 200])
Question Passage Similarity dim:  torch.Size([5, 361])
Question passage attention dim:  torch.Size([5, 361])
Final Merged Passage dim:  torch.Size([5, 361, 800])
Modeled Passage dim:  torch.Size([5, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 361, 1000])
Span start logits:  torch.Size([5, 361])
span start probs dim:  torch.Size([5, 361])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 361]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 963, 200])
Passage Length:  963
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 963, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 963, 13])
Passage ques attention dim:  torch.Size([5, 963, 13])
Passage question vectors dim:  torch.Size([5, 963, 200])
Question Passage Similarity dim:  torch.Size([5, 963])
Question passage attention dim:  torch.Size([5, 963])
Final Merged Passage dim:  torch.Size([5, 963, 800])
Modeled Passage dim:  torch.Size([5, 963, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 963, 1000])
Span start logits:  torch.Size([5, 963])
span start probs dim:  torch.Size([5, 963])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 963]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 489, 200])
Passage Length:  489
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 489, 11])
Passage ques attention dim:  torch.Size([5, 489, 11])
Passage question vectors dim:  torch.Size([5, 489, 200])
Question Passage Similarity dim:  torch.Size([5, 489])
Question passage attention dim:  torch.Size([5, 489])
Final Merged Passage dim:  torch.Size([5, 489, 800])
Modeled Passage dim:  torch.Size([5, 489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 489, 1000])
Span start logits:  torch.Size([5, 489])
span start probs dim:  torch.Size([5, 489])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 489]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1225, 200])
Passage Length:  1225
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1225, 10])
Passage ques attention dim:  torch.Size([5, 1225, 10])
Passage question vectors dim:  torch.Size([5, 1225, 200])
Question Passage Similarity dim:  torch.Size([5, 1225])
Question passage attention dim:  torch.Size([5, 1225])
Final Merged Passage dim:  torch.Size([5, 1225, 800])
Modeled Passage dim:  torch.Size([5, 1225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1225, 1000])
Span start logits:  torch.Size([5, 1225])
span start probs dim:  torch.Size([5, 1225])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1225]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1520, 200])
Passage Length:  1520
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1520, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1520, 12])
Passage ques attention dim:  torch.Size([5, 1520, 12])
Passage question vectors dim:  torch.Size([5, 1520, 200])
Question Passage Similarity dim:  torch.Size([5, 1520])
Question passage attention dim:  torch.Size([5, 1520])
Final Merged Passage dim:  torch.Size([5, 1520, 800])
Modeled Passage dim:  torch.Size([5, 1520, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1520, 1000])
Span start logits:  torch.Size([5, 1520])
span start probs dim:  torch.Size([5, 1520])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1520]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 387, 200])
Passage Length:  387
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 387, 10])
Passage ques attention dim:  torch.Size([5, 387, 10])
Passage question vectors dim:  torch.Size([5, 387, 200])
Question Passage Similarity dim:  torch.Size([5, 387])
Question passage attention dim:  torch.Size([5, 387])
Final Merged Passage dim:  torch.Size([5, 387, 800])
Modeled Passage dim:  torch.Size([5, 387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 387, 1000])
Span start logits:  torch.Size([5, 387])
span start probs dim:  torch.Size([5, 387])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 387]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 384, 200])
Passage Length:  384
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 384, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 384, 11])
Passage ques attention dim:  torch.Size([5, 384, 11])
Passage question vectors dim:  torch.Size([5, 384, 200])
Question Passage Similarity dim:  torch.Size([5, 384])
Question passage attention dim:  torch.Size([5, 384])
Final Merged Passage dim:  torch.Size([5, 384, 800])
Modeled Passage dim:  torch.Size([5, 384, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 384, 1000])
Span start logits:  torch.Size([5, 384])
span start probs dim:  torch.Size([5, 384])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 384]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 299, 200])
Passage Length:  299
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 299, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 299, 19])
Passage ques attention dim:  torch.Size([5, 299, 19])
Passage question vectors dim:  torch.Size([5, 299, 200])
Question Passage Similarity dim:  torch.Size([5, 299])
Question passage attention dim:  torch.Size([5, 299])
Final Merged Passage dim:  torch.Size([5, 299, 800])
Modeled Passage dim:  torch.Size([5, 299, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 299, 1000])
Span start logits:  torch.Size([5, 299])
span start probs dim:  torch.Size([5, 299])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 299]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 384, 200])
Passage Length:  384
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 384, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 384, 11])
Passage ques attention dim:  torch.Size([5, 384, 11])
Passage question vectors dim:  torch.Size([5, 384, 200])
Question Passage Similarity dim:  torch.Size([5, 384])
Question passage attention dim:  torch.Size([5, 384])
Final Merged Passage dim:  torch.Size([5, 384, 800])
Modeled Passage dim:  torch.Size([5, 384, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 384, 1000])
Span start logits:  torch.Size([5, 384])
span start probs dim:  torch.Size([5, 384])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 384]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 444, 200])
Passage Length:  444
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 444, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 444, 13])
Passage ques attention dim:  torch.Size([5, 444, 13])
Passage question vectors dim:  torch.Size([5, 444, 200])
Question Passage Similarity dim:  torch.Size([5, 444])
Question passage attention dim:  torch.Size([5, 444])
Final Merged Passage dim:  torch.Size([5, 444, 800])
Modeled Passage dim:  torch.Size([5, 444, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 444, 1000])
Span start logits:  torch.Size([5, 444])
span start probs dim:  torch.Size([5, 444])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 444]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 663, 200])
Passage Length:  663
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 663, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 663, 10])
Passage ques attention dim:  torch.Size([5, 663, 10])
Passage question vectors dim:  torch.Size([5, 663, 200])
Question Passage Similarity dim:  torch.Size([5, 663])
Question passage attention dim:  torch.Size([5, 663])
Final Merged Passage dim:  torch.Size([5, 663, 800])
Modeled Passage dim:  torch.Size([5, 663, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 663, 1000])
Span start logits:  torch.Size([5, 663])
span start probs dim:  torch.Size([5, 663])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 663]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 808, 200])
Passage Length:  808
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 808, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 808, 16])
Passage ques attention dim:  torch.Size([5, 808, 16])
Passage question vectors dim:  torch.Size([5, 808, 200])
Question Passage Similarity dim:  torch.Size([5, 808])
Question passage attention dim:  torch.Size([5, 808])
Final Merged Passage dim:  torch.Size([5, 808, 800])
Modeled Passage dim:  torch.Size([5, 808, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 808, 1000])
Span start logits:  torch.Size([5, 808])
span start probs dim:  torch.Size([5, 808])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 808]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 339, 200])
Passage Length:  339
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 339, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 339, 14])
Passage ques attention dim:  torch.Size([5, 339, 14])
Passage question vectors dim:  torch.Size([5, 339, 200])
Question Passage Similarity dim:  torch.Size([5, 339])
Question passage attention dim:  torch.Size([5, 339])
Final Merged Passage dim:  torch.Size([5, 339, 800])
Modeled Passage dim:  torch.Size([5, 339, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 339, 1000])
Span start logits:  torch.Size([5, 339])
span start probs dim:  torch.Size([5, 339])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 339]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 510, 200])
Passage Length:  510
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 510, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 510, 7])
Passage ques attention dim:  torch.Size([5, 510, 7])
Passage question vectors dim:  torch.Size([5, 510, 200])
Question Passage Similarity dim:  torch.Size([5, 510])
Question passage attention dim:  torch.Size([5, 510])
Final Merged Passage dim:  torch.Size([5, 510, 800])
Modeled Passage dim:  torch.Size([5, 510, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 510, 1000])
Span start logits:  torch.Size([5, 510])
span start probs dim:  torch.Size([5, 510])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 510]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 294, 200])
Passage Length:  294
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 294, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 294, 10])
Passage ques attention dim:  torch.Size([5, 294, 10])
Passage question vectors dim:  torch.Size([5, 294, 200])
Question Passage Similarity dim:  torch.Size([5, 294])
Question passage attention dim:  torch.Size([5, 294])
Final Merged Passage dim:  torch.Size([5, 294, 800])
Modeled Passage dim:  torch.Size([5, 294, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 294, 1000])
Span start logits:  torch.Size([5, 294])
span start probs dim:  torch.Size([5, 294])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 294]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1197, 200])
Passage Length:  1197
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1197, 13])
Passage ques attention dim:  torch.Size([5, 1197, 13])
Passage question vectors dim:  torch.Size([5, 1197, 200])
Question Passage Similarity dim:  torch.Size([5, 1197])
Question passage attention dim:  torch.Size([5, 1197])
Final Merged Passage dim:  torch.Size([5, 1197, 800])
Modeled Passage dim:  torch.Size([5, 1197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1197, 1000])
Span start logits:  torch.Size([5, 1197])
span start probs dim:  torch.Size([5, 1197])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1197]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1243, 200])
Passage Length:  1243
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1243, 9])
Passage ques attention dim:  torch.Size([5, 1243, 9])
Passage question vectors dim:  torch.Size([5, 1243, 200])
Question Passage Similarity dim:  torch.Size([5, 1243])
Question passage attention dim:  torch.Size([5, 1243])
Final Merged Passage dim:  torch.Size([5, 1243, 800])
Modeled Passage dim:  torch.Size([5, 1243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1243, 1000])
Span start logits:  torch.Size([5, 1243])
span start probs dim:  torch.Size([5, 1243])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1243]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 684, 200])
Passage Length:  684
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 684, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 684, 9])
Passage ques attention dim:  torch.Size([5, 684, 9])
Passage question vectors dim:  torch.Size([5, 684, 200])
Question Passage Similarity dim:  torch.Size([5, 684])
Question passage attention dim:  torch.Size([5, 684])
Final Merged Passage dim:  torch.Size([5, 684, 800])
Modeled Passage dim:  torch.Size([5, 684, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 684, 1000])
Span start logits:  torch.Size([5, 684])
span start probs dim:  torch.Size([5, 684])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 684]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 914, 200])
Passage Length:  914
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 914, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 914, 9])
Passage ques attention dim:  torch.Size([5, 914, 9])
Passage question vectors dim:  torch.Size([5, 914, 200])
Question Passage Similarity dim:  torch.Size([5, 914])
Question passage attention dim:  torch.Size([5, 914])
Final Merged Passage dim:  torch.Size([5, 914, 800])
Modeled Passage dim:  torch.Size([5, 914, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 914, 1000])
Span start logits:  torch.Size([5, 914])
span start probs dim:  torch.Size([5, 914])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 914]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 933, 200])
Passage Length:  933
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 933, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 933, 10])
Passage ques attention dim:  torch.Size([5, 933, 10])
Passage question vectors dim:  torch.Size([5, 933, 200])
Question Passage Similarity dim:  torch.Size([5, 933])
Question passage attention dim:  torch.Size([5, 933])
Final Merged Passage dim:  torch.Size([5, 933, 800])
Modeled Passage dim:  torch.Size([5, 933, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 933, 1000])
Span start logits:  torch.Size([5, 933])
span start probs dim:  torch.Size([5, 933])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 933]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 323, 12])
Passage ques attention dim:  torch.Size([5, 323, 12])
Passage question vectors dim:  torch.Size([5, 323, 200])
Question Passage Similarity dim:  torch.Size([5, 323])
Question passage attention dim:  torch.Size([5, 323])
Final Merged Passage dim:  torch.Size([5, 323, 800])
Modeled Passage dim:  torch.Size([5, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 323, 1000])
Span start logits:  torch.Size([5, 323])
span start probs dim:  torch.Size([5, 323])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 323]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 510, 200])
Passage Length:  510
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 510, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 510, 9])
Passage ques attention dim:  torch.Size([5, 510, 9])
Passage question vectors dim:  torch.Size([5, 510, 200])
Question Passage Similarity dim:  torch.Size([5, 510])
Question passage attention dim:  torch.Size([5, 510])
Final Merged Passage dim:  torch.Size([5, 510, 800])
Modeled Passage dim:  torch.Size([5, 510, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 510, 1000])
Span start logits:  torch.Size([5, 510])
span start probs dim:  torch.Size([5, 510])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 510]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 536, 200])
Passage Length:  536
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 536, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 536, 10])
Passage ques attention dim:  torch.Size([5, 536, 10])
Passage question vectors dim:  torch.Size([5, 536, 200])
Question Passage Similarity dim:  torch.Size([5, 536])
Question passage attention dim:  torch.Size([5, 536])
Final Merged Passage dim:  torch.Size([5, 536, 800])
Modeled Passage dim:  torch.Size([5, 536, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 536, 1000])
Span start logits:  torch.Size([5, 536])
span start probs dim:  torch.Size([5, 536])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 536]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 397, 200])
Passage Length:  397
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 397, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 397, 11])
Passage ques attention dim:  torch.Size([5, 397, 11])
Passage question vectors dim:  torch.Size([5, 397, 200])
Question Passage Similarity dim:  torch.Size([5, 397])
Question passage attention dim:  torch.Size([5, 397])
Final Merged Passage dim:  torch.Size([5, 397, 800])
Modeled Passage dim:  torch.Size([5, 397, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 397, 1000])
Span start logits:  torch.Size([5, 397])
span start probs dim:  torch.Size([5, 397])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 397]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 200, 10])
Passage ques attention dim:  torch.Size([5, 200, 10])
Passage question vectors dim:  torch.Size([5, 200, 200])
Question Passage Similarity dim:  torch.Size([5, 200])
Question passage attention dim:  torch.Size([5, 200])
Final Merged Passage dim:  torch.Size([5, 200, 800])
Modeled Passage dim:  torch.Size([5, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 200, 1000])
Span start logits:  torch.Size([5, 200])
span start probs dim:  torch.Size([5, 200])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 200]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 8])
Passage ques attention dim:  torch.Size([5, 1094, 8])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 691, 200])
Passage Length:  691
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 691, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 691, 8])
Passage ques attention dim:  torch.Size([5, 691, 8])
Passage question vectors dim:  torch.Size([5, 691, 200])
Question Passage Similarity dim:  torch.Size([5, 691])
Question passage attention dim:  torch.Size([5, 691])
Final Merged Passage dim:  torch.Size([5, 691, 800])
Modeled Passage dim:  torch.Size([5, 691, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 691, 1000])
Span start logits:  torch.Size([5, 691])
span start probs dim:  torch.Size([5, 691])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 691]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 409, 200])
Passage Length:  409
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 409, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 409, 15])
Passage ques attention dim:  torch.Size([5, 409, 15])
Passage question vectors dim:  torch.Size([5, 409, 200])
Question Passage Similarity dim:  torch.Size([5, 409])
Question passage attention dim:  torch.Size([5, 409])
Final Merged Passage dim:  torch.Size([5, 409, 800])
Modeled Passage dim:  torch.Size([5, 409, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 409, 1000])
Span start logits:  torch.Size([5, 409])
span start probs dim:  torch.Size([5, 409])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 409]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 365, 10])
Passage ques attention dim:  torch.Size([5, 365, 10])
Passage question vectors dim:  torch.Size([5, 365, 200])
Question Passage Similarity dim:  torch.Size([5, 365])
Question passage attention dim:  torch.Size([5, 365])
Final Merged Passage dim:  torch.Size([5, 365, 800])
Modeled Passage dim:  torch.Size([5, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 365, 1000])
Span start logits:  torch.Size([5, 365])
span start probs dim:  torch.Size([5, 365])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 365]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1713, 200])
Passage Length:  1713
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1713, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1713, 12])
Passage ques attention dim:  torch.Size([5, 1713, 12])
Passage question vectors dim:  torch.Size([5, 1713, 200])
Question Passage Similarity dim:  torch.Size([5, 1713])
Question passage attention dim:  torch.Size([5, 1713])
Final Merged Passage dim:  torch.Size([5, 1713, 800])
Modeled Passage dim:  torch.Size([5, 1713, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1713, 1000])
Span start logits:  torch.Size([5, 1713])
span start probs dim:  torch.Size([5, 1713])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1713]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 12])
Passage ques attention dim:  torch.Size([5, 462, 12])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 787, 200])
Passage Length:  787
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 787, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 787, 12])
Passage ques attention dim:  torch.Size([5, 787, 12])
Passage question vectors dim:  torch.Size([5, 787, 200])
Question Passage Similarity dim:  torch.Size([5, 787])
Question passage attention dim:  torch.Size([5, 787])
Final Merged Passage dim:  torch.Size([5, 787, 800])
Modeled Passage dim:  torch.Size([5, 787, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 787, 1000])
Span start logits:  torch.Size([5, 787])
span start probs dim:  torch.Size([5, 787])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 787]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 11])
Passage ques attention dim:  torch.Size([5, 176, 11])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 456, 9])
Passage ques attention dim:  torch.Size([5, 456, 9])
Passage question vectors dim:  torch.Size([5, 456, 200])
Question Passage Similarity dim:  torch.Size([5, 456])
Question passage attention dim:  torch.Size([5, 456])
Final Merged Passage dim:  torch.Size([5, 456, 800])
Modeled Passage dim:  torch.Size([5, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 456, 1000])
Span start logits:  torch.Size([5, 456])
span start probs dim:  torch.Size([5, 456])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 456]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 850, 200])
Passage Length:  850
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 850, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 850, 14])
Passage ques attention dim:  torch.Size([5, 850, 14])
Passage question vectors dim:  torch.Size([5, 850, 200])
Question Passage Similarity dim:  torch.Size([5, 850])
Question passage attention dim:  torch.Size([5, 850])
Final Merged Passage dim:  torch.Size([5, 850, 800])
Modeled Passage dim:  torch.Size([5, 850, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 850, 1000])
Span start logits:  torch.Size([5, 850])
span start probs dim:  torch.Size([5, 850])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 850]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 1395, 200])
Passage Length:  1395
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 1395, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1395, 15])
Passage ques attention dim:  torch.Size([5, 1395, 15])
Passage question vectors dim:  torch.Size([5, 1395, 200])
Question Passage Similarity dim:  torch.Size([5, 1395])
Question passage attention dim:  torch.Size([5, 1395])
Final Merged Passage dim:  torch.Size([5, 1395, 800])
Modeled Passage dim:  torch.Size([5, 1395, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1395, 1000])
Span start logits:  torch.Size([5, 1395])
span start probs dim:  torch.Size([5, 1395])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1395]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 591, 200])
Passage Length:  591
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 591, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 591, 9])
Passage ques attention dim:  torch.Size([5, 591, 9])
Passage question vectors dim:  torch.Size([5, 591, 200])
Question Passage Similarity dim:  torch.Size([5, 591])
Question passage attention dim:  torch.Size([5, 591])
Final Merged Passage dim:  torch.Size([5, 591, 800])
Modeled Passage dim:  torch.Size([5, 591, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 591, 1000])
Span start logits:  torch.Size([5, 591])
span start probs dim:  torch.Size([5, 591])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 591]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 910, 200])
Passage Length:  910
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 910, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 910, 8])
Passage ques attention dim:  torch.Size([5, 910, 8])
Passage question vectors dim:  torch.Size([5, 910, 200])
Question Passage Similarity dim:  torch.Size([5, 910])
Question passage attention dim:  torch.Size([5, 910])
Final Merged Passage dim:  torch.Size([5, 910, 800])
Modeled Passage dim:  torch.Size([5, 910, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 910, 1000])
Span start logits:  torch.Size([5, 910])
span start probs dim:  torch.Size([5, 910])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 910]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 705, 200])
Passage Length:  705
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 705, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 705, 8])
Passage ques attention dim:  torch.Size([5, 705, 8])
Passage question vectors dim:  torch.Size([5, 705, 200])
Question Passage Similarity dim:  torch.Size([5, 705])
Question passage attention dim:  torch.Size([5, 705])
Final Merged Passage dim:  torch.Size([5, 705, 800])
Modeled Passage dim:  torch.Size([5, 705, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 705, 1000])
Span start logits:  torch.Size([5, 705])
span start probs dim:  torch.Size([5, 705])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 705]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 427, 200])
Passage Length:  427
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 427, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 427, 12])
Passage ques attention dim:  torch.Size([5, 427, 12])
Passage question vectors dim:  torch.Size([5, 427, 200])
Question Passage Similarity dim:  torch.Size([5, 427])
Question passage attention dim:  torch.Size([5, 427])
Final Merged Passage dim:  torch.Size([5, 427, 800])
Modeled Passage dim:  torch.Size([5, 427, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 427, 1000])
Span start logits:  torch.Size([5, 427])
span start probs dim:  torch.Size([5, 427])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 427]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 705, 200])
Passage Length:  705
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 705, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 705, 14])
Passage ques attention dim:  torch.Size([5, 705, 14])
Passage question vectors dim:  torch.Size([5, 705, 200])
Question Passage Similarity dim:  torch.Size([5, 705])
Question passage attention dim:  torch.Size([5, 705])
Final Merged Passage dim:  torch.Size([5, 705, 800])
Modeled Passage dim:  torch.Size([5, 705, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 705, 1000])
Span start logits:  torch.Size([5, 705])
span start probs dim:  torch.Size([5, 705])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 705]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1062, 200])
Passage Length:  1062
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1062, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1062, 14])
Passage ques attention dim:  torch.Size([5, 1062, 14])
Passage question vectors dim:  torch.Size([5, 1062, 200])
Question Passage Similarity dim:  torch.Size([5, 1062])
Question passage attention dim:  torch.Size([5, 1062])
Final Merged Passage dim:  torch.Size([5, 1062, 800])
Modeled Passage dim:  torch.Size([5, 1062, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1062, 1000])
Span start logits:  torch.Size([5, 1062])
span start probs dim:  torch.Size([5, 1062])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1062]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 489, 200])
Passage Length:  489
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 489, 11])
Passage ques attention dim:  torch.Size([5, 489, 11])
Passage question vectors dim:  torch.Size([5, 489, 200])
Question Passage Similarity dim:  torch.Size([5, 489])
Question passage attention dim:  torch.Size([5, 489])
Final Merged Passage dim:  torch.Size([5, 489, 800])
Modeled Passage dim:  torch.Size([5, 489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 489, 1000])
Span start logits:  torch.Size([5, 489])
span start probs dim:  torch.Size([5, 489])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 489]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 335, 200])
Passage Length:  335
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 335, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 335, 11])
Passage ques attention dim:  torch.Size([5, 335, 11])
Passage question vectors dim:  torch.Size([5, 335, 200])
Question Passage Similarity dim:  torch.Size([5, 335])
Question passage attention dim:  torch.Size([5, 335])
Final Merged Passage dim:  torch.Size([5, 335, 800])
Modeled Passage dim:  torch.Size([5, 335, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 335, 1000])
Span start logits:  torch.Size([5, 335])
span start probs dim:  torch.Size([5, 335])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 335]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 1047, 200])
Passage Length:  1047
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 1047, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1047, 16])
Passage ques attention dim:  torch.Size([5, 1047, 16])
Passage question vectors dim:  torch.Size([5, 1047, 200])
Question Passage Similarity dim:  torch.Size([5, 1047])
Question passage attention dim:  torch.Size([5, 1047])
Final Merged Passage dim:  torch.Size([5, 1047, 800])
Modeled Passage dim:  torch.Size([5, 1047, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1047, 1000])
Span start logits:  torch.Size([5, 1047])
span start probs dim:  torch.Size([5, 1047])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1047]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 360, 200])
Passage Length:  360
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 360, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 360, 8])
Passage ques attention dim:  torch.Size([5, 360, 8])
Passage question vectors dim:  torch.Size([5, 360, 200])
Question Passage Similarity dim:  torch.Size([5, 360])
Question passage attention dim:  torch.Size([5, 360])
Final Merged Passage dim:  torch.Size([5, 360, 800])
Modeled Passage dim:  torch.Size([5, 360, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 360, 1000])
Span start logits:  torch.Size([5, 360])
span start probs dim:  torch.Size([5, 360])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 360]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 714, 10])
Passage ques attention dim:  torch.Size([5, 714, 10])
Passage question vectors dim:  torch.Size([5, 714, 200])
Question Passage Similarity dim:  torch.Size([5, 714])
Question passage attention dim:  torch.Size([5, 714])
Final Merged Passage dim:  torch.Size([5, 714, 800])
Modeled Passage dim:  torch.Size([5, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 714, 1000])
Span start logits:  torch.Size([5, 714])
span start probs dim:  torch.Size([5, 714])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 714]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 906, 8])
Passage ques attention dim:  torch.Size([5, 906, 8])
Passage question vectors dim:  torch.Size([5, 906, 200])
Question Passage Similarity dim:  torch.Size([5, 906])
Question passage attention dim:  torch.Size([5, 906])
Final Merged Passage dim:  torch.Size([5, 906, 800])
Modeled Passage dim:  torch.Size([5, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 906, 1000])
Span start logits:  torch.Size([5, 906])
span start probs dim:  torch.Size([5, 906])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 906]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 934, 200])
Passage Length:  934
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 934, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 934, 9])
Passage ques attention dim:  torch.Size([5, 934, 9])
Passage question vectors dim:  torch.Size([5, 934, 200])
Question Passage Similarity dim:  torch.Size([5, 934])
Question passage attention dim:  torch.Size([5, 934])
Final Merged Passage dim:  torch.Size([5, 934, 800])
Modeled Passage dim:  torch.Size([5, 934, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 934, 1000])
Span start logits:  torch.Size([5, 934])
span start probs dim:  torch.Size([5, 934])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 934]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1603, 200])
Passage Length:  1603
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1603, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1603, 9])
Passage ques attention dim:  torch.Size([5, 1603, 9])
Passage question vectors dim:  torch.Size([5, 1603, 200])
Question Passage Similarity dim:  torch.Size([5, 1603])
Question passage attention dim:  torch.Size([5, 1603])
Final Merged Passage dim:  torch.Size([5, 1603, 800])
Modeled Passage dim:  torch.Size([5, 1603, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1603, 1000])
Span start logits:  torch.Size([5, 1603])
span start probs dim:  torch.Size([5, 1603])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1603]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1344, 200])
Passage Length:  1344
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1344, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1344, 13])
Passage ques attention dim:  torch.Size([5, 1344, 13])
Passage question vectors dim:  torch.Size([5, 1344, 200])
Question Passage Similarity dim:  torch.Size([5, 1344])
Question passage attention dim:  torch.Size([5, 1344])
Final Merged Passage dim:  torch.Size([5, 1344, 800])
Modeled Passage dim:  torch.Size([5, 1344, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1344, 1000])
Span start logits:  torch.Size([5, 1344])
span start probs dim:  torch.Size([5, 1344])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1344]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 403, 200])
Passage Length:  403
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 403, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 403, 12])
Passage ques attention dim:  torch.Size([5, 403, 12])
Passage question vectors dim:  torch.Size([5, 403, 200])
Question Passage Similarity dim:  torch.Size([5, 403])
Question passage attention dim:  torch.Size([5, 403])
Final Merged Passage dim:  torch.Size([5, 403, 800])
Modeled Passage dim:  torch.Size([5, 403, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 403, 1000])
Span start logits:  torch.Size([5, 403])
span start probs dim:  torch.Size([5, 403])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 403]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 960, 200])
Passage Length:  960
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 960, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 960, 11])
Passage ques attention dim:  torch.Size([5, 960, 11])
Passage question vectors dim:  torch.Size([5, 960, 200])
Question Passage Similarity dim:  torch.Size([5, 960])
Question passage attention dim:  torch.Size([5, 960])
Final Merged Passage dim:  torch.Size([5, 960, 800])
Modeled Passage dim:  torch.Size([5, 960, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 960, 1000])
Span start logits:  torch.Size([5, 960])
span start probs dim:  torch.Size([5, 960])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 960]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 567, 200])
Passage Length:  567
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 567, 11])
Passage ques attention dim:  torch.Size([5, 567, 11])
Passage question vectors dim:  torch.Size([5, 567, 200])
Question Passage Similarity dim:  torch.Size([5, 567])
Question passage attention dim:  torch.Size([5, 567])
Final Merged Passage dim:  torch.Size([5, 567, 800])
Modeled Passage dim:  torch.Size([5, 567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 567, 1000])
Span start logits:  torch.Size([5, 567])
span start probs dim:  torch.Size([5, 567])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 567]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1493, 200])
Passage Length:  1493
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1493, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1493, 11])
Passage ques attention dim:  torch.Size([5, 1493, 11])
Passage question vectors dim:  torch.Size([5, 1493, 200])
Question Passage Similarity dim:  torch.Size([5, 1493])
Question passage attention dim:  torch.Size([5, 1493])
Final Merged Passage dim:  torch.Size([5, 1493, 800])
Modeled Passage dim:  torch.Size([5, 1493, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1493, 1000])
Span start logits:  torch.Size([5, 1493])
span start probs dim:  torch.Size([5, 1493])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1493]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 506, 200])
Passage Length:  506
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 506, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 506, 10])
Passage ques attention dim:  torch.Size([5, 506, 10])
Passage question vectors dim:  torch.Size([5, 506, 200])
Question Passage Similarity dim:  torch.Size([5, 506])
Question passage attention dim:  torch.Size([5, 506])
Final Merged Passage dim:  torch.Size([5, 506, 800])
Modeled Passage dim:  torch.Size([5, 506, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 506, 1000])
Span start logits:  torch.Size([5, 506])
span start probs dim:  torch.Size([5, 506])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 506]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 296, 200])
Passage Length:  296
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 296, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 296, 10])
Passage ques attention dim:  torch.Size([5, 296, 10])
Passage question vectors dim:  torch.Size([5, 296, 200])
Question Passage Similarity dim:  torch.Size([5, 296])
Question passage attention dim:  torch.Size([5, 296])
Final Merged Passage dim:  torch.Size([5, 296, 800])
Modeled Passage dim:  torch.Size([5, 296, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 296, 1000])
Span start logits:  torch.Size([5, 296])
span start probs dim:  torch.Size([5, 296])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 296]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 360, 200])
Passage Length:  360
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 360, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 360, 9])
Passage ques attention dim:  torch.Size([5, 360, 9])
Passage question vectors dim:  torch.Size([5, 360, 200])
Question Passage Similarity dim:  torch.Size([5, 360])
Question passage attention dim:  torch.Size([5, 360])
Final Merged Passage dim:  torch.Size([5, 360, 800])
Modeled Passage dim:  torch.Size([5, 360, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 360, 1000])
Span start logits:  torch.Size([5, 360])
span start probs dim:  torch.Size([5, 360])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 360]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 264, 200])
Passage Length:  264
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 264, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 264, 9])
Passage ques attention dim:  torch.Size([5, 264, 9])
Passage question vectors dim:  torch.Size([5, 264, 200])
Question Passage Similarity dim:  torch.Size([5, 264])
Question passage attention dim:  torch.Size([5, 264])
Final Merged Passage dim:  torch.Size([5, 264, 800])
Modeled Passage dim:  torch.Size([5, 264, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 264, 1000])
Span start logits:  torch.Size([5, 264])
span start probs dim:  torch.Size([5, 264])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 264]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 169, 13])
Passage ques attention dim:  torch.Size([5, 169, 13])
Passage question vectors dim:  torch.Size([5, 169, 200])
Question Passage Similarity dim:  torch.Size([5, 169])
Question passage attention dim:  torch.Size([5, 169])
Final Merged Passage dim:  torch.Size([5, 169, 800])
Modeled Passage dim:  torch.Size([5, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 169, 1000])
Span start logits:  torch.Size([5, 169])
span start probs dim:  torch.Size([5, 169])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 169]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 740, 200])
Passage Length:  740
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 740, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 740, 9])
Passage ques attention dim:  torch.Size([5, 740, 9])
Passage question vectors dim:  torch.Size([5, 740, 200])
Question Passage Similarity dim:  torch.Size([5, 740])
Question passage attention dim:  torch.Size([5, 740])
Final Merged Passage dim:  torch.Size([5, 740, 800])
Modeled Passage dim:  torch.Size([5, 740, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 740, 1000])
Span start logits:  torch.Size([5, 740])
span start probs dim:  torch.Size([5, 740])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 740]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 845, 200])
Passage Length:  845
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 845, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 845, 8])
Passage ques attention dim:  torch.Size([5, 845, 8])
Passage question vectors dim:  torch.Size([5, 845, 200])
Question Passage Similarity dim:  torch.Size([5, 845])
Question passage attention dim:  torch.Size([5, 845])
Final Merged Passage dim:  torch.Size([5, 845, 800])
Modeled Passage dim:  torch.Size([5, 845, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 845, 1000])
Span start logits:  torch.Size([5, 845])
span start probs dim:  torch.Size([5, 845])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 845]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1253, 200])
Passage Length:  1253
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1253, 11])
Passage ques attention dim:  torch.Size([5, 1253, 11])
Passage question vectors dim:  torch.Size([5, 1253, 200])
Question Passage Similarity dim:  torch.Size([5, 1253])
Question passage attention dim:  torch.Size([5, 1253])
Final Merged Passage dim:  torch.Size([5, 1253, 800])
Modeled Passage dim:  torch.Size([5, 1253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1253, 1000])
Span start logits:  torch.Size([5, 1253])
span start probs dim:  torch.Size([5, 1253])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1253]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1344, 200])
Passage Length:  1344
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1344, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1344, 13])
Passage ques attention dim:  torch.Size([5, 1344, 13])
Passage question vectors dim:  torch.Size([5, 1344, 200])
Question Passage Similarity dim:  torch.Size([5, 1344])
Question passage attention dim:  torch.Size([5, 1344])
Final Merged Passage dim:  torch.Size([5, 1344, 800])
Modeled Passage dim:  torch.Size([5, 1344, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1344, 1000])
Span start logits:  torch.Size([5, 1344])
span start probs dim:  torch.Size([5, 1344])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1344]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 595, 200])
Passage Length:  595
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 595, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 595, 11])
Passage ques attention dim:  torch.Size([5, 595, 11])
Passage question vectors dim:  torch.Size([5, 595, 200])
Question Passage Similarity dim:  torch.Size([5, 595])
Question passage attention dim:  torch.Size([5, 595])
Final Merged Passage dim:  torch.Size([5, 595, 800])
Modeled Passage dim:  torch.Size([5, 595, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 595, 1000])
Span start logits:  torch.Size([5, 595])
span start probs dim:  torch.Size([5, 595])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 595]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 986, 200])
Passage Length:  986
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 986, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 986, 11])
Passage ques attention dim:  torch.Size([5, 986, 11])
Passage question vectors dim:  torch.Size([5, 986, 200])
Question Passage Similarity dim:  torch.Size([5, 986])
Question passage attention dim:  torch.Size([5, 986])
Final Merged Passage dim:  torch.Size([5, 986, 800])
Modeled Passage dim:  torch.Size([5, 986, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 986, 1000])
Span start logits:  torch.Size([5, 986])
span start probs dim:  torch.Size([5, 986])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 986]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 491, 200])
Passage Length:  491
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 491, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 491, 12])
Passage ques attention dim:  torch.Size([5, 491, 12])
Passage question vectors dim:  torch.Size([5, 491, 200])
Question Passage Similarity dim:  torch.Size([5, 491])
Question passage attention dim:  torch.Size([5, 491])
Final Merged Passage dim:  torch.Size([5, 491, 800])
Modeled Passage dim:  torch.Size([5, 491, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 491, 1000])
Span start logits:  torch.Size([5, 491])
span start probs dim:  torch.Size([5, 491])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 491]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 967, 14])
Passage ques attention dim:  torch.Size([5, 967, 14])
Passage question vectors dim:  torch.Size([5, 967, 200])
Question Passage Similarity dim:  torch.Size([5, 967])
Question passage attention dim:  torch.Size([5, 967])
Final Merged Passage dim:  torch.Size([5, 967, 800])
Modeled Passage dim:  torch.Size([5, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 967, 1000])
Span start logits:  torch.Size([5, 967])
span start probs dim:  torch.Size([5, 967])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 967]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1083, 200])
Passage Length:  1083
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1083, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1083, 9])
Passage ques attention dim:  torch.Size([5, 1083, 9])
Passage question vectors dim:  torch.Size([5, 1083, 200])
Question Passage Similarity dim:  torch.Size([5, 1083])
Question passage attention dim:  torch.Size([5, 1083])
Final Merged Passage dim:  torch.Size([5, 1083, 800])
Modeled Passage dim:  torch.Size([5, 1083, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1083, 1000])
Span start logits:  torch.Size([5, 1083])
span start probs dim:  torch.Size([5, 1083])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1083]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 807, 200])
Passage Length:  807
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 807, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 807, 14])
Passage ques attention dim:  torch.Size([5, 807, 14])
Passage question vectors dim:  torch.Size([5, 807, 200])
Question Passage Similarity dim:  torch.Size([5, 807])
Question passage attention dim:  torch.Size([5, 807])
Final Merged Passage dim:  torch.Size([5, 807, 800])
Modeled Passage dim:  torch.Size([5, 807, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 807, 1000])
Span start logits:  torch.Size([5, 807])
span start probs dim:  torch.Size([5, 807])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 807]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1482, 200])
Passage Length:  1482
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1482, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1482, 10])
Passage ques attention dim:  torch.Size([5, 1482, 10])
Passage question vectors dim:  torch.Size([5, 1482, 200])
Question Passage Similarity dim:  torch.Size([5, 1482])
Question passage attention dim:  torch.Size([5, 1482])
Final Merged Passage dim:  torch.Size([5, 1482, 800])
Modeled Passage dim:  torch.Size([5, 1482, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1482, 1000])
Span start logits:  torch.Size([5, 1482])
span start probs dim:  torch.Size([5, 1482])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1482]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1482, 200])
Passage Length:  1482
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1482, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1482, 12])
Passage ques attention dim:  torch.Size([5, 1482, 12])
Passage question vectors dim:  torch.Size([5, 1482, 200])
Question Passage Similarity dim:  torch.Size([5, 1482])
Question passage attention dim:  torch.Size([5, 1482])
Final Merged Passage dim:  torch.Size([5, 1482, 800])
Modeled Passage dim:  torch.Size([5, 1482, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1482, 1000])
Span start logits:  torch.Size([5, 1482])
span start probs dim:  torch.Size([5, 1482])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1482]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 1543, 200])
Passage Length:  1543
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 1543, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1543, 6])
Passage ques attention dim:  torch.Size([5, 1543, 6])
Passage question vectors dim:  torch.Size([5, 1543, 200])
Question Passage Similarity dim:  torch.Size([5, 1543])
Question passage attention dim:  torch.Size([5, 1543])
Final Merged Passage dim:  torch.Size([5, 1543, 800])
Modeled Passage dim:  torch.Size([5, 1543, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1543, 1000])
Span start logits:  torch.Size([5, 1543])
span start probs dim:  torch.Size([5, 1543])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1543]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 355, 200])
Passage Length:  355
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 355, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 355, 9])
Passage ques attention dim:  torch.Size([5, 355, 9])
Passage question vectors dim:  torch.Size([5, 355, 200])
Question Passage Similarity dim:  torch.Size([5, 355])
Question passage attention dim:  torch.Size([5, 355])
Final Merged Passage dim:  torch.Size([5, 355, 800])
Modeled Passage dim:  torch.Size([5, 355, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 355, 1000])
Span start logits:  torch.Size([5, 355])
span start probs dim:  torch.Size([5, 355])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 355]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1161, 200])
Passage Length:  1161
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1161, 12])
Passage ques attention dim:  torch.Size([5, 1161, 12])
Passage question vectors dim:  torch.Size([5, 1161, 200])
Question Passage Similarity dim:  torch.Size([5, 1161])
Question passage attention dim:  torch.Size([5, 1161])
Final Merged Passage dim:  torch.Size([5, 1161, 800])
Modeled Passage dim:  torch.Size([5, 1161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1161, 1000])
Span start logits:  torch.Size([5, 1161])
span start probs dim:  torch.Size([5, 1161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 273, 9])
Passage ques attention dim:  torch.Size([5, 273, 9])
Passage question vectors dim:  torch.Size([5, 273, 200])
Question Passage Similarity dim:  torch.Size([5, 273])
Question passage attention dim:  torch.Size([5, 273])
Final Merged Passage dim:  torch.Size([5, 273, 800])
Modeled Passage dim:  torch.Size([5, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 273, 1000])
Span start logits:  torch.Size([5, 273])
span start probs dim:  torch.Size([5, 273])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 273]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 434, 200])
Passage Length:  434
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 434, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 434, 13])
Passage ques attention dim:  torch.Size([5, 434, 13])
Passage question vectors dim:  torch.Size([5, 434, 200])
Question Passage Similarity dim:  torch.Size([5, 434])
Question passage attention dim:  torch.Size([5, 434])
Final Merged Passage dim:  torch.Size([5, 434, 800])
Modeled Passage dim:  torch.Size([5, 434, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 434, 1000])
Span start logits:  torch.Size([5, 434])
span start probs dim:  torch.Size([5, 434])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 434]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 906, 10])
Passage ques attention dim:  torch.Size([5, 906, 10])
Passage question vectors dim:  torch.Size([5, 906, 200])
Question Passage Similarity dim:  torch.Size([5, 906])
Question passage attention dim:  torch.Size([5, 906])
Final Merged Passage dim:  torch.Size([5, 906, 800])
Modeled Passage dim:  torch.Size([5, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 906, 1000])
Span start logits:  torch.Size([5, 906])
span start probs dim:  torch.Size([5, 906])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 906]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 342, 200])
Passage Length:  342
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 342, 13])
Passage ques attention dim:  torch.Size([5, 342, 13])
Passage question vectors dim:  torch.Size([5, 342, 200])
Question Passage Similarity dim:  torch.Size([5, 342])
Question passage attention dim:  torch.Size([5, 342])
Final Merged Passage dim:  torch.Size([5, 342, 800])
Modeled Passage dim:  torch.Size([5, 342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 342, 1000])
Span start logits:  torch.Size([5, 342])
span start probs dim:  torch.Size([5, 342])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 342]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 375, 200])
Passage Length:  375
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 375, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 375, 8])
Passage ques attention dim:  torch.Size([5, 375, 8])
Passage question vectors dim:  torch.Size([5, 375, 200])
Question Passage Similarity dim:  torch.Size([5, 375])
Question passage attention dim:  torch.Size([5, 375])
Final Merged Passage dim:  torch.Size([5, 375, 800])
Modeled Passage dim:  torch.Size([5, 375, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 375, 1000])
Span start logits:  torch.Size([5, 375])
span start probs dim:  torch.Size([5, 375])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 375]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 350, 11])
Passage ques attention dim:  torch.Size([5, 350, 11])
Passage question vectors dim:  torch.Size([5, 350, 200])
Question Passage Similarity dim:  torch.Size([5, 350])
Question passage attention dim:  torch.Size([5, 350])
Final Merged Passage dim:  torch.Size([5, 350, 800])
Modeled Passage dim:  torch.Size([5, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 350, 1000])
Span start logits:  torch.Size([5, 350])
span start probs dim:  torch.Size([5, 350])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 350]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 486, 200])
Passage Length:  486
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 486, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 486, 12])
Passage ques attention dim:  torch.Size([5, 486, 12])
Passage question vectors dim:  torch.Size([5, 486, 200])
Question Passage Similarity dim:  torch.Size([5, 486])
Question passage attention dim:  torch.Size([5, 486])
Final Merged Passage dim:  torch.Size([5, 486, 800])
Modeled Passage dim:  torch.Size([5, 486, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 486, 1000])
Span start logits:  torch.Size([5, 486])
span start probs dim:  torch.Size([5, 486])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 486]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1467, 200])
Passage Length:  1467
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1467, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1467, 8])
Passage ques attention dim:  torch.Size([5, 1467, 8])
Passage question vectors dim:  torch.Size([5, 1467, 200])
Question Passage Similarity dim:  torch.Size([5, 1467])
Question passage attention dim:  torch.Size([5, 1467])
Final Merged Passage dim:  torch.Size([5, 1467, 800])
Modeled Passage dim:  torch.Size([5, 1467, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1467, 1000])
Span start logits:  torch.Size([5, 1467])
span start probs dim:  torch.Size([5, 1467])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1467]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 587, 200])
Passage Length:  587
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 587, 10])
Passage ques attention dim:  torch.Size([5, 587, 10])
Passage question vectors dim:  torch.Size([5, 587, 200])
Question Passage Similarity dim:  torch.Size([5, 587])
Question passage attention dim:  torch.Size([5, 587])
Final Merged Passage dim:  torch.Size([5, 587, 800])
Modeled Passage dim:  torch.Size([5, 587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 587, 1000])
Span start logits:  torch.Size([5, 587])
span start probs dim:  torch.Size([5, 587])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 587]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 419, 200])
Passage Length:  419
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 419, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 419, 16])
Passage ques attention dim:  torch.Size([5, 419, 16])
Passage question vectors dim:  torch.Size([5, 419, 200])
Question Passage Similarity dim:  torch.Size([5, 419])
Question passage attention dim:  torch.Size([5, 419])
Final Merged Passage dim:  torch.Size([5, 419, 800])
Modeled Passage dim:  torch.Size([5, 419, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 419, 1000])
Span start logits:  torch.Size([5, 419])
span start probs dim:  torch.Size([5, 419])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 419]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1099, 200])
Passage Length:  1099
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1099, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1099, 7])
Passage ques attention dim:  torch.Size([5, 1099, 7])
Passage question vectors dim:  torch.Size([5, 1099, 200])
Question Passage Similarity dim:  torch.Size([5, 1099])
Question passage attention dim:  torch.Size([5, 1099])
Final Merged Passage dim:  torch.Size([5, 1099, 800])
Modeled Passage dim:  torch.Size([5, 1099, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1099, 1000])
Span start logits:  torch.Size([5, 1099])
span start probs dim:  torch.Size([5, 1099])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1099]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 473, 200])
Passage Length:  473
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 473, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 473, 11])
Passage ques attention dim:  torch.Size([5, 473, 11])
Passage question vectors dim:  torch.Size([5, 473, 200])
Question Passage Similarity dim:  torch.Size([5, 473])
Question passage attention dim:  torch.Size([5, 473])
Final Merged Passage dim:  torch.Size([5, 473, 800])
Modeled Passage dim:  torch.Size([5, 473, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 473, 1000])
Span start logits:  torch.Size([5, 473])
span start probs dim:  torch.Size([5, 473])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 473]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1152, 200])
Passage Length:  1152
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1152, 13])
Passage ques attention dim:  torch.Size([5, 1152, 13])
Passage question vectors dim:  torch.Size([5, 1152, 200])
Question Passage Similarity dim:  torch.Size([5, 1152])
Question passage attention dim:  torch.Size([5, 1152])
Final Merged Passage dim:  torch.Size([5, 1152, 800])
Modeled Passage dim:  torch.Size([5, 1152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1152, 1000])
Span start logits:  torch.Size([5, 1152])
span start probs dim:  torch.Size([5, 1152])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1152]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 497, 200])
Passage Length:  497
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 497, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 497, 9])
Passage ques attention dim:  torch.Size([5, 497, 9])
Passage question vectors dim:  torch.Size([5, 497, 200])
Question Passage Similarity dim:  torch.Size([5, 497])
Question passage attention dim:  torch.Size([5, 497])
Final Merged Passage dim:  torch.Size([5, 497, 800])
Modeled Passage dim:  torch.Size([5, 497, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 497, 1000])
Span start logits:  torch.Size([5, 497])
span start probs dim:  torch.Size([5, 497])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 497]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1754, 200])
Passage Length:  1754
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1754, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1754, 11])
Passage ques attention dim:  torch.Size([5, 1754, 11])
Passage question vectors dim:  torch.Size([5, 1754, 200])
Question Passage Similarity dim:  torch.Size([5, 1754])
Question passage attention dim:  torch.Size([5, 1754])
Final Merged Passage dim:  torch.Size([5, 1754, 800])
Modeled Passage dim:  torch.Size([5, 1754, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1754, 1000])
Span start logits:  torch.Size([5, 1754])
span start probs dim:  torch.Size([5, 1754])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1754]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 491, 200])
Passage Length:  491
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 491, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 491, 13])
Passage ques attention dim:  torch.Size([5, 491, 13])
Passage question vectors dim:  torch.Size([5, 491, 200])
Question Passage Similarity dim:  torch.Size([5, 491])
Question passage attention dim:  torch.Size([5, 491])
Final Merged Passage dim:  torch.Size([5, 491, 800])
Modeled Passage dim:  torch.Size([5, 491, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 491, 1000])
Span start logits:  torch.Size([5, 491])
span start probs dim:  torch.Size([5, 491])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 491]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1449, 200])
Passage Length:  1449
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1449, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1449, 10])
Passage ques attention dim:  torch.Size([5, 1449, 10])
Passage question vectors dim:  torch.Size([5, 1449, 200])
Question Passage Similarity dim:  torch.Size([5, 1449])
Question passage attention dim:  torch.Size([5, 1449])
Final Merged Passage dim:  torch.Size([5, 1449, 800])
Modeled Passage dim:  torch.Size([5, 1449, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1449, 1000])
Span start logits:  torch.Size([5, 1449])
span start probs dim:  torch.Size([5, 1449])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1449]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 13])
Passage ques attention dim:  torch.Size([5, 619, 13])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 980, 200])
Passage Length:  980
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 980, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 980, 14])
Passage ques attention dim:  torch.Size([5, 980, 14])
Passage question vectors dim:  torch.Size([5, 980, 200])
Question Passage Similarity dim:  torch.Size([5, 980])
Question passage attention dim:  torch.Size([5, 980])
Final Merged Passage dim:  torch.Size([5, 980, 800])
Modeled Passage dim:  torch.Size([5, 980, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 980, 1000])
Span start logits:  torch.Size([5, 980])
span start probs dim:  torch.Size([5, 980])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 980]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 258, 15])
Passage ques attention dim:  torch.Size([5, 258, 15])
Passage question vectors dim:  torch.Size([5, 258, 200])
Question Passage Similarity dim:  torch.Size([5, 258])
Question passage attention dim:  torch.Size([5, 258])
Final Merged Passage dim:  torch.Size([5, 258, 800])
Modeled Passage dim:  torch.Size([5, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 258, 1000])
Span start logits:  torch.Size([5, 258])
span start probs dim:  torch.Size([5, 258])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 258]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 532, 200])
Passage Length:  532
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 532, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 532, 10])
Passage ques attention dim:  torch.Size([5, 532, 10])
Passage question vectors dim:  torch.Size([5, 532, 200])
Question Passage Similarity dim:  torch.Size([5, 532])
Question passage attention dim:  torch.Size([5, 532])
Final Merged Passage dim:  torch.Size([5, 532, 800])
Modeled Passage dim:  torch.Size([5, 532, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 532, 1000])
Span start logits:  torch.Size([5, 532])
span start probs dim:  torch.Size([5, 532])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 532]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1274, 200])
Passage Length:  1274
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1274, 10])
Passage ques attention dim:  torch.Size([5, 1274, 10])
Passage question vectors dim:  torch.Size([5, 1274, 200])
Question Passage Similarity dim:  torch.Size([5, 1274])
Question passage attention dim:  torch.Size([5, 1274])
Final Merged Passage dim:  torch.Size([5, 1274, 800])
Modeled Passage dim:  torch.Size([5, 1274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1274, 1000])
Span start logits:  torch.Size([5, 1274])
span start probs dim:  torch.Size([5, 1274])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1274]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 21, 200])
Embedded passage dim:  torch.Size([5, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([5, 21, 200])
Encoded passage dim:  torch.Size([5, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 967, 21])
Passage ques attention dim:  torch.Size([5, 967, 21])
Passage question vectors dim:  torch.Size([5, 967, 200])
Question Passage Similarity dim:  torch.Size([5, 967])
Question passage attention dim:  torch.Size([5, 967])
Final Merged Passage dim:  torch.Size([5, 967, 800])
Modeled Passage dim:  torch.Size([5, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 967, 1000])
Span start logits:  torch.Size([5, 967])
span start probs dim:  torch.Size([5, 967])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 967]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 747, 200])
Passage Length:  747
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 747, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 747, 9])
Passage ques attention dim:  torch.Size([5, 747, 9])
Passage question vectors dim:  torch.Size([5, 747, 200])
Question Passage Similarity dim:  torch.Size([5, 747])
Question passage attention dim:  torch.Size([5, 747])
Final Merged Passage dim:  torch.Size([5, 747, 800])
Modeled Passage dim:  torch.Size([5, 747, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 747, 1000])
Span start logits:  torch.Size([5, 747])
span start probs dim:  torch.Size([5, 747])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 747]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 156, 9])
Passage ques attention dim:  torch.Size([5, 156, 9])
Passage question vectors dim:  torch.Size([5, 156, 200])
Question Passage Similarity dim:  torch.Size([5, 156])
Question passage attention dim:  torch.Size([5, 156])
Final Merged Passage dim:  torch.Size([5, 156, 800])
Modeled Passage dim:  torch.Size([5, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 156, 1000])
Span start logits:  torch.Size([5, 156])
span start probs dim:  torch.Size([5, 156])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 156]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 311, 10])
Passage ques attention dim:  torch.Size([5, 311, 10])
Passage question vectors dim:  torch.Size([5, 311, 200])
Question Passage Similarity dim:  torch.Size([5, 311])
Question passage attention dim:  torch.Size([5, 311])
Final Merged Passage dim:  torch.Size([5, 311, 800])
Modeled Passage dim:  torch.Size([5, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 311, 1000])
Span start logits:  torch.Size([5, 311])
span start probs dim:  torch.Size([5, 311])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 311]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 165, 9])
Passage ques attention dim:  torch.Size([5, 165, 9])
Passage question vectors dim:  torch.Size([5, 165, 200])
Question Passage Similarity dim:  torch.Size([5, 165])
Question passage attention dim:  torch.Size([5, 165])
Final Merged Passage dim:  torch.Size([5, 165, 800])
Modeled Passage dim:  torch.Size([5, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 165, 1000])
Span start logits:  torch.Size([5, 165])
span start probs dim:  torch.Size([5, 165])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 165]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 489, 200])
Passage Length:  489
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 489, 10])
Passage ques attention dim:  torch.Size([5, 489, 10])
Passage question vectors dim:  torch.Size([5, 489, 200])
Question Passage Similarity dim:  torch.Size([5, 489])
Question passage attention dim:  torch.Size([5, 489])
Final Merged Passage dim:  torch.Size([5, 489, 800])
Modeled Passage dim:  torch.Size([5, 489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 489, 1000])
Span start logits:  torch.Size([5, 489])
span start probs dim:  torch.Size([5, 489])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 489]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1108, 200])
Passage Length:  1108
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1108, 11])
Passage ques attention dim:  torch.Size([5, 1108, 11])
Passage question vectors dim:  torch.Size([5, 1108, 200])
Question Passage Similarity dim:  torch.Size([5, 1108])
Question passage attention dim:  torch.Size([5, 1108])
Final Merged Passage dim:  torch.Size([5, 1108, 800])
Modeled Passage dim:  torch.Size([5, 1108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1108, 1000])
Span start logits:  torch.Size([5, 1108])
span start probs dim:  torch.Size([5, 1108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 365, 10])
Passage ques attention dim:  torch.Size([5, 365, 10])
Passage question vectors dim:  torch.Size([5, 365, 200])
Question Passage Similarity dim:  torch.Size([5, 365])
Question passage attention dim:  torch.Size([5, 365])
Final Merged Passage dim:  torch.Size([5, 365, 800])
Modeled Passage dim:  torch.Size([5, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 365, 1000])
Span start logits:  torch.Size([5, 365])
span start probs dim:  torch.Size([5, 365])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 365]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1194, 200])
Passage Length:  1194
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1194, 14])
Passage ques attention dim:  torch.Size([5, 1194, 14])
Passage question vectors dim:  torch.Size([5, 1194, 200])
Question Passage Similarity dim:  torch.Size([5, 1194])
Question passage attention dim:  torch.Size([5, 1194])
Final Merged Passage dim:  torch.Size([5, 1194, 800])
Modeled Passage dim:  torch.Size([5, 1194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1194, 1000])
Span start logits:  torch.Size([5, 1194])
span start probs dim:  torch.Size([5, 1194])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1194]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 421, 200])
Passage Length:  421
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 421, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 421, 13])
Passage ques attention dim:  torch.Size([5, 421, 13])
Passage question vectors dim:  torch.Size([5, 421, 200])
Question Passage Similarity dim:  torch.Size([5, 421])
Question passage attention dim:  torch.Size([5, 421])
Final Merged Passage dim:  torch.Size([5, 421, 800])
Modeled Passage dim:  torch.Size([5, 421, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 421, 1000])
Span start logits:  torch.Size([5, 421])
span start probs dim:  torch.Size([5, 421])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 421]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 439, 200])
Passage Length:  439
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 439, 15])
Passage ques attention dim:  torch.Size([5, 439, 15])
Passage question vectors dim:  torch.Size([5, 439, 200])
Question Passage Similarity dim:  torch.Size([5, 439])
Question passage attention dim:  torch.Size([5, 439])
Final Merged Passage dim:  torch.Size([5, 439, 800])
Modeled Passage dim:  torch.Size([5, 439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 439, 1000])
Span start logits:  torch.Size([5, 439])
span start probs dim:  torch.Size([5, 439])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 439]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 986, 200])
Passage Length:  986
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 986, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 986, 14])
Passage ques attention dim:  torch.Size([5, 986, 14])
Passage question vectors dim:  torch.Size([5, 986, 200])
Question Passage Similarity dim:  torch.Size([5, 986])
Question passage attention dim:  torch.Size([5, 986])
Final Merged Passage dim:  torch.Size([5, 986, 800])
Modeled Passage dim:  torch.Size([5, 986, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 986, 1000])
Span start logits:  torch.Size([5, 986])
span start probs dim:  torch.Size([5, 986])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 986]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1274, 200])
Passage Length:  1274
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1274, 7])
Passage ques attention dim:  torch.Size([5, 1274, 7])
Passage question vectors dim:  torch.Size([5, 1274, 200])
Question Passage Similarity dim:  torch.Size([5, 1274])
Question passage attention dim:  torch.Size([5, 1274])
Final Merged Passage dim:  torch.Size([5, 1274, 800])
Modeled Passage dim:  torch.Size([5, 1274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1274, 1000])
Span start logits:  torch.Size([5, 1274])
span start probs dim:  torch.Size([5, 1274])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1274]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 394, 200])
Passage Length:  394
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 394, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 394, 12])
Passage ques attention dim:  torch.Size([5, 394, 12])
Passage question vectors dim:  torch.Size([5, 394, 200])
Question Passage Similarity dim:  torch.Size([5, 394])
Question passage attention dim:  torch.Size([5, 394])
Final Merged Passage dim:  torch.Size([5, 394, 800])
Modeled Passage dim:  torch.Size([5, 394, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 394, 1000])
Span start logits:  torch.Size([5, 394])
span start probs dim:  torch.Size([5, 394])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 394]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 488, 200])
Passage Length:  488
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 488, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 488, 10])
Passage ques attention dim:  torch.Size([5, 488, 10])
Passage question vectors dim:  torch.Size([5, 488, 200])
Question Passage Similarity dim:  torch.Size([5, 488])
Question passage attention dim:  torch.Size([5, 488])
Final Merged Passage dim:  torch.Size([5, 488, 800])
Modeled Passage dim:  torch.Size([5, 488, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 488, 1000])
Span start logits:  torch.Size([5, 488])
span start probs dim:  torch.Size([5, 488])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 488]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1334, 200])
Passage Length:  1334
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1334, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1334, 13])
Passage ques attention dim:  torch.Size([5, 1334, 13])
Passage question vectors dim:  torch.Size([5, 1334, 200])
Question Passage Similarity dim:  torch.Size([5, 1334])
Question passage attention dim:  torch.Size([5, 1334])
Final Merged Passage dim:  torch.Size([5, 1334, 800])
Modeled Passage dim:  torch.Size([5, 1334, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1334, 1000])
Span start logits:  torch.Size([5, 1334])
span start probs dim:  torch.Size([5, 1334])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1334]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 315, 200])
Passage Length:  315
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 315, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 315, 10])
Passage ques attention dim:  torch.Size([5, 315, 10])
Passage question vectors dim:  torch.Size([5, 315, 200])
Question Passage Similarity dim:  torch.Size([5, 315])
Question passage attention dim:  torch.Size([5, 315])
Final Merged Passage dim:  torch.Size([5, 315, 800])
Modeled Passage dim:  torch.Size([5, 315, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 315, 1000])
Span start logits:  torch.Size([5, 315])
span start probs dim:  torch.Size([5, 315])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 315]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 719, 200])
Passage Length:  719
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 719, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 719, 11])
Passage ques attention dim:  torch.Size([5, 719, 11])
Passage question vectors dim:  torch.Size([5, 719, 200])
Question Passage Similarity dim:  torch.Size([5, 719])
Question passage attention dim:  torch.Size([5, 719])
Final Merged Passage dim:  torch.Size([5, 719, 800])
Modeled Passage dim:  torch.Size([5, 719, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 719, 1000])
Span start logits:  torch.Size([5, 719])
span start probs dim:  torch.Size([5, 719])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 719]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 967, 11])
Passage ques attention dim:  torch.Size([5, 967, 11])
Passage question vectors dim:  torch.Size([5, 967, 200])
Question Passage Similarity dim:  torch.Size([5, 967])
Question passage attention dim:  torch.Size([5, 967])
Final Merged Passage dim:  torch.Size([5, 967, 800])
Modeled Passage dim:  torch.Size([5, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 967, 1000])
Span start logits:  torch.Size([5, 967])
span start probs dim:  torch.Size([5, 967])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 967]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 8])
Passage ques attention dim:  torch.Size([5, 462, 8])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 985, 200])
Passage Length:  985
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 985, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 985, 10])
Passage ques attention dim:  torch.Size([5, 985, 10])
Passage question vectors dim:  torch.Size([5, 985, 200])
Question Passage Similarity dim:  torch.Size([5, 985])
Question passage attention dim:  torch.Size([5, 985])
Final Merged Passage dim:  torch.Size([5, 985, 800])
Modeled Passage dim:  torch.Size([5, 985, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 985, 1000])
Span start logits:  torch.Size([5, 985])
span start probs dim:  torch.Size([5, 985])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 985]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 950, 200])
Passage Length:  950
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 950, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 950, 12])
Passage ques attention dim:  torch.Size([5, 950, 12])
Passage question vectors dim:  torch.Size([5, 950, 200])
Question Passage Similarity dim:  torch.Size([5, 950])
Question passage attention dim:  torch.Size([5, 950])
Final Merged Passage dim:  torch.Size([5, 950, 800])
Modeled Passage dim:  torch.Size([5, 950, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 950, 1000])
Span start logits:  torch.Size([5, 950])
span start probs dim:  torch.Size([5, 950])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 950]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 12])
Passage ques attention dim:  torch.Size([5, 619, 12])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 798, 200])
Passage Length:  798
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 798, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 798, 14])
Passage ques attention dim:  torch.Size([5, 798, 14])
Passage question vectors dim:  torch.Size([5, 798, 200])
Question Passage Similarity dim:  torch.Size([5, 798])
Question passage attention dim:  torch.Size([5, 798])
Final Merged Passage dim:  torch.Size([5, 798, 800])
Modeled Passage dim:  torch.Size([5, 798, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 798, 1000])
Span start logits:  torch.Size([5, 798])
span start probs dim:  torch.Size([5, 798])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 798]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 425, 200])
Passage Length:  425
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 425, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 425, 18])
Passage ques attention dim:  torch.Size([5, 425, 18])
Passage question vectors dim:  torch.Size([5, 425, 200])
Question Passage Similarity dim:  torch.Size([5, 425])
Question passage attention dim:  torch.Size([5, 425])
Final Merged Passage dim:  torch.Size([5, 425, 800])
Modeled Passage dim:  torch.Size([5, 425, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 425, 1000])
Span start logits:  torch.Size([5, 425])
span start probs dim:  torch.Size([5, 425])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 425]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 549, 200])
Passage Length:  549
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 549, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 549, 9])
Passage ques attention dim:  torch.Size([5, 549, 9])
Passage question vectors dim:  torch.Size([5, 549, 200])
Question Passage Similarity dim:  torch.Size([5, 549])
Question passage attention dim:  torch.Size([5, 549])
Final Merged Passage dim:  torch.Size([5, 549, 800])
Modeled Passage dim:  torch.Size([5, 549, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 549, 1000])
Span start logits:  torch.Size([5, 549])
span start probs dim:  torch.Size([5, 549])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 549]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 941, 200])
Passage Length:  941
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 941, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 941, 11])
Passage ques attention dim:  torch.Size([5, 941, 11])
Passage question vectors dim:  torch.Size([5, 941, 200])
Question Passage Similarity dim:  torch.Size([5, 941])
Question passage attention dim:  torch.Size([5, 941])
Final Merged Passage dim:  torch.Size([5, 941, 800])
Modeled Passage dim:  torch.Size([5, 941, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 941, 1000])
Span start logits:  torch.Size([5, 941])
span start probs dim:  torch.Size([5, 941])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 941]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 336, 200])
Passage Length:  336
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 336, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 336, 14])
Passage ques attention dim:  torch.Size([5, 336, 14])
Passage question vectors dim:  torch.Size([5, 336, 200])
Question Passage Similarity dim:  torch.Size([5, 336])
Question passage attention dim:  torch.Size([5, 336])
Final Merged Passage dim:  torch.Size([5, 336, 800])
Modeled Passage dim:  torch.Size([5, 336, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 336, 1000])
Span start logits:  torch.Size([5, 336])
span start probs dim:  torch.Size([5, 336])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 336]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 996, 200])
Passage Length:  996
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 996, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 996, 13])
Passage ques attention dim:  torch.Size([5, 996, 13])
Passage question vectors dim:  torch.Size([5, 996, 200])
Question Passage Similarity dim:  torch.Size([5, 996])
Question passage attention dim:  torch.Size([5, 996])
Final Merged Passage dim:  torch.Size([5, 996, 800])
Modeled Passage dim:  torch.Size([5, 996, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 996, 1000])
Span start logits:  torch.Size([5, 996])
span start probs dim:  torch.Size([5, 996])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 996]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 615, 200])
Passage Length:  615
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 615, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 615, 11])
Passage ques attention dim:  torch.Size([5, 615, 11])
Passage question vectors dim:  torch.Size([5, 615, 200])
Question Passage Similarity dim:  torch.Size([5, 615])
Question passage attention dim:  torch.Size([5, 615])
Final Merged Passage dim:  torch.Size([5, 615, 800])
Modeled Passage dim:  torch.Size([5, 615, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 615, 1000])
Span start logits:  torch.Size([5, 615])
span start probs dim:  torch.Size([5, 615])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 615]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 949, 200])
Passage Length:  949
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 949, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 949, 13])
Passage ques attention dim:  torch.Size([5, 949, 13])
Passage question vectors dim:  torch.Size([5, 949, 200])
Question Passage Similarity dim:  torch.Size([5, 949])
Question passage attention dim:  torch.Size([5, 949])
Final Merged Passage dim:  torch.Size([5, 949, 800])
Modeled Passage dim:  torch.Size([5, 949, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 949, 1000])
Span start logits:  torch.Size([5, 949])
span start probs dim:  torch.Size([5, 949])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 949]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 43, 200])
Embedded passage dim:  torch.Size([5, 1467, 200])
Passage Length:  1467
Encoded question dim:  torch.Size([5, 43, 200])
Encoded passage dim:  torch.Size([5, 1467, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1467, 43])
Passage ques attention dim:  torch.Size([5, 1467, 43])
Passage question vectors dim:  torch.Size([5, 1467, 200])
Question Passage Similarity dim:  torch.Size([5, 1467])
Question passage attention dim:  torch.Size([5, 1467])
Final Merged Passage dim:  torch.Size([5, 1467, 800])
Modeled Passage dim:  torch.Size([5, 1467, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1467, 1000])
Span start logits:  torch.Size([5, 1467])
span start probs dim:  torch.Size([5, 1467])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1467]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1246, 200])
Passage Length:  1246
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1246, 8])
Passage ques attention dim:  torch.Size([5, 1246, 8])
Passage question vectors dim:  torch.Size([5, 1246, 200])
Question Passage Similarity dim:  torch.Size([5, 1246])
Question passage attention dim:  torch.Size([5, 1246])
Final Merged Passage dim:  torch.Size([5, 1246, 800])
Modeled Passage dim:  torch.Size([5, 1246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1246, 1000])
Span start logits:  torch.Size([5, 1246])
span start probs dim:  torch.Size([5, 1246])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1246]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1308, 200])
Passage Length:  1308
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1308, 9])
Passage ques attention dim:  torch.Size([5, 1308, 9])
Passage question vectors dim:  torch.Size([5, 1308, 200])
Question Passage Similarity dim:  torch.Size([5, 1308])
Question passage attention dim:  torch.Size([5, 1308])
Final Merged Passage dim:  torch.Size([5, 1308, 800])
Modeled Passage dim:  torch.Size([5, 1308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1308, 1000])
Span start logits:  torch.Size([5, 1308])
span start probs dim:  torch.Size([5, 1308])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1308]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1308, 200])
Passage Length:  1308
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1308, 14])
Passage ques attention dim:  torch.Size([5, 1308, 14])
Passage question vectors dim:  torch.Size([5, 1308, 200])
Question Passage Similarity dim:  torch.Size([5, 1308])
Question passage attention dim:  torch.Size([5, 1308])
Final Merged Passage dim:  torch.Size([5, 1308, 800])
Modeled Passage dim:  torch.Size([5, 1308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1308, 1000])
Span start logits:  torch.Size([5, 1308])
span start probs dim:  torch.Size([5, 1308])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1308]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1014, 200])
Passage Length:  1014
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1014, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1014, 11])
Passage ques attention dim:  torch.Size([5, 1014, 11])
Passage question vectors dim:  torch.Size([5, 1014, 200])
Question Passage Similarity dim:  torch.Size([5, 1014])
Question passage attention dim:  torch.Size([5, 1014])
Final Merged Passage dim:  torch.Size([5, 1014, 800])
Modeled Passage dim:  torch.Size([5, 1014, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1014, 1000])
Span start logits:  torch.Size([5, 1014])
span start probs dim:  torch.Size([5, 1014])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1014]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1218, 200])
Passage Length:  1218
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1218, 11])
Passage ques attention dim:  torch.Size([5, 1218, 11])
Passage question vectors dim:  torch.Size([5, 1218, 200])
Question Passage Similarity dim:  torch.Size([5, 1218])
Question passage attention dim:  torch.Size([5, 1218])
Final Merged Passage dim:  torch.Size([5, 1218, 800])
Modeled Passage dim:  torch.Size([5, 1218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1218, 1000])
Span start logits:  torch.Size([5, 1218])
span start probs dim:  torch.Size([5, 1218])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1218]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1395, 200])
Passage Length:  1395
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1395, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1395, 11])
Passage ques attention dim:  torch.Size([5, 1395, 11])
Passage question vectors dim:  torch.Size([5, 1395, 200])
Question Passage Similarity dim:  torch.Size([5, 1395])
Question passage attention dim:  torch.Size([5, 1395])
Final Merged Passage dim:  torch.Size([5, 1395, 800])
Modeled Passage dim:  torch.Size([5, 1395, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1395, 1000])
Span start logits:  torch.Size([5, 1395])
span start probs dim:  torch.Size([5, 1395])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1395]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 929, 200])
Passage Length:  929
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 929, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 929, 12])
Passage ques attention dim:  torch.Size([5, 929, 12])
Passage question vectors dim:  torch.Size([5, 929, 200])
Question Passage Similarity dim:  torch.Size([5, 929])
Question passage attention dim:  torch.Size([5, 929])
Final Merged Passage dim:  torch.Size([5, 929, 800])
Modeled Passage dim:  torch.Size([5, 929, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 929, 1000])
Span start logits:  torch.Size([5, 929])
span start probs dim:  torch.Size([5, 929])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 929]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 355, 200])
Passage Length:  355
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 355, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 355, 14])
Passage ques attention dim:  torch.Size([5, 355, 14])
Passage question vectors dim:  torch.Size([5, 355, 200])
Question Passage Similarity dim:  torch.Size([5, 355])
Question passage attention dim:  torch.Size([5, 355])
Final Merged Passage dim:  torch.Size([5, 355, 800])
Modeled Passage dim:  torch.Size([5, 355, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 355, 1000])
Span start logits:  torch.Size([5, 355])
span start probs dim:  torch.Size([5, 355])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 355]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 731, 200])
Passage Length:  731
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 731, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 731, 9])
Passage ques attention dim:  torch.Size([5, 731, 9])
Passage question vectors dim:  torch.Size([5, 731, 200])
Question Passage Similarity dim:  torch.Size([5, 731])
Question passage attention dim:  torch.Size([5, 731])
Final Merged Passage dim:  torch.Size([5, 731, 800])
Modeled Passage dim:  torch.Size([5, 731, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 731, 1000])
Span start logits:  torch.Size([5, 731])
span start probs dim:  torch.Size([5, 731])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 731]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 379, 9])
Passage ques attention dim:  torch.Size([5, 379, 9])
Passage question vectors dim:  torch.Size([5, 379, 200])
Question Passage Similarity dim:  torch.Size([5, 379])
Question passage attention dim:  torch.Size([5, 379])
Final Merged Passage dim:  torch.Size([5, 379, 800])
Modeled Passage dim:  torch.Size([5, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 379, 1000])
Span start logits:  torch.Size([5, 379])
span start probs dim:  torch.Size([5, 379])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 379]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 984, 200])
Passage Length:  984
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 984, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 984, 14])
Passage ques attention dim:  torch.Size([5, 984, 14])
Passage question vectors dim:  torch.Size([5, 984, 200])
Question Passage Similarity dim:  torch.Size([5, 984])
Question passage attention dim:  torch.Size([5, 984])
Final Merged Passage dim:  torch.Size([5, 984, 800])
Modeled Passage dim:  torch.Size([5, 984, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 984, 1000])
Span start logits:  torch.Size([5, 984])
span start probs dim:  torch.Size([5, 984])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 984]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 385, 9])
Passage ques attention dim:  torch.Size([5, 385, 9])
Passage question vectors dim:  torch.Size([5, 385, 200])
Question Passage Similarity dim:  torch.Size([5, 385])
Question passage attention dim:  torch.Size([5, 385])
Final Merged Passage dim:  torch.Size([5, 385, 800])
Modeled Passage dim:  torch.Size([5, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 385, 1000])
Span start logits:  torch.Size([5, 385])
span start probs dim:  torch.Size([5, 385])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 385]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 365, 14])
Passage ques attention dim:  torch.Size([5, 365, 14])
Passage question vectors dim:  torch.Size([5, 365, 200])
Question Passage Similarity dim:  torch.Size([5, 365])
Question passage attention dim:  torch.Size([5, 365])
Final Merged Passage dim:  torch.Size([5, 365, 800])
Modeled Passage dim:  torch.Size([5, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 365, 1000])
Span start logits:  torch.Size([5, 365])
span start probs dim:  torch.Size([5, 365])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 365]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 1129, 200])
Passage Length:  1129
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 1129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1129, 15])
Passage ques attention dim:  torch.Size([5, 1129, 15])
Passage question vectors dim:  torch.Size([5, 1129, 200])
Question Passage Similarity dim:  torch.Size([5, 1129])
Question passage attention dim:  torch.Size([5, 1129])
Final Merged Passage dim:  torch.Size([5, 1129, 800])
Modeled Passage dim:  torch.Size([5, 1129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1129, 1000])
Span start logits:  torch.Size([5, 1129])
span start probs dim:  torch.Size([5, 1129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 640, 200])
Passage Length:  640
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 640, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 640, 9])
Passage ques attention dim:  torch.Size([5, 640, 9])
Passage question vectors dim:  torch.Size([5, 640, 200])
Question Passage Similarity dim:  torch.Size([5, 640])
Question passage attention dim:  torch.Size([5, 640])
Final Merged Passage dim:  torch.Size([5, 640, 800])
Modeled Passage dim:  torch.Size([5, 640, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 640, 1000])
Span start logits:  torch.Size([5, 640])
span start probs dim:  torch.Size([5, 640])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 640]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 472, 200])
Passage Length:  472
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 472, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 472, 10])
Passage ques attention dim:  torch.Size([5, 472, 10])
Passage question vectors dim:  torch.Size([5, 472, 200])
Question Passage Similarity dim:  torch.Size([5, 472])
Question passage attention dim:  torch.Size([5, 472])
Final Merged Passage dim:  torch.Size([5, 472, 800])
Modeled Passage dim:  torch.Size([5, 472, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 472, 1000])
Span start logits:  torch.Size([5, 472])
span start probs dim:  torch.Size([5, 472])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 472]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 502, 200])
Passage Length:  502
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 502, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 502, 10])
Passage ques attention dim:  torch.Size([5, 502, 10])
Passage question vectors dim:  torch.Size([5, 502, 200])
Question Passage Similarity dim:  torch.Size([5, 502])
Question passage attention dim:  torch.Size([5, 502])
Final Merged Passage dim:  torch.Size([5, 502, 800])
Modeled Passage dim:  torch.Size([5, 502, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 502, 1000])
Span start logits:  torch.Size([5, 502])
span start probs dim:  torch.Size([5, 502])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 502]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 687, 200])
Passage Length:  687
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 687, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 687, 10])
Passage ques attention dim:  torch.Size([5, 687, 10])
Passage question vectors dim:  torch.Size([5, 687, 200])
Question Passage Similarity dim:  torch.Size([5, 687])
Question passage attention dim:  torch.Size([5, 687])
Final Merged Passage dim:  torch.Size([5, 687, 800])
Modeled Passage dim:  torch.Size([5, 687, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 687, 1000])
Span start logits:  torch.Size([5, 687])
span start probs dim:  torch.Size([5, 687])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 687]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 12])
Passage ques attention dim:  torch.Size([5, 462, 12])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1108, 200])
Passage Length:  1108
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1108, 11])
Passage ques attention dim:  torch.Size([5, 1108, 11])
Passage question vectors dim:  torch.Size([5, 1108, 200])
Question Passage Similarity dim:  torch.Size([5, 1108])
Question passage attention dim:  torch.Size([5, 1108])
Final Merged Passage dim:  torch.Size([5, 1108, 800])
Modeled Passage dim:  torch.Size([5, 1108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1108, 1000])
Span start logits:  torch.Size([5, 1108])
span start probs dim:  torch.Size([5, 1108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1288, 200])
Passage Length:  1288
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1288, 10])
Passage ques attention dim:  torch.Size([5, 1288, 10])
Passage question vectors dim:  torch.Size([5, 1288, 200])
Question Passage Similarity dim:  torch.Size([5, 1288])
Question passage attention dim:  torch.Size([5, 1288])
Final Merged Passage dim:  torch.Size([5, 1288, 800])
Modeled Passage dim:  torch.Size([5, 1288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1288, 1000])
Span start logits:  torch.Size([5, 1288])
span start probs dim:  torch.Size([5, 1288])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1288]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 209, 15])
Passage ques attention dim:  torch.Size([5, 209, 15])
Passage question vectors dim:  torch.Size([5, 209, 200])
Question Passage Similarity dim:  torch.Size([5, 209])
Question passage attention dim:  torch.Size([5, 209])
Final Merged Passage dim:  torch.Size([5, 209, 800])
Modeled Passage dim:  torch.Size([5, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 209, 1000])
Span start logits:  torch.Size([5, 209])
span start probs dim:  torch.Size([5, 209])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 209]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 20, 200])
Embedded passage dim:  torch.Size([5, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([5, 20, 200])
Encoded passage dim:  torch.Size([5, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 413, 20])
Passage ques attention dim:  torch.Size([5, 413, 20])
Passage question vectors dim:  torch.Size([5, 413, 200])
Question Passage Similarity dim:  torch.Size([5, 413])
Question passage attention dim:  torch.Size([5, 413])
Final Merged Passage dim:  torch.Size([5, 413, 800])
Modeled Passage dim:  torch.Size([5, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 413, 1000])
Span start logits:  torch.Size([5, 413])
span start probs dim:  torch.Size([5, 413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1163, 200])
Passage Length:  1163
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1163, 8])
Passage ques attention dim:  torch.Size([5, 1163, 8])
Passage question vectors dim:  torch.Size([5, 1163, 200])
Question Passage Similarity dim:  torch.Size([5, 1163])
Question passage attention dim:  torch.Size([5, 1163])
Final Merged Passage dim:  torch.Size([5, 1163, 800])
Modeled Passage dim:  torch.Size([5, 1163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1163, 1000])
Span start logits:  torch.Size([5, 1163])
span start probs dim:  torch.Size([5, 1163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 691, 200])
Passage Length:  691
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 691, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 691, 12])
Passage ques attention dim:  torch.Size([5, 691, 12])
Passage question vectors dim:  torch.Size([5, 691, 200])
Question Passage Similarity dim:  torch.Size([5, 691])
Question passage attention dim:  torch.Size([5, 691])
Final Merged Passage dim:  torch.Size([5, 691, 800])
Modeled Passage dim:  torch.Size([5, 691, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 691, 1000])
Span start logits:  torch.Size([5, 691])
span start probs dim:  torch.Size([5, 691])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 691]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 461, 200])
Passage Length:  461
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 461, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 461, 7])
Passage ques attention dim:  torch.Size([5, 461, 7])
Passage question vectors dim:  torch.Size([5, 461, 200])
Question Passage Similarity dim:  torch.Size([5, 461])
Question passage attention dim:  torch.Size([5, 461])
Final Merged Passage dim:  torch.Size([5, 461, 800])
Modeled Passage dim:  torch.Size([5, 461, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 461, 1000])
Span start logits:  torch.Size([5, 461])
span start probs dim:  torch.Size([5, 461])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 461]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 530, 200])
Passage Length:  530
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 530, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 530, 11])
Passage ques attention dim:  torch.Size([5, 530, 11])
Passage question vectors dim:  torch.Size([5, 530, 200])
Question Passage Similarity dim:  torch.Size([5, 530])
Question passage attention dim:  torch.Size([5, 530])
Final Merged Passage dim:  torch.Size([5, 530, 800])
Modeled Passage dim:  torch.Size([5, 530, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 530, 1000])
Span start logits:  torch.Size([5, 530])
span start probs dim:  torch.Size([5, 530])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 530]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 990, 200])
Passage Length:  990
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 990, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 990, 10])
Passage ques attention dim:  torch.Size([5, 990, 10])
Passage question vectors dim:  torch.Size([5, 990, 200])
Question Passage Similarity dim:  torch.Size([5, 990])
Question passage attention dim:  torch.Size([5, 990])
Final Merged Passage dim:  torch.Size([5, 990, 800])
Modeled Passage dim:  torch.Size([5, 990, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 990, 1000])
Span start logits:  torch.Size([5, 990])
span start probs dim:  torch.Size([5, 990])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 990]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 526, 200])
Passage Length:  526
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 526, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 526, 16])
Passage ques attention dim:  torch.Size([5, 526, 16])
Passage question vectors dim:  torch.Size([5, 526, 200])
Question Passage Similarity dim:  torch.Size([5, 526])
Question passage attention dim:  torch.Size([5, 526])
Final Merged Passage dim:  torch.Size([5, 526, 800])
Modeled Passage dim:  torch.Size([5, 526, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 526, 1000])
Span start logits:  torch.Size([5, 526])
span start probs dim:  torch.Size([5, 526])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 526]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1044, 200])
Passage Length:  1044
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1044, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1044, 10])
Passage ques attention dim:  torch.Size([5, 1044, 10])
Passage question vectors dim:  torch.Size([5, 1044, 200])
Question Passage Similarity dim:  torch.Size([5, 1044])
Question passage attention dim:  torch.Size([5, 1044])
Final Merged Passage dim:  torch.Size([5, 1044, 800])
Modeled Passage dim:  torch.Size([5, 1044, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1044, 1000])
Span start logits:  torch.Size([5, 1044])
span start probs dim:  torch.Size([5, 1044])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1044]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1421, 200])
Passage Length:  1421
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1421, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1421, 10])
Passage ques attention dim:  torch.Size([5, 1421, 10])
Passage question vectors dim:  torch.Size([5, 1421, 200])
Question Passage Similarity dim:  torch.Size([5, 1421])
Question passage attention dim:  torch.Size([5, 1421])
Final Merged Passage dim:  torch.Size([5, 1421, 800])
Modeled Passage dim:  torch.Size([5, 1421, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1421, 1000])
Span start logits:  torch.Size([5, 1421])
span start probs dim:  torch.Size([5, 1421])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1421]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1346, 200])
Passage Length:  1346
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1346, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1346, 9])
Passage ques attention dim:  torch.Size([5, 1346, 9])
Passage question vectors dim:  torch.Size([5, 1346, 200])
Question Passage Similarity dim:  torch.Size([5, 1346])
Question passage attention dim:  torch.Size([5, 1346])
Final Merged Passage dim:  torch.Size([5, 1346, 800])
Modeled Passage dim:  torch.Size([5, 1346, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1346, 1000])
Span start logits:  torch.Size([5, 1346])
span start probs dim:  torch.Size([5, 1346])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1346]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 646, 200])
Passage Length:  646
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 646, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 646, 15])
Passage ques attention dim:  torch.Size([5, 646, 15])
Passage question vectors dim:  torch.Size([5, 646, 200])
Question Passage Similarity dim:  torch.Size([5, 646])
Question passage attention dim:  torch.Size([5, 646])
Final Merged Passage dim:  torch.Size([5, 646, 800])
Modeled Passage dim:  torch.Size([5, 646, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 646, 1000])
Span start logits:  torch.Size([5, 646])
span start probs dim:  torch.Size([5, 646])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 646]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 600, 200])
Passage Length:  600
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 600, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 600, 13])
Passage ques attention dim:  torch.Size([5, 600, 13])
Passage question vectors dim:  torch.Size([5, 600, 200])
Question Passage Similarity dim:  torch.Size([5, 600])
Question passage attention dim:  torch.Size([5, 600])
Final Merged Passage dim:  torch.Size([5, 600, 800])
Modeled Passage dim:  torch.Size([5, 600, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 600, 1000])
Span start logits:  torch.Size([5, 600])
span start probs dim:  torch.Size([5, 600])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 600]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 548, 200])
Passage Length:  548
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 548, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 548, 10])
Passage ques attention dim:  torch.Size([5, 548, 10])
Passage question vectors dim:  torch.Size([5, 548, 200])
Question Passage Similarity dim:  torch.Size([5, 548])
Question passage attention dim:  torch.Size([5, 548])
Final Merged Passage dim:  torch.Size([5, 548, 800])
Modeled Passage dim:  torch.Size([5, 548, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 548, 1000])
Span start logits:  torch.Size([5, 548])
span start probs dim:  torch.Size([5, 548])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 548]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 489, 200])
Passage Length:  489
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 489, 8])
Passage ques attention dim:  torch.Size([5, 489, 8])
Passage question vectors dim:  torch.Size([5, 489, 200])
Question Passage Similarity dim:  torch.Size([5, 489])
Question passage attention dim:  torch.Size([5, 489])
Final Merged Passage dim:  torch.Size([5, 489, 800])
Modeled Passage dim:  torch.Size([5, 489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 489, 1000])
Span start logits:  torch.Size([5, 489])
span start probs dim:  torch.Size([5, 489])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 489]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 414, 200])
Passage Length:  414
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 414, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 414, 10])
Passage ques attention dim:  torch.Size([5, 414, 10])
Passage question vectors dim:  torch.Size([5, 414, 200])
Question Passage Similarity dim:  torch.Size([5, 414])
Question passage attention dim:  torch.Size([5, 414])
Final Merged Passage dim:  torch.Size([5, 414, 800])
Modeled Passage dim:  torch.Size([5, 414, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 414, 1000])
Span start logits:  torch.Size([5, 414])
span start probs dim:  torch.Size([5, 414])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 414]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 254, 16])
Passage ques attention dim:  torch.Size([5, 254, 16])
Passage question vectors dim:  torch.Size([5, 254, 200])
Question Passage Similarity dim:  torch.Size([5, 254])
Question passage attention dim:  torch.Size([5, 254])
Final Merged Passage dim:  torch.Size([5, 254, 800])
Modeled Passage dim:  torch.Size([5, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 254, 1000])
Span start logits:  torch.Size([5, 254])
span start probs dim:  torch.Size([5, 254])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 254]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 539, 200])
Passage Length:  539
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 539, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 539, 13])
Passage ques attention dim:  torch.Size([5, 539, 13])
Passage question vectors dim:  torch.Size([5, 539, 200])
Question Passage Similarity dim:  torch.Size([5, 539])
Question passage attention dim:  torch.Size([5, 539])
Final Merged Passage dim:  torch.Size([5, 539, 800])
Modeled Passage dim:  torch.Size([5, 539, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 539, 1000])
Span start logits:  torch.Size([5, 539])
span start probs dim:  torch.Size([5, 539])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 539]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1075, 200])
Passage Length:  1075
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1075, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1075, 10])
Passage ques attention dim:  torch.Size([5, 1075, 10])
Passage question vectors dim:  torch.Size([5, 1075, 200])
Question Passage Similarity dim:  torch.Size([5, 1075])
Question passage attention dim:  torch.Size([5, 1075])
Final Merged Passage dim:  torch.Size([5, 1075, 800])
Modeled Passage dim:  torch.Size([5, 1075, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1075, 1000])
Span start logits:  torch.Size([5, 1075])
span start probs dim:  torch.Size([5, 1075])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1075]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1099, 200])
Passage Length:  1099
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1099, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1099, 10])
Passage ques attention dim:  torch.Size([5, 1099, 10])
Passage question vectors dim:  torch.Size([5, 1099, 200])
Question Passage Similarity dim:  torch.Size([5, 1099])
Question passage attention dim:  torch.Size([5, 1099])
Final Merged Passage dim:  torch.Size([5, 1099, 800])
Modeled Passage dim:  torch.Size([5, 1099, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1099, 1000])
Span start logits:  torch.Size([5, 1099])
span start probs dim:  torch.Size([5, 1099])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1099]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1411, 200])
Passage Length:  1411
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1411, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1411, 13])
Passage ques attention dim:  torch.Size([5, 1411, 13])
Passage question vectors dim:  torch.Size([5, 1411, 200])
Question Passage Similarity dim:  torch.Size([5, 1411])
Question passage attention dim:  torch.Size([5, 1411])
Final Merged Passage dim:  torch.Size([5, 1411, 800])
Modeled Passage dim:  torch.Size([5, 1411, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1411, 1000])
Span start logits:  torch.Size([5, 1411])
span start probs dim:  torch.Size([5, 1411])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1411]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 643, 200])
Passage Length:  643
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 643, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 643, 10])
Passage ques attention dim:  torch.Size([5, 643, 10])
Passage question vectors dim:  torch.Size([5, 643, 200])
Question Passage Similarity dim:  torch.Size([5, 643])
Question passage attention dim:  torch.Size([5, 643])
Final Merged Passage dim:  torch.Size([5, 643, 800])
Modeled Passage dim:  torch.Size([5, 643, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 643, 1000])
Span start logits:  torch.Size([5, 643])
span start probs dim:  torch.Size([5, 643])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 643]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 345, 200])
Passage Length:  345
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 345, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 345, 10])
Passage ques attention dim:  torch.Size([5, 345, 10])
Passage question vectors dim:  torch.Size([5, 345, 200])
Question Passage Similarity dim:  torch.Size([5, 345])
Question passage attention dim:  torch.Size([5, 345])
Final Merged Passage dim:  torch.Size([5, 345, 800])
Modeled Passage dim:  torch.Size([5, 345, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 345, 1000])
Span start logits:  torch.Size([5, 345])
span start probs dim:  torch.Size([5, 345])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 345]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 798, 200])
Passage Length:  798
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 798, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 798, 9])
Passage ques attention dim:  torch.Size([5, 798, 9])
Passage question vectors dim:  torch.Size([5, 798, 200])
Question Passage Similarity dim:  torch.Size([5, 798])
Question passage attention dim:  torch.Size([5, 798])
Final Merged Passage dim:  torch.Size([5, 798, 800])
Modeled Passage dim:  torch.Size([5, 798, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 798, 1000])
Span start logits:  torch.Size([5, 798])
span start probs dim:  torch.Size([5, 798])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 798]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 538, 200])
Passage Length:  538
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 538, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 538, 12])
Passage ques attention dim:  torch.Size([5, 538, 12])
Passage question vectors dim:  torch.Size([5, 538, 200])
Question Passage Similarity dim:  torch.Size([5, 538])
Question passage attention dim:  torch.Size([5, 538])
Final Merged Passage dim:  torch.Size([5, 538, 800])
Modeled Passage dim:  torch.Size([5, 538, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 538, 1000])
Span start logits:  torch.Size([5, 538])
span start probs dim:  torch.Size([5, 538])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 538]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 387, 200])
Passage Length:  387
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 387, 10])
Passage ques attention dim:  torch.Size([5, 387, 10])
Passage question vectors dim:  torch.Size([5, 387, 200])
Question Passage Similarity dim:  torch.Size([5, 387])
Question passage attention dim:  torch.Size([5, 387])
Final Merged Passage dim:  torch.Size([5, 387, 800])
Modeled Passage dim:  torch.Size([5, 387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 387, 1000])
Span start logits:  torch.Size([5, 387])
span start probs dim:  torch.Size([5, 387])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 387]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 675, 200])
Passage Length:  675
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 675, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 675, 10])
Passage ques attention dim:  torch.Size([5, 675, 10])
Passage question vectors dim:  torch.Size([5, 675, 200])
Question Passage Similarity dim:  torch.Size([5, 675])
Question passage attention dim:  torch.Size([5, 675])
Final Merged Passage dim:  torch.Size([5, 675, 800])
Modeled Passage dim:  torch.Size([5, 675, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 675, 1000])
Span start logits:  torch.Size([5, 675])
span start probs dim:  torch.Size([5, 675])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 675]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 434, 200])
Passage Length:  434
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 434, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 434, 8])
Passage ques attention dim:  torch.Size([5, 434, 8])
Passage question vectors dim:  torch.Size([5, 434, 200])
Question Passage Similarity dim:  torch.Size([5, 434])
Question passage attention dim:  torch.Size([5, 434])
Final Merged Passage dim:  torch.Size([5, 434, 800])
Modeled Passage dim:  torch.Size([5, 434, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 434, 1000])
Span start logits:  torch.Size([5, 434])
span start probs dim:  torch.Size([5, 434])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 434]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 929, 200])
Passage Length:  929
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 929, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 929, 14])
Passage ques attention dim:  torch.Size([5, 929, 14])
Passage question vectors dim:  torch.Size([5, 929, 200])
Question Passage Similarity dim:  torch.Size([5, 929])
Question passage attention dim:  torch.Size([5, 929])
Final Merged Passage dim:  torch.Size([5, 929, 800])
Modeled Passage dim:  torch.Size([5, 929, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 929, 1000])
Span start logits:  torch.Size([5, 929])
span start probs dim:  torch.Size([5, 929])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 929]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 689, 200])
Passage Length:  689
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 689, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 689, 14])
Passage ques attention dim:  torch.Size([5, 689, 14])
Passage question vectors dim:  torch.Size([5, 689, 200])
Question Passage Similarity dim:  torch.Size([5, 689])
Question passage attention dim:  torch.Size([5, 689])
Final Merged Passage dim:  torch.Size([5, 689, 800])
Modeled Passage dim:  torch.Size([5, 689, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 689, 1000])
Span start logits:  torch.Size([5, 689])
span start probs dim:  torch.Size([5, 689])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 689]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 874, 200])
Passage Length:  874
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 874, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 874, 10])
Passage ques attention dim:  torch.Size([5, 874, 10])
Passage question vectors dim:  torch.Size([5, 874, 200])
Question Passage Similarity dim:  torch.Size([5, 874])
Question passage attention dim:  torch.Size([5, 874])
Final Merged Passage dim:  torch.Size([5, 874, 800])
Modeled Passage dim:  torch.Size([5, 874, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 874, 1000])
Span start logits:  torch.Size([5, 874])
span start probs dim:  torch.Size([5, 874])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 874]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 41, 200])
Passage Length:  41
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 41, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 41, 11])
Passage ques attention dim:  torch.Size([5, 41, 11])
Passage question vectors dim:  torch.Size([5, 41, 200])
Question Passage Similarity dim:  torch.Size([5, 41])
Question passage attention dim:  torch.Size([5, 41])
Final Merged Passage dim:  torch.Size([5, 41, 800])
Modeled Passage dim:  torch.Size([5, 41, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 41, 1000])
Span start logits:  torch.Size([5, 41])
span start probs dim:  torch.Size([5, 41])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 41]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 342, 200])
Passage Length:  342
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 342, 8])
Passage ques attention dim:  torch.Size([5, 342, 8])
Passage question vectors dim:  torch.Size([5, 342, 200])
Question Passage Similarity dim:  torch.Size([5, 342])
Question passage attention dim:  torch.Size([5, 342])
Final Merged Passage dim:  torch.Size([5, 342, 800])
Modeled Passage dim:  torch.Size([5, 342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 342, 1000])
Span start logits:  torch.Size([5, 342])
span start probs dim:  torch.Size([5, 342])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 342]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 488, 200])
Passage Length:  488
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 488, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 488, 17])
Passage ques attention dim:  torch.Size([5, 488, 17])
Passage question vectors dim:  torch.Size([5, 488, 200])
Question Passage Similarity dim:  torch.Size([5, 488])
Question passage attention dim:  torch.Size([5, 488])
Final Merged Passage dim:  torch.Size([5, 488, 800])
Modeled Passage dim:  torch.Size([5, 488, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 488, 1000])
Span start logits:  torch.Size([5, 488])
span start probs dim:  torch.Size([5, 488])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 488]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 10])
Passage ques attention dim:  torch.Size([5, 619, 10])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1202, 200])
Passage Length:  1202
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1202, 13])
Passage ques attention dim:  torch.Size([5, 1202, 13])
Passage question vectors dim:  torch.Size([5, 1202, 200])
Question Passage Similarity dim:  torch.Size([5, 1202])
Question passage attention dim:  torch.Size([5, 1202])
Final Merged Passage dim:  torch.Size([5, 1202, 800])
Modeled Passage dim:  torch.Size([5, 1202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1202, 1000])
Span start logits:  torch.Size([5, 1202])
span start probs dim:  torch.Size([5, 1202])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1202]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1308, 200])
Passage Length:  1308
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1308, 11])
Passage ques attention dim:  torch.Size([5, 1308, 11])
Passage question vectors dim:  torch.Size([5, 1308, 200])
Question Passage Similarity dim:  torch.Size([5, 1308])
Question passage attention dim:  torch.Size([5, 1308])
Final Merged Passage dim:  torch.Size([5, 1308, 800])
Modeled Passage dim:  torch.Size([5, 1308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1308, 1000])
Span start logits:  torch.Size([5, 1308])
span start probs dim:  torch.Size([5, 1308])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1308]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 967, 12])
Passage ques attention dim:  torch.Size([5, 967, 12])
Passage question vectors dim:  torch.Size([5, 967, 200])
Question Passage Similarity dim:  torch.Size([5, 967])
Question passage attention dim:  torch.Size([5, 967])
Final Merged Passage dim:  torch.Size([5, 967, 800])
Modeled Passage dim:  torch.Size([5, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 967, 1000])
Span start logits:  torch.Size([5, 967])
span start probs dim:  torch.Size([5, 967])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 967]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 873, 200])
Passage Length:  873
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 873, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 873, 10])
Passage ques attention dim:  torch.Size([5, 873, 10])
Passage question vectors dim:  torch.Size([5, 873, 200])
Question Passage Similarity dim:  torch.Size([5, 873])
Question passage attention dim:  torch.Size([5, 873])
Final Merged Passage dim:  torch.Size([5, 873, 800])
Modeled Passage dim:  torch.Size([5, 873, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 873, 1000])
Span start logits:  torch.Size([5, 873])
span start probs dim:  torch.Size([5, 873])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 873]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 502, 200])
Passage Length:  502
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 502, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 502, 12])
Passage ques attention dim:  torch.Size([5, 502, 12])
Passage question vectors dim:  torch.Size([5, 502, 200])
Question Passage Similarity dim:  torch.Size([5, 502])
Question passage attention dim:  torch.Size([5, 502])
Final Merged Passage dim:  torch.Size([5, 502, 800])
Modeled Passage dim:  torch.Size([5, 502, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 502, 1000])
Span start logits:  torch.Size([5, 502])
span start probs dim:  torch.Size([5, 502])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 502]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1090, 200])
Passage Length:  1090
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1090, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1090, 11])
Passage ques attention dim:  torch.Size([5, 1090, 11])
Passage question vectors dim:  torch.Size([5, 1090, 200])
Question Passage Similarity dim:  torch.Size([5, 1090])
Question passage attention dim:  torch.Size([5, 1090])
Final Merged Passage dim:  torch.Size([5, 1090, 800])
Modeled Passage dim:  torch.Size([5, 1090, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1090, 1000])
Span start logits:  torch.Size([5, 1090])
span start probs dim:  torch.Size([5, 1090])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1090]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 571, 200])
Passage Length:  571
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 571, 9])
Passage ques attention dim:  torch.Size([5, 571, 9])
Passage question vectors dim:  torch.Size([5, 571, 200])
Question Passage Similarity dim:  torch.Size([5, 571])
Question passage attention dim:  torch.Size([5, 571])
Final Merged Passage dim:  torch.Size([5, 571, 800])
Modeled Passage dim:  torch.Size([5, 571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 571, 1000])
Span start logits:  torch.Size([5, 571])
span start probs dim:  torch.Size([5, 571])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 571]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 10])
Passage ques attention dim:  torch.Size([5, 441, 10])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 752, 200])
Passage Length:  752
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 752, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 752, 9])
Passage ques attention dim:  torch.Size([5, 752, 9])
Passage question vectors dim:  torch.Size([5, 752, 200])
Question Passage Similarity dim:  torch.Size([5, 752])
Question passage attention dim:  torch.Size([5, 752])
Final Merged Passage dim:  torch.Size([5, 752, 800])
Modeled Passage dim:  torch.Size([5, 752, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 752, 1000])
Span start logits:  torch.Size([5, 752])
span start probs dim:  torch.Size([5, 752])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 752]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 356, 200])
Passage Length:  356
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 356, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 356, 9])
Passage ques attention dim:  torch.Size([5, 356, 9])
Passage question vectors dim:  torch.Size([5, 356, 200])
Question Passage Similarity dim:  torch.Size([5, 356])
Question passage attention dim:  torch.Size([5, 356])
Final Merged Passage dim:  torch.Size([5, 356, 800])
Modeled Passage dim:  torch.Size([5, 356, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 356, 1000])
Span start logits:  torch.Size([5, 356])
span start probs dim:  torch.Size([5, 356])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 356]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 543, 200])
Passage Length:  543
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 543, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 543, 13])
Passage ques attention dim:  torch.Size([5, 543, 13])
Passage question vectors dim:  torch.Size([5, 543, 200])
Question Passage Similarity dim:  torch.Size([5, 543])
Question passage attention dim:  torch.Size([5, 543])
Final Merged Passage dim:  torch.Size([5, 543, 800])
Modeled Passage dim:  torch.Size([5, 543, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 543, 1000])
Span start logits:  torch.Size([5, 543])
span start probs dim:  torch.Size([5, 543])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 543]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 13])
Passage ques attention dim:  torch.Size([5, 560, 13])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 308, 200])
Passage Length:  308
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 308, 10])
Passage ques attention dim:  torch.Size([5, 308, 10])
Passage question vectors dim:  torch.Size([5, 308, 200])
Question Passage Similarity dim:  torch.Size([5, 308])
Question passage attention dim:  torch.Size([5, 308])
Final Merged Passage dim:  torch.Size([5, 308, 800])
Modeled Passage dim:  torch.Size([5, 308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 308, 1000])
Span start logits:  torch.Size([5, 308])
span start probs dim:  torch.Size([5, 308])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 308]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1372, 200])
Passage Length:  1372
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1372, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1372, 14])
Passage ques attention dim:  torch.Size([5, 1372, 14])
Passage question vectors dim:  torch.Size([5, 1372, 200])
Question Passage Similarity dim:  torch.Size([5, 1372])
Question passage attention dim:  torch.Size([5, 1372])
Final Merged Passage dim:  torch.Size([5, 1372, 800])
Modeled Passage dim:  torch.Size([5, 1372, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1372, 1000])
Span start logits:  torch.Size([5, 1372])
span start probs dim:  torch.Size([5, 1372])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1372]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 238, 10])
Passage ques attention dim:  torch.Size([5, 238, 10])
Passage question vectors dim:  torch.Size([5, 238, 200])
Question Passage Similarity dim:  torch.Size([5, 238])
Question passage attention dim:  torch.Size([5, 238])
Final Merged Passage dim:  torch.Size([5, 238, 800])
Modeled Passage dim:  torch.Size([5, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 238, 1000])
Span start logits:  torch.Size([5, 238])
span start probs dim:  torch.Size([5, 238])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 238]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 615, 200])
Passage Length:  615
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 615, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 615, 11])
Passage ques attention dim:  torch.Size([5, 615, 11])
Passage question vectors dim:  torch.Size([5, 615, 200])
Question Passage Similarity dim:  torch.Size([5, 615])
Question passage attention dim:  torch.Size([5, 615])
Final Merged Passage dim:  torch.Size([5, 615, 800])
Modeled Passage dim:  torch.Size([5, 615, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 615, 1000])
Span start logits:  torch.Size([5, 615])
span start probs dim:  torch.Size([5, 615])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 615]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 941, 200])
Passage Length:  941
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 941, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 941, 8])
Passage ques attention dim:  torch.Size([5, 941, 8])
Passage question vectors dim:  torch.Size([5, 941, 200])
Question Passage Similarity dim:  torch.Size([5, 941])
Question passage attention dim:  torch.Size([5, 941])
Final Merged Passage dim:  torch.Size([5, 941, 800])
Modeled Passage dim:  torch.Size([5, 941, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 941, 1000])
Span start logits:  torch.Size([5, 941])
span start probs dim:  torch.Size([5, 941])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 941]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1237, 200])
Passage Length:  1237
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1237, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1237, 10])
Passage ques attention dim:  torch.Size([5, 1237, 10])
Passage question vectors dim:  torch.Size([5, 1237, 200])
Question Passage Similarity dim:  torch.Size([5, 1237])
Question passage attention dim:  torch.Size([5, 1237])
Final Merged Passage dim:  torch.Size([5, 1237, 800])
Modeled Passage dim:  torch.Size([5, 1237, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1237, 1000])
Span start logits:  torch.Size([5, 1237])
span start probs dim:  torch.Size([5, 1237])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1237]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1331, 200])
Passage Length:  1331
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1331, 11])
Passage ques attention dim:  torch.Size([5, 1331, 11])
Passage question vectors dim:  torch.Size([5, 1331, 200])
Question Passage Similarity dim:  torch.Size([5, 1331])
Question passage attention dim:  torch.Size([5, 1331])
Final Merged Passage dim:  torch.Size([5, 1331, 800])
Modeled Passage dim:  torch.Size([5, 1331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1331, 1000])
Span start logits:  torch.Size([5, 1331])
span start probs dim:  torch.Size([5, 1331])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1331]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 385, 11])
Passage ques attention dim:  torch.Size([5, 385, 11])
Passage question vectors dim:  torch.Size([5, 385, 200])
Question Passage Similarity dim:  torch.Size([5, 385])
Question passage attention dim:  torch.Size([5, 385])
Final Merged Passage dim:  torch.Size([5, 385, 800])
Modeled Passage dim:  torch.Size([5, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 385, 1000])
Span start logits:  torch.Size([5, 385])
span start probs dim:  torch.Size([5, 385])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 385]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 342, 200])
Passage Length:  342
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 342, 15])
Passage ques attention dim:  torch.Size([5, 342, 15])
Passage question vectors dim:  torch.Size([5, 342, 200])
Question Passage Similarity dim:  torch.Size([5, 342])
Question passage attention dim:  torch.Size([5, 342])
Final Merged Passage dim:  torch.Size([5, 342, 800])
Modeled Passage dim:  torch.Size([5, 342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 342, 1000])
Span start logits:  torch.Size([5, 342])
span start probs dim:  torch.Size([5, 342])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 342]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 705, 200])
Passage Length:  705
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 705, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 705, 9])
Passage ques attention dim:  torch.Size([5, 705, 9])
Passage question vectors dim:  torch.Size([5, 705, 200])
Question Passage Similarity dim:  torch.Size([5, 705])
Question passage attention dim:  torch.Size([5, 705])
Final Merged Passage dim:  torch.Size([5, 705, 800])
Modeled Passage dim:  torch.Size([5, 705, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 705, 1000])
Span start logits:  torch.Size([5, 705])
span start probs dim:  torch.Size([5, 705])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 705]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 615, 200])
Passage Length:  615
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 615, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 615, 8])
Passage ques attention dim:  torch.Size([5, 615, 8])
Passage question vectors dim:  torch.Size([5, 615, 200])
Question Passage Similarity dim:  torch.Size([5, 615])
Question passage attention dim:  torch.Size([5, 615])
Final Merged Passage dim:  torch.Size([5, 615, 800])
Modeled Passage dim:  torch.Size([5, 615, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 615, 1000])
Span start logits:  torch.Size([5, 615])
span start probs dim:  torch.Size([5, 615])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 615]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 641, 200])
Passage Length:  641
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 641, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 641, 11])
Passage ques attention dim:  torch.Size([5, 641, 11])
Passage question vectors dim:  torch.Size([5, 641, 200])
Question Passage Similarity dim:  torch.Size([5, 641])
Question passage attention dim:  torch.Size([5, 641])
Final Merged Passage dim:  torch.Size([5, 641, 800])
Modeled Passage dim:  torch.Size([5, 641, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 641, 1000])
Span start logits:  torch.Size([5, 641])
span start probs dim:  torch.Size([5, 641])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 641]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 15])
Passage ques attention dim:  torch.Size([5, 441, 15])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 365, 10])
Passage ques attention dim:  torch.Size([5, 365, 10])
Passage question vectors dim:  torch.Size([5, 365, 200])
Question Passage Similarity dim:  torch.Size([5, 365])
Question passage attention dim:  torch.Size([5, 365])
Final Merged Passage dim:  torch.Size([5, 365, 800])
Modeled Passage dim:  torch.Size([5, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 365, 1000])
Span start logits:  torch.Size([5, 365])
span start probs dim:  torch.Size([5, 365])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 365]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 891, 200])
Passage Length:  891
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 891, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 891, 11])
Passage ques attention dim:  torch.Size([5, 891, 11])
Passage question vectors dim:  torch.Size([5, 891, 200])
Question Passage Similarity dim:  torch.Size([5, 891])
Question passage attention dim:  torch.Size([5, 891])
Final Merged Passage dim:  torch.Size([5, 891, 800])
Modeled Passage dim:  torch.Size([5, 891, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 891, 1000])
Span start logits:  torch.Size([5, 891])
span start probs dim:  torch.Size([5, 891])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 891]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 568, 200])
Passage Length:  568
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 568, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 568, 10])
Passage ques attention dim:  torch.Size([5, 568, 10])
Passage question vectors dim:  torch.Size([5, 568, 200])
Question Passage Similarity dim:  torch.Size([5, 568])
Question passage attention dim:  torch.Size([5, 568])
Final Merged Passage dim:  torch.Size([5, 568, 800])
Modeled Passage dim:  torch.Size([5, 568, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 568, 1000])
Span start logits:  torch.Size([5, 568])
span start probs dim:  torch.Size([5, 568])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 568]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 574, 200])
Passage Length:  574
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 574, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 574, 8])
Passage ques attention dim:  torch.Size([5, 574, 8])
Passage question vectors dim:  torch.Size([5, 574, 200])
Question Passage Similarity dim:  torch.Size([5, 574])
Question passage attention dim:  torch.Size([5, 574])
Final Merged Passage dim:  torch.Size([5, 574, 800])
Modeled Passage dim:  torch.Size([5, 574, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 574, 1000])
Span start logits:  torch.Size([5, 574])
span start probs dim:  torch.Size([5, 574])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 574]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 780, 200])
Passage Length:  780
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 780, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 780, 12])
Passage ques attention dim:  torch.Size([5, 780, 12])
Passage question vectors dim:  torch.Size([5, 780, 200])
Question Passage Similarity dim:  torch.Size([5, 780])
Question passage attention dim:  torch.Size([5, 780])
Final Merged Passage dim:  torch.Size([5, 780, 800])
Modeled Passage dim:  torch.Size([5, 780, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 780, 1000])
Span start logits:  torch.Size([5, 780])
span start probs dim:  torch.Size([5, 780])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 780]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1129, 200])
Passage Length:  1129
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1129, 12])
Passage ques attention dim:  torch.Size([5, 1129, 12])
Passage question vectors dim:  torch.Size([5, 1129, 200])
Question Passage Similarity dim:  torch.Size([5, 1129])
Question passage attention dim:  torch.Size([5, 1129])
Final Merged Passage dim:  torch.Size([5, 1129, 800])
Modeled Passage dim:  torch.Size([5, 1129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1129, 1000])
Span start logits:  torch.Size([5, 1129])
span start probs dim:  torch.Size([5, 1129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 392, 200])
Passage Length:  392
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 392, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 392, 9])
Passage ques attention dim:  torch.Size([5, 392, 9])
Passage question vectors dim:  torch.Size([5, 392, 200])
Question Passage Similarity dim:  torch.Size([5, 392])
Question passage attention dim:  torch.Size([5, 392])
Final Merged Passage dim:  torch.Size([5, 392, 800])
Modeled Passage dim:  torch.Size([5, 392, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 392, 1000])
Span start logits:  torch.Size([5, 392])
span start probs dim:  torch.Size([5, 392])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 392]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1074, 200])
Passage Length:  1074
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1074, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1074, 9])
Passage ques attention dim:  torch.Size([5, 1074, 9])
Passage question vectors dim:  torch.Size([5, 1074, 200])
Question Passage Similarity dim:  torch.Size([5, 1074])
Question passage attention dim:  torch.Size([5, 1074])
Final Merged Passage dim:  torch.Size([5, 1074, 800])
Modeled Passage dim:  torch.Size([5, 1074, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1074, 1000])
Span start logits:  torch.Size([5, 1074])
span start probs dim:  torch.Size([5, 1074])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1074]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 218, 11])
Passage ques attention dim:  torch.Size([5, 218, 11])
Passage question vectors dim:  torch.Size([5, 218, 200])
Question Passage Similarity dim:  torch.Size([5, 218])
Question passage attention dim:  torch.Size([5, 218])
Final Merged Passage dim:  torch.Size([5, 218, 800])
Modeled Passage dim:  torch.Size([5, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 218, 1000])
Span start logits:  torch.Size([5, 218])
span start probs dim:  torch.Size([5, 218])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 218]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 784, 200])
Passage Length:  784
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 784, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 784, 8])
Passage ques attention dim:  torch.Size([5, 784, 8])
Passage question vectors dim:  torch.Size([5, 784, 200])
Question Passage Similarity dim:  torch.Size([5, 784])
Question passage attention dim:  torch.Size([5, 784])
Final Merged Passage dim:  torch.Size([5, 784, 800])
Modeled Passage dim:  torch.Size([5, 784, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 784, 1000])
Span start logits:  torch.Size([5, 784])
span start probs dim:  torch.Size([5, 784])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 784]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 558, 200])
Passage Length:  558
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 558, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 558, 9])
Passage ques attention dim:  torch.Size([5, 558, 9])
Passage question vectors dim:  torch.Size([5, 558, 200])
Question Passage Similarity dim:  torch.Size([5, 558])
Question passage attention dim:  torch.Size([5, 558])
Final Merged Passage dim:  torch.Size([5, 558, 800])
Modeled Passage dim:  torch.Size([5, 558, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 558, 1000])
Span start logits:  torch.Size([5, 558])
span start probs dim:  torch.Size([5, 558])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 558]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 850, 200])
Passage Length:  850
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 850, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 850, 8])
Passage ques attention dim:  torch.Size([5, 850, 8])
Passage question vectors dim:  torch.Size([5, 850, 200])
Question Passage Similarity dim:  torch.Size([5, 850])
Question passage attention dim:  torch.Size([5, 850])
Final Merged Passage dim:  torch.Size([5, 850, 800])
Modeled Passage dim:  torch.Size([5, 850, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 850, 1000])
Span start logits:  torch.Size([5, 850])
span start probs dim:  torch.Size([5, 850])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 850]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 462, 11])
Passage ques attention dim:  torch.Size([5, 462, 11])
Passage question vectors dim:  torch.Size([5, 462, 200])
Question Passage Similarity dim:  torch.Size([5, 462])
Question passage attention dim:  torch.Size([5, 462])
Final Merged Passage dim:  torch.Size([5, 462, 800])
Modeled Passage dim:  torch.Size([5, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 462, 1000])
Span start logits:  torch.Size([5, 462])
span start probs dim:  torch.Size([5, 462])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 462]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 515, 200])
Passage Length:  515
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 515, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 515, 12])
Passage ques attention dim:  torch.Size([5, 515, 12])
Passage question vectors dim:  torch.Size([5, 515, 200])
Question Passage Similarity dim:  torch.Size([5, 515])
Question passage attention dim:  torch.Size([5, 515])
Final Merged Passage dim:  torch.Size([5, 515, 800])
Modeled Passage dim:  torch.Size([5, 515, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 515, 1000])
Span start logits:  torch.Size([5, 515])
span start probs dim:  torch.Size([5, 515])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 515]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 786, 200])
Passage Length:  786
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 786, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 786, 7])
Passage ques attention dim:  torch.Size([5, 786, 7])
Passage question vectors dim:  torch.Size([5, 786, 200])
Question Passage Similarity dim:  torch.Size([5, 786])
Question passage attention dim:  torch.Size([5, 786])
Final Merged Passage dim:  torch.Size([5, 786, 800])
Modeled Passage dim:  torch.Size([5, 786, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 786, 1000])
Span start logits:  torch.Size([5, 786])
span start probs dim:  torch.Size([5, 786])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 786]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1025, 11])
Passage ques attention dim:  torch.Size([5, 1025, 11])
Passage question vectors dim:  torch.Size([5, 1025, 200])
Question Passage Similarity dim:  torch.Size([5, 1025])
Question passage attention dim:  torch.Size([5, 1025])
Final Merged Passage dim:  torch.Size([5, 1025, 800])
Modeled Passage dim:  torch.Size([5, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1025, 1000])
Span start logits:  torch.Size([5, 1025])
span start probs dim:  torch.Size([5, 1025])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1025]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 474, 200])
Passage Length:  474
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 474, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 474, 12])
Passage ques attention dim:  torch.Size([5, 474, 12])
Passage question vectors dim:  torch.Size([5, 474, 200])
Question Passage Similarity dim:  torch.Size([5, 474])
Question passage attention dim:  torch.Size([5, 474])
Final Merged Passage dim:  torch.Size([5, 474, 800])
Modeled Passage dim:  torch.Size([5, 474, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 474, 1000])
Span start logits:  torch.Size([5, 474])
span start probs dim:  torch.Size([5, 474])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 474]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 501, 200])
Passage Length:  501
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 501, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 501, 13])
Passage ques attention dim:  torch.Size([5, 501, 13])
Passage question vectors dim:  torch.Size([5, 501, 200])
Question Passage Similarity dim:  torch.Size([5, 501])
Question passage attention dim:  torch.Size([5, 501])
Final Merged Passage dim:  torch.Size([5, 501, 800])
Modeled Passage dim:  torch.Size([5, 501, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 501, 1000])
Span start logits:  torch.Size([5, 501])
span start probs dim:  torch.Size([5, 501])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 501]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 282, 200])
Passage Length:  282
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 282, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 282, 8])
Passage ques attention dim:  torch.Size([5, 282, 8])
Passage question vectors dim:  torch.Size([5, 282, 200])
Question Passage Similarity dim:  torch.Size([5, 282])
Question passage attention dim:  torch.Size([5, 282])
Final Merged Passage dim:  torch.Size([5, 282, 800])
Modeled Passage dim:  torch.Size([5, 282, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 282, 1000])
Span start logits:  torch.Size([5, 282])
span start probs dim:  torch.Size([5, 282])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 282]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 475, 200])
Passage Length:  475
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 475, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 475, 15])
Passage ques attention dim:  torch.Size([5, 475, 15])
Passage question vectors dim:  torch.Size([5, 475, 200])
Question Passage Similarity dim:  torch.Size([5, 475])
Question passage attention dim:  torch.Size([5, 475])
Final Merged Passage dim:  torch.Size([5, 475, 800])
Modeled Passage dim:  torch.Size([5, 475, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 475, 1000])
Span start logits:  torch.Size([5, 475])
span start probs dim:  torch.Size([5, 475])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 475]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 342, 200])
Passage Length:  342
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 342, 7])
Passage ques attention dim:  torch.Size([5, 342, 7])
Passage question vectors dim:  torch.Size([5, 342, 200])
Question Passage Similarity dim:  torch.Size([5, 342])
Question passage attention dim:  torch.Size([5, 342])
Final Merged Passage dim:  torch.Size([5, 342, 800])
Modeled Passage dim:  torch.Size([5, 342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 342, 1000])
Span start logits:  torch.Size([5, 342])
span start probs dim:  torch.Size([5, 342])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 342]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 836, 200])
Passage Length:  836
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 836, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 836, 9])
Passage ques attention dim:  torch.Size([5, 836, 9])
Passage question vectors dim:  torch.Size([5, 836, 200])
Question Passage Similarity dim:  torch.Size([5, 836])
Question passage attention dim:  torch.Size([5, 836])
Final Merged Passage dim:  torch.Size([5, 836, 800])
Modeled Passage dim:  torch.Size([5, 836, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 836, 1000])
Span start logits:  torch.Size([5, 836])
span start probs dim:  torch.Size([5, 836])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 836]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 336, 200])
Passage Length:  336
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 336, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 336, 9])
Passage ques attention dim:  torch.Size([5, 336, 9])
Passage question vectors dim:  torch.Size([5, 336, 200])
Question Passage Similarity dim:  torch.Size([5, 336])
Question passage attention dim:  torch.Size([5, 336])
Final Merged Passage dim:  torch.Size([5, 336, 800])
Modeled Passage dim:  torch.Size([5, 336, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 336, 1000])
Span start logits:  torch.Size([5, 336])
span start probs dim:  torch.Size([5, 336])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 336]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 725, 200])
Passage Length:  725
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 725, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 725, 9])
Passage ques attention dim:  torch.Size([5, 725, 9])
Passage question vectors dim:  torch.Size([5, 725, 200])
Question Passage Similarity dim:  torch.Size([5, 725])
Question passage attention dim:  torch.Size([5, 725])
Final Merged Passage dim:  torch.Size([5, 725, 800])
Modeled Passage dim:  torch.Size([5, 725, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 725, 1000])
Span start logits:  torch.Size([5, 725])
span start probs dim:  torch.Size([5, 725])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 725]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1493, 200])
Passage Length:  1493
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1493, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1493, 13])
Passage ques attention dim:  torch.Size([5, 1493, 13])
Passage question vectors dim:  torch.Size([5, 1493, 200])
Question Passage Similarity dim:  torch.Size([5, 1493])
Question passage attention dim:  torch.Size([5, 1493])
Final Merged Passage dim:  torch.Size([5, 1493, 800])
Modeled Passage dim:  torch.Size([5, 1493, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1493, 1000])
Span start logits:  torch.Size([5, 1493])
span start probs dim:  torch.Size([5, 1493])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1493]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 598, 200])
Passage Length:  598
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 598, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 598, 9])
Passage ques attention dim:  torch.Size([5, 598, 9])
Passage question vectors dim:  torch.Size([5, 598, 200])
Question Passage Similarity dim:  torch.Size([5, 598])
Question passage attention dim:  torch.Size([5, 598])
Final Merged Passage dim:  torch.Size([5, 598, 800])
Modeled Passage dim:  torch.Size([5, 598, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 598, 1000])
Span start logits:  torch.Size([5, 598])
span start probs dim:  torch.Size([5, 598])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 598]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 360, 200])
Passage Length:  360
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 360, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 360, 11])
Passage ques attention dim:  torch.Size([5, 360, 11])
Passage question vectors dim:  torch.Size([5, 360, 200])
Question Passage Similarity dim:  torch.Size([5, 360])
Question passage attention dim:  torch.Size([5, 360])
Final Merged Passage dim:  torch.Size([5, 360, 800])
Modeled Passage dim:  torch.Size([5, 360, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 360, 1000])
Span start logits:  torch.Size([5, 360])
span start probs dim:  torch.Size([5, 360])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 360]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 933, 200])
Passage Length:  933
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 933, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 933, 9])
Passage ques attention dim:  torch.Size([5, 933, 9])
Passage question vectors dim:  torch.Size([5, 933, 200])
Question Passage Similarity dim:  torch.Size([5, 933])
Question passage attention dim:  torch.Size([5, 933])
Final Merged Passage dim:  torch.Size([5, 933, 800])
Modeled Passage dim:  torch.Size([5, 933, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 933, 1000])
Span start logits:  torch.Size([5, 933])
span start probs dim:  torch.Size([5, 933])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 933]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 413, 10])
Passage ques attention dim:  torch.Size([5, 413, 10])
Passage question vectors dim:  torch.Size([5, 413, 200])
Question Passage Similarity dim:  torch.Size([5, 413])
Question passage attention dim:  torch.Size([5, 413])
Final Merged Passage dim:  torch.Size([5, 413, 800])
Modeled Passage dim:  torch.Size([5, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 413, 1000])
Span start logits:  torch.Size([5, 413])
span start probs dim:  torch.Size([5, 413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1044, 200])
Passage Length:  1044
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1044, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1044, 10])
Passage ques attention dim:  torch.Size([5, 1044, 10])
Passage question vectors dim:  torch.Size([5, 1044, 200])
Question Passage Similarity dim:  torch.Size([5, 1044])
Question passage attention dim:  torch.Size([5, 1044])
Final Merged Passage dim:  torch.Size([5, 1044, 800])
Modeled Passage dim:  torch.Size([5, 1044, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1044, 1000])
Span start logits:  torch.Size([5, 1044])
span start probs dim:  torch.Size([5, 1044])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1044]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 587, 200])
Passage Length:  587
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 587, 14])
Passage ques attention dim:  torch.Size([5, 587, 14])
Passage question vectors dim:  torch.Size([5, 587, 200])
Question Passage Similarity dim:  torch.Size([5, 587])
Question passage attention dim:  torch.Size([5, 587])
Final Merged Passage dim:  torch.Size([5, 587, 800])
Modeled Passage dim:  torch.Size([5, 587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 587, 1000])
Span start logits:  torch.Size([5, 587])
span start probs dim:  torch.Size([5, 587])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 587]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 270, 200])
Passage Length:  270
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 270, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 270, 10])
Passage ques attention dim:  torch.Size([5, 270, 10])
Passage question vectors dim:  torch.Size([5, 270, 200])
Question Passage Similarity dim:  torch.Size([5, 270])
Question passage attention dim:  torch.Size([5, 270])
Final Merged Passage dim:  torch.Size([5, 270, 800])
Modeled Passage dim:  torch.Size([5, 270, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 270, 1000])
Span start logits:  torch.Size([5, 270])
span start probs dim:  torch.Size([5, 270])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 270]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 560, 12])
Passage ques attention dim:  torch.Size([5, 560, 12])
Passage question vectors dim:  torch.Size([5, 560, 200])
Question Passage Similarity dim:  torch.Size([5, 560])
Question passage attention dim:  torch.Size([5, 560])
Final Merged Passage dim:  torch.Size([5, 560, 800])
Modeled Passage dim:  torch.Size([5, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 560, 1000])
Span start logits:  torch.Size([5, 560])
span start probs dim:  torch.Size([5, 560])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 560]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 347, 200])
Passage Length:  347
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 347, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 347, 15])
Passage ques attention dim:  torch.Size([5, 347, 15])
Passage question vectors dim:  torch.Size([5, 347, 200])
Question Passage Similarity dim:  torch.Size([5, 347])
Question passage attention dim:  torch.Size([5, 347])
Final Merged Passage dim:  torch.Size([5, 347, 800])
Modeled Passage dim:  torch.Size([5, 347, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 347, 1000])
Span start logits:  torch.Size([5, 347])
span start probs dim:  torch.Size([5, 347])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 347]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 967, 13])
Passage ques attention dim:  torch.Size([5, 967, 13])
Passage question vectors dim:  torch.Size([5, 967, 200])
Question Passage Similarity dim:  torch.Size([5, 967])
Question passage attention dim:  torch.Size([5, 967])
Final Merged Passage dim:  torch.Size([5, 967, 800])
Modeled Passage dim:  torch.Size([5, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 967, 1000])
Span start logits:  torch.Size([5, 967])
span start probs dim:  torch.Size([5, 967])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 967]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1291, 200])
Passage Length:  1291
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1291, 10])
Passage ques attention dim:  torch.Size([5, 1291, 10])
Passage question vectors dim:  torch.Size([5, 1291, 200])
Question Passage Similarity dim:  torch.Size([5, 1291])
Question passage attention dim:  torch.Size([5, 1291])
Final Merged Passage dim:  torch.Size([5, 1291, 800])
Modeled Passage dim:  torch.Size([5, 1291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1291, 1000])
Span start logits:  torch.Size([5, 1291])
span start probs dim:  torch.Size([5, 1291])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1291]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 480, 200])
Passage Length:  480
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 480, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 480, 17])
Passage ques attention dim:  torch.Size([5, 480, 17])
Passage question vectors dim:  torch.Size([5, 480, 200])
Question Passage Similarity dim:  torch.Size([5, 480])
Question passage attention dim:  torch.Size([5, 480])
Final Merged Passage dim:  torch.Size([5, 480, 800])
Modeled Passage dim:  torch.Size([5, 480, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 480, 1000])
Span start logits:  torch.Size([5, 480])
span start probs dim:  torch.Size([5, 480])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 480]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 6, 200])
Embedded passage dim:  torch.Size([5, 1413, 200])
Passage Length:  1413
Encoded question dim:  torch.Size([5, 6, 200])
Encoded passage dim:  torch.Size([5, 1413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1413, 6])
Passage ques attention dim:  torch.Size([5, 1413, 6])
Passage question vectors dim:  torch.Size([5, 1413, 200])
Question Passage Similarity dim:  torch.Size([5, 1413])
Question passage attention dim:  torch.Size([5, 1413])
Final Merged Passage dim:  torch.Size([5, 1413, 800])
Modeled Passage dim:  torch.Size([5, 1413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1413, 1000])
Span start logits:  torch.Size([5, 1413])
span start probs dim:  torch.Size([5, 1413])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1413]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 450, 200])
Passage Length:  450
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 450, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 450, 9])
Passage ques attention dim:  torch.Size([5, 450, 9])
Passage question vectors dim:  torch.Size([5, 450, 200])
Question Passage Similarity dim:  torch.Size([5, 450])
Question passage attention dim:  torch.Size([5, 450])
Final Merged Passage dim:  torch.Size([5, 450, 800])
Modeled Passage dim:  torch.Size([5, 450, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 450, 1000])
Span start logits:  torch.Size([5, 450])
span start probs dim:  torch.Size([5, 450])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 450]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1250, 200])
Passage Length:  1250
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1250, 8])
Passage ques attention dim:  torch.Size([5, 1250, 8])
Passage question vectors dim:  torch.Size([5, 1250, 200])
Question Passage Similarity dim:  torch.Size([5, 1250])
Question passage attention dim:  torch.Size([5, 1250])
Final Merged Passage dim:  torch.Size([5, 1250, 800])
Modeled Passage dim:  torch.Size([5, 1250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1250, 1000])
Span start logits:  torch.Size([5, 1250])
span start probs dim:  torch.Size([5, 1250])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1250]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 714, 9])
Passage ques attention dim:  torch.Size([5, 714, 9])
Passage question vectors dim:  torch.Size([5, 714, 200])
Question Passage Similarity dim:  torch.Size([5, 714])
Question passage attention dim:  torch.Size([5, 714])
Final Merged Passage dim:  torch.Size([5, 714, 800])
Modeled Passage dim:  torch.Size([5, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 714, 1000])
Span start logits:  torch.Size([5, 714])
span start probs dim:  torch.Size([5, 714])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 714]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 365, 10])
Passage ques attention dim:  torch.Size([5, 365, 10])
Passage question vectors dim:  torch.Size([5, 365, 200])
Question Passage Similarity dim:  torch.Size([5, 365])
Question passage attention dim:  torch.Size([5, 365])
Final Merged Passage dim:  torch.Size([5, 365, 800])
Modeled Passage dim:  torch.Size([5, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 365, 1000])
Span start logits:  torch.Size([5, 365])
span start probs dim:  torch.Size([5, 365])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 365]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 365, 14])
Passage ques attention dim:  torch.Size([5, 365, 14])
Passage question vectors dim:  torch.Size([5, 365, 200])
Question Passage Similarity dim:  torch.Size([5, 365])
Question passage attention dim:  torch.Size([5, 365])
Final Merged Passage dim:  torch.Size([5, 365, 800])
Modeled Passage dim:  torch.Size([5, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 365, 1000])
Span start logits:  torch.Size([5, 365])
span start probs dim:  torch.Size([5, 365])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 365]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 291, 200])
Passage Length:  291
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 291, 10])
Passage ques attention dim:  torch.Size([5, 291, 10])
Passage question vectors dim:  torch.Size([5, 291, 200])
Question Passage Similarity dim:  torch.Size([5, 291])
Question passage attention dim:  torch.Size([5, 291])
Final Merged Passage dim:  torch.Size([5, 291, 800])
Modeled Passage dim:  torch.Size([5, 291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 291, 1000])
Span start logits:  torch.Size([5, 291])
span start probs dim:  torch.Size([5, 291])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 291]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 894, 200])
Passage Length:  894
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 894, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 894, 15])
Passage ques attention dim:  torch.Size([5, 894, 15])
Passage question vectors dim:  torch.Size([5, 894, 200])
Question Passage Similarity dim:  torch.Size([5, 894])
Question passage attention dim:  torch.Size([5, 894])
Final Merged Passage dim:  torch.Size([5, 894, 800])
Modeled Passage dim:  torch.Size([5, 894, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 894, 1000])
Span start logits:  torch.Size([5, 894])
span start probs dim:  torch.Size([5, 894])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 894]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 13])
Passage ques attention dim:  torch.Size([5, 381, 13])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 248, 200])
Passage Length:  248
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 248, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 248, 12])
Passage ques attention dim:  torch.Size([5, 248, 12])
Passage question vectors dim:  torch.Size([5, 248, 200])
Question Passage Similarity dim:  torch.Size([5, 248])
Question passage attention dim:  torch.Size([5, 248])
Final Merged Passage dim:  torch.Size([5, 248, 800])
Modeled Passage dim:  torch.Size([5, 248, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 248, 1000])
Span start logits:  torch.Size([5, 248])
span start probs dim:  torch.Size([5, 248])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 248]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 641, 200])
Passage Length:  641
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 641, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 641, 12])
Passage ques attention dim:  torch.Size([5, 641, 12])
Passage question vectors dim:  torch.Size([5, 641, 200])
Question Passage Similarity dim:  torch.Size([5, 641])
Question passage attention dim:  torch.Size([5, 641])
Final Merged Passage dim:  torch.Size([5, 641, 800])
Modeled Passage dim:  torch.Size([5, 641, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 641, 1000])
Span start logits:  torch.Size([5, 641])
span start probs dim:  torch.Size([5, 641])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 641]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 350, 13])
Passage ques attention dim:  torch.Size([5, 350, 13])
Passage question vectors dim:  torch.Size([5, 350, 200])
Question Passage Similarity dim:  torch.Size([5, 350])
Question passage attention dim:  torch.Size([5, 350])
Final Merged Passage dim:  torch.Size([5, 350, 800])
Modeled Passage dim:  torch.Size([5, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 350, 1000])
Span start logits:  torch.Size([5, 350])
span start probs dim:  torch.Size([5, 350])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 350]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 724, 9])
Passage ques attention dim:  torch.Size([5, 724, 9])
Passage question vectors dim:  torch.Size([5, 724, 200])
Question Passage Similarity dim:  torch.Size([5, 724])
Question passage attention dim:  torch.Size([5, 724])
Final Merged Passage dim:  torch.Size([5, 724, 800])
Modeled Passage dim:  torch.Size([5, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 724, 1000])
Span start logits:  torch.Size([5, 724])
span start probs dim:  torch.Size([5, 724])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 724]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1308, 200])
Passage Length:  1308
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1308, 12])
Passage ques attention dim:  torch.Size([5, 1308, 12])
Passage question vectors dim:  torch.Size([5, 1308, 200])
Question Passage Similarity dim:  torch.Size([5, 1308])
Question passage attention dim:  torch.Size([5, 1308])
Final Merged Passage dim:  torch.Size([5, 1308, 800])
Modeled Passage dim:  torch.Size([5, 1308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1308, 1000])
Span start logits:  torch.Size([5, 1308])
span start probs dim:  torch.Size([5, 1308])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1308]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 11])
Passage ques attention dim:  torch.Size([5, 441, 11])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 1094, 200])
Passage Length:  1094
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 1094, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1094, 15])
Passage ques attention dim:  torch.Size([5, 1094, 15])
Passage question vectors dim:  torch.Size([5, 1094, 200])
Question Passage Similarity dim:  torch.Size([5, 1094])
Question passage attention dim:  torch.Size([5, 1094])
Final Merged Passage dim:  torch.Size([5, 1094, 800])
Modeled Passage dim:  torch.Size([5, 1094, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1094, 1000])
Span start logits:  torch.Size([5, 1094])
span start probs dim:  torch.Size([5, 1094])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1094]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1261, 200])
Passage Length:  1261
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1261, 8])
Passage ques attention dim:  torch.Size([5, 1261, 8])
Passage question vectors dim:  torch.Size([5, 1261, 200])
Question Passage Similarity dim:  torch.Size([5, 1261])
Question passage attention dim:  torch.Size([5, 1261])
Final Merged Passage dim:  torch.Size([5, 1261, 800])
Modeled Passage dim:  torch.Size([5, 1261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1261, 1000])
Span start logits:  torch.Size([5, 1261])
span start probs dim:  torch.Size([5, 1261])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1261]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1163, 200])
Passage Length:  1163
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1163, 11])
Passage ques attention dim:  torch.Size([5, 1163, 11])
Passage question vectors dim:  torch.Size([5, 1163, 200])
Question Passage Similarity dim:  torch.Size([5, 1163])
Question passage attention dim:  torch.Size([5, 1163])
Final Merged Passage dim:  torch.Size([5, 1163, 800])
Modeled Passage dim:  torch.Size([5, 1163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1163, 1000])
Span start logits:  torch.Size([5, 1163])
span start probs dim:  torch.Size([5, 1163])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1163]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 1135, 200])
Passage Length:  1135
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 1135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1135, 9])
Passage ques attention dim:  torch.Size([5, 1135, 9])
Passage question vectors dim:  torch.Size([5, 1135, 200])
Question Passage Similarity dim:  torch.Size([5, 1135])
Question passage attention dim:  torch.Size([5, 1135])
Final Merged Passage dim:  torch.Size([5, 1135, 800])
Modeled Passage dim:  torch.Size([5, 1135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1135, 1000])
Span start logits:  torch.Size([5, 1135])
span start probs dim:  torch.Size([5, 1135])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1135]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 9])
Passage ques attention dim:  torch.Size([5, 381, 9])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 807, 200])
Passage Length:  807
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 807, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 807, 12])
Passage ques attention dim:  torch.Size([5, 807, 12])
Passage question vectors dim:  torch.Size([5, 807, 200])
Question Passage Similarity dim:  torch.Size([5, 807])
Question passage attention dim:  torch.Size([5, 807])
Final Merged Passage dim:  torch.Size([5, 807, 800])
Modeled Passage dim:  torch.Size([5, 807, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 807, 1000])
Span start logits:  torch.Size([5, 807])
span start probs dim:  torch.Size([5, 807])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 807]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 805, 200])
Passage Length:  805
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 805, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 805, 10])
Passage ques attention dim:  torch.Size([5, 805, 10])
Passage question vectors dim:  torch.Size([5, 805, 200])
Question Passage Similarity dim:  torch.Size([5, 805])
Question passage attention dim:  torch.Size([5, 805])
Final Merged Passage dim:  torch.Size([5, 805, 800])
Modeled Passage dim:  torch.Size([5, 805, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 805, 1000])
Span start logits:  torch.Size([5, 805])
span start probs dim:  torch.Size([5, 805])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 805]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 406, 200])
Passage Length:  406
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 406, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 406, 10])
Passage ques attention dim:  torch.Size([5, 406, 10])
Passage question vectors dim:  torch.Size([5, 406, 200])
Question Passage Similarity dim:  torch.Size([5, 406])
Question passage attention dim:  torch.Size([5, 406])
Final Merged Passage dim:  torch.Size([5, 406, 800])
Modeled Passage dim:  torch.Size([5, 406, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 406, 1000])
Span start logits:  torch.Size([5, 406])
span start probs dim:  torch.Size([5, 406])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 406]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 971, 200])
Passage Length:  971
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 971, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 971, 9])
Passage ques attention dim:  torch.Size([5, 971, 9])
Passage question vectors dim:  torch.Size([5, 971, 200])
Question Passage Similarity dim:  torch.Size([5, 971])
Question passage attention dim:  torch.Size([5, 971])
Final Merged Passage dim:  torch.Size([5, 971, 800])
Modeled Passage dim:  torch.Size([5, 971, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 971, 1000])
Span start logits:  torch.Size([5, 971])
span start probs dim:  torch.Size([5, 971])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 971]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 496, 200])
Passage Length:  496
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 496, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 496, 10])
Passage ques attention dim:  torch.Size([5, 496, 10])
Passage question vectors dim:  torch.Size([5, 496, 200])
Question Passage Similarity dim:  torch.Size([5, 496])
Question passage attention dim:  torch.Size([5, 496])
Final Merged Passage dim:  torch.Size([5, 496, 800])
Modeled Passage dim:  torch.Size([5, 496, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 496, 1000])
Span start logits:  torch.Size([5, 496])
span start probs dim:  torch.Size([5, 496])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 496]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 389, 200])
Passage Length:  389
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 389, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 389, 9])
Passage ques attention dim:  torch.Size([5, 389, 9])
Passage question vectors dim:  torch.Size([5, 389, 200])
Question Passage Similarity dim:  torch.Size([5, 389])
Question passage attention dim:  torch.Size([5, 389])
Final Merged Passage dim:  torch.Size([5, 389, 800])
Modeled Passage dim:  torch.Size([5, 389, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 389, 1000])
Span start logits:  torch.Size([5, 389])
span start probs dim:  torch.Size([5, 389])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 389]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 164, 10])
Passage ques attention dim:  torch.Size([5, 164, 10])
Passage question vectors dim:  torch.Size([5, 164, 200])
Question Passage Similarity dim:  torch.Size([5, 164])
Question passage attention dim:  torch.Size([5, 164])
Final Merged Passage dim:  torch.Size([5, 164, 800])
Modeled Passage dim:  torch.Size([5, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 164, 1000])
Span start logits:  torch.Size([5, 164])
span start probs dim:  torch.Size([5, 164])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 164]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1213, 200])
Passage Length:  1213
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1213, 14])
Passage ques attention dim:  torch.Size([5, 1213, 14])
Passage question vectors dim:  torch.Size([5, 1213, 200])
Question Passage Similarity dim:  torch.Size([5, 1213])
Question passage attention dim:  torch.Size([5, 1213])
Final Merged Passage dim:  torch.Size([5, 1213, 800])
Modeled Passage dim:  torch.Size([5, 1213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1213, 1000])
Span start logits:  torch.Size([5, 1213])
span start probs dim:  torch.Size([5, 1213])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1213]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1024, 200])
Passage Length:  1024
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1024, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1024, 11])
Passage ques attention dim:  torch.Size([5, 1024, 11])
Passage question vectors dim:  torch.Size([5, 1024, 200])
Question Passage Similarity dim:  torch.Size([5, 1024])
Question passage attention dim:  torch.Size([5, 1024])
Final Merged Passage dim:  torch.Size([5, 1024, 800])
Modeled Passage dim:  torch.Size([5, 1024, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1024, 1000])
Span start logits:  torch.Size([5, 1024])
span start probs dim:  torch.Size([5, 1024])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1024]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1041, 200])
Passage Length:  1041
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1041, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1041, 10])
Passage ques attention dim:  torch.Size([5, 1041, 10])
Passage question vectors dim:  torch.Size([5, 1041, 200])
Question Passage Similarity dim:  torch.Size([5, 1041])
Question passage attention dim:  torch.Size([5, 1041])
Final Merged Passage dim:  torch.Size([5, 1041, 800])
Modeled Passage dim:  torch.Size([5, 1041, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1041, 1000])
Span start logits:  torch.Size([5, 1041])
span start probs dim:  torch.Size([5, 1041])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1041]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 203, 200])
Passage Length:  203
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 203, 10])
Passage ques attention dim:  torch.Size([5, 203, 10])
Passage question vectors dim:  torch.Size([5, 203, 200])
Question Passage Similarity dim:  torch.Size([5, 203])
Question passage attention dim:  torch.Size([5, 203])
Final Merged Passage dim:  torch.Size([5, 203, 800])
Modeled Passage dim:  torch.Size([5, 203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 203, 1000])
Span start logits:  torch.Size([5, 203])
span start probs dim:  torch.Size([5, 203])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 203]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 482, 200])
Passage Length:  482
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 482, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 482, 9])
Passage ques attention dim:  torch.Size([5, 482, 9])
Passage question vectors dim:  torch.Size([5, 482, 200])
Question Passage Similarity dim:  torch.Size([5, 482])
Question passage attention dim:  torch.Size([5, 482])
Final Merged Passage dim:  torch.Size([5, 482, 800])
Modeled Passage dim:  torch.Size([5, 482, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 482, 1000])
Span start logits:  torch.Size([5, 482])
span start probs dim:  torch.Size([5, 482])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 482]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1603, 200])
Passage Length:  1603
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1603, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1603, 12])
Passage ques attention dim:  torch.Size([5, 1603, 12])
Passage question vectors dim:  torch.Size([5, 1603, 200])
Question Passage Similarity dim:  torch.Size([5, 1603])
Question passage attention dim:  torch.Size([5, 1603])
Final Merged Passage dim:  torch.Size([5, 1603, 800])
Modeled Passage dim:  torch.Size([5, 1603, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1603, 1000])
Span start logits:  torch.Size([5, 1603])
span start probs dim:  torch.Size([5, 1603])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1603]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 1432, 200])
Passage Length:  1432
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 1432, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1432, 7])
Passage ques attention dim:  torch.Size([5, 1432, 7])
Passage question vectors dim:  torch.Size([5, 1432, 200])
Question Passage Similarity dim:  torch.Size([5, 1432])
Question passage attention dim:  torch.Size([5, 1432])
Final Merged Passage dim:  torch.Size([5, 1432, 800])
Modeled Passage dim:  torch.Size([5, 1432, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1432, 1000])
Span start logits:  torch.Size([5, 1432])
span start probs dim:  torch.Size([5, 1432])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1432]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 15, 200])
Embedded passage dim:  torch.Size([5, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([5, 15, 200])
Encoded passage dim:  torch.Size([5, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 441, 15])
Passage ques attention dim:  torch.Size([5, 441, 15])
Passage question vectors dim:  torch.Size([5, 441, 200])
Question Passage Similarity dim:  torch.Size([5, 441])
Question passage attention dim:  torch.Size([5, 441])
Final Merged Passage dim:  torch.Size([5, 441, 800])
Modeled Passage dim:  torch.Size([5, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 441, 1000])
Span start logits:  torch.Size([5, 441])
span start probs dim:  torch.Size([5, 441])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 441]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 741, 200])
Passage Length:  741
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 741, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 741, 8])
Passage ques attention dim:  torch.Size([5, 741, 8])
Passage question vectors dim:  torch.Size([5, 741, 200])
Question Passage Similarity dim:  torch.Size([5, 741])
Question passage attention dim:  torch.Size([5, 741])
Final Merged Passage dim:  torch.Size([5, 741, 800])
Modeled Passage dim:  torch.Size([5, 741, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 741, 1000])
Span start logits:  torch.Size([5, 741])
span start probs dim:  torch.Size([5, 741])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 741]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1543, 200])
Passage Length:  1543
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1543, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1543, 10])
Passage ques attention dim:  torch.Size([5, 1543, 10])
Passage question vectors dim:  torch.Size([5, 1543, 200])
Question Passage Similarity dim:  torch.Size([5, 1543])
Question passage attention dim:  torch.Size([5, 1543])
Final Merged Passage dim:  torch.Size([5, 1543, 800])
Modeled Passage dim:  torch.Size([5, 1543, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1543, 1000])
Span start logits:  torch.Size([5, 1543])
span start probs dim:  torch.Size([5, 1543])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1543]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 696, 200])
Passage Length:  696
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 696, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 696, 8])
Passage ques attention dim:  torch.Size([5, 696, 8])
Passage question vectors dim:  torch.Size([5, 696, 200])
Question Passage Similarity dim:  torch.Size([5, 696])
Question passage attention dim:  torch.Size([5, 696])
Final Merged Passage dim:  torch.Size([5, 696, 800])
Modeled Passage dim:  torch.Size([5, 696, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 696, 1000])
Span start logits:  torch.Size([5, 696])
span start probs dim:  torch.Size([5, 696])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 696]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 14, 200])
Embedded passage dim:  torch.Size([5, 1081, 200])
Passage Length:  1081
Encoded question dim:  torch.Size([5, 14, 200])
Encoded passage dim:  torch.Size([5, 1081, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1081, 14])
Passage ques attention dim:  torch.Size([5, 1081, 14])
Passage question vectors dim:  torch.Size([5, 1081, 200])
Question Passage Similarity dim:  torch.Size([5, 1081])
Question passage attention dim:  torch.Size([5, 1081])
Final Merged Passage dim:  torch.Size([5, 1081, 800])
Modeled Passage dim:  torch.Size([5, 1081, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1081, 1000])
Span start logits:  torch.Size([5, 1081])
span start probs dim:  torch.Size([5, 1081])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1081]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 323, 13])
Passage ques attention dim:  torch.Size([5, 323, 13])
Passage question vectors dim:  torch.Size([5, 323, 200])
Question Passage Similarity dim:  torch.Size([5, 323])
Question passage attention dim:  torch.Size([5, 323])
Final Merged Passage dim:  torch.Size([5, 323, 800])
Modeled Passage dim:  torch.Size([5, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 323, 1000])
Span start logits:  torch.Size([5, 323])
span start probs dim:  torch.Size([5, 323])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 323]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 563, 200])
Passage Length:  563
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 563, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 563, 18])
Passage ques attention dim:  torch.Size([5, 563, 18])
Passage question vectors dim:  torch.Size([5, 563, 200])
Question Passage Similarity dim:  torch.Size([5, 563])
Question passage attention dim:  torch.Size([5, 563])
Final Merged Passage dim:  torch.Size([5, 563, 800])
Modeled Passage dim:  torch.Size([5, 563, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 563, 1000])
Span start logits:  torch.Size([5, 563])
span start probs dim:  torch.Size([5, 563])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 563]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1012, 200])
Passage Length:  1012
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1012, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1012, 10])
Passage ques attention dim:  torch.Size([5, 1012, 10])
Passage question vectors dim:  torch.Size([5, 1012, 200])
Question Passage Similarity dim:  torch.Size([5, 1012])
Question passage attention dim:  torch.Size([5, 1012])
Final Merged Passage dim:  torch.Size([5, 1012, 800])
Modeled Passage dim:  torch.Size([5, 1012, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1012, 1000])
Span start logits:  torch.Size([5, 1012])
span start probs dim:  torch.Size([5, 1012])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1012]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 595, 200])
Passage Length:  595
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 595, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 595, 9])
Passage ques attention dim:  torch.Size([5, 595, 9])
Passage question vectors dim:  torch.Size([5, 595, 200])
Question Passage Similarity dim:  torch.Size([5, 595])
Question passage attention dim:  torch.Size([5, 595])
Final Merged Passage dim:  torch.Size([5, 595, 800])
Modeled Passage dim:  torch.Size([5, 595, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 595, 1000])
Span start logits:  torch.Size([5, 595])
span start probs dim:  torch.Size([5, 595])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 595]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 1012, 200])
Passage Length:  1012
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 1012, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1012, 12])
Passage ques attention dim:  torch.Size([5, 1012, 12])
Passage question vectors dim:  torch.Size([5, 1012, 200])
Question Passage Similarity dim:  torch.Size([5, 1012])
Question passage attention dim:  torch.Size([5, 1012])
Final Merged Passage dim:  torch.Size([5, 1012, 800])
Modeled Passage dim:  torch.Size([5, 1012, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1012, 1000])
Span start logits:  torch.Size([5, 1012])
span start probs dim:  torch.Size([5, 1012])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1012]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 323, 8])
Passage ques attention dim:  torch.Size([5, 323, 8])
Passage question vectors dim:  torch.Size([5, 323, 200])
Question Passage Similarity dim:  torch.Size([5, 323])
Question passage attention dim:  torch.Size([5, 323])
Final Merged Passage dim:  torch.Size([5, 323, 800])
Modeled Passage dim:  torch.Size([5, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 323, 1000])
Span start logits:  torch.Size([5, 323])
span start probs dim:  torch.Size([5, 323])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 323]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 397, 200])
Passage Length:  397
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 397, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 397, 11])
Passage ques attention dim:  torch.Size([5, 397, 11])
Passage question vectors dim:  torch.Size([5, 397, 200])
Question Passage Similarity dim:  torch.Size([5, 397])
Question passage attention dim:  torch.Size([5, 397])
Final Merged Passage dim:  torch.Size([5, 397, 800])
Modeled Passage dim:  torch.Size([5, 397, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 397, 1000])
Span start logits:  torch.Size([5, 397])
span start probs dim:  torch.Size([5, 397])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 397]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 7, 200])
Embedded passage dim:  torch.Size([5, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([5, 7, 200])
Encoded passage dim:  torch.Size([5, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 226, 7])
Passage ques attention dim:  torch.Size([5, 226, 7])
Passage question vectors dim:  torch.Size([5, 226, 200])
Question Passage Similarity dim:  torch.Size([5, 226])
Question passage attention dim:  torch.Size([5, 226])
Final Merged Passage dim:  torch.Size([5, 226, 800])
Modeled Passage dim:  torch.Size([5, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 226, 1000])
Span start logits:  torch.Size([5, 226])
span start probs dim:  torch.Size([5, 226])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 226]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 1201, 200])
Passage Length:  1201
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 1201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1201, 8])
Passage ques attention dim:  torch.Size([5, 1201, 8])
Passage question vectors dim:  torch.Size([5, 1201, 200])
Question Passage Similarity dim:  torch.Size([5, 1201])
Question passage attention dim:  torch.Size([5, 1201])
Final Merged Passage dim:  torch.Size([5, 1201, 800])
Modeled Passage dim:  torch.Size([5, 1201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1201, 1000])
Span start logits:  torch.Size([5, 1201])
span start probs dim:  torch.Size([5, 1201])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1201]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 610, 200])
Passage Length:  610
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 610, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 610, 8])
Passage ques attention dim:  torch.Size([5, 610, 8])
Passage question vectors dim:  torch.Size([5, 610, 200])
Question Passage Similarity dim:  torch.Size([5, 610])
Question passage attention dim:  torch.Size([5, 610])
Final Merged Passage dim:  torch.Size([5, 610, 800])
Modeled Passage dim:  torch.Size([5, 610, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 610, 1000])
Span start logits:  torch.Size([5, 610])
span start probs dim:  torch.Size([5, 610])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 610]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 870, 200])
Passage Length:  870
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 870, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 870, 11])
Passage ques attention dim:  torch.Size([5, 870, 11])
Passage question vectors dim:  torch.Size([5, 870, 200])
Question Passage Similarity dim:  torch.Size([5, 870])
Question passage attention dim:  torch.Size([5, 870])
Final Merged Passage dim:  torch.Size([5, 870, 800])
Modeled Passage dim:  torch.Size([5, 870, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 870, 1000])
Span start logits:  torch.Size([5, 870])
span start probs dim:  torch.Size([5, 870])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 870]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1108, 200])
Passage Length:  1108
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1108, 11])
Passage ques attention dim:  torch.Size([5, 1108, 11])
Passage question vectors dim:  torch.Size([5, 1108, 200])
Question Passage Similarity dim:  torch.Size([5, 1108])
Question passage attention dim:  torch.Size([5, 1108])
Final Merged Passage dim:  torch.Size([5, 1108, 800])
Modeled Passage dim:  torch.Size([5, 1108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1108, 1000])
Span start logits:  torch.Size([5, 1108])
span start probs dim:  torch.Size([5, 1108])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1108]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 619, 8])
Passage ques attention dim:  torch.Size([5, 619, 8])
Passage question vectors dim:  torch.Size([5, 619, 200])
Question Passage Similarity dim:  torch.Size([5, 619])
Question passage attention dim:  torch.Size([5, 619])
Final Merged Passage dim:  torch.Size([5, 619, 800])
Modeled Passage dim:  torch.Size([5, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 619, 1000])
Span start logits:  torch.Size([5, 619])
span start probs dim:  torch.Size([5, 619])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 619]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 346, 200])
Passage Length:  346
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 346, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 346, 10])
Passage ques attention dim:  torch.Size([5, 346, 10])
Passage question vectors dim:  torch.Size([5, 346, 200])
Question Passage Similarity dim:  torch.Size([5, 346])
Question passage attention dim:  torch.Size([5, 346])
Final Merged Passage dim:  torch.Size([5, 346, 800])
Modeled Passage dim:  torch.Size([5, 346, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 346, 1000])
Span start logits:  torch.Size([5, 346])
span start probs dim:  torch.Size([5, 346])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 346]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 1795, 200])
Passage Length:  1795
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 1795, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1795, 16])
Passage ques attention dim:  torch.Size([5, 1795, 16])
Passage question vectors dim:  torch.Size([5, 1795, 200])
Question Passage Similarity dim:  torch.Size([5, 1795])
Question passage attention dim:  torch.Size([5, 1795])
Final Merged Passage dim:  torch.Size([5, 1795, 800])
Modeled Passage dim:  torch.Size([5, 1795, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1795, 1000])
Span start logits:  torch.Size([5, 1795])
span start probs dim:  torch.Size([5, 1795])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1795]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 398, 200])
Passage Length:  398
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 398, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 398, 9])
Passage ques attention dim:  torch.Size([5, 398, 9])
Passage question vectors dim:  torch.Size([5, 398, 200])
Question Passage Similarity dim:  torch.Size([5, 398])
Question passage attention dim:  torch.Size([5, 398])
Final Merged Passage dim:  torch.Size([5, 398, 800])
Modeled Passage dim:  torch.Size([5, 398, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 398, 1000])
Span start logits:  torch.Size([5, 398])
span start probs dim:  torch.Size([5, 398])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 398]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1041, 200])
Passage Length:  1041
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1041, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1041, 13])
Passage ques attention dim:  torch.Size([5, 1041, 13])
Passage question vectors dim:  torch.Size([5, 1041, 200])
Question Passage Similarity dim:  torch.Size([5, 1041])
Question passage attention dim:  torch.Size([5, 1041])
Final Merged Passage dim:  torch.Size([5, 1041, 800])
Modeled Passage dim:  torch.Size([5, 1041, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1041, 1000])
Span start logits:  torch.Size([5, 1041])
span start probs dim:  torch.Size([5, 1041])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1041]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 554, 200])
Passage Length:  554
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 554, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 554, 8])
Passage ques attention dim:  torch.Size([5, 554, 8])
Passage question vectors dim:  torch.Size([5, 554, 200])
Question Passage Similarity dim:  torch.Size([5, 554])
Question passage attention dim:  torch.Size([5, 554])
Final Merged Passage dim:  torch.Size([5, 554, 800])
Modeled Passage dim:  torch.Size([5, 554, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 554, 1000])
Span start logits:  torch.Size([5, 554])
span start probs dim:  torch.Size([5, 554])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 554]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 193, 9])
Passage ques attention dim:  torch.Size([5, 193, 9])
Passage question vectors dim:  torch.Size([5, 193, 200])
Question Passage Similarity dim:  torch.Size([5, 193])
Question passage attention dim:  torch.Size([5, 193])
Final Merged Passage dim:  torch.Size([5, 193, 800])
Modeled Passage dim:  torch.Size([5, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 193, 1000])
Span start logits:  torch.Size([5, 193])
span start probs dim:  torch.Size([5, 193])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 193]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 952, 200])
Passage Length:  952
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 952, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 952, 12])
Passage ques attention dim:  torch.Size([5, 952, 12])
Passage question vectors dim:  torch.Size([5, 952, 200])
Question Passage Similarity dim:  torch.Size([5, 952])
Question passage attention dim:  torch.Size([5, 952])
Final Merged Passage dim:  torch.Size([5, 952, 800])
Modeled Passage dim:  torch.Size([5, 952, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 952, 1000])
Span start logits:  torch.Size([5, 952])
span start probs dim:  torch.Size([5, 952])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 952]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 906, 12])
Passage ques attention dim:  torch.Size([5, 906, 12])
Passage question vectors dim:  torch.Size([5, 906, 200])
Question Passage Similarity dim:  torch.Size([5, 906])
Question passage attention dim:  torch.Size([5, 906])
Final Merged Passage dim:  torch.Size([5, 906, 800])
Modeled Passage dim:  torch.Size([5, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 906, 1000])
Span start logits:  torch.Size([5, 906])
span start probs dim:  torch.Size([5, 906])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 906]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 876, 200])
Passage Length:  876
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 876, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 876, 12])
Passage ques attention dim:  torch.Size([5, 876, 12])
Passage question vectors dim:  torch.Size([5, 876, 200])
Question Passage Similarity dim:  torch.Size([5, 876])
Question passage attention dim:  torch.Size([5, 876])
Final Merged Passage dim:  torch.Size([5, 876, 800])
Modeled Passage dim:  torch.Size([5, 876, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 876, 1000])
Span start logits:  torch.Size([5, 876])
span start probs dim:  torch.Size([5, 876])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 876]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 567, 200])
Passage Length:  567
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 567, 10])
Passage ques attention dim:  torch.Size([5, 567, 10])
Passage question vectors dim:  torch.Size([5, 567, 200])
Question Passage Similarity dim:  torch.Size([5, 567])
Question passage attention dim:  torch.Size([5, 567])
Final Merged Passage dim:  torch.Size([5, 567, 800])
Modeled Passage dim:  torch.Size([5, 567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 567, 1000])
Span start logits:  torch.Size([5, 567])
span start probs dim:  torch.Size([5, 567])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 567]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 18, 200])
Embedded passage dim:  torch.Size([5, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([5, 18, 200])
Encoded passage dim:  torch.Size([5, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 381, 18])
Passage ques attention dim:  torch.Size([5, 381, 18])
Passage question vectors dim:  torch.Size([5, 381, 200])
Question Passage Similarity dim:  torch.Size([5, 381])
Question passage attention dim:  torch.Size([5, 381])
Final Merged Passage dim:  torch.Size([5, 381, 800])
Modeled Passage dim:  torch.Size([5, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 381, 1000])
Span start logits:  torch.Size([5, 381])
span start probs dim:  torch.Size([5, 381])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 381]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 478, 200])
Passage Length:  478
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 478, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 478, 10])
Passage ques attention dim:  torch.Size([5, 478, 10])
Passage question vectors dim:  torch.Size([5, 478, 200])
Question Passage Similarity dim:  torch.Size([5, 478])
Question passage attention dim:  torch.Size([5, 478])
Final Merged Passage dim:  torch.Size([5, 478, 800])
Modeled Passage dim:  torch.Size([5, 478, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 478, 1000])
Span start logits:  torch.Size([5, 478])
span start probs dim:  torch.Size([5, 478])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 478]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 369, 200])
Passage Length:  369
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 369, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 369, 10])
Passage ques attention dim:  torch.Size([5, 369, 10])
Passage question vectors dim:  torch.Size([5, 369, 200])
Question Passage Similarity dim:  torch.Size([5, 369])
Question passage attention dim:  torch.Size([5, 369])
Final Merged Passage dim:  torch.Size([5, 369, 800])
Modeled Passage dim:  torch.Size([5, 369, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 369, 1000])
Span start logits:  torch.Size([5, 369])
span start probs dim:  torch.Size([5, 369])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 369]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1691, 200])
Passage Length:  1691
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1691, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1691, 13])
Passage ques attention dim:  torch.Size([5, 1691, 13])
Passage question vectors dim:  torch.Size([5, 1691, 200])
Question Passage Similarity dim:  torch.Size([5, 1691])
Question passage attention dim:  torch.Size([5, 1691])
Final Merged Passage dim:  torch.Size([5, 1691, 800])
Modeled Passage dim:  torch.Size([5, 1691, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1691, 1000])
Span start logits:  torch.Size([5, 1691])
span start probs dim:  torch.Size([5, 1691])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1691]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 361, 10])
Passage ques attention dim:  torch.Size([5, 361, 10])
Passage question vectors dim:  torch.Size([5, 361, 200])
Question Passage Similarity dim:  torch.Size([5, 361])
Question passage attention dim:  torch.Size([5, 361])
Final Merged Passage dim:  torch.Size([5, 361, 800])
Modeled Passage dim:  torch.Size([5, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 361, 1000])
Span start logits:  torch.Size([5, 361])
span start probs dim:  torch.Size([5, 361])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 361]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 17, 200])
Embedded passage dim:  torch.Size([5, 696, 200])
Passage Length:  696
Encoded question dim:  torch.Size([5, 17, 200])
Encoded passage dim:  torch.Size([5, 696, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 696, 17])
Passage ques attention dim:  torch.Size([5, 696, 17])
Passage question vectors dim:  torch.Size([5, 696, 200])
Question Passage Similarity dim:  torch.Size([5, 696])
Question passage attention dim:  torch.Size([5, 696])
Final Merged Passage dim:  torch.Size([5, 696, 800])
Modeled Passage dim:  torch.Size([5, 696, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 696, 1000])
Span start logits:  torch.Size([5, 696])
span start probs dim:  torch.Size([5, 696])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 696]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1047, 200])
Passage Length:  1047
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1047, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1047, 10])
Passage ques attention dim:  torch.Size([5, 1047, 10])
Passage question vectors dim:  torch.Size([5, 1047, 200])
Question Passage Similarity dim:  torch.Size([5, 1047])
Question passage attention dim:  torch.Size([5, 1047])
Final Merged Passage dim:  torch.Size([5, 1047, 800])
Modeled Passage dim:  torch.Size([5, 1047, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1047, 1000])
Span start logits:  torch.Size([5, 1047])
span start probs dim:  torch.Size([5, 1047])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1047]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1129, 200])
Passage Length:  1129
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1129, 11])
Passage ques attention dim:  torch.Size([5, 1129, 11])
Passage question vectors dim:  torch.Size([5, 1129, 200])
Question Passage Similarity dim:  torch.Size([5, 1129])
Question passage attention dim:  torch.Size([5, 1129])
Final Merged Passage dim:  torch.Size([5, 1129, 800])
Modeled Passage dim:  torch.Size([5, 1129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1129, 1000])
Span start logits:  torch.Size([5, 1129])
span start probs dim:  torch.Size([5, 1129])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1129]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 176, 9])
Passage ques attention dim:  torch.Size([5, 176, 9])
Passage question vectors dim:  torch.Size([5, 176, 200])
Question Passage Similarity dim:  torch.Size([5, 176])
Question passage attention dim:  torch.Size([5, 176])
Final Merged Passage dim:  torch.Size([5, 176, 800])
Modeled Passage dim:  torch.Size([5, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 176, 1000])
Span start logits:  torch.Size([5, 176])
span start probs dim:  torch.Size([5, 176])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 176]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 161, 10])
Passage ques attention dim:  torch.Size([5, 161, 10])
Passage question vectors dim:  torch.Size([5, 161, 200])
Question Passage Similarity dim:  torch.Size([5, 161])
Question passage attention dim:  torch.Size([5, 161])
Final Merged Passage dim:  torch.Size([5, 161, 800])
Modeled Passage dim:  torch.Size([5, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 161, 1000])
Span start logits:  torch.Size([5, 161])
span start probs dim:  torch.Size([5, 161])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 161]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 1288, 200])
Passage Length:  1288
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 1288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1288, 10])
Passage ques attention dim:  torch.Size([5, 1288, 10])
Passage question vectors dim:  torch.Size([5, 1288, 200])
Question Passage Similarity dim:  torch.Size([5, 1288])
Question passage attention dim:  torch.Size([5, 1288])
Final Merged Passage dim:  torch.Size([5, 1288, 800])
Modeled Passage dim:  torch.Size([5, 1288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1288, 1000])
Span start logits:  torch.Size([5, 1288])
span start probs dim:  torch.Size([5, 1288])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1288]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 874, 200])
Passage Length:  874
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 874, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 874, 16])
Passage ques attention dim:  torch.Size([5, 874, 16])
Passage question vectors dim:  torch.Size([5, 874, 200])
Question Passage Similarity dim:  torch.Size([5, 874])
Question passage attention dim:  torch.Size([5, 874])
Final Merged Passage dim:  torch.Size([5, 874, 800])
Modeled Passage dim:  torch.Size([5, 874, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 874, 1000])
Span start logits:  torch.Size([5, 874])
span start probs dim:  torch.Size([5, 874])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 874]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 579, 200])
Passage Length:  579
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 579, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 579, 13])
Passage ques attention dim:  torch.Size([5, 579, 13])
Passage question vectors dim:  torch.Size([5, 579, 200])
Question Passage Similarity dim:  torch.Size([5, 579])
Question passage attention dim:  torch.Size([5, 579])
Final Merged Passage dim:  torch.Size([5, 579, 800])
Modeled Passage dim:  torch.Size([5, 579, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 579, 1000])
Span start logits:  torch.Size([5, 579])
span start probs dim:  torch.Size([5, 579])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 579]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 1077, 200])
Passage Length:  1077
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 1077, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1077, 13])
Passage ques attention dim:  torch.Size([5, 1077, 13])
Passage question vectors dim:  torch.Size([5, 1077, 200])
Question Passage Similarity dim:  torch.Size([5, 1077])
Question passage attention dim:  torch.Size([5, 1077])
Final Merged Passage dim:  torch.Size([5, 1077, 800])
Modeled Passage dim:  torch.Size([5, 1077, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1077, 1000])
Span start logits:  torch.Size([5, 1077])
span start probs dim:  torch.Size([5, 1077])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1077]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 845, 200])
Passage Length:  845
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 845, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 845, 16])
Passage ques attention dim:  torch.Size([5, 845, 16])
Passage question vectors dim:  torch.Size([5, 845, 200])
Question Passage Similarity dim:  torch.Size([5, 845])
Question passage attention dim:  torch.Size([5, 845])
Final Merged Passage dim:  torch.Size([5, 845, 800])
Modeled Passage dim:  torch.Size([5, 845, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 845, 1000])
Span start logits:  torch.Size([5, 845])
span start probs dim:  torch.Size([5, 845])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 845]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 1312, 200])
Passage Length:  1312
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 1312, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1312, 16])
Passage ques attention dim:  torch.Size([5, 1312, 16])
Passage question vectors dim:  torch.Size([5, 1312, 200])
Question Passage Similarity dim:  torch.Size([5, 1312])
Question passage attention dim:  torch.Size([5, 1312])
Final Merged Passage dim:  torch.Size([5, 1312, 800])
Modeled Passage dim:  torch.Size([5, 1312, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1312, 1000])
Span start logits:  torch.Size([5, 1312])
span start probs dim:  torch.Size([5, 1312])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1312]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 8, 200])
Embedded passage dim:  torch.Size([5, 563, 200])
Passage Length:  563
Encoded question dim:  torch.Size([5, 8, 200])
Encoded passage dim:  torch.Size([5, 563, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 563, 8])
Passage ques attention dim:  torch.Size([5, 563, 8])
Passage question vectors dim:  torch.Size([5, 563, 200])
Question Passage Similarity dim:  torch.Size([5, 563])
Question passage attention dim:  torch.Size([5, 563])
Final Merged Passage dim:  torch.Size([5, 563, 800])
Modeled Passage dim:  torch.Size([5, 563, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 563, 1000])
Span start logits:  torch.Size([5, 563])
span start probs dim:  torch.Size([5, 563])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 563]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 836, 200])
Passage Length:  836
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 836, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 836, 9])
Passage ques attention dim:  torch.Size([5, 836, 9])
Passage question vectors dim:  torch.Size([5, 836, 200])
Question Passage Similarity dim:  torch.Size([5, 836])
Question passage attention dim:  torch.Size([5, 836])
Final Merged Passage dim:  torch.Size([5, 836, 800])
Modeled Passage dim:  torch.Size([5, 836, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 836, 1000])
Span start logits:  torch.Size([5, 836])
span start probs dim:  torch.Size([5, 836])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 836]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 250, 11])
Passage ques attention dim:  torch.Size([5, 250, 11])
Passage question vectors dim:  torch.Size([5, 250, 200])
Question Passage Similarity dim:  torch.Size([5, 250])
Question passage attention dim:  torch.Size([5, 250])
Final Merged Passage dim:  torch.Size([5, 250, 800])
Modeled Passage dim:  torch.Size([5, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 250, 1000])
Span start logits:  torch.Size([5, 250])
span start probs dim:  torch.Size([5, 250])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 250]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 456, 9])
Passage ques attention dim:  torch.Size([5, 456, 9])
Passage question vectors dim:  torch.Size([5, 456, 200])
Question Passage Similarity dim:  torch.Size([5, 456])
Question passage attention dim:  torch.Size([5, 456])
Final Merged Passage dim:  torch.Size([5, 456, 800])
Modeled Passage dim:  torch.Size([5, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 456, 1000])
Span start logits:  torch.Size([5, 456])
span start probs dim:  torch.Size([5, 456])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 456]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 16, 200])
Embedded passage dim:  torch.Size([5, 828, 200])
Passage Length:  828
Encoded question dim:  torch.Size([5, 16, 200])
Encoded passage dim:  torch.Size([5, 828, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 828, 16])
Passage ques attention dim:  torch.Size([5, 828, 16])
Passage question vectors dim:  torch.Size([5, 828, 200])
Question Passage Similarity dim:  torch.Size([5, 828])
Question passage attention dim:  torch.Size([5, 828])
Final Merged Passage dim:  torch.Size([5, 828, 800])
Modeled Passage dim:  torch.Size([5, 828, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 828, 1000])
Span start logits:  torch.Size([5, 828])
span start probs dim:  torch.Size([5, 828])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 828]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 10, 200])
Embedded passage dim:  torch.Size([5, 807, 200])
Passage Length:  807
Encoded question dim:  torch.Size([5, 10, 200])
Encoded passage dim:  torch.Size([5, 807, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 807, 10])
Passage ques attention dim:  torch.Size([5, 807, 10])
Passage question vectors dim:  torch.Size([5, 807, 200])
Question Passage Similarity dim:  torch.Size([5, 807])
Question passage attention dim:  torch.Size([5, 807])
Final Merged Passage dim:  torch.Size([5, 807, 800])
Modeled Passage dim:  torch.Size([5, 807, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 807, 1000])
Span start logits:  torch.Size([5, 807])
span start probs dim:  torch.Size([5, 807])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 807]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 1308, 200])
Passage Length:  1308
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 1308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 1308, 11])
Passage ques attention dim:  torch.Size([5, 1308, 11])
Passage question vectors dim:  torch.Size([5, 1308, 200])
Question Passage Similarity dim:  torch.Size([5, 1308])
Question passage attention dim:  torch.Size([5, 1308])
Final Merged Passage dim:  torch.Size([5, 1308, 800])
Modeled Passage dim:  torch.Size([5, 1308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 1308, 1000])
Span start logits:  torch.Size([5, 1308])
span start probs dim:  torch.Size([5, 1308])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 1308]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 12, 200])
Embedded passage dim:  torch.Size([5, 932, 200])
Passage Length:  932
Encoded question dim:  torch.Size([5, 12, 200])
Encoded passage dim:  torch.Size([5, 932, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 932, 12])
Passage ques attention dim:  torch.Size([5, 932, 12])
Passage question vectors dim:  torch.Size([5, 932, 200])
Question Passage Similarity dim:  torch.Size([5, 932])
Question passage attention dim:  torch.Size([5, 932])
Final Merged Passage dim:  torch.Size([5, 932, 800])
Modeled Passage dim:  torch.Size([5, 932, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 932, 1000])
Span start logits:  torch.Size([5, 932])
span start probs dim:  torch.Size([5, 932])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 932]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 11, 200])
Embedded passage dim:  torch.Size([5, 384, 200])
Passage Length:  384
Encoded question dim:  torch.Size([5, 11, 200])
Encoded passage dim:  torch.Size([5, 384, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 384, 11])
Passage ques attention dim:  torch.Size([5, 384, 11])
Passage question vectors dim:  torch.Size([5, 384, 200])
Question Passage Similarity dim:  torch.Size([5, 384])
Question passage attention dim:  torch.Size([5, 384])
Final Merged Passage dim:  torch.Size([5, 384, 800])
Modeled Passage dim:  torch.Size([5, 384, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 384, 1000])
Span start logits:  torch.Size([5, 384])
span start probs dim:  torch.Size([5, 384])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 384]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 9, 200])
Embedded passage dim:  torch.Size([5, 761, 200])
Passage Length:  761
Encoded question dim:  torch.Size([5, 9, 200])
Encoded passage dim:  torch.Size([5, 761, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 761, 9])
Passage ques attention dim:  torch.Size([5, 761, 9])
Passage question vectors dim:  torch.Size([5, 761, 200])
Question Passage Similarity dim:  torch.Size([5, 761])
Question passage attention dim:  torch.Size([5, 761])
Final Merged Passage dim:  torch.Size([5, 761, 800])
Modeled Passage dim:  torch.Size([5, 761, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 761, 1000])
Span start logits:  torch.Size([5, 761])
span start probs dim:  torch.Size([5, 761])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 761]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 19, 200])
Embedded passage dim:  torch.Size([5, 389, 200])
Passage Length:  389
Encoded question dim:  torch.Size([5, 19, 200])
Encoded passage dim:  torch.Size([5, 389, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 389, 19])
Passage ques attention dim:  torch.Size([5, 389, 19])
Passage question vectors dim:  torch.Size([5, 389, 200])
Question Passage Similarity dim:  torch.Size([5, 389])
Question passage attention dim:  torch.Size([5, 389])
Final Merged Passage dim:  torch.Size([5, 389, 800])
Modeled Passage dim:  torch.Size([5, 389, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 389, 1000])
Span start logits:  torch.Size([5, 389])
span start probs dim:  torch.Size([5, 389])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 389]) 5
METADATA: 
Embedded question dim:  torch.Size([5, 13, 200])
Embedded passage dim:  torch.Size([5, 686, 200])
Passage Length:  686
Encoded question dim:  torch.Size([5, 13, 200])
Encoded passage dim:  torch.Size([5, 686, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([5, 686, 13])
Passage ques attention dim:  torch.Size([5, 686, 13])
Passage question vectors dim:  torch.Size([5, 686, 200])
Question Passage Similarity dim:  torch.Size([5, 686])
Question passage attention dim:  torch.Size([5, 686])
Final Merged Passage dim:  torch.Size([5, 686, 800])
Modeled Passage dim:  torch.Size([5, 686, 200])
Modeling dim:  200
Span start input shape:  torch.Size([5, 686, 1000])
Span start logits:  torch.Size([5, 686])
span start probs dim:  torch.Size([5, 686])
Span start representation dim:  torch.Size([5, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([5, 686]) 5
