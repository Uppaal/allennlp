0
87599
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 81, 200])
Passage Length:  81
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 81, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 81, 30])
Passage ques attention dim:  torch.Size([40, 81, 30])
Passage question vectors dim:  torch.Size([40, 81, 200])
Question Passage Similarity dim:  torch.Size([40, 81])
Question passage attention dim:  torch.Size([40, 81])
Final Merged Passage dim:  torch.Size([40, 81, 800])
Modeled Passage dim:  torch.Size([40, 81, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 81, 1000])
Span start logits:  torch.Size([40, 81])
span start probs dim:  torch.Size([40, 81])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 81]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 250, 25])
Passage ques attention dim:  torch.Size([40, 250, 25])
Passage question vectors dim:  torch.Size([40, 250, 200])
Question Passage Similarity dim:  torch.Size([40, 250])
Question passage attention dim:  torch.Size([40, 250])
Final Merged Passage dim:  torch.Size([40, 250, 800])
Modeled Passage dim:  torch.Size([40, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 250, 1000])
Span start logits:  torch.Size([40, 250])
span start probs dim:  torch.Size([40, 250])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 250]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 255, 200])
Passage Length:  255
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 255, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 255, 20])
Passage ques attention dim:  torch.Size([40, 255, 20])
Passage question vectors dim:  torch.Size([40, 255, 200])
Question Passage Similarity dim:  torch.Size([40, 255])
Question passage attention dim:  torch.Size([40, 255])
Final Merged Passage dim:  torch.Size([40, 255, 800])
Modeled Passage dim:  torch.Size([40, 255, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 255, 1000])
Span start logits:  torch.Size([40, 255])
span start probs dim:  torch.Size([40, 255])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 255]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 228, 27])
Passage ques attention dim:  torch.Size([40, 228, 27])
Passage question vectors dim:  torch.Size([40, 228, 200])
Question Passage Similarity dim:  torch.Size([40, 228])
Question passage attention dim:  torch.Size([40, 228])
Final Merged Passage dim:  torch.Size([40, 228, 800])
Modeled Passage dim:  torch.Size([40, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 228, 1000])
Span start logits:  torch.Size([40, 228])
span start probs dim:  torch.Size([40, 228])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 228]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 258, 25])
Passage ques attention dim:  torch.Size([40, 258, 25])
Passage question vectors dim:  torch.Size([40, 258, 200])
Question Passage Similarity dim:  torch.Size([40, 258])
Question passage attention dim:  torch.Size([40, 258])
Final Merged Passage dim:  torch.Size([40, 258, 800])
Modeled Passage dim:  torch.Size([40, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 258, 1000])
Span start logits:  torch.Size([40, 258])
span start probs dim:  torch.Size([40, 258])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 258]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 21])
Passage ques attention dim:  torch.Size([40, 133, 21])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 18])
Passage ques attention dim:  torch.Size([40, 140, 18])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 18])
Passage ques attention dim:  torch.Size([40, 135, 18])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 20])
Passage ques attention dim:  torch.Size([40, 132, 20])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 22])
Passage ques attention dim:  torch.Size([40, 155, 22])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 18])
Passage ques attention dim:  torch.Size([40, 128, 18])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 18])
Passage ques attention dim:  torch.Size([40, 116, 18])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 15])
Passage ques attention dim:  torch.Size([40, 127, 15])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 19])
Passage ques attention dim:  torch.Size([40, 141, 19])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 22])
Passage ques attention dim:  torch.Size([40, 110, 22])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 19])
Passage ques attention dim:  torch.Size([40, 108, 19])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 22])
Passage ques attention dim:  torch.Size([40, 142, 22])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 17])
Passage ques attention dim:  torch.Size([40, 205, 17])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 27])
Passage ques attention dim:  torch.Size([40, 142, 27])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 21])
Passage ques attention dim:  torch.Size([40, 150, 21])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 292, 200])
Passage Length:  292
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 292, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 292, 19])
Passage ques attention dim:  torch.Size([40, 292, 19])
Passage question vectors dim:  torch.Size([40, 292, 200])
Question Passage Similarity dim:  torch.Size([40, 292])
Question passage attention dim:  torch.Size([40, 292])
Final Merged Passage dim:  torch.Size([40, 292, 800])
Modeled Passage dim:  torch.Size([40, 292, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 292, 1000])
Span start logits:  torch.Size([40, 292])
span start probs dim:  torch.Size([40, 292])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 292]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 20])
Passage ques attention dim:  torch.Size([40, 148, 20])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 20])
Passage ques attention dim:  torch.Size([40, 154, 20])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 206, 16])
Passage ques attention dim:  torch.Size([40, 206, 16])
Passage question vectors dim:  torch.Size([40, 206, 200])
Question Passage Similarity dim:  torch.Size([40, 206])
Question passage attention dim:  torch.Size([40, 206])
Final Merged Passage dim:  torch.Size([40, 206, 800])
Modeled Passage dim:  torch.Size([40, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 206, 1000])
Span start logits:  torch.Size([40, 206])
span start probs dim:  torch.Size([40, 206])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 206]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 21])
Passage ques attention dim:  torch.Size([40, 96, 21])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 343, 22])
Passage ques attention dim:  torch.Size([40, 343, 22])
Passage question vectors dim:  torch.Size([40, 343, 200])
Question Passage Similarity dim:  torch.Size([40, 343])
Question passage attention dim:  torch.Size([40, 343])
Final Merged Passage dim:  torch.Size([40, 343, 800])
Modeled Passage dim:  torch.Size([40, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 343, 1000])
Span start logits:  torch.Size([40, 343])
span start probs dim:  torch.Size([40, 343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 24])
Passage ques attention dim:  torch.Size([40, 104, 24])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 20])
Passage ques attention dim:  torch.Size([40, 139, 20])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 475, 200])
Passage Length:  475
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 475, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 475, 24])
Passage ques attention dim:  torch.Size([40, 475, 24])
Passage question vectors dim:  torch.Size([40, 475, 200])
Question Passage Similarity dim:  torch.Size([40, 475])
Question passage attention dim:  torch.Size([40, 475])
Final Merged Passage dim:  torch.Size([40, 475, 800])
Modeled Passage dim:  torch.Size([40, 475, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 475, 1000])
Span start logits:  torch.Size([40, 475])
span start probs dim:  torch.Size([40, 475])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 475]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 192, 21])
Passage ques attention dim:  torch.Size([40, 192, 21])
Passage question vectors dim:  torch.Size([40, 192, 200])
Question Passage Similarity dim:  torch.Size([40, 192])
Question passage attention dim:  torch.Size([40, 192])
Final Merged Passage dim:  torch.Size([40, 192, 800])
Modeled Passage dim:  torch.Size([40, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 192, 1000])
Span start logits:  torch.Size([40, 192])
span start probs dim:  torch.Size([40, 192])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 192]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 213, 18])
Passage ques attention dim:  torch.Size([40, 213, 18])
Passage question vectors dim:  torch.Size([40, 213, 200])
Question Passage Similarity dim:  torch.Size([40, 213])
Question passage attention dim:  torch.Size([40, 213])
Final Merged Passage dim:  torch.Size([40, 213, 800])
Modeled Passage dim:  torch.Size([40, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 213, 1000])
Span start logits:  torch.Size([40, 213])
span start probs dim:  torch.Size([40, 213])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 213]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 27])
Passage ques attention dim:  torch.Size([40, 146, 27])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 231, 24])
Passage ques attention dim:  torch.Size([40, 231, 24])
Passage question vectors dim:  torch.Size([40, 231, 200])
Question Passage Similarity dim:  torch.Size([40, 231])
Question passage attention dim:  torch.Size([40, 231])
Final Merged Passage dim:  torch.Size([40, 231, 800])
Modeled Passage dim:  torch.Size([40, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 231, 1000])
Span start logits:  torch.Size([40, 231])
span start probs dim:  torch.Size([40, 231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 19])
Passage ques attention dim:  torch.Size([40, 147, 19])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 22])
Passage ques attention dim:  torch.Size([40, 153, 22])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 25])
Passage ques attention dim:  torch.Size([40, 125, 25])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 21])
Passage ques attention dim:  torch.Size([40, 137, 21])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 28])
Passage ques attention dim:  torch.Size([40, 142, 28])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 276, 200])
Passage Length:  276
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 276, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 276, 20])
Passage ques attention dim:  torch.Size([40, 276, 20])
Passage question vectors dim:  torch.Size([40, 276, 200])
Question Passage Similarity dim:  torch.Size([40, 276])
Question passage attention dim:  torch.Size([40, 276])
Final Merged Passage dim:  torch.Size([40, 276, 800])
Modeled Passage dim:  torch.Size([40, 276, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 276, 1000])
Span start logits:  torch.Size([40, 276])
span start probs dim:  torch.Size([40, 276])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 276]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 58, 200])
Passage Length:  58
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 58, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 58, 26])
Passage ques attention dim:  torch.Size([40, 58, 26])
Passage question vectors dim:  torch.Size([40, 58, 200])
Question Passage Similarity dim:  torch.Size([40, 58])
Question passage attention dim:  torch.Size([40, 58])
Final Merged Passage dim:  torch.Size([40, 58, 800])
Modeled Passage dim:  torch.Size([40, 58, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 58, 1000])
Span start logits:  torch.Size([40, 58])
span start probs dim:  torch.Size([40, 58])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 58]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 71, 21])
Passage ques attention dim:  torch.Size([40, 71, 21])
Passage question vectors dim:  torch.Size([40, 71, 200])
Question Passage Similarity dim:  torch.Size([40, 71])
Question passage attention dim:  torch.Size([40, 71])
Final Merged Passage dim:  torch.Size([40, 71, 800])
Modeled Passage dim:  torch.Size([40, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 71, 1000])
Span start logits:  torch.Size([40, 71])
span start probs dim:  torch.Size([40, 71])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 71]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 22])
Passage ques attention dim:  torch.Size([40, 152, 22])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 21])
Passage ques attention dim:  torch.Size([40, 182, 21])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 23])
Passage ques attention dim:  torch.Size([40, 185, 23])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 20])
Passage ques attention dim:  torch.Size([40, 103, 20])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 23])
Passage ques attention dim:  torch.Size([40, 148, 23])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 15])
Passage ques attention dim:  torch.Size([40, 205, 15])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 18])
Passage ques attention dim:  torch.Size([40, 174, 18])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 17])
Passage ques attention dim:  torch.Size([40, 110, 17])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 361, 22])
Passage ques attention dim:  torch.Size([40, 361, 22])
Passage question vectors dim:  torch.Size([40, 361, 200])
Question Passage Similarity dim:  torch.Size([40, 361])
Question passage attention dim:  torch.Size([40, 361])
Final Merged Passage dim:  torch.Size([40, 361, 800])
Modeled Passage dim:  torch.Size([40, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 361, 1000])
Span start logits:  torch.Size([40, 361])
span start probs dim:  torch.Size([40, 361])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 361]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 18])
Passage ques attention dim:  torch.Size([40, 174, 18])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 20])
Passage ques attention dim:  torch.Size([40, 172, 20])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 22])
Passage ques attention dim:  torch.Size([40, 130, 22])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 18])
Passage ques attention dim:  torch.Size([40, 99, 18])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 23])
Passage ques attention dim:  torch.Size([40, 126, 23])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 25])
Passage ques attention dim:  torch.Size([40, 114, 25])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 22])
Passage ques attention dim:  torch.Size([40, 171, 22])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 64, 19])
Passage ques attention dim:  torch.Size([40, 64, 19])
Passage question vectors dim:  torch.Size([40, 64, 200])
Question Passage Similarity dim:  torch.Size([40, 64])
Question passage attention dim:  torch.Size([40, 64])
Final Merged Passage dim:  torch.Size([40, 64, 800])
Modeled Passage dim:  torch.Size([40, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 64, 1000])
Span start logits:  torch.Size([40, 64])
span start probs dim:  torch.Size([40, 64])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 64]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 251, 200])
Passage Length:  251
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 251, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 251, 25])
Passage ques attention dim:  torch.Size([40, 251, 25])
Passage question vectors dim:  torch.Size([40, 251, 200])
Question Passage Similarity dim:  torch.Size([40, 251])
Question passage attention dim:  torch.Size([40, 251])
Final Merged Passage dim:  torch.Size([40, 251, 800])
Modeled Passage dim:  torch.Size([40, 251, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 251, 1000])
Span start logits:  torch.Size([40, 251])
span start probs dim:  torch.Size([40, 251])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 251]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 25])
Passage ques attention dim:  torch.Size([40, 189, 25])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 21])
Passage ques attention dim:  torch.Size([40, 159, 21])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 238, 24])
Passage ques attention dim:  torch.Size([40, 238, 24])
Passage question vectors dim:  torch.Size([40, 238, 200])
Question Passage Similarity dim:  torch.Size([40, 238])
Question passage attention dim:  torch.Size([40, 238])
Final Merged Passage dim:  torch.Size([40, 238, 800])
Modeled Passage dim:  torch.Size([40, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 238, 1000])
Span start logits:  torch.Size([40, 238])
span start probs dim:  torch.Size([40, 238])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 238]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 25])
Passage ques attention dim:  torch.Size([40, 103, 25])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 20])
Passage ques attention dim:  torch.Size([40, 107, 20])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 312, 200])
Passage Length:  312
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 312, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 312, 21])
Passage ques attention dim:  torch.Size([40, 312, 21])
Passage question vectors dim:  torch.Size([40, 312, 200])
Question Passage Similarity dim:  torch.Size([40, 312])
Question passage attention dim:  torch.Size([40, 312])
Final Merged Passage dim:  torch.Size([40, 312, 800])
Modeled Passage dim:  torch.Size([40, 312, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 312, 1000])
Span start logits:  torch.Size([40, 312])
span start probs dim:  torch.Size([40, 312])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 312]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 72, 200])
Passage Length:  72
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 72, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 72, 23])
Passage ques attention dim:  torch.Size([40, 72, 23])
Passage question vectors dim:  torch.Size([40, 72, 200])
Question Passage Similarity dim:  torch.Size([40, 72])
Question passage attention dim:  torch.Size([40, 72])
Final Merged Passage dim:  torch.Size([40, 72, 800])
Modeled Passage dim:  torch.Size([40, 72, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 72, 1000])
Span start logits:  torch.Size([40, 72])
span start probs dim:  torch.Size([40, 72])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 72]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 20])
Passage ques attention dim:  torch.Size([40, 109, 20])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 39, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 39, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 39])
Passage ques attention dim:  torch.Size([40, 128, 39])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 21])
Passage ques attention dim:  torch.Size([40, 150, 21])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 25])
Passage ques attention dim:  torch.Size([40, 187, 25])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 42, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 42, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 42])
Passage ques attention dim:  torch.Size([40, 111, 42])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 40, 200])
Passage Length:  40
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 40, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 40, 23])
Passage ques attention dim:  torch.Size([40, 40, 23])
Passage question vectors dim:  torch.Size([40, 40, 200])
Question Passage Similarity dim:  torch.Size([40, 40])
Question passage attention dim:  torch.Size([40, 40])
Final Merged Passage dim:  torch.Size([40, 40, 800])
Modeled Passage dim:  torch.Size([40, 40, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 40, 1000])
Span start logits:  torch.Size([40, 40])
span start probs dim:  torch.Size([40, 40])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 40]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 24])
Passage ques attention dim:  torch.Size([40, 97, 24])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 199, 21])
Passage ques attention dim:  torch.Size([40, 199, 21])
Passage question vectors dim:  torch.Size([40, 199, 200])
Question Passage Similarity dim:  torch.Size([40, 199])
Question passage attention dim:  torch.Size([40, 199])
Final Merged Passage dim:  torch.Size([40, 199, 800])
Modeled Passage dim:  torch.Size([40, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 199, 1000])
Span start logits:  torch.Size([40, 199])
span start probs dim:  torch.Size([40, 199])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 199]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 22])
Passage ques attention dim:  torch.Size([40, 124, 22])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 21])
Passage ques attention dim:  torch.Size([40, 95, 21])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 22])
Passage ques attention dim:  torch.Size([40, 135, 22])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 39, 200])
Passage Length:  39
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 39, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 39, 22])
Passage ques attention dim:  torch.Size([40, 39, 22])
Passage question vectors dim:  torch.Size([40, 39, 200])
Question Passage Similarity dim:  torch.Size([40, 39])
Question passage attention dim:  torch.Size([40, 39])
Final Merged Passage dim:  torch.Size([40, 39, 800])
Modeled Passage dim:  torch.Size([40, 39, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 39, 1000])
Span start logits:  torch.Size([40, 39])
span start probs dim:  torch.Size([40, 39])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 39]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 25])
Passage ques attention dim:  torch.Size([40, 187, 25])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 23])
Passage ques attention dim:  torch.Size([40, 147, 23])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 28])
Passage ques attention dim:  torch.Size([40, 124, 28])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 20])
Passage ques attention dim:  torch.Size([40, 119, 20])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 22])
Passage ques attention dim:  torch.Size([40, 132, 22])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 24])
Passage ques attention dim:  torch.Size([40, 137, 24])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 22])
Passage ques attention dim:  torch.Size([40, 156, 22])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 17])
Passage ques attention dim:  torch.Size([40, 170, 17])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 22])
Passage ques attention dim:  torch.Size([40, 204, 22])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 61, 200])
Passage Length:  61
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 61, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 61, 19])
Passage ques attention dim:  torch.Size([40, 61, 19])
Passage question vectors dim:  torch.Size([40, 61, 200])
Question Passage Similarity dim:  torch.Size([40, 61])
Question passage attention dim:  torch.Size([40, 61])
Final Merged Passage dim:  torch.Size([40, 61, 800])
Modeled Passage dim:  torch.Size([40, 61, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 61, 1000])
Span start logits:  torch.Size([40, 61])
span start probs dim:  torch.Size([40, 61])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 61]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 18])
Passage ques attention dim:  torch.Size([40, 123, 18])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 69, 200])
Passage Length:  69
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 69, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 69, 20])
Passage ques attention dim:  torch.Size([40, 69, 20])
Passage question vectors dim:  torch.Size([40, 69, 200])
Question Passage Similarity dim:  torch.Size([40, 69])
Question passage attention dim:  torch.Size([40, 69])
Final Merged Passage dim:  torch.Size([40, 69, 800])
Modeled Passage dim:  torch.Size([40, 69, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 69, 1000])
Span start logits:  torch.Size([40, 69])
span start probs dim:  torch.Size([40, 69])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 69]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 238, 21])
Passage ques attention dim:  torch.Size([40, 238, 21])
Passage question vectors dim:  torch.Size([40, 238, 200])
Question Passage Similarity dim:  torch.Size([40, 238])
Question passage attention dim:  torch.Size([40, 238])
Final Merged Passage dim:  torch.Size([40, 238, 800])
Modeled Passage dim:  torch.Size([40, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 238, 1000])
Span start logits:  torch.Size([40, 238])
span start probs dim:  torch.Size([40, 238])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 238]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 77, 200])
Passage Length:  77
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 77, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 77, 19])
Passage ques attention dim:  torch.Size([40, 77, 19])
Passage question vectors dim:  torch.Size([40, 77, 200])
Question Passage Similarity dim:  torch.Size([40, 77])
Question passage attention dim:  torch.Size([40, 77])
Final Merged Passage dim:  torch.Size([40, 77, 800])
Modeled Passage dim:  torch.Size([40, 77, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 77, 1000])
Span start logits:  torch.Size([40, 77])
span start probs dim:  torch.Size([40, 77])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 77]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 67, 20])
Passage ques attention dim:  torch.Size([40, 67, 20])
Passage question vectors dim:  torch.Size([40, 67, 200])
Question Passage Similarity dim:  torch.Size([40, 67])
Question passage attention dim:  torch.Size([40, 67])
Final Merged Passage dim:  torch.Size([40, 67, 800])
Modeled Passage dim:  torch.Size([40, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 67, 1000])
Span start logits:  torch.Size([40, 67])
span start probs dim:  torch.Size([40, 67])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 67]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 233, 200])
Passage Length:  233
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 233, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 233, 23])
Passage ques attention dim:  torch.Size([40, 233, 23])
Passage question vectors dim:  torch.Size([40, 233, 200])
Question Passage Similarity dim:  torch.Size([40, 233])
Question passage attention dim:  torch.Size([40, 233])
Final Merged Passage dim:  torch.Size([40, 233, 800])
Modeled Passage dim:  torch.Size([40, 233, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 233, 1000])
Span start logits:  torch.Size([40, 233])
span start probs dim:  torch.Size([40, 233])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 233]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 18])
Passage ques attention dim:  torch.Size([40, 117, 18])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 19])
Passage ques attention dim:  torch.Size([40, 121, 19])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 258, 23])
Passage ques attention dim:  torch.Size([40, 258, 23])
Passage question vectors dim:  torch.Size([40, 258, 200])
Question Passage Similarity dim:  torch.Size([40, 258])
Question passage attention dim:  torch.Size([40, 258])
Final Merged Passage dim:  torch.Size([40, 258, 800])
Modeled Passage dim:  torch.Size([40, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 258, 1000])
Span start logits:  torch.Size([40, 258])
span start probs dim:  torch.Size([40, 258])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 258]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 24])
Passage ques attention dim:  torch.Size([40, 123, 24])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 16])
Passage ques attention dim:  torch.Size([40, 149, 16])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 216, 200])
Passage Length:  216
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 216, 21])
Passage ques attention dim:  torch.Size([40, 216, 21])
Passage question vectors dim:  torch.Size([40, 216, 200])
Question Passage Similarity dim:  torch.Size([40, 216])
Question passage attention dim:  torch.Size([40, 216])
Final Merged Passage dim:  torch.Size([40, 216, 800])
Modeled Passage dim:  torch.Size([40, 216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 216, 1000])
Span start logits:  torch.Size([40, 216])
span start probs dim:  torch.Size([40, 216])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 216]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 20])
Passage ques attention dim:  torch.Size([40, 140, 20])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 22])
Passage ques attention dim:  torch.Size([40, 151, 22])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 39, 200])
Passage Length:  39
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 39, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 39, 19])
Passage ques attention dim:  torch.Size([40, 39, 19])
Passage question vectors dim:  torch.Size([40, 39, 200])
Question Passage Similarity dim:  torch.Size([40, 39])
Question passage attention dim:  torch.Size([40, 39])
Final Merged Passage dim:  torch.Size([40, 39, 800])
Modeled Passage dim:  torch.Size([40, 39, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 39, 1000])
Span start logits:  torch.Size([40, 39])
span start probs dim:  torch.Size([40, 39])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 39]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 23])
Passage ques attention dim:  torch.Size([40, 136, 23])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 203, 200])
Passage Length:  203
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 203, 16])
Passage ques attention dim:  torch.Size([40, 203, 16])
Passage question vectors dim:  torch.Size([40, 203, 200])
Question Passage Similarity dim:  torch.Size([40, 203])
Question passage attention dim:  torch.Size([40, 203])
Final Merged Passage dim:  torch.Size([40, 203, 800])
Modeled Passage dim:  torch.Size([40, 203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 203, 1000])
Span start logits:  torch.Size([40, 203])
span start probs dim:  torch.Size([40, 203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 217, 16])
Passage ques attention dim:  torch.Size([40, 217, 16])
Passage question vectors dim:  torch.Size([40, 217, 200])
Question Passage Similarity dim:  torch.Size([40, 217])
Question passage attention dim:  torch.Size([40, 217])
Final Merged Passage dim:  torch.Size([40, 217, 800])
Modeled Passage dim:  torch.Size([40, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 217, 1000])
Span start logits:  torch.Size([40, 217])
span start probs dim:  torch.Size([40, 217])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 217]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 24])
Passage ques attention dim:  torch.Size([40, 127, 24])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 231, 28])
Passage ques attention dim:  torch.Size([40, 231, 28])
Passage question vectors dim:  torch.Size([40, 231, 200])
Question Passage Similarity dim:  torch.Size([40, 231])
Question passage attention dim:  torch.Size([40, 231])
Final Merged Passage dim:  torch.Size([40, 231, 800])
Modeled Passage dim:  torch.Size([40, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 231, 1000])
Span start logits:  torch.Size([40, 231])
span start probs dim:  torch.Size([40, 231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 206, 35])
Passage ques attention dim:  torch.Size([40, 206, 35])
Passage question vectors dim:  torch.Size([40, 206, 200])
Question Passage Similarity dim:  torch.Size([40, 206])
Question passage attention dim:  torch.Size([40, 206])
Final Merged Passage dim:  torch.Size([40, 206, 800])
Modeled Passage dim:  torch.Size([40, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 206, 1000])
Span start logits:  torch.Size([40, 206])
span start probs dim:  torch.Size([40, 206])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 206]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 20])
Passage ques attention dim:  torch.Size([40, 171, 20])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 18])
Passage ques attention dim:  torch.Size([40, 127, 18])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 23])
Passage ques attention dim:  torch.Size([40, 104, 23])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 202, 20])
Passage ques attention dim:  torch.Size([40, 202, 20])
Passage question vectors dim:  torch.Size([40, 202, 200])
Question Passage Similarity dim:  torch.Size([40, 202])
Question passage attention dim:  torch.Size([40, 202])
Final Merged Passage dim:  torch.Size([40, 202, 800])
Modeled Passage dim:  torch.Size([40, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 202, 1000])
Span start logits:  torch.Size([40, 202])
span start probs dim:  torch.Size([40, 202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 18])
Passage ques attention dim:  torch.Size([40, 179, 18])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 23])
Passage ques attention dim:  torch.Size([40, 147, 23])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 92, 28])
Passage ques attention dim:  torch.Size([40, 92, 28])
Passage question vectors dim:  torch.Size([40, 92, 200])
Question Passage Similarity dim:  torch.Size([40, 92])
Question passage attention dim:  torch.Size([40, 92])
Final Merged Passage dim:  torch.Size([40, 92, 800])
Modeled Passage dim:  torch.Size([40, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 92, 1000])
Span start logits:  torch.Size([40, 92])
span start probs dim:  torch.Size([40, 92])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 92]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 45, 200])
Passage Length:  45
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 45, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 45, 19])
Passage ques attention dim:  torch.Size([40, 45, 19])
Passage question vectors dim:  torch.Size([40, 45, 200])
Question Passage Similarity dim:  torch.Size([40, 45])
Question passage attention dim:  torch.Size([40, 45])
Final Merged Passage dim:  torch.Size([40, 45, 800])
Modeled Passage dim:  torch.Size([40, 45, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 45, 1000])
Span start logits:  torch.Size([40, 45])
span start probs dim:  torch.Size([40, 45])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 45]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 20])
Passage ques attention dim:  torch.Size([40, 150, 20])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 63, 200])
Passage Length:  63
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 63, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 63, 23])
Passage ques attention dim:  torch.Size([40, 63, 23])
Passage question vectors dim:  torch.Size([40, 63, 200])
Question Passage Similarity dim:  torch.Size([40, 63])
Question passage attention dim:  torch.Size([40, 63])
Final Merged Passage dim:  torch.Size([40, 63, 800])
Modeled Passage dim:  torch.Size([40, 63, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 63, 1000])
Span start logits:  torch.Size([40, 63])
span start probs dim:  torch.Size([40, 63])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 63]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 23])
Passage ques attention dim:  torch.Size([40, 140, 23])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 22])
Passage ques attention dim:  torch.Size([40, 205, 22])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 24])
Passage ques attention dim:  torch.Size([40, 191, 24])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 53, 200])
Passage Length:  53
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 53, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 53, 22])
Passage ques attention dim:  torch.Size([40, 53, 22])
Passage question vectors dim:  torch.Size([40, 53, 200])
Question Passage Similarity dim:  torch.Size([40, 53])
Question passage attention dim:  torch.Size([40, 53])
Final Merged Passage dim:  torch.Size([40, 53, 800])
Modeled Passage dim:  torch.Size([40, 53, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 53, 1000])
Span start logits:  torch.Size([40, 53])
span start probs dim:  torch.Size([40, 53])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 53]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 28])
Passage ques attention dim:  torch.Size([40, 148, 28])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 324, 200])
Passage Length:  324
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 324, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 324, 19])
Passage ques attention dim:  torch.Size([40, 324, 19])
Passage question vectors dim:  torch.Size([40, 324, 200])
Question Passage Similarity dim:  torch.Size([40, 324])
Question passage attention dim:  torch.Size([40, 324])
Final Merged Passage dim:  torch.Size([40, 324, 800])
Modeled Passage dim:  torch.Size([40, 324, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 324, 1000])
Span start logits:  torch.Size([40, 324])
span start probs dim:  torch.Size([40, 324])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 324]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 222, 18])
Passage ques attention dim:  torch.Size([40, 222, 18])
Passage question vectors dim:  torch.Size([40, 222, 200])
Question Passage Similarity dim:  torch.Size([40, 222])
Question passage attention dim:  torch.Size([40, 222])
Final Merged Passage dim:  torch.Size([40, 222, 800])
Modeled Passage dim:  torch.Size([40, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 222, 1000])
Span start logits:  torch.Size([40, 222])
span start probs dim:  torch.Size([40, 222])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 222]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 19])
Passage ques attention dim:  torch.Size([40, 168, 19])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 35])
Passage ques attention dim:  torch.Size([40, 175, 35])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 23])
Passage ques attention dim:  torch.Size([40, 194, 23])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 22])
Passage ques attention dim:  torch.Size([40, 186, 22])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 24])
Passage ques attention dim:  torch.Size([40, 187, 24])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 26])
Passage ques attention dim:  torch.Size([40, 114, 26])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 22])
Passage ques attention dim:  torch.Size([40, 108, 22])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 21])
Passage ques attention dim:  torch.Size([40, 106, 21])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 19])
Passage ques attention dim:  torch.Size([40, 128, 19])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 21])
Passage ques attention dim:  torch.Size([40, 126, 21])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 23])
Passage ques attention dim:  torch.Size([40, 158, 23])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 22])
Passage ques attention dim:  torch.Size([40, 166, 22])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 21])
Passage ques attention dim:  torch.Size([40, 139, 21])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 49, 200])
Passage Length:  49
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 49, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 49, 23])
Passage ques attention dim:  torch.Size([40, 49, 23])
Passage question vectors dim:  torch.Size([40, 49, 200])
Question Passage Similarity dim:  torch.Size([40, 49])
Question passage attention dim:  torch.Size([40, 49])
Final Merged Passage dim:  torch.Size([40, 49, 800])
Modeled Passage dim:  torch.Size([40, 49, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 49, 1000])
Span start logits:  torch.Size([40, 49])
span start probs dim:  torch.Size([40, 49])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 49]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 34, 200])
Embedded passage dim:  torch.Size([40, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([40, 34, 200])
Encoded passage dim:  torch.Size([40, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 70, 34])
Passage ques attention dim:  torch.Size([40, 70, 34])
Passage question vectors dim:  torch.Size([40, 70, 200])
Question Passage Similarity dim:  torch.Size([40, 70])
Question passage attention dim:  torch.Size([40, 70])
Final Merged Passage dim:  torch.Size([40, 70, 800])
Modeled Passage dim:  torch.Size([40, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 70, 1000])
Span start logits:  torch.Size([40, 70])
span start probs dim:  torch.Size([40, 70])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 70]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 18])
Passage ques attention dim:  torch.Size([40, 116, 18])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 22])
Passage ques attention dim:  torch.Size([40, 123, 22])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 21])
Passage ques attention dim:  torch.Size([40, 121, 21])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 23])
Passage ques attention dim:  torch.Size([40, 156, 23])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 21])
Passage ques attention dim:  torch.Size([40, 108, 21])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 202, 18])
Passage ques attention dim:  torch.Size([40, 202, 18])
Passage question vectors dim:  torch.Size([40, 202, 200])
Question Passage Similarity dim:  torch.Size([40, 202])
Question passage attention dim:  torch.Size([40, 202])
Final Merged Passage dim:  torch.Size([40, 202, 800])
Modeled Passage dim:  torch.Size([40, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 202, 1000])
Span start logits:  torch.Size([40, 202])
span start probs dim:  torch.Size([40, 202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 295, 200])
Passage Length:  295
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 295, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 295, 19])
Passage ques attention dim:  torch.Size([40, 295, 19])
Passage question vectors dim:  torch.Size([40, 295, 200])
Question Passage Similarity dim:  torch.Size([40, 295])
Question passage attention dim:  torch.Size([40, 295])
Final Merged Passage dim:  torch.Size([40, 295, 800])
Modeled Passage dim:  torch.Size([40, 295, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 295, 1000])
Span start logits:  torch.Size([40, 295])
span start probs dim:  torch.Size([40, 295])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 295]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 328, 200])
Passage Length:  328
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 328, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 328, 24])
Passage ques attention dim:  torch.Size([40, 328, 24])
Passage question vectors dim:  torch.Size([40, 328, 200])
Question Passage Similarity dim:  torch.Size([40, 328])
Question passage attention dim:  torch.Size([40, 328])
Final Merged Passage dim:  torch.Size([40, 328, 800])
Modeled Passage dim:  torch.Size([40, 328, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 328, 1000])
Span start logits:  torch.Size([40, 328])
span start probs dim:  torch.Size([40, 328])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 328]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 272, 200])
Passage Length:  272
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 272, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 272, 20])
Passage ques attention dim:  torch.Size([40, 272, 20])
Passage question vectors dim:  torch.Size([40, 272, 200])
Question Passage Similarity dim:  torch.Size([40, 272])
Question passage attention dim:  torch.Size([40, 272])
Final Merged Passage dim:  torch.Size([40, 272, 800])
Modeled Passage dim:  torch.Size([40, 272, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 272, 1000])
Span start logits:  torch.Size([40, 272])
span start probs dim:  torch.Size([40, 272])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 272]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 282, 200])
Passage Length:  282
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 282, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 282, 22])
Passage ques attention dim:  torch.Size([40, 282, 22])
Passage question vectors dim:  torch.Size([40, 282, 200])
Question Passage Similarity dim:  torch.Size([40, 282])
Question passage attention dim:  torch.Size([40, 282])
Final Merged Passage dim:  torch.Size([40, 282, 800])
Modeled Passage dim:  torch.Size([40, 282, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 282, 1000])
Span start logits:  torch.Size([40, 282])
span start probs dim:  torch.Size([40, 282])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 282]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 18])
Passage ques attention dim:  torch.Size([40, 125, 18])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 24])
Passage ques attention dim:  torch.Size([40, 196, 24])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 85, 200])
Passage Length:  85
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 85, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 85, 17])
Passage ques attention dim:  torch.Size([40, 85, 17])
Passage question vectors dim:  torch.Size([40, 85, 200])
Question Passage Similarity dim:  torch.Size([40, 85])
Question passage attention dim:  torch.Size([40, 85])
Final Merged Passage dim:  torch.Size([40, 85, 800])
Modeled Passage dim:  torch.Size([40, 85, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 85, 1000])
Span start logits:  torch.Size([40, 85])
span start probs dim:  torch.Size([40, 85])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 85]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 24])
Passage ques attention dim:  torch.Size([40, 105, 24])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 206, 20])
Passage ques attention dim:  torch.Size([40, 206, 20])
Passage question vectors dim:  torch.Size([40, 206, 200])
Question Passage Similarity dim:  torch.Size([40, 206])
Question passage attention dim:  torch.Size([40, 206])
Final Merged Passage dim:  torch.Size([40, 206, 800])
Modeled Passage dim:  torch.Size([40, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 206, 1000])
Span start logits:  torch.Size([40, 206])
span start probs dim:  torch.Size([40, 206])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 206]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 23])
Passage ques attention dim:  torch.Size([40, 119, 23])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 24])
Passage ques attention dim:  torch.Size([40, 119, 24])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 19])
Passage ques attention dim:  torch.Size([40, 134, 19])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 87, 200])
Passage Length:  87
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 87, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 87, 27])
Passage ques attention dim:  torch.Size([40, 87, 27])
Passage question vectors dim:  torch.Size([40, 87, 200])
Question Passage Similarity dim:  torch.Size([40, 87])
Question passage attention dim:  torch.Size([40, 87])
Final Merged Passage dim:  torch.Size([40, 87, 800])
Modeled Passage dim:  torch.Size([40, 87, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 87, 1000])
Span start logits:  torch.Size([40, 87])
span start probs dim:  torch.Size([40, 87])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 87]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 80, 200])
Passage Length:  80
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 80, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 80, 23])
Passage ques attention dim:  torch.Size([40, 80, 23])
Passage question vectors dim:  torch.Size([40, 80, 200])
Question Passage Similarity dim:  torch.Size([40, 80])
Question passage attention dim:  torch.Size([40, 80])
Final Merged Passage dim:  torch.Size([40, 80, 800])
Modeled Passage dim:  torch.Size([40, 80, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 80, 1000])
Span start logits:  torch.Size([40, 80])
span start probs dim:  torch.Size([40, 80])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 80]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 297, 17])
Passage ques attention dim:  torch.Size([40, 297, 17])
Passage question vectors dim:  torch.Size([40, 297, 200])
Question Passage Similarity dim:  torch.Size([40, 297])
Question passage attention dim:  torch.Size([40, 297])
Final Merged Passage dim:  torch.Size([40, 297, 800])
Modeled Passage dim:  torch.Size([40, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 297, 1000])
Span start logits:  torch.Size([40, 297])
span start probs dim:  torch.Size([40, 297])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 297]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 37, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 37, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 37])
Passage ques attention dim:  torch.Size([40, 177, 37])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 199, 20])
Passage ques attention dim:  torch.Size([40, 199, 20])
Passage question vectors dim:  torch.Size([40, 199, 200])
Question Passage Similarity dim:  torch.Size([40, 199])
Question passage attention dim:  torch.Size([40, 199])
Final Merged Passage dim:  torch.Size([40, 199, 800])
Modeled Passage dim:  torch.Size([40, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 199, 1000])
Span start logits:  torch.Size([40, 199])
span start probs dim:  torch.Size([40, 199])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 199]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 23])
Passage ques attention dim:  torch.Size([40, 138, 23])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 76, 200])
Passage Length:  76
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 76, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 76, 24])
Passage ques attention dim:  torch.Size([40, 76, 24])
Passage question vectors dim:  torch.Size([40, 76, 200])
Question Passage Similarity dim:  torch.Size([40, 76])
Question passage attention dim:  torch.Size([40, 76])
Final Merged Passage dim:  torch.Size([40, 76, 800])
Modeled Passage dim:  torch.Size([40, 76, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 76, 1000])
Span start logits:  torch.Size([40, 76])
span start probs dim:  torch.Size([40, 76])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 76]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 25])
Passage ques attention dim:  torch.Size([40, 161, 25])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 20])
Passage ques attention dim:  torch.Size([40, 164, 20])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 25])
Passage ques attention dim:  torch.Size([40, 132, 25])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 25])
Passage ques attention dim:  torch.Size([40, 141, 25])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 32])
Passage ques attention dim:  torch.Size([40, 166, 32])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 342, 200])
Passage Length:  342
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 342, 21])
Passage ques attention dim:  torch.Size([40, 342, 21])
Passage question vectors dim:  torch.Size([40, 342, 200])
Question Passage Similarity dim:  torch.Size([40, 342])
Question passage attention dim:  torch.Size([40, 342])
Final Merged Passage dim:  torch.Size([40, 342, 800])
Modeled Passage dim:  torch.Size([40, 342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 342, 1000])
Span start logits:  torch.Size([40, 342])
span start probs dim:  torch.Size([40, 342])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 342]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 19])
Passage ques attention dim:  torch.Size([40, 151, 19])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 19])
Passage ques attention dim:  torch.Size([40, 141, 19])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 22])
Passage ques attention dim:  torch.Size([40, 147, 22])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 22])
Passage ques attention dim:  torch.Size([40, 112, 22])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 18])
Passage ques attention dim:  torch.Size([40, 108, 18])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 25])
Passage ques attention dim:  torch.Size([40, 136, 25])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 235, 200])
Passage Length:  235
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 235, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 235, 26])
Passage ques attention dim:  torch.Size([40, 235, 26])
Passage question vectors dim:  torch.Size([40, 235, 200])
Question Passage Similarity dim:  torch.Size([40, 235])
Question passage attention dim:  torch.Size([40, 235])
Final Merged Passage dim:  torch.Size([40, 235, 800])
Modeled Passage dim:  torch.Size([40, 235, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 235, 1000])
Span start logits:  torch.Size([40, 235])
span start probs dim:  torch.Size([40, 235])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 235]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 17])
Passage ques attention dim:  torch.Size([40, 119, 17])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 67, 28])
Passage ques attention dim:  torch.Size([40, 67, 28])
Passage question vectors dim:  torch.Size([40, 67, 200])
Question Passage Similarity dim:  torch.Size([40, 67])
Question passage attention dim:  torch.Size([40, 67])
Final Merged Passage dim:  torch.Size([40, 67, 800])
Modeled Passage dim:  torch.Size([40, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 67, 1000])
Span start logits:  torch.Size([40, 67])
span start probs dim:  torch.Size([40, 67])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 67]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 20])
Passage ques attention dim:  torch.Size([40, 172, 20])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 24])
Passage ques attention dim:  torch.Size([40, 135, 24])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 18])
Passage ques attention dim:  torch.Size([40, 174, 18])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 219, 200])
Passage Length:  219
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 219, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 219, 18])
Passage ques attention dim:  torch.Size([40, 219, 18])
Passage question vectors dim:  torch.Size([40, 219, 200])
Question Passage Similarity dim:  torch.Size([40, 219])
Question passage attention dim:  torch.Size([40, 219])
Final Merged Passage dim:  torch.Size([40, 219, 800])
Modeled Passage dim:  torch.Size([40, 219, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 219, 1000])
Span start logits:  torch.Size([40, 219])
span start probs dim:  torch.Size([40, 219])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 219]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 57, 200])
Passage Length:  57
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 57, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 57, 23])
Passage ques attention dim:  torch.Size([40, 57, 23])
Passage question vectors dim:  torch.Size([40, 57, 200])
Question Passage Similarity dim:  torch.Size([40, 57])
Question passage attention dim:  torch.Size([40, 57])
Final Merged Passage dim:  torch.Size([40, 57, 800])
Modeled Passage dim:  torch.Size([40, 57, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 57, 1000])
Span start logits:  torch.Size([40, 57])
span start probs dim:  torch.Size([40, 57])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 57]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 20])
Passage ques attention dim:  torch.Size([40, 218, 20])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 20])
Passage ques attention dim:  torch.Size([40, 147, 20])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 18])
Passage ques attention dim:  torch.Size([40, 132, 18])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 22])
Passage ques attention dim:  torch.Size([40, 139, 22])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 240, 200])
Passage Length:  240
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 240, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 240, 22])
Passage ques attention dim:  torch.Size([40, 240, 22])
Passage question vectors dim:  torch.Size([40, 240, 200])
Question Passage Similarity dim:  torch.Size([40, 240])
Question passage attention dim:  torch.Size([40, 240])
Final Merged Passage dim:  torch.Size([40, 240, 800])
Modeled Passage dim:  torch.Size([40, 240, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 240, 1000])
Span start logits:  torch.Size([40, 240])
span start probs dim:  torch.Size([40, 240])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 240]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 20])
Passage ques attention dim:  torch.Size([40, 153, 20])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 20])
Passage ques attention dim:  torch.Size([40, 149, 20])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 61, 200])
Passage Length:  61
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 61, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 61, 21])
Passage ques attention dim:  torch.Size([40, 61, 21])
Passage question vectors dim:  torch.Size([40, 61, 200])
Question Passage Similarity dim:  torch.Size([40, 61])
Question passage attention dim:  torch.Size([40, 61])
Final Merged Passage dim:  torch.Size([40, 61, 800])
Modeled Passage dim:  torch.Size([40, 61, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 61, 1000])
Span start logits:  torch.Size([40, 61])
span start probs dim:  torch.Size([40, 61])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 61]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 278, 200])
Passage Length:  278
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 278, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 278, 25])
Passage ques attention dim:  torch.Size([40, 278, 25])
Passage question vectors dim:  torch.Size([40, 278, 200])
Question Passage Similarity dim:  torch.Size([40, 278])
Question passage attention dim:  torch.Size([40, 278])
Final Merged Passage dim:  torch.Size([40, 278, 800])
Modeled Passage dim:  torch.Size([40, 278, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 278, 1000])
Span start logits:  torch.Size([40, 278])
span start probs dim:  torch.Size([40, 278])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 278]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 17])
Passage ques attention dim:  torch.Size([40, 187, 17])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 23])
Passage ques attention dim:  torch.Size([40, 120, 23])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 38, 200])
Passage Length:  38
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 38, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 38, 18])
Passage ques attention dim:  torch.Size([40, 38, 18])
Passage question vectors dim:  torch.Size([40, 38, 200])
Question Passage Similarity dim:  torch.Size([40, 38])
Question passage attention dim:  torch.Size([40, 38])
Final Merged Passage dim:  torch.Size([40, 38, 800])
Modeled Passage dim:  torch.Size([40, 38, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 38, 1000])
Span start logits:  torch.Size([40, 38])
span start probs dim:  torch.Size([40, 38])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 38]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 15])
Passage ques attention dim:  torch.Size([40, 118, 15])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 23])
Passage ques attention dim:  torch.Size([40, 164, 23])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 20])
Passage ques attention dim:  torch.Size([40, 125, 20])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 20])
Passage ques attention dim:  torch.Size([40, 155, 20])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 23])
Passage ques attention dim:  torch.Size([40, 108, 23])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 70, 18])
Passage ques attention dim:  torch.Size([40, 70, 18])
Passage question vectors dim:  torch.Size([40, 70, 200])
Question Passage Similarity dim:  torch.Size([40, 70])
Question passage attention dim:  torch.Size([40, 70])
Final Merged Passage dim:  torch.Size([40, 70, 800])
Modeled Passage dim:  torch.Size([40, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 70, 1000])
Span start logits:  torch.Size([40, 70])
span start probs dim:  torch.Size([40, 70])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 70]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 93, 32])
Passage ques attention dim:  torch.Size([40, 93, 32])
Passage question vectors dim:  torch.Size([40, 93, 200])
Question Passage Similarity dim:  torch.Size([40, 93])
Question passage attention dim:  torch.Size([40, 93])
Final Merged Passage dim:  torch.Size([40, 93, 800])
Modeled Passage dim:  torch.Size([40, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 93, 1000])
Span start logits:  torch.Size([40, 93])
span start probs dim:  torch.Size([40, 93])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 93]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 36, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 36, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 36])
Passage ques attention dim:  torch.Size([40, 128, 36])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 27])
Passage ques attention dim:  torch.Size([40, 178, 27])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 22])
Passage ques attention dim:  torch.Size([40, 159, 22])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 61, 200])
Passage Length:  61
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 61, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 61, 20])
Passage ques attention dim:  torch.Size([40, 61, 20])
Passage question vectors dim:  torch.Size([40, 61, 200])
Question Passage Similarity dim:  torch.Size([40, 61])
Question passage attention dim:  torch.Size([40, 61])
Final Merged Passage dim:  torch.Size([40, 61, 800])
Modeled Passage dim:  torch.Size([40, 61, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 61, 1000])
Span start logits:  torch.Size([40, 61])
span start probs dim:  torch.Size([40, 61])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 61]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 27])
Passage ques attention dim:  torch.Size([40, 181, 27])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 176, 23])
Passage ques attention dim:  torch.Size([40, 176, 23])
Passage question vectors dim:  torch.Size([40, 176, 200])
Question Passage Similarity dim:  torch.Size([40, 176])
Question passage attention dim:  torch.Size([40, 176])
Final Merged Passage dim:  torch.Size([40, 176, 800])
Modeled Passage dim:  torch.Size([40, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 176, 1000])
Span start logits:  torch.Size([40, 176])
span start probs dim:  torch.Size([40, 176])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 176]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 29])
Passage ques attention dim:  torch.Size([40, 167, 29])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 94, 23])
Passage ques attention dim:  torch.Size([40, 94, 23])
Passage question vectors dim:  torch.Size([40, 94, 200])
Question Passage Similarity dim:  torch.Size([40, 94])
Question passage attention dim:  torch.Size([40, 94])
Final Merged Passage dim:  torch.Size([40, 94, 800])
Modeled Passage dim:  torch.Size([40, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 94, 1000])
Span start logits:  torch.Size([40, 94])
span start probs dim:  torch.Size([40, 94])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 94]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 24])
Passage ques attention dim:  torch.Size([40, 105, 24])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 88, 19])
Passage ques attention dim:  torch.Size([40, 88, 19])
Passage question vectors dim:  torch.Size([40, 88, 200])
Question Passage Similarity dim:  torch.Size([40, 88])
Question passage attention dim:  torch.Size([40, 88])
Final Merged Passage dim:  torch.Size([40, 88, 800])
Modeled Passage dim:  torch.Size([40, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 88, 1000])
Span start logits:  torch.Size([40, 88])
span start probs dim:  torch.Size([40, 88])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 88]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 233, 200])
Passage Length:  233
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 233, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 233, 19])
Passage ques attention dim:  torch.Size([40, 233, 19])
Passage question vectors dim:  torch.Size([40, 233, 200])
Question Passage Similarity dim:  torch.Size([40, 233])
Question passage attention dim:  torch.Size([40, 233])
Final Merged Passage dim:  torch.Size([40, 233, 800])
Modeled Passage dim:  torch.Size([40, 233, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 233, 1000])
Span start logits:  torch.Size([40, 233])
span start probs dim:  torch.Size([40, 233])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 233]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 62, 200])
Passage Length:  62
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 62, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 62, 20])
Passage ques attention dim:  torch.Size([40, 62, 20])
Passage question vectors dim:  torch.Size([40, 62, 200])
Question Passage Similarity dim:  torch.Size([40, 62])
Question passage attention dim:  torch.Size([40, 62])
Final Merged Passage dim:  torch.Size([40, 62, 800])
Modeled Passage dim:  torch.Size([40, 62, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 62, 1000])
Span start logits:  torch.Size([40, 62])
span start probs dim:  torch.Size([40, 62])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 62]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 210, 200])
Passage Length:  210
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 210, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 210, 26])
Passage ques attention dim:  torch.Size([40, 210, 26])
Passage question vectors dim:  torch.Size([40, 210, 200])
Question Passage Similarity dim:  torch.Size([40, 210])
Question passage attention dim:  torch.Size([40, 210])
Final Merged Passage dim:  torch.Size([40, 210, 800])
Modeled Passage dim:  torch.Size([40, 210, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 210, 1000])
Span start logits:  torch.Size([40, 210])
span start probs dim:  torch.Size([40, 210])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 210]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 226, 23])
Passage ques attention dim:  torch.Size([40, 226, 23])
Passage question vectors dim:  torch.Size([40, 226, 200])
Question Passage Similarity dim:  torch.Size([40, 226])
Question passage attention dim:  torch.Size([40, 226])
Final Merged Passage dim:  torch.Size([40, 226, 800])
Modeled Passage dim:  torch.Size([40, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 226, 1000])
Span start logits:  torch.Size([40, 226])
span start probs dim:  torch.Size([40, 226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 71, 22])
Passage ques attention dim:  torch.Size([40, 71, 22])
Passage question vectors dim:  torch.Size([40, 71, 200])
Question Passage Similarity dim:  torch.Size([40, 71])
Question passage attention dim:  torch.Size([40, 71])
Final Merged Passage dim:  torch.Size([40, 71, 800])
Modeled Passage dim:  torch.Size([40, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 71, 1000])
Span start logits:  torch.Size([40, 71])
span start probs dim:  torch.Size([40, 71])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 71]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 209, 25])
Passage ques attention dim:  torch.Size([40, 209, 25])
Passage question vectors dim:  torch.Size([40, 209, 200])
Question Passage Similarity dim:  torch.Size([40, 209])
Question passage attention dim:  torch.Size([40, 209])
Final Merged Passage dim:  torch.Size([40, 209, 800])
Modeled Passage dim:  torch.Size([40, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 209, 1000])
Span start logits:  torch.Size([40, 209])
span start probs dim:  torch.Size([40, 209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 452, 200])
Passage Length:  452
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 452, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 452, 22])
Passage ques attention dim:  torch.Size([40, 452, 22])
Passage question vectors dim:  torch.Size([40, 452, 200])
Question Passage Similarity dim:  torch.Size([40, 452])
Question passage attention dim:  torch.Size([40, 452])
Final Merged Passage dim:  torch.Size([40, 452, 800])
Modeled Passage dim:  torch.Size([40, 452, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 452, 1000])
Span start logits:  torch.Size([40, 452])
span start probs dim:  torch.Size([40, 452])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 452]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 18])
Passage ques attention dim:  torch.Size([40, 113, 18])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 22])
Passage ques attention dim:  torch.Size([40, 167, 22])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 22])
Passage ques attention dim:  torch.Size([40, 103, 22])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 247, 200])
Passage Length:  247
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 247, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 247, 19])
Passage ques attention dim:  torch.Size([40, 247, 19])
Passage question vectors dim:  torch.Size([40, 247, 200])
Question Passage Similarity dim:  torch.Size([40, 247])
Question passage attention dim:  torch.Size([40, 247])
Final Merged Passage dim:  torch.Size([40, 247, 800])
Modeled Passage dim:  torch.Size([40, 247, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 247, 1000])
Span start logits:  torch.Size([40, 247])
span start probs dim:  torch.Size([40, 247])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 247]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 85, 200])
Passage Length:  85
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 85, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 85, 29])
Passage ques attention dim:  torch.Size([40, 85, 29])
Passage question vectors dim:  torch.Size([40, 85, 200])
Question Passage Similarity dim:  torch.Size([40, 85])
Question passage attention dim:  torch.Size([40, 85])
Final Merged Passage dim:  torch.Size([40, 85, 800])
Modeled Passage dim:  torch.Size([40, 85, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 85, 1000])
Span start logits:  torch.Size([40, 85])
span start probs dim:  torch.Size([40, 85])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 85]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 22])
Passage ques attention dim:  torch.Size([40, 166, 22])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 18])
Passage ques attention dim:  torch.Size([40, 128, 18])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 19])
Passage ques attention dim:  torch.Size([40, 114, 19])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 18])
Passage ques attention dim:  torch.Size([40, 172, 18])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 19])
Passage ques attention dim:  torch.Size([40, 95, 19])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 89, 200])
Passage Length:  89
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 89, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 89, 19])
Passage ques attention dim:  torch.Size([40, 89, 19])
Passage question vectors dim:  torch.Size([40, 89, 200])
Question Passage Similarity dim:  torch.Size([40, 89])
Question passage attention dim:  torch.Size([40, 89])
Final Merged Passage dim:  torch.Size([40, 89, 800])
Modeled Passage dim:  torch.Size([40, 89, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 89, 1000])
Span start logits:  torch.Size([40, 89])
span start probs dim:  torch.Size([40, 89])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 89]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 306, 200])
Passage Length:  306
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 306, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 306, 27])
Passage ques attention dim:  torch.Size([40, 306, 27])
Passage question vectors dim:  torch.Size([40, 306, 200])
Question Passage Similarity dim:  torch.Size([40, 306])
Question passage attention dim:  torch.Size([40, 306])
Final Merged Passage dim:  torch.Size([40, 306, 800])
Modeled Passage dim:  torch.Size([40, 306, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 306, 1000])
Span start logits:  torch.Size([40, 306])
span start probs dim:  torch.Size([40, 306])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 306]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 20])
Passage ques attention dim:  torch.Size([40, 114, 20])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 20])
Passage ques attention dim:  torch.Size([40, 97, 20])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 22])
Passage ques attention dim:  torch.Size([40, 173, 22])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 35])
Passage ques attention dim:  torch.Size([40, 143, 35])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 464, 200])
Passage Length:  464
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 464, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 464, 21])
Passage ques attention dim:  torch.Size([40, 464, 21])
Passage question vectors dim:  torch.Size([40, 464, 200])
Question Passage Similarity dim:  torch.Size([40, 464])
Question passage attention dim:  torch.Size([40, 464])
Final Merged Passage dim:  torch.Size([40, 464, 800])
Modeled Passage dim:  torch.Size([40, 464, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 464, 1000])
Span start logits:  torch.Size([40, 464])
span start probs dim:  torch.Size([40, 464])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 464]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 24])
Passage ques attention dim:  torch.Size([40, 150, 24])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 20])
Passage ques attention dim:  torch.Size([40, 187, 20])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 21])
Passage ques attention dim:  torch.Size([40, 167, 21])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 76, 200])
Passage Length:  76
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 76, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 76, 22])
Passage ques attention dim:  torch.Size([40, 76, 22])
Passage question vectors dim:  torch.Size([40, 76, 200])
Question Passage Similarity dim:  torch.Size([40, 76])
Question passage attention dim:  torch.Size([40, 76])
Final Merged Passage dim:  torch.Size([40, 76, 800])
Modeled Passage dim:  torch.Size([40, 76, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 76, 1000])
Span start logits:  torch.Size([40, 76])
span start probs dim:  torch.Size([40, 76])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 76]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 28])
Passage ques attention dim:  torch.Size([40, 150, 28])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 19])
Passage ques attention dim:  torch.Size([40, 140, 19])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 17])
Passage ques attention dim:  torch.Size([40, 112, 17])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 29])
Passage ques attention dim:  torch.Size([40, 139, 29])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 20])
Passage ques attention dim:  torch.Size([40, 234, 20])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 94, 30])
Passage ques attention dim:  torch.Size([40, 94, 30])
Passage question vectors dim:  torch.Size([40, 94, 200])
Question Passage Similarity dim:  torch.Size([40, 94])
Question passage attention dim:  torch.Size([40, 94])
Final Merged Passage dim:  torch.Size([40, 94, 800])
Modeled Passage dim:  torch.Size([40, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 94, 1000])
Span start logits:  torch.Size([40, 94])
span start probs dim:  torch.Size([40, 94])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 94]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 268, 200])
Passage Length:  268
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 268, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 268, 20])
Passage ques attention dim:  torch.Size([40, 268, 20])
Passage question vectors dim:  torch.Size([40, 268, 200])
Question Passage Similarity dim:  torch.Size([40, 268])
Question passage attention dim:  torch.Size([40, 268])
Final Merged Passage dim:  torch.Size([40, 268, 800])
Modeled Passage dim:  torch.Size([40, 268, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 268, 1000])
Span start logits:  torch.Size([40, 268])
span start probs dim:  torch.Size([40, 268])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 268]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 20])
Passage ques attention dim:  torch.Size([40, 135, 20])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 20])
Passage ques attention dim:  torch.Size([40, 162, 20])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 193, 24])
Passage ques attention dim:  torch.Size([40, 193, 24])
Passage question vectors dim:  torch.Size([40, 193, 200])
Question Passage Similarity dim:  torch.Size([40, 193])
Question passage attention dim:  torch.Size([40, 193])
Final Merged Passage dim:  torch.Size([40, 193, 800])
Modeled Passage dim:  torch.Size([40, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 193, 1000])
Span start logits:  torch.Size([40, 193])
span start probs dim:  torch.Size([40, 193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 21])
Passage ques attention dim:  torch.Size([40, 144, 21])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 20])
Passage ques attention dim:  torch.Size([40, 125, 20])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 22])
Passage ques attention dim:  torch.Size([40, 111, 22])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 20])
Passage ques attention dim:  torch.Size([40, 127, 20])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 22])
Passage ques attention dim:  torch.Size([40, 151, 22])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 190, 20])
Passage ques attention dim:  torch.Size([40, 190, 20])
Passage question vectors dim:  torch.Size([40, 190, 200])
Question Passage Similarity dim:  torch.Size([40, 190])
Question passage attention dim:  torch.Size([40, 190])
Final Merged Passage dim:  torch.Size([40, 190, 800])
Modeled Passage dim:  torch.Size([40, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 190, 1000])
Span start logits:  torch.Size([40, 190])
span start probs dim:  torch.Size([40, 190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 18])
Passage ques attention dim:  torch.Size([40, 155, 18])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 17])
Passage ques attention dim:  torch.Size([40, 135, 17])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 26])
Passage ques attention dim:  torch.Size([40, 106, 26])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 18])
Passage ques attention dim:  torch.Size([40, 147, 18])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 21])
Passage ques attention dim:  torch.Size([40, 151, 21])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 83, 20])
Passage ques attention dim:  torch.Size([40, 83, 20])
Passage question vectors dim:  torch.Size([40, 83, 200])
Question Passage Similarity dim:  torch.Size([40, 83])
Question passage attention dim:  torch.Size([40, 83])
Final Merged Passage dim:  torch.Size([40, 83, 800])
Modeled Passage dim:  torch.Size([40, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 83, 1000])
Span start logits:  torch.Size([40, 83])
span start probs dim:  torch.Size([40, 83])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 83]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 20])
Passage ques attention dim:  torch.Size([40, 138, 20])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 92, 18])
Passage ques attention dim:  torch.Size([40, 92, 18])
Passage question vectors dim:  torch.Size([40, 92, 200])
Question Passage Similarity dim:  torch.Size([40, 92])
Question passage attention dim:  torch.Size([40, 92])
Final Merged Passage dim:  torch.Size([40, 92, 800])
Modeled Passage dim:  torch.Size([40, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 92, 1000])
Span start logits:  torch.Size([40, 92])
span start probs dim:  torch.Size([40, 92])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 92]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 20])
Passage ques attention dim:  torch.Size([40, 101, 20])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 19])
Passage ques attention dim:  torch.Size([40, 133, 19])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 25])
Passage ques attention dim:  torch.Size([40, 104, 25])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 21])
Passage ques attention dim:  torch.Size([40, 151, 21])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 55, 200])
Passage Length:  55
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 55, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 55, 28])
Passage ques attention dim:  torch.Size([40, 55, 28])
Passage question vectors dim:  torch.Size([40, 55, 200])
Question Passage Similarity dim:  torch.Size([40, 55])
Question passage attention dim:  torch.Size([40, 55])
Final Merged Passage dim:  torch.Size([40, 55, 800])
Modeled Passage dim:  torch.Size([40, 55, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 55, 1000])
Span start logits:  torch.Size([40, 55])
span start probs dim:  torch.Size([40, 55])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 55]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 251, 200])
Passage Length:  251
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 251, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 251, 24])
Passage ques attention dim:  torch.Size([40, 251, 24])
Passage question vectors dim:  torch.Size([40, 251, 200])
Question Passage Similarity dim:  torch.Size([40, 251])
Question passage attention dim:  torch.Size([40, 251])
Final Merged Passage dim:  torch.Size([40, 251, 800])
Modeled Passage dim:  torch.Size([40, 251, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 251, 1000])
Span start logits:  torch.Size([40, 251])
span start probs dim:  torch.Size([40, 251])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 251]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 26])
Passage ques attention dim:  torch.Size([40, 151, 26])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 23])
Passage ques attention dim:  torch.Size([40, 125, 23])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 81, 200])
Passage Length:  81
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 81, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 81, 26])
Passage ques attention dim:  torch.Size([40, 81, 26])
Passage question vectors dim:  torch.Size([40, 81, 200])
Question Passage Similarity dim:  torch.Size([40, 81])
Question passage attention dim:  torch.Size([40, 81])
Final Merged Passage dim:  torch.Size([40, 81, 800])
Modeled Passage dim:  torch.Size([40, 81, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 81, 1000])
Span start logits:  torch.Size([40, 81])
span start probs dim:  torch.Size([40, 81])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 81]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 20])
Passage ques attention dim:  torch.Size([40, 101, 20])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 19])
Passage ques attention dim:  torch.Size([40, 184, 19])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 24])
Passage ques attention dim:  torch.Size([40, 143, 24])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 91, 24])
Passage ques attention dim:  torch.Size([40, 91, 24])
Passage question vectors dim:  torch.Size([40, 91, 200])
Question Passage Similarity dim:  torch.Size([40, 91])
Question passage attention dim:  torch.Size([40, 91])
Final Merged Passage dim:  torch.Size([40, 91, 800])
Modeled Passage dim:  torch.Size([40, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 91, 1000])
Span start logits:  torch.Size([40, 91])
span start probs dim:  torch.Size([40, 91])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 91]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 18])
Passage ques attention dim:  torch.Size([40, 118, 18])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 43, 200])
Passage Length:  43
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 43, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 43, 28])
Passage ques attention dim:  torch.Size([40, 43, 28])
Passage question vectors dim:  torch.Size([40, 43, 200])
Question Passage Similarity dim:  torch.Size([40, 43])
Question passage attention dim:  torch.Size([40, 43])
Final Merged Passage dim:  torch.Size([40, 43, 800])
Modeled Passage dim:  torch.Size([40, 43, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 43, 1000])
Span start logits:  torch.Size([40, 43])
span start probs dim:  torch.Size([40, 43])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 43]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 20])
Passage ques attention dim:  torch.Size([40, 141, 20])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 25])
Passage ques attention dim:  torch.Size([40, 166, 25])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 17])
Passage ques attention dim:  torch.Size([40, 118, 17])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 86, 24])
Passage ques attention dim:  torch.Size([40, 86, 24])
Passage question vectors dim:  torch.Size([40, 86, 200])
Question Passage Similarity dim:  torch.Size([40, 86])
Question passage attention dim:  torch.Size([40, 86])
Final Merged Passage dim:  torch.Size([40, 86, 800])
Modeled Passage dim:  torch.Size([40, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 86, 1000])
Span start logits:  torch.Size([40, 86])
span start probs dim:  torch.Size([40, 86])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 86]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 21])
Passage ques attention dim:  torch.Size([40, 133, 21])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 24])
Passage ques attention dim:  torch.Size([40, 186, 24])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 19])
Passage ques attention dim:  torch.Size([40, 126, 19])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 21])
Passage ques attention dim:  torch.Size([40, 143, 21])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 31])
Passage ques attention dim:  torch.Size([40, 180, 31])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 21])
Passage ques attention dim:  torch.Size([40, 175, 21])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([39, 24, 200])
Embedded passage dim:  torch.Size([39, 809, 200])
Passage Length:  809
Encoded question dim:  torch.Size([39, 24, 200])
Encoded passage dim:  torch.Size([39, 809, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([39, 809, 24])
Passage ques attention dim:  torch.Size([39, 809, 24])
Passage question vectors dim:  torch.Size([39, 809, 200])
Question Passage Similarity dim:  torch.Size([39, 809])
Question passage attention dim:  torch.Size([39, 809])
Final Merged Passage dim:  torch.Size([39, 809, 800])
Modeled Passage dim:  torch.Size([39, 809, 200])
Modeling dim:  200
Span start input shape:  torch.Size([39, 809, 1000])
Span start logits:  torch.Size([39, 809])
span start probs dim:  torch.Size([39, 809])
Span start representation dim:  torch.Size([39, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([39, 809]) 39
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 28])
Passage ques attention dim:  torch.Size([40, 179, 28])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 22])
Passage ques attention dim:  torch.Size([40, 169, 22])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 19])
Passage ques attention dim:  torch.Size([40, 152, 19])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 55, 200])
Passage Length:  55
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 55, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 55, 25])
Passage ques attention dim:  torch.Size([40, 55, 25])
Passage question vectors dim:  torch.Size([40, 55, 200])
Question Passage Similarity dim:  torch.Size([40, 55])
Question passage attention dim:  torch.Size([40, 55])
Final Merged Passage dim:  torch.Size([40, 55, 800])
Modeled Passage dim:  torch.Size([40, 55, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 55, 1000])
Span start logits:  torch.Size([40, 55])
span start probs dim:  torch.Size([40, 55])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 55]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 56, 200])
Passage Length:  56
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 56, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 56, 21])
Passage ques attention dim:  torch.Size([40, 56, 21])
Passage question vectors dim:  torch.Size([40, 56, 200])
Question Passage Similarity dim:  torch.Size([40, 56])
Question passage attention dim:  torch.Size([40, 56])
Final Merged Passage dim:  torch.Size([40, 56, 800])
Modeled Passage dim:  torch.Size([40, 56, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 56, 1000])
Span start logits:  torch.Size([40, 56])
span start probs dim:  torch.Size([40, 56])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 56]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 20])
Passage ques attention dim:  torch.Size([40, 152, 20])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 29])
Passage ques attention dim:  torch.Size([40, 95, 29])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 244, 200])
Passage Length:  244
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 244, 21])
Passage ques attention dim:  torch.Size([40, 244, 21])
Passage question vectors dim:  torch.Size([40, 244, 200])
Question Passage Similarity dim:  torch.Size([40, 244])
Question passage attention dim:  torch.Size([40, 244])
Final Merged Passage dim:  torch.Size([40, 244, 800])
Modeled Passage dim:  torch.Size([40, 244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 244, 1000])
Span start logits:  torch.Size([40, 244])
span start probs dim:  torch.Size([40, 244])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 244]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 254, 19])
Passage ques attention dim:  torch.Size([40, 254, 19])
Passage question vectors dim:  torch.Size([40, 254, 200])
Question Passage Similarity dim:  torch.Size([40, 254])
Question passage attention dim:  torch.Size([40, 254])
Final Merged Passage dim:  torch.Size([40, 254, 800])
Modeled Passage dim:  torch.Size([40, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 254, 1000])
Span start logits:  torch.Size([40, 254])
span start probs dim:  torch.Size([40, 254])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 254]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 20])
Passage ques attention dim:  torch.Size([40, 196, 20])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 19])
Passage ques attention dim:  torch.Size([40, 168, 19])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 23])
Passage ques attention dim:  torch.Size([40, 108, 23])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 37, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 37, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 37])
Passage ques attention dim:  torch.Size([40, 114, 37])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 83, 19])
Passage ques attention dim:  torch.Size([40, 83, 19])
Passage question vectors dim:  torch.Size([40, 83, 200])
Question Passage Similarity dim:  torch.Size([40, 83])
Question passage attention dim:  torch.Size([40, 83])
Final Merged Passage dim:  torch.Size([40, 83, 800])
Modeled Passage dim:  torch.Size([40, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 83, 1000])
Span start logits:  torch.Size([40, 83])
span start probs dim:  torch.Size([40, 83])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 83]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 20])
Passage ques attention dim:  torch.Size([40, 185, 20])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 22])
Passage ques attention dim:  torch.Size([40, 144, 22])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 60, 200])
Passage Length:  60
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 60, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 60, 21])
Passage ques attention dim:  torch.Size([40, 60, 21])
Passage question vectors dim:  torch.Size([40, 60, 200])
Question Passage Similarity dim:  torch.Size([40, 60])
Question passage attention dim:  torch.Size([40, 60])
Final Merged Passage dim:  torch.Size([40, 60, 800])
Modeled Passage dim:  torch.Size([40, 60, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 60, 1000])
Span start logits:  torch.Size([40, 60])
span start probs dim:  torch.Size([40, 60])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 60]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 232, 18])
Passage ques attention dim:  torch.Size([40, 232, 18])
Passage question vectors dim:  torch.Size([40, 232, 200])
Question Passage Similarity dim:  torch.Size([40, 232])
Question passage attention dim:  torch.Size([40, 232])
Final Merged Passage dim:  torch.Size([40, 232, 800])
Modeled Passage dim:  torch.Size([40, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 232, 1000])
Span start logits:  torch.Size([40, 232])
span start probs dim:  torch.Size([40, 232])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 232]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 23])
Passage ques attention dim:  torch.Size([40, 154, 23])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 18])
Passage ques attention dim:  torch.Size([40, 156, 18])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 262, 200])
Passage Length:  262
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 262, 29])
Passage ques attention dim:  torch.Size([40, 262, 29])
Passage question vectors dim:  torch.Size([40, 262, 200])
Question Passage Similarity dim:  torch.Size([40, 262])
Question passage attention dim:  torch.Size([40, 262])
Final Merged Passage dim:  torch.Size([40, 262, 800])
Modeled Passage dim:  torch.Size([40, 262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 262, 1000])
Span start logits:  torch.Size([40, 262])
span start probs dim:  torch.Size([40, 262])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 262]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 20])
Passage ques attention dim:  torch.Size([40, 107, 20])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 21])
Passage ques attention dim:  torch.Size([40, 113, 21])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 19])
Passage ques attention dim:  torch.Size([40, 117, 19])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 30, 200])
Passage Length:  30
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 30, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 30, 25])
Passage ques attention dim:  torch.Size([40, 30, 25])
Passage question vectors dim:  torch.Size([40, 30, 200])
Question Passage Similarity dim:  torch.Size([40, 30])
Question passage attention dim:  torch.Size([40, 30])
Final Merged Passage dim:  torch.Size([40, 30, 800])
Modeled Passage dim:  torch.Size([40, 30, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 30, 1000])
Span start logits:  torch.Size([40, 30])
span start probs dim:  torch.Size([40, 30])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 30]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 25])
Passage ques attention dim:  torch.Size([40, 104, 25])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 25])
Passage ques attention dim:  torch.Size([40, 107, 25])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 17])
Passage ques attention dim:  torch.Size([40, 179, 17])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 21])
Passage ques attention dim:  torch.Size([40, 185, 21])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 20])
Passage ques attention dim:  torch.Size([40, 136, 20])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 227, 19])
Passage ques attention dim:  torch.Size([40, 227, 19])
Passage question vectors dim:  torch.Size([40, 227, 200])
Question Passage Similarity dim:  torch.Size([40, 227])
Question passage attention dim:  torch.Size([40, 227])
Final Merged Passage dim:  torch.Size([40, 227, 800])
Modeled Passage dim:  torch.Size([40, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 227, 1000])
Span start logits:  torch.Size([40, 227])
span start probs dim:  torch.Size([40, 227])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 227]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 27])
Passage ques attention dim:  torch.Size([40, 117, 27])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 25])
Passage ques attention dim:  torch.Size([40, 120, 25])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 292, 200])
Passage Length:  292
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 292, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 292, 19])
Passage ques attention dim:  torch.Size([40, 292, 19])
Passage question vectors dim:  torch.Size([40, 292, 200])
Question Passage Similarity dim:  torch.Size([40, 292])
Question passage attention dim:  torch.Size([40, 292])
Final Merged Passage dim:  torch.Size([40, 292, 800])
Modeled Passage dim:  torch.Size([40, 292, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 292, 1000])
Span start logits:  torch.Size([40, 292])
span start probs dim:  torch.Size([40, 292])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 292]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 21])
Passage ques attention dim:  torch.Size([40, 155, 21])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 21])
Passage ques attention dim:  torch.Size([40, 136, 21])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 23])
Passage ques attention dim:  torch.Size([40, 154, 23])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 19])
Passage ques attention dim:  torch.Size([40, 159, 19])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 21])
Passage ques attention dim:  torch.Size([40, 120, 21])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 24])
Passage ques attention dim:  torch.Size([40, 130, 24])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 275, 200])
Passage Length:  275
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 275, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 275, 27])
Passage ques attention dim:  torch.Size([40, 275, 27])
Passage question vectors dim:  torch.Size([40, 275, 200])
Question Passage Similarity dim:  torch.Size([40, 275])
Question passage attention dim:  torch.Size([40, 275])
Final Merged Passage dim:  torch.Size([40, 275, 800])
Modeled Passage dim:  torch.Size([40, 275, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 275, 1000])
Span start logits:  torch.Size([40, 275])
span start probs dim:  torch.Size([40, 275])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 275]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 22])
Passage ques attention dim:  torch.Size([40, 100, 22])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 358, 200])
Passage Length:  358
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 358, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 358, 20])
Passage ques attention dim:  torch.Size([40, 358, 20])
Passage question vectors dim:  torch.Size([40, 358, 200])
Question Passage Similarity dim:  torch.Size([40, 358])
Question passage attention dim:  torch.Size([40, 358])
Final Merged Passage dim:  torch.Size([40, 358, 800])
Modeled Passage dim:  torch.Size([40, 358, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 358, 1000])
Span start logits:  torch.Size([40, 358])
span start probs dim:  torch.Size([40, 358])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 358]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 36, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 36, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 36])
Passage ques attention dim:  torch.Size([40, 156, 36])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 212, 22])
Passage ques attention dim:  torch.Size([40, 212, 22])
Passage question vectors dim:  torch.Size([40, 212, 200])
Question Passage Similarity dim:  torch.Size([40, 212])
Question passage attention dim:  torch.Size([40, 212])
Final Merged Passage dim:  torch.Size([40, 212, 800])
Modeled Passage dim:  torch.Size([40, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 212, 1000])
Span start logits:  torch.Size([40, 212])
span start probs dim:  torch.Size([40, 212])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 212]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 25])
Passage ques attention dim:  torch.Size([40, 114, 25])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 21])
Passage ques attention dim:  torch.Size([40, 194, 21])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 21])
Passage ques attention dim:  torch.Size([40, 110, 21])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 23])
Passage ques attention dim:  torch.Size([40, 187, 23])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 30])
Passage ques attention dim:  torch.Size([40, 154, 30])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 261, 200])
Passage Length:  261
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 261, 20])
Passage ques attention dim:  torch.Size([40, 261, 20])
Passage question vectors dim:  torch.Size([40, 261, 200])
Question Passage Similarity dim:  torch.Size([40, 261])
Question passage attention dim:  torch.Size([40, 261])
Final Merged Passage dim:  torch.Size([40, 261, 800])
Modeled Passage dim:  torch.Size([40, 261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 261, 1000])
Span start logits:  torch.Size([40, 261])
span start probs dim:  torch.Size([40, 261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 261]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 22])
Passage ques attention dim:  torch.Size([40, 123, 22])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 19])
Passage ques attention dim:  torch.Size([40, 108, 19])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 20])
Passage ques attention dim:  torch.Size([40, 170, 20])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 17])
Passage ques attention dim:  torch.Size([40, 125, 17])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 16])
Passage ques attention dim:  torch.Size([40, 177, 16])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 19])
Passage ques attention dim:  torch.Size([40, 144, 19])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 53, 200])
Passage Length:  53
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 53, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 53, 21])
Passage ques attention dim:  torch.Size([40, 53, 21])
Passage question vectors dim:  torch.Size([40, 53, 200])
Question Passage Similarity dim:  torch.Size([40, 53])
Question passage attention dim:  torch.Size([40, 53])
Final Merged Passage dim:  torch.Size([40, 53, 800])
Modeled Passage dim:  torch.Size([40, 53, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 53, 1000])
Span start logits:  torch.Size([40, 53])
span start probs dim:  torch.Size([40, 53])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 53]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 21])
Passage ques attention dim:  torch.Size([40, 160, 21])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 21])
Passage ques attention dim:  torch.Size([40, 126, 21])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 22])
Passage ques attention dim:  torch.Size([40, 133, 22])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 21])
Passage ques attention dim:  torch.Size([40, 105, 21])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 22])
Passage ques attention dim:  torch.Size([40, 104, 22])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 23])
Passage ques attention dim:  torch.Size([40, 110, 23])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 28])
Passage ques attention dim:  torch.Size([40, 198, 28])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 258, 25])
Passage ques attention dim:  torch.Size([40, 258, 25])
Passage question vectors dim:  torch.Size([40, 258, 200])
Question Passage Similarity dim:  torch.Size([40, 258])
Question passage attention dim:  torch.Size([40, 258])
Final Merged Passage dim:  torch.Size([40, 258, 800])
Modeled Passage dim:  torch.Size([40, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 258, 1000])
Span start logits:  torch.Size([40, 258])
span start probs dim:  torch.Size([40, 258])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 258]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 22])
Passage ques attention dim:  torch.Size([40, 175, 22])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 233, 200])
Passage Length:  233
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 233, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 233, 28])
Passage ques attention dim:  torch.Size([40, 233, 28])
Passage question vectors dim:  torch.Size([40, 233, 200])
Question Passage Similarity dim:  torch.Size([40, 233])
Question passage attention dim:  torch.Size([40, 233])
Final Merged Passage dim:  torch.Size([40, 233, 800])
Modeled Passage dim:  torch.Size([40, 233, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 233, 1000])
Span start logits:  torch.Size([40, 233])
span start probs dim:  torch.Size([40, 233])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 233]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 24])
Passage ques attention dim:  torch.Size([40, 148, 24])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 18])
Passage ques attention dim:  torch.Size([40, 178, 18])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 203, 200])
Passage Length:  203
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 203, 22])
Passage ques attention dim:  torch.Size([40, 203, 22])
Passage question vectors dim:  torch.Size([40, 203, 200])
Question Passage Similarity dim:  torch.Size([40, 203])
Question passage attention dim:  torch.Size([40, 203])
Final Merged Passage dim:  torch.Size([40, 203, 800])
Modeled Passage dim:  torch.Size([40, 203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 203, 1000])
Span start logits:  torch.Size([40, 203])
span start probs dim:  torch.Size([40, 203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 23])
Passage ques attention dim:  torch.Size([40, 150, 23])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 22])
Passage ques attention dim:  torch.Size([40, 156, 22])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 206, 22])
Passage ques attention dim:  torch.Size([40, 206, 22])
Passage question vectors dim:  torch.Size([40, 206, 200])
Question Passage Similarity dim:  torch.Size([40, 206])
Question passage attention dim:  torch.Size([40, 206])
Final Merged Passage dim:  torch.Size([40, 206, 800])
Modeled Passage dim:  torch.Size([40, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 206, 1000])
Span start logits:  torch.Size([40, 206])
span start probs dim:  torch.Size([40, 206])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 206]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 59, 200])
Passage Length:  59
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 59, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 59, 26])
Passage ques attention dim:  torch.Size([40, 59, 26])
Passage question vectors dim:  torch.Size([40, 59, 200])
Question Passage Similarity dim:  torch.Size([40, 59])
Question passage attention dim:  torch.Size([40, 59])
Final Merged Passage dim:  torch.Size([40, 59, 800])
Modeled Passage dim:  torch.Size([40, 59, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 59, 1000])
Span start logits:  torch.Size([40, 59])
span start probs dim:  torch.Size([40, 59])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 59]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 93, 20])
Passage ques attention dim:  torch.Size([40, 93, 20])
Passage question vectors dim:  torch.Size([40, 93, 200])
Question Passage Similarity dim:  torch.Size([40, 93])
Question passage attention dim:  torch.Size([40, 93])
Final Merged Passage dim:  torch.Size([40, 93, 800])
Modeled Passage dim:  torch.Size([40, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 93, 1000])
Span start logits:  torch.Size([40, 93])
span start probs dim:  torch.Size([40, 93])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 93]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 19])
Passage ques attention dim:  torch.Size([40, 146, 19])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 47, 200])
Passage Length:  47
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 47, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 47, 18])
Passage ques attention dim:  torch.Size([40, 47, 18])
Passage question vectors dim:  torch.Size([40, 47, 200])
Question Passage Similarity dim:  torch.Size([40, 47])
Question passage attention dim:  torch.Size([40, 47])
Final Merged Passage dim:  torch.Size([40, 47, 800])
Modeled Passage dim:  torch.Size([40, 47, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 47, 1000])
Span start logits:  torch.Size([40, 47])
span start probs dim:  torch.Size([40, 47])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 47]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 24])
Passage ques attention dim:  torch.Size([40, 124, 24])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 16])
Passage ques attention dim:  torch.Size([40, 144, 16])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 25])
Passage ques attention dim:  torch.Size([40, 101, 25])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 34, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 34, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 34])
Passage ques attention dim:  torch.Size([40, 179, 34])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 19])
Passage ques attention dim:  torch.Size([40, 117, 19])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 19])
Passage ques attention dim:  torch.Size([40, 130, 19])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 23])
Passage ques attention dim:  torch.Size([40, 151, 23])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 24])
Passage ques attention dim:  torch.Size([40, 137, 24])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 21])
Passage ques attention dim:  torch.Size([40, 118, 21])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 20])
Passage ques attention dim:  torch.Size([40, 139, 20])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 235, 200])
Passage Length:  235
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 235, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 235, 20])
Passage ques attention dim:  torch.Size([40, 235, 20])
Passage question vectors dim:  torch.Size([40, 235, 200])
Question Passage Similarity dim:  torch.Size([40, 235])
Question passage attention dim:  torch.Size([40, 235])
Final Merged Passage dim:  torch.Size([40, 235, 800])
Modeled Passage dim:  torch.Size([40, 235, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 235, 1000])
Span start logits:  torch.Size([40, 235])
span start probs dim:  torch.Size([40, 235])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 235]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 20])
Passage ques attention dim:  torch.Size([40, 149, 20])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 19])
Passage ques attention dim:  torch.Size([40, 170, 19])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 90, 22])
Passage ques attention dim:  torch.Size([40, 90, 22])
Passage question vectors dim:  torch.Size([40, 90, 200])
Question Passage Similarity dim:  torch.Size([40, 90])
Question passage attention dim:  torch.Size([40, 90])
Final Merged Passage dim:  torch.Size([40, 90, 800])
Modeled Passage dim:  torch.Size([40, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 90, 1000])
Span start logits:  torch.Size([40, 90])
span start probs dim:  torch.Size([40, 90])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 90]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 199, 32])
Passage ques attention dim:  torch.Size([40, 199, 32])
Passage question vectors dim:  torch.Size([40, 199, 200])
Question Passage Similarity dim:  torch.Size([40, 199])
Question passage attention dim:  torch.Size([40, 199])
Final Merged Passage dim:  torch.Size([40, 199, 800])
Modeled Passage dim:  torch.Size([40, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 199, 1000])
Span start logits:  torch.Size([40, 199])
span start probs dim:  torch.Size([40, 199])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 199]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 93, 28])
Passage ques attention dim:  torch.Size([40, 93, 28])
Passage question vectors dim:  torch.Size([40, 93, 200])
Question Passage Similarity dim:  torch.Size([40, 93])
Question passage attention dim:  torch.Size([40, 93])
Final Merged Passage dim:  torch.Size([40, 93, 800])
Modeled Passage dim:  torch.Size([40, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 93, 1000])
Span start logits:  torch.Size([40, 93])
span start probs dim:  torch.Size([40, 93])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 93]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 18])
Passage ques attention dim:  torch.Size([40, 164, 18])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 16])
Passage ques attention dim:  torch.Size([40, 115, 16])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 21])
Passage ques attention dim:  torch.Size([40, 196, 21])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 20])
Passage ques attention dim:  torch.Size([40, 131, 20])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 18])
Passage ques attention dim:  torch.Size([40, 132, 18])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 261, 200])
Passage Length:  261
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 261, 20])
Passage ques attention dim:  torch.Size([40, 261, 20])
Passage question vectors dim:  torch.Size([40, 261, 200])
Question Passage Similarity dim:  torch.Size([40, 261])
Question passage attention dim:  torch.Size([40, 261])
Final Merged Passage dim:  torch.Size([40, 261, 800])
Modeled Passage dim:  torch.Size([40, 261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 261, 1000])
Span start logits:  torch.Size([40, 261])
span start probs dim:  torch.Size([40, 261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 261]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 24])
Passage ques attention dim:  torch.Size([40, 128, 24])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 19])
Passage ques attention dim:  torch.Size([40, 99, 19])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 24])
Passage ques attention dim:  torch.Size([40, 126, 24])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 18])
Passage ques attention dim:  torch.Size([40, 147, 18])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 252, 200])
Passage Length:  252
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 252, 21])
Passage ques attention dim:  torch.Size([40, 252, 21])
Passage question vectors dim:  torch.Size([40, 252, 200])
Question Passage Similarity dim:  torch.Size([40, 252])
Question passage attention dim:  torch.Size([40, 252])
Final Merged Passage dim:  torch.Size([40, 252, 800])
Modeled Passage dim:  torch.Size([40, 252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 252, 1000])
Span start logits:  torch.Size([40, 252])
span start probs dim:  torch.Size([40, 252])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 252]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 27])
Passage ques attention dim:  torch.Size([40, 110, 27])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 21])
Passage ques attention dim:  torch.Size([40, 138, 21])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 22])
Passage ques attention dim:  torch.Size([40, 105, 22])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 60, 200])
Passage Length:  60
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 60, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 60, 19])
Passage ques attention dim:  torch.Size([40, 60, 19])
Passage question vectors dim:  torch.Size([40, 60, 200])
Question Passage Similarity dim:  torch.Size([40, 60])
Question passage attention dim:  torch.Size([40, 60])
Final Merged Passage dim:  torch.Size([40, 60, 800])
Modeled Passage dim:  torch.Size([40, 60, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 60, 1000])
Span start logits:  torch.Size([40, 60])
span start probs dim:  torch.Size([40, 60])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 60]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 32])
Passage ques attention dim:  torch.Size([40, 185, 32])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 24])
Passage ques attention dim:  torch.Size([40, 170, 24])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 74, 23])
Passage ques attention dim:  torch.Size([40, 74, 23])
Passage question vectors dim:  torch.Size([40, 74, 200])
Question Passage Similarity dim:  torch.Size([40, 74])
Question passage attention dim:  torch.Size([40, 74])
Final Merged Passage dim:  torch.Size([40, 74, 800])
Modeled Passage dim:  torch.Size([40, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 74, 1000])
Span start logits:  torch.Size([40, 74])
span start probs dim:  torch.Size([40, 74])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 74]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 23])
Passage ques attention dim:  torch.Size([40, 120, 23])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 25])
Passage ques attention dim:  torch.Size([40, 180, 25])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 224, 200])
Passage Length:  224
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 224, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 224, 18])
Passage ques attention dim:  torch.Size([40, 224, 18])
Passage question vectors dim:  torch.Size([40, 224, 200])
Question Passage Similarity dim:  torch.Size([40, 224])
Question passage attention dim:  torch.Size([40, 224])
Final Merged Passage dim:  torch.Size([40, 224, 800])
Modeled Passage dim:  torch.Size([40, 224, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 224, 1000])
Span start logits:  torch.Size([40, 224])
span start probs dim:  torch.Size([40, 224])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 224]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 20])
Passage ques attention dim:  torch.Size([40, 126, 20])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 18])
Passage ques attention dim:  torch.Size([40, 170, 18])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 22])
Passage ques attention dim:  torch.Size([40, 103, 22])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 26])
Passage ques attention dim:  torch.Size([40, 205, 26])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 21])
Passage ques attention dim:  torch.Size([40, 159, 21])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 24])
Passage ques attention dim:  torch.Size([40, 166, 24])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 18])
Passage ques attention dim:  torch.Size([40, 104, 18])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 23])
Passage ques attention dim:  torch.Size([40, 204, 23])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 20])
Passage ques attention dim:  torch.Size([40, 186, 20])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 20])
Passage ques attention dim:  torch.Size([40, 117, 20])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 20])
Passage ques attention dim:  torch.Size([40, 124, 20])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 52, 21])
Passage ques attention dim:  torch.Size([40, 52, 21])
Passage question vectors dim:  torch.Size([40, 52, 200])
Question Passage Similarity dim:  torch.Size([40, 52])
Question passage attention dim:  torch.Size([40, 52])
Final Merged Passage dim:  torch.Size([40, 52, 800])
Modeled Passage dim:  torch.Size([40, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 52, 1000])
Span start logits:  torch.Size([40, 52])
span start probs dim:  torch.Size([40, 52])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 52]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 29])
Passage ques attention dim:  torch.Size([40, 157, 29])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 21])
Passage ques attention dim:  torch.Size([40, 115, 21])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 25])
Passage ques attention dim:  torch.Size([40, 116, 25])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 20])
Passage ques attention dim:  torch.Size([40, 102, 20])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 18])
Passage ques attention dim:  torch.Size([40, 186, 18])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 20])
Passage ques attention dim:  torch.Size([40, 108, 20])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 195, 19])
Passage ques attention dim:  torch.Size([40, 195, 19])
Passage question vectors dim:  torch.Size([40, 195, 200])
Question Passage Similarity dim:  torch.Size([40, 195])
Question passage attention dim:  torch.Size([40, 195])
Final Merged Passage dim:  torch.Size([40, 195, 800])
Modeled Passage dim:  torch.Size([40, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 195, 1000])
Span start logits:  torch.Size([40, 195])
span start probs dim:  torch.Size([40, 195])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 195]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 21])
Passage ques attention dim:  torch.Size([40, 145, 21])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 24])
Passage ques attention dim:  torch.Size([40, 97, 24])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 25])
Passage ques attention dim:  torch.Size([40, 175, 25])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 25])
Passage ques attention dim:  torch.Size([40, 179, 25])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 21])
Passage ques attention dim:  torch.Size([40, 138, 21])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 272, 200])
Passage Length:  272
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 272, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 272, 24])
Passage ques attention dim:  torch.Size([40, 272, 24])
Passage question vectors dim:  torch.Size([40, 272, 200])
Question Passage Similarity dim:  torch.Size([40, 272])
Question passage attention dim:  torch.Size([40, 272])
Final Merged Passage dim:  torch.Size([40, 272, 800])
Modeled Passage dim:  torch.Size([40, 272, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 272, 1000])
Span start logits:  torch.Size([40, 272])
span start probs dim:  torch.Size([40, 272])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 272]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 37, 200])
Passage Length:  37
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 37, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 37, 19])
Passage ques attention dim:  torch.Size([40, 37, 19])
Passage question vectors dim:  torch.Size([40, 37, 200])
Question Passage Similarity dim:  torch.Size([40, 37])
Question passage attention dim:  torch.Size([40, 37])
Final Merged Passage dim:  torch.Size([40, 37, 800])
Modeled Passage dim:  torch.Size([40, 37, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 37, 1000])
Span start logits:  torch.Size([40, 37])
span start probs dim:  torch.Size([40, 37])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 37]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 21])
Passage ques attention dim:  torch.Size([40, 136, 21])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 24])
Passage ques attention dim:  torch.Size([40, 115, 24])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 18])
Passage ques attention dim:  torch.Size([40, 164, 18])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 22])
Passage ques attention dim:  torch.Size([40, 144, 22])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 183, 24])
Passage ques attention dim:  torch.Size([40, 183, 24])
Passage question vectors dim:  torch.Size([40, 183, 200])
Question Passage Similarity dim:  torch.Size([40, 183])
Question passage attention dim:  torch.Size([40, 183])
Final Merged Passage dim:  torch.Size([40, 183, 800])
Modeled Passage dim:  torch.Size([40, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 183, 1000])
Span start logits:  torch.Size([40, 183])
span start probs dim:  torch.Size([40, 183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 23])
Passage ques attention dim:  torch.Size([40, 157, 23])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 74, 29])
Passage ques attention dim:  torch.Size([40, 74, 29])
Passage question vectors dim:  torch.Size([40, 74, 200])
Question Passage Similarity dim:  torch.Size([40, 74])
Question passage attention dim:  torch.Size([40, 74])
Final Merged Passage dim:  torch.Size([40, 74, 800])
Modeled Passage dim:  torch.Size([40, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 74, 1000])
Span start logits:  torch.Size([40, 74])
span start probs dim:  torch.Size([40, 74])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 74]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 24])
Passage ques attention dim:  torch.Size([40, 186, 24])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 24])
Passage ques attention dim:  torch.Size([40, 163, 24])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 26])
Passage ques attention dim:  torch.Size([40, 158, 26])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 266, 200])
Passage Length:  266
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 266, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 266, 22])
Passage ques attention dim:  torch.Size([40, 266, 22])
Passage question vectors dim:  torch.Size([40, 266, 200])
Question Passage Similarity dim:  torch.Size([40, 266])
Question passage attention dim:  torch.Size([40, 266])
Final Merged Passage dim:  torch.Size([40, 266, 800])
Modeled Passage dim:  torch.Size([40, 266, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 266, 1000])
Span start logits:  torch.Size([40, 266])
span start probs dim:  torch.Size([40, 266])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 266]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 289, 200])
Passage Length:  289
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 289, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 289, 17])
Passage ques attention dim:  torch.Size([40, 289, 17])
Passage question vectors dim:  torch.Size([40, 289, 200])
Question Passage Similarity dim:  torch.Size([40, 289])
Question passage attention dim:  torch.Size([40, 289])
Final Merged Passage dim:  torch.Size([40, 289, 800])
Modeled Passage dim:  torch.Size([40, 289, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 289, 1000])
Span start logits:  torch.Size([40, 289])
span start probs dim:  torch.Size([40, 289])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 289]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 93, 20])
Passage ques attention dim:  torch.Size([40, 93, 20])
Passage question vectors dim:  torch.Size([40, 93, 200])
Question Passage Similarity dim:  torch.Size([40, 93])
Question passage attention dim:  torch.Size([40, 93])
Final Merged Passage dim:  torch.Size([40, 93, 800])
Modeled Passage dim:  torch.Size([40, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 93, 1000])
Span start logits:  torch.Size([40, 93])
span start probs dim:  torch.Size([40, 93])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 93]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 18])
Passage ques attention dim:  torch.Size([40, 155, 18])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 26])
Passage ques attention dim:  torch.Size([40, 102, 26])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 318, 200])
Passage Length:  318
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 318, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 318, 18])
Passage ques attention dim:  torch.Size([40, 318, 18])
Passage question vectors dim:  torch.Size([40, 318, 200])
Question Passage Similarity dim:  torch.Size([40, 318])
Question passage attention dim:  torch.Size([40, 318])
Final Merged Passage dim:  torch.Size([40, 318, 800])
Modeled Passage dim:  torch.Size([40, 318, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 318, 1000])
Span start logits:  torch.Size([40, 318])
span start probs dim:  torch.Size([40, 318])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 318]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 19])
Passage ques attention dim:  torch.Size([40, 121, 19])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 295, 200])
Passage Length:  295
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 295, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 295, 18])
Passage ques attention dim:  torch.Size([40, 295, 18])
Passage question vectors dim:  torch.Size([40, 295, 200])
Question Passage Similarity dim:  torch.Size([40, 295])
Question passage attention dim:  torch.Size([40, 295])
Final Merged Passage dim:  torch.Size([40, 295, 800])
Modeled Passage dim:  torch.Size([40, 295, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 295, 1000])
Span start logits:  torch.Size([40, 295])
span start probs dim:  torch.Size([40, 295])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 295]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 21])
Passage ques attention dim:  torch.Size([40, 128, 21])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 25])
Passage ques attention dim:  torch.Size([40, 175, 25])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 19])
Passage ques attention dim:  torch.Size([40, 146, 19])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 22])
Passage ques attention dim:  torch.Size([40, 158, 22])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 21])
Passage ques attention dim:  torch.Size([40, 157, 21])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 53, 200])
Passage Length:  53
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 53, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 53, 20])
Passage ques attention dim:  torch.Size([40, 53, 20])
Passage question vectors dim:  torch.Size([40, 53, 200])
Question Passage Similarity dim:  torch.Size([40, 53])
Question passage attention dim:  torch.Size([40, 53])
Final Merged Passage dim:  torch.Size([40, 53, 800])
Modeled Passage dim:  torch.Size([40, 53, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 53, 1000])
Span start logits:  torch.Size([40, 53])
span start probs dim:  torch.Size([40, 53])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 53]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 20])
Passage ques attention dim:  torch.Size([40, 102, 20])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 25])
Passage ques attention dim:  torch.Size([40, 126, 25])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 23])
Passage ques attention dim:  torch.Size([40, 103, 23])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 38, 200])
Embedded passage dim:  torch.Size([40, 49, 200])
Passage Length:  49
Encoded question dim:  torch.Size([40, 38, 200])
Encoded passage dim:  torch.Size([40, 49, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 49, 38])
Passage ques attention dim:  torch.Size([40, 49, 38])
Passage question vectors dim:  torch.Size([40, 49, 200])
Question Passage Similarity dim:  torch.Size([40, 49])
Question passage attention dim:  torch.Size([40, 49])
Final Merged Passage dim:  torch.Size([40, 49, 800])
Modeled Passage dim:  torch.Size([40, 49, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 49, 1000])
Span start logits:  torch.Size([40, 49])
span start probs dim:  torch.Size([40, 49])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 49]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 244, 200])
Passage Length:  244
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 244, 21])
Passage ques attention dim:  torch.Size([40, 244, 21])
Passage question vectors dim:  torch.Size([40, 244, 200])
Question Passage Similarity dim:  torch.Size([40, 244])
Question passage attention dim:  torch.Size([40, 244])
Final Merged Passage dim:  torch.Size([40, 244, 800])
Modeled Passage dim:  torch.Size([40, 244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 244, 1000])
Span start logits:  torch.Size([40, 244])
span start probs dim:  torch.Size([40, 244])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 244]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 77, 200])
Passage Length:  77
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 77, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 77, 19])
Passage ques attention dim:  torch.Size([40, 77, 19])
Passage question vectors dim:  torch.Size([40, 77, 200])
Question Passage Similarity dim:  torch.Size([40, 77])
Question passage attention dim:  torch.Size([40, 77])
Final Merged Passage dim:  torch.Size([40, 77, 800])
Modeled Passage dim:  torch.Size([40, 77, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 77, 1000])
Span start logits:  torch.Size([40, 77])
span start probs dim:  torch.Size([40, 77])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 77]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 305, 200])
Passage Length:  305
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 305, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 305, 19])
Passage ques attention dim:  torch.Size([40, 305, 19])
Passage question vectors dim:  torch.Size([40, 305, 200])
Question Passage Similarity dim:  torch.Size([40, 305])
Question passage attention dim:  torch.Size([40, 305])
Final Merged Passage dim:  torch.Size([40, 305, 800])
Modeled Passage dim:  torch.Size([40, 305, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 305, 1000])
Span start logits:  torch.Size([40, 305])
span start probs dim:  torch.Size([40, 305])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 305]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 20])
Passage ques attention dim:  torch.Size([40, 184, 20])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 67, 22])
Passage ques attention dim:  torch.Size([40, 67, 22])
Passage question vectors dim:  torch.Size([40, 67, 200])
Question Passage Similarity dim:  torch.Size([40, 67])
Question passage attention dim:  torch.Size([40, 67])
Final Merged Passage dim:  torch.Size([40, 67, 800])
Modeled Passage dim:  torch.Size([40, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 67, 1000])
Span start logits:  torch.Size([40, 67])
span start probs dim:  torch.Size([40, 67])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 67]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 29])
Passage ques attention dim:  torch.Size([40, 151, 29])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 15])
Passage ques attention dim:  torch.Size([40, 112, 15])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 17])
Passage ques attention dim:  torch.Size([40, 130, 17])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 217, 18])
Passage ques attention dim:  torch.Size([40, 217, 18])
Passage question vectors dim:  torch.Size([40, 217, 200])
Question Passage Similarity dim:  torch.Size([40, 217])
Question passage attention dim:  torch.Size([40, 217])
Final Merged Passage dim:  torch.Size([40, 217, 800])
Modeled Passage dim:  torch.Size([40, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 217, 1000])
Span start logits:  torch.Size([40, 217])
span start probs dim:  torch.Size([40, 217])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 217]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 22])
Passage ques attention dim:  torch.Size([40, 166, 22])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 211, 19])
Passage ques attention dim:  torch.Size([40, 211, 19])
Passage question vectors dim:  torch.Size([40, 211, 200])
Question Passage Similarity dim:  torch.Size([40, 211])
Question passage attention dim:  torch.Size([40, 211])
Final Merged Passage dim:  torch.Size([40, 211, 800])
Modeled Passage dim:  torch.Size([40, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 211, 1000])
Span start logits:  torch.Size([40, 211])
span start probs dim:  torch.Size([40, 211])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 211]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 19])
Passage ques attention dim:  torch.Size([40, 160, 19])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 27])
Passage ques attention dim:  torch.Size([40, 107, 27])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 21])
Passage ques attention dim:  torch.Size([40, 126, 21])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 19])
Passage ques attention dim:  torch.Size([40, 117, 19])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 21])
Passage ques attention dim:  torch.Size([40, 125, 21])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 22])
Passage ques attention dim:  torch.Size([40, 144, 22])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 21])
Passage ques attention dim:  torch.Size([40, 161, 21])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 22])
Passage ques attention dim:  torch.Size([40, 187, 22])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 246, 26])
Passage ques attention dim:  torch.Size([40, 246, 26])
Passage question vectors dim:  torch.Size([40, 246, 200])
Question Passage Similarity dim:  torch.Size([40, 246])
Question passage attention dim:  torch.Size([40, 246])
Final Merged Passage dim:  torch.Size([40, 246, 800])
Modeled Passage dim:  torch.Size([40, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 246, 1000])
Span start logits:  torch.Size([40, 246])
span start probs dim:  torch.Size([40, 246])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 246]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 326, 200])
Passage Length:  326
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 326, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 326, 25])
Passage ques attention dim:  torch.Size([40, 326, 25])
Passage question vectors dim:  torch.Size([40, 326, 200])
Question Passage Similarity dim:  torch.Size([40, 326])
Question passage attention dim:  torch.Size([40, 326])
Final Merged Passage dim:  torch.Size([40, 326, 800])
Modeled Passage dim:  torch.Size([40, 326, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 326, 1000])
Span start logits:  torch.Size([40, 326])
span start probs dim:  torch.Size([40, 326])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 326]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 17])
Passage ques attention dim:  torch.Size([40, 162, 17])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 21])
Passage ques attention dim:  torch.Size([40, 164, 21])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 26])
Passage ques attention dim:  torch.Size([40, 139, 26])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 19])
Passage ques attention dim:  torch.Size([40, 132, 19])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 72, 200])
Passage Length:  72
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 72, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 72, 19])
Passage ques attention dim:  torch.Size([40, 72, 19])
Passage question vectors dim:  torch.Size([40, 72, 200])
Question Passage Similarity dim:  torch.Size([40, 72])
Question passage attention dim:  torch.Size([40, 72])
Final Merged Passage dim:  torch.Size([40, 72, 800])
Modeled Passage dim:  torch.Size([40, 72, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 72, 1000])
Span start logits:  torch.Size([40, 72])
span start probs dim:  torch.Size([40, 72])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 72]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 19])
Passage ques attention dim:  torch.Size([40, 146, 19])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 281, 200])
Passage Length:  281
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 281, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 281, 24])
Passage ques attention dim:  torch.Size([40, 281, 24])
Passage question vectors dim:  torch.Size([40, 281, 200])
Question Passage Similarity dim:  torch.Size([40, 281])
Question passage attention dim:  torch.Size([40, 281])
Final Merged Passage dim:  torch.Size([40, 281, 800])
Modeled Passage dim:  torch.Size([40, 281, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 281, 1000])
Span start logits:  torch.Size([40, 281])
span start probs dim:  torch.Size([40, 281])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 281]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 54, 200])
Passage Length:  54
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 54, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 54, 17])
Passage ques attention dim:  torch.Size([40, 54, 17])
Passage question vectors dim:  torch.Size([40, 54, 200])
Question Passage Similarity dim:  torch.Size([40, 54])
Question passage attention dim:  torch.Size([40, 54])
Final Merged Passage dim:  torch.Size([40, 54, 800])
Modeled Passage dim:  torch.Size([40, 54, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 54, 1000])
Span start logits:  torch.Size([40, 54])
span start probs dim:  torch.Size([40, 54])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 54]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 22])
Passage ques attention dim:  torch.Size([40, 119, 22])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 19])
Passage ques attention dim:  torch.Size([40, 137, 19])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 26])
Passage ques attention dim:  torch.Size([40, 184, 26])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 17])
Passage ques attention dim:  torch.Size([40, 184, 17])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 20])
Passage ques attention dim:  torch.Size([40, 168, 20])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 25])
Passage ques attention dim:  torch.Size([40, 114, 25])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 24])
Passage ques attention dim:  torch.Size([40, 196, 24])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 55, 200])
Passage Length:  55
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 55, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 55, 24])
Passage ques attention dim:  torch.Size([40, 55, 24])
Passage question vectors dim:  torch.Size([40, 55, 200])
Question Passage Similarity dim:  torch.Size([40, 55])
Question passage attention dim:  torch.Size([40, 55])
Final Merged Passage dim:  torch.Size([40, 55, 800])
Modeled Passage dim:  torch.Size([40, 55, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 55, 1000])
Span start logits:  torch.Size([40, 55])
span start probs dim:  torch.Size([40, 55])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 55]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 19])
Passage ques attention dim:  torch.Size([40, 173, 19])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 19])
Passage ques attention dim:  torch.Size([40, 141, 19])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 26])
Passage ques attention dim:  torch.Size([40, 215, 26])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 20])
Passage ques attention dim:  torch.Size([40, 96, 20])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 22])
Passage ques attention dim:  torch.Size([40, 132, 22])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 29])
Passage ques attention dim:  torch.Size([40, 182, 29])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 20])
Passage ques attention dim:  torch.Size([40, 106, 20])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 21])
Passage ques attention dim:  torch.Size([40, 105, 21])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 24])
Passage ques attention dim:  torch.Size([40, 146, 24])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 245, 26])
Passage ques attention dim:  torch.Size([40, 245, 26])
Passage question vectors dim:  torch.Size([40, 245, 200])
Question Passage Similarity dim:  torch.Size([40, 245])
Question passage attention dim:  torch.Size([40, 245])
Final Merged Passage dim:  torch.Size([40, 245, 800])
Modeled Passage dim:  torch.Size([40, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 245, 1000])
Span start logits:  torch.Size([40, 245])
span start probs dim:  torch.Size([40, 245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 27])
Passage ques attention dim:  torch.Size([40, 109, 27])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 25])
Passage ques attention dim:  torch.Size([40, 114, 25])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 264, 200])
Passage Length:  264
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 264, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 264, 22])
Passage ques attention dim:  torch.Size([40, 264, 22])
Passage question vectors dim:  torch.Size([40, 264, 200])
Question Passage Similarity dim:  torch.Size([40, 264])
Question passage attention dim:  torch.Size([40, 264])
Final Merged Passage dim:  torch.Size([40, 264, 800])
Modeled Passage dim:  torch.Size([40, 264, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 264, 1000])
Span start logits:  torch.Size([40, 264])
span start probs dim:  torch.Size([40, 264])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 264]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 25])
Passage ques attention dim:  torch.Size([40, 144, 25])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 88, 21])
Passage ques attention dim:  torch.Size([40, 88, 21])
Passage question vectors dim:  torch.Size([40, 88, 200])
Question Passage Similarity dim:  torch.Size([40, 88])
Question passage attention dim:  torch.Size([40, 88])
Final Merged Passage dim:  torch.Size([40, 88, 800])
Modeled Passage dim:  torch.Size([40, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 88, 1000])
Span start logits:  torch.Size([40, 88])
span start probs dim:  torch.Size([40, 88])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 88]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 22])
Passage ques attention dim:  torch.Size([40, 160, 22])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 22])
Passage ques attention dim:  torch.Size([40, 115, 22])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 20])
Passage ques attention dim:  torch.Size([40, 124, 20])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 63, 200])
Passage Length:  63
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 63, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 63, 24])
Passage ques attention dim:  torch.Size([40, 63, 24])
Passage question vectors dim:  torch.Size([40, 63, 200])
Question Passage Similarity dim:  torch.Size([40, 63])
Question passage attention dim:  torch.Size([40, 63])
Final Merged Passage dim:  torch.Size([40, 63, 800])
Modeled Passage dim:  torch.Size([40, 63, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 63, 1000])
Span start logits:  torch.Size([40, 63])
span start probs dim:  torch.Size([40, 63])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 63]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 21])
Passage ques attention dim:  torch.Size([40, 150, 21])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 22])
Passage ques attention dim:  torch.Size([40, 105, 22])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 18])
Passage ques attention dim:  torch.Size([40, 160, 18])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 25])
Passage ques attention dim:  torch.Size([40, 165, 25])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 23])
Passage ques attention dim:  torch.Size([40, 123, 23])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 23])
Passage ques attention dim:  torch.Size([40, 180, 23])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 19])
Passage ques attention dim:  torch.Size([40, 136, 19])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 21])
Passage ques attention dim:  torch.Size([40, 105, 21])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 226, 19])
Passage ques attention dim:  torch.Size([40, 226, 19])
Passage question vectors dim:  torch.Size([40, 226, 200])
Question Passage Similarity dim:  torch.Size([40, 226])
Question passage attention dim:  torch.Size([40, 226])
Final Merged Passage dim:  torch.Size([40, 226, 800])
Modeled Passage dim:  torch.Size([40, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 226, 1000])
Span start logits:  torch.Size([40, 226])
span start probs dim:  torch.Size([40, 226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 30])
Passage ques attention dim:  torch.Size([40, 154, 30])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 22])
Passage ques attention dim:  torch.Size([40, 137, 22])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 20])
Passage ques attention dim:  torch.Size([40, 127, 20])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 18])
Passage ques attention dim:  torch.Size([40, 107, 18])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 82, 22])
Passage ques attention dim:  torch.Size([40, 82, 22])
Passage question vectors dim:  torch.Size([40, 82, 200])
Question Passage Similarity dim:  torch.Size([40, 82])
Question passage attention dim:  torch.Size([40, 82])
Final Merged Passage dim:  torch.Size([40, 82, 800])
Modeled Passage dim:  torch.Size([40, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 82, 1000])
Span start logits:  torch.Size([40, 82])
span start probs dim:  torch.Size([40, 82])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 82]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 17])
Passage ques attention dim:  torch.Size([40, 158, 17])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 22])
Passage ques attention dim:  torch.Size([40, 122, 22])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 23])
Passage ques attention dim:  torch.Size([40, 118, 23])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 21])
Passage ques attention dim:  torch.Size([40, 173, 21])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 20])
Passage ques attention dim:  torch.Size([40, 167, 20])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 78, 200])
Passage Length:  78
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 78, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 78, 20])
Passage ques attention dim:  torch.Size([40, 78, 20])
Passage question vectors dim:  torch.Size([40, 78, 200])
Question Passage Similarity dim:  torch.Size([40, 78])
Question passage attention dim:  torch.Size([40, 78])
Final Merged Passage dim:  torch.Size([40, 78, 800])
Modeled Passage dim:  torch.Size([40, 78, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 78, 1000])
Span start logits:  torch.Size([40, 78])
span start probs dim:  torch.Size([40, 78])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 78]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 19])
Passage ques attention dim:  torch.Size([40, 178, 19])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 282, 200])
Passage Length:  282
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 282, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 282, 20])
Passage ques attention dim:  torch.Size([40, 282, 20])
Passage question vectors dim:  torch.Size([40, 282, 200])
Question Passage Similarity dim:  torch.Size([40, 282])
Question passage attention dim:  torch.Size([40, 282])
Final Merged Passage dim:  torch.Size([40, 282, 800])
Modeled Passage dim:  torch.Size([40, 282, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 282, 1000])
Span start logits:  torch.Size([40, 282])
span start probs dim:  torch.Size([40, 282])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 282]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 245, 18])
Passage ques attention dim:  torch.Size([40, 245, 18])
Passage question vectors dim:  torch.Size([40, 245, 200])
Question Passage Similarity dim:  torch.Size([40, 245])
Question passage attention dim:  torch.Size([40, 245])
Final Merged Passage dim:  torch.Size([40, 245, 800])
Modeled Passage dim:  torch.Size([40, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 245, 1000])
Span start logits:  torch.Size([40, 245])
span start probs dim:  torch.Size([40, 245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 211, 19])
Passage ques attention dim:  torch.Size([40, 211, 19])
Passage question vectors dim:  torch.Size([40, 211, 200])
Question Passage Similarity dim:  torch.Size([40, 211])
Question passage attention dim:  torch.Size([40, 211])
Final Merged Passage dim:  torch.Size([40, 211, 800])
Modeled Passage dim:  torch.Size([40, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 211, 1000])
Span start logits:  torch.Size([40, 211])
span start probs dim:  torch.Size([40, 211])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 211]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 19])
Passage ques attention dim:  torch.Size([40, 173, 19])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 19])
Passage ques attention dim:  torch.Size([40, 126, 19])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 19])
Passage ques attention dim:  torch.Size([40, 136, 19])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 23])
Passage ques attention dim:  torch.Size([40, 138, 23])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 20])
Passage ques attention dim:  torch.Size([40, 134, 20])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 241, 200])
Passage Length:  241
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 241, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 241, 18])
Passage ques attention dim:  torch.Size([40, 241, 18])
Passage question vectors dim:  torch.Size([40, 241, 200])
Question Passage Similarity dim:  torch.Size([40, 241])
Question passage attention dim:  torch.Size([40, 241])
Final Merged Passage dim:  torch.Size([40, 241, 800])
Modeled Passage dim:  torch.Size([40, 241, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 241, 1000])
Span start logits:  torch.Size([40, 241])
span start probs dim:  torch.Size([40, 241])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 241]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 21])
Passage ques attention dim:  torch.Size([40, 159, 21])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 207, 22])
Passage ques attention dim:  torch.Size([40, 207, 22])
Passage question vectors dim:  torch.Size([40, 207, 200])
Question Passage Similarity dim:  torch.Size([40, 207])
Question passage attention dim:  torch.Size([40, 207])
Final Merged Passage dim:  torch.Size([40, 207, 800])
Modeled Passage dim:  torch.Size([40, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 207, 1000])
Span start logits:  torch.Size([40, 207])
span start probs dim:  torch.Size([40, 207])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 207]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 17])
Passage ques attention dim:  torch.Size([40, 150, 17])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 80, 200])
Passage Length:  80
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 80, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 80, 26])
Passage ques attention dim:  torch.Size([40, 80, 26])
Passage question vectors dim:  torch.Size([40, 80, 200])
Question Passage Similarity dim:  torch.Size([40, 80])
Question passage attention dim:  torch.Size([40, 80])
Final Merged Passage dim:  torch.Size([40, 80, 800])
Modeled Passage dim:  torch.Size([40, 80, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 80, 1000])
Span start logits:  torch.Size([40, 80])
span start probs dim:  torch.Size([40, 80])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 80]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 229, 20])
Passage ques attention dim:  torch.Size([40, 229, 20])
Passage question vectors dim:  torch.Size([40, 229, 200])
Question Passage Similarity dim:  torch.Size([40, 229])
Question passage attention dim:  torch.Size([40, 229])
Final Merged Passage dim:  torch.Size([40, 229, 800])
Modeled Passage dim:  torch.Size([40, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 229, 1000])
Span start logits:  torch.Size([40, 229])
span start probs dim:  torch.Size([40, 229])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 229]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 26])
Passage ques attention dim:  torch.Size([40, 104, 26])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 21])
Passage ques attention dim:  torch.Size([40, 127, 21])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 18])
Passage ques attention dim:  torch.Size([40, 129, 18])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 343, 18])
Passage ques attention dim:  torch.Size([40, 343, 18])
Passage question vectors dim:  torch.Size([40, 343, 200])
Question Passage Similarity dim:  torch.Size([40, 343])
Question passage attention dim:  torch.Size([40, 343])
Final Merged Passage dim:  torch.Size([40, 343, 800])
Modeled Passage dim:  torch.Size([40, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 343, 1000])
Span start logits:  torch.Size([40, 343])
span start probs dim:  torch.Size([40, 343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 28])
Passage ques attention dim:  torch.Size([40, 140, 28])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 21])
Passage ques attention dim:  torch.Size([40, 189, 21])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 21])
Passage ques attention dim:  torch.Size([40, 124, 21])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 19])
Passage ques attention dim:  torch.Size([40, 120, 19])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 46, 200])
Passage Length:  46
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 46, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 46, 22])
Passage ques attention dim:  torch.Size([40, 46, 22])
Passage question vectors dim:  torch.Size([40, 46, 200])
Question Passage Similarity dim:  torch.Size([40, 46])
Question passage attention dim:  torch.Size([40, 46])
Final Merged Passage dim:  torch.Size([40, 46, 800])
Modeled Passage dim:  torch.Size([40, 46, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 46, 1000])
Span start logits:  torch.Size([40, 46])
span start probs dim:  torch.Size([40, 46])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 46]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 93, 20])
Passage ques attention dim:  torch.Size([40, 93, 20])
Passage question vectors dim:  torch.Size([40, 93, 200])
Question Passage Similarity dim:  torch.Size([40, 93])
Question passage attention dim:  torch.Size([40, 93])
Final Merged Passage dim:  torch.Size([40, 93, 800])
Modeled Passage dim:  torch.Size([40, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 93, 1000])
Span start logits:  torch.Size([40, 93])
span start probs dim:  torch.Size([40, 93])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 93]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 257, 200])
Passage Length:  257
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 257, 23])
Passage ques attention dim:  torch.Size([40, 257, 23])
Passage question vectors dim:  torch.Size([40, 257, 200])
Question Passage Similarity dim:  torch.Size([40, 257])
Question passage attention dim:  torch.Size([40, 257])
Final Merged Passage dim:  torch.Size([40, 257, 800])
Modeled Passage dim:  torch.Size([40, 257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 257, 1000])
Span start logits:  torch.Size([40, 257])
span start probs dim:  torch.Size([40, 257])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 257]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 236, 200])
Passage Length:  236
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 236, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 236, 21])
Passage ques attention dim:  torch.Size([40, 236, 21])
Passage question vectors dim:  torch.Size([40, 236, 200])
Question Passage Similarity dim:  torch.Size([40, 236])
Question passage attention dim:  torch.Size([40, 236])
Final Merged Passage dim:  torch.Size([40, 236, 800])
Modeled Passage dim:  torch.Size([40, 236, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 236, 1000])
Span start logits:  torch.Size([40, 236])
span start probs dim:  torch.Size([40, 236])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 236]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 28])
Passage ques attention dim:  torch.Size([40, 180, 28])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 193, 20])
Passage ques attention dim:  torch.Size([40, 193, 20])
Passage question vectors dim:  torch.Size([40, 193, 200])
Question Passage Similarity dim:  torch.Size([40, 193])
Question passage attention dim:  torch.Size([40, 193])
Final Merged Passage dim:  torch.Size([40, 193, 800])
Modeled Passage dim:  torch.Size([40, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 193, 1000])
Span start logits:  torch.Size([40, 193])
span start probs dim:  torch.Size([40, 193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 24])
Passage ques attention dim:  torch.Size([40, 129, 24])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 62, 200])
Passage Length:  62
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 62, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 62, 23])
Passage ques attention dim:  torch.Size([40, 62, 23])
Passage question vectors dim:  torch.Size([40, 62, 200])
Question Passage Similarity dim:  torch.Size([40, 62])
Question passage attention dim:  torch.Size([40, 62])
Final Merged Passage dim:  torch.Size([40, 62, 800])
Modeled Passage dim:  torch.Size([40, 62, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 62, 1000])
Span start logits:  torch.Size([40, 62])
span start probs dim:  torch.Size([40, 62])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 62]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 17])
Passage ques attention dim:  torch.Size([40, 148, 17])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 226, 22])
Passage ques attention dim:  torch.Size([40, 226, 22])
Passage question vectors dim:  torch.Size([40, 226, 200])
Question Passage Similarity dim:  torch.Size([40, 226])
Question passage attention dim:  torch.Size([40, 226])
Final Merged Passage dim:  torch.Size([40, 226, 800])
Modeled Passage dim:  torch.Size([40, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 226, 1000])
Span start logits:  torch.Size([40, 226])
span start probs dim:  torch.Size([40, 226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 22])
Passage ques attention dim:  torch.Size([40, 165, 22])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 27])
Passage ques attention dim:  torch.Size([40, 150, 27])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 229, 21])
Passage ques attention dim:  torch.Size([40, 229, 21])
Passage question vectors dim:  torch.Size([40, 229, 200])
Question Passage Similarity dim:  torch.Size([40, 229])
Question passage attention dim:  torch.Size([40, 229])
Final Merged Passage dim:  torch.Size([40, 229, 800])
Modeled Passage dim:  torch.Size([40, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 229, 1000])
Span start logits:  torch.Size([40, 229])
span start probs dim:  torch.Size([40, 229])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 229]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 22])
Passage ques attention dim:  torch.Size([40, 182, 22])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 192, 24])
Passage ques attention dim:  torch.Size([40, 192, 24])
Passage question vectors dim:  torch.Size([40, 192, 200])
Question Passage Similarity dim:  torch.Size([40, 192])
Question passage attention dim:  torch.Size([40, 192])
Final Merged Passage dim:  torch.Size([40, 192, 800])
Modeled Passage dim:  torch.Size([40, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 192, 1000])
Span start logits:  torch.Size([40, 192])
span start probs dim:  torch.Size([40, 192])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 192]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 28])
Passage ques attention dim:  torch.Size([40, 186, 28])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 58, 200])
Passage Length:  58
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 58, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 58, 21])
Passage ques attention dim:  torch.Size([40, 58, 21])
Passage question vectors dim:  torch.Size([40, 58, 200])
Question Passage Similarity dim:  torch.Size([40, 58])
Question passage attention dim:  torch.Size([40, 58])
Final Merged Passage dim:  torch.Size([40, 58, 800])
Modeled Passage dim:  torch.Size([40, 58, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 58, 1000])
Span start logits:  torch.Size([40, 58])
span start probs dim:  torch.Size([40, 58])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 58]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 19])
Passage ques attention dim:  torch.Size([40, 163, 19])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 211, 18])
Passage ques attention dim:  torch.Size([40, 211, 18])
Passage question vectors dim:  torch.Size([40, 211, 200])
Question Passage Similarity dim:  torch.Size([40, 211])
Question passage attention dim:  torch.Size([40, 211])
Final Merged Passage dim:  torch.Size([40, 211, 800])
Modeled Passage dim:  torch.Size([40, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 211, 1000])
Span start logits:  torch.Size([40, 211])
span start probs dim:  torch.Size([40, 211])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 211]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 22])
Passage ques attention dim:  torch.Size([40, 132, 22])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 233, 200])
Passage Length:  233
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 233, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 233, 21])
Passage ques attention dim:  torch.Size([40, 233, 21])
Passage question vectors dim:  torch.Size([40, 233, 200])
Question Passage Similarity dim:  torch.Size([40, 233])
Question passage attention dim:  torch.Size([40, 233])
Final Merged Passage dim:  torch.Size([40, 233, 800])
Modeled Passage dim:  torch.Size([40, 233, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 233, 1000])
Span start logits:  torch.Size([40, 233])
span start probs dim:  torch.Size([40, 233])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 233]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 21])
Passage ques attention dim:  torch.Size([40, 131, 21])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 73, 30])
Passage ques attention dim:  torch.Size([40, 73, 30])
Passage question vectors dim:  torch.Size([40, 73, 200])
Question Passage Similarity dim:  torch.Size([40, 73])
Question passage attention dim:  torch.Size([40, 73])
Final Merged Passage dim:  torch.Size([40, 73, 800])
Modeled Passage dim:  torch.Size([40, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 73, 1000])
Span start logits:  torch.Size([40, 73])
span start probs dim:  torch.Size([40, 73])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 73]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 22])
Passage ques attention dim:  torch.Size([40, 130, 22])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 22])
Passage ques attention dim:  torch.Size([40, 157, 22])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 21])
Passage ques attention dim:  torch.Size([40, 143, 21])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 28])
Passage ques attention dim:  torch.Size([40, 113, 28])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 40, 200])
Passage Length:  40
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 40, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 40, 23])
Passage ques attention dim:  torch.Size([40, 40, 23])
Passage question vectors dim:  torch.Size([40, 40, 200])
Question Passage Similarity dim:  torch.Size([40, 40])
Question passage attention dim:  torch.Size([40, 40])
Final Merged Passage dim:  torch.Size([40, 40, 800])
Modeled Passage dim:  torch.Size([40, 40, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 40, 1000])
Span start logits:  torch.Size([40, 40])
span start probs dim:  torch.Size([40, 40])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 40]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 21])
Passage ques attention dim:  torch.Size([40, 112, 21])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 23])
Passage ques attention dim:  torch.Size([40, 142, 23])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 17])
Passage ques attention dim:  torch.Size([40, 165, 17])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 21])
Passage ques attention dim:  torch.Size([40, 98, 21])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 280, 200])
Passage Length:  280
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 280, 29])
Passage ques attention dim:  torch.Size([40, 280, 29])
Passage question vectors dim:  torch.Size([40, 280, 200])
Question Passage Similarity dim:  torch.Size([40, 280])
Question passage attention dim:  torch.Size([40, 280])
Final Merged Passage dim:  torch.Size([40, 280, 800])
Modeled Passage dim:  torch.Size([40, 280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 280, 1000])
Span start logits:  torch.Size([40, 280])
span start probs dim:  torch.Size([40, 280])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 280]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 18])
Passage ques attention dim:  torch.Size([40, 122, 18])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 19])
Passage ques attention dim:  torch.Size([40, 139, 19])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 86, 24])
Passage ques attention dim:  torch.Size([40, 86, 24])
Passage question vectors dim:  torch.Size([40, 86, 200])
Question Passage Similarity dim:  torch.Size([40, 86])
Question passage attention dim:  torch.Size([40, 86])
Final Merged Passage dim:  torch.Size([40, 86, 800])
Modeled Passage dim:  torch.Size([40, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 86, 1000])
Span start logits:  torch.Size([40, 86])
span start probs dim:  torch.Size([40, 86])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 86]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 27])
Passage ques attention dim:  torch.Size([40, 139, 27])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 18])
Passage ques attention dim:  torch.Size([40, 108, 18])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 24])
Passage ques attention dim:  torch.Size([40, 107, 24])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 304, 200])
Passage Length:  304
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 304, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 304, 25])
Passage ques attention dim:  torch.Size([40, 304, 25])
Passage question vectors dim:  torch.Size([40, 304, 200])
Question Passage Similarity dim:  torch.Size([40, 304])
Question passage attention dim:  torch.Size([40, 304])
Final Merged Passage dim:  torch.Size([40, 304, 800])
Modeled Passage dim:  torch.Size([40, 304, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 304, 1000])
Span start logits:  torch.Size([40, 304])
span start probs dim:  torch.Size([40, 304])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 304]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 32])
Passage ques attention dim:  torch.Size([40, 124, 32])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 23])
Passage ques attention dim:  torch.Size([40, 160, 23])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 270, 200])
Passage Length:  270
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 270, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 270, 22])
Passage ques attention dim:  torch.Size([40, 270, 22])
Passage question vectors dim:  torch.Size([40, 270, 200])
Question Passage Similarity dim:  torch.Size([40, 270])
Question passage attention dim:  torch.Size([40, 270])
Final Merged Passage dim:  torch.Size([40, 270, 800])
Modeled Passage dim:  torch.Size([40, 270, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 270, 1000])
Span start logits:  torch.Size([40, 270])
span start probs dim:  torch.Size([40, 270])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 270]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 20])
Passage ques attention dim:  torch.Size([40, 98, 20])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 19])
Passage ques attention dim:  torch.Size([40, 168, 19])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 272, 200])
Passage Length:  272
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 272, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 272, 22])
Passage ques attention dim:  torch.Size([40, 272, 22])
Passage question vectors dim:  torch.Size([40, 272, 200])
Question Passage Similarity dim:  torch.Size([40, 272])
Question passage attention dim:  torch.Size([40, 272])
Final Merged Passage dim:  torch.Size([40, 272, 800])
Modeled Passage dim:  torch.Size([40, 272, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 272, 1000])
Span start logits:  torch.Size([40, 272])
span start probs dim:  torch.Size([40, 272])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 272]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 17])
Passage ques attention dim:  torch.Size([40, 115, 17])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 21])
Passage ques attention dim:  torch.Size([40, 126, 21])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 18])
Passage ques attention dim:  torch.Size([40, 208, 18])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 361, 18])
Passage ques attention dim:  torch.Size([40, 361, 18])
Passage question vectors dim:  torch.Size([40, 361, 200])
Question Passage Similarity dim:  torch.Size([40, 361])
Question passage attention dim:  torch.Size([40, 361])
Final Merged Passage dim:  torch.Size([40, 361, 800])
Modeled Passage dim:  torch.Size([40, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 361, 1000])
Span start logits:  torch.Size([40, 361])
span start probs dim:  torch.Size([40, 361])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 361]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 20])
Passage ques attention dim:  torch.Size([40, 124, 20])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 16])
Passage ques attention dim:  torch.Size([40, 153, 16])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 277, 200])
Passage Length:  277
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 277, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 277, 20])
Passage ques attention dim:  torch.Size([40, 277, 20])
Passage question vectors dim:  torch.Size([40, 277, 200])
Question Passage Similarity dim:  torch.Size([40, 277])
Question passage attention dim:  torch.Size([40, 277])
Final Merged Passage dim:  torch.Size([40, 277, 800])
Modeled Passage dim:  torch.Size([40, 277, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 277, 1000])
Span start logits:  torch.Size([40, 277])
span start probs dim:  torch.Size([40, 277])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 277]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 21])
Passage ques attention dim:  torch.Size([40, 109, 21])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 17])
Passage ques attention dim:  torch.Size([40, 159, 17])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 19])
Passage ques attention dim:  torch.Size([40, 143, 19])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 17])
Passage ques attention dim:  torch.Size([40, 102, 17])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 29, 200])
Passage Length:  29
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 29, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 29, 26])
Passage ques attention dim:  torch.Size([40, 29, 26])
Passage question vectors dim:  torch.Size([40, 29, 200])
Question Passage Similarity dim:  torch.Size([40, 29])
Question passage attention dim:  torch.Size([40, 29])
Final Merged Passage dim:  torch.Size([40, 29, 800])
Modeled Passage dim:  torch.Size([40, 29, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 29, 1000])
Span start logits:  torch.Size([40, 29])
span start probs dim:  torch.Size([40, 29])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 29]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 26])
Passage ques attention dim:  torch.Size([40, 169, 26])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 23])
Passage ques attention dim:  torch.Size([40, 174, 23])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 50, 200])
Passage Length:  50
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 50, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 50, 24])
Passage ques attention dim:  torch.Size([40, 50, 24])
Passage question vectors dim:  torch.Size([40, 50, 200])
Question Passage Similarity dim:  torch.Size([40, 50])
Question passage attention dim:  torch.Size([40, 50])
Final Merged Passage dim:  torch.Size([40, 50, 800])
Modeled Passage dim:  torch.Size([40, 50, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 50, 1000])
Span start logits:  torch.Size([40, 50])
span start probs dim:  torch.Size([40, 50])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 50]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 19])
Passage ques attention dim:  torch.Size([40, 122, 19])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 28])
Passage ques attention dim:  torch.Size([40, 150, 28])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 20])
Passage ques attention dim:  torch.Size([40, 150, 20])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 26])
Passage ques attention dim:  torch.Size([40, 215, 26])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 28])
Passage ques attention dim:  torch.Size([40, 111, 28])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 28])
Passage ques attention dim:  torch.Size([40, 101, 28])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 223, 200])
Passage Length:  223
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 223, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 223, 21])
Passage ques attention dim:  torch.Size([40, 223, 21])
Passage question vectors dim:  torch.Size([40, 223, 200])
Question Passage Similarity dim:  torch.Size([40, 223])
Question passage attention dim:  torch.Size([40, 223])
Final Merged Passage dim:  torch.Size([40, 223, 800])
Modeled Passage dim:  torch.Size([40, 223, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 223, 1000])
Span start logits:  torch.Size([40, 223])
span start probs dim:  torch.Size([40, 223])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 223]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 19])
Passage ques attention dim:  torch.Size([40, 163, 19])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 22])
Passage ques attention dim:  torch.Size([40, 101, 22])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 211, 24])
Passage ques attention dim:  torch.Size([40, 211, 24])
Passage question vectors dim:  torch.Size([40, 211, 200])
Question Passage Similarity dim:  torch.Size([40, 211])
Question passage attention dim:  torch.Size([40, 211])
Final Merged Passage dim:  torch.Size([40, 211, 800])
Modeled Passage dim:  torch.Size([40, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 211, 1000])
Span start logits:  torch.Size([40, 211])
span start probs dim:  torch.Size([40, 211])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 211]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 75, 33])
Passage ques attention dim:  torch.Size([40, 75, 33])
Passage question vectors dim:  torch.Size([40, 75, 200])
Question Passage Similarity dim:  torch.Size([40, 75])
Question passage attention dim:  torch.Size([40, 75])
Final Merged Passage dim:  torch.Size([40, 75, 800])
Modeled Passage dim:  torch.Size([40, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 75, 1000])
Span start logits:  torch.Size([40, 75])
span start probs dim:  torch.Size([40, 75])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 75]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 20])
Passage ques attention dim:  torch.Size([40, 130, 20])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 26])
Passage ques attention dim:  torch.Size([40, 163, 26])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 253, 200])
Passage Length:  253
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 253, 18])
Passage ques attention dim:  torch.Size([40, 253, 18])
Passage question vectors dim:  torch.Size([40, 253, 200])
Question Passage Similarity dim:  torch.Size([40, 253])
Question passage attention dim:  torch.Size([40, 253])
Final Merged Passage dim:  torch.Size([40, 253, 800])
Modeled Passage dim:  torch.Size([40, 253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 253, 1000])
Span start logits:  torch.Size([40, 253])
span start probs dim:  torch.Size([40, 253])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 253]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 20])
Passage ques attention dim:  torch.Size([40, 119, 20])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 21])
Passage ques attention dim:  torch.Size([40, 153, 21])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 25])
Passage ques attention dim:  torch.Size([40, 138, 25])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 17])
Passage ques attention dim:  torch.Size([40, 130, 17])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 56, 200])
Passage Length:  56
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 56, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 56, 29])
Passage ques attention dim:  torch.Size([40, 56, 29])
Passage question vectors dim:  torch.Size([40, 56, 200])
Question Passage Similarity dim:  torch.Size([40, 56])
Question passage attention dim:  torch.Size([40, 56])
Final Merged Passage dim:  torch.Size([40, 56, 800])
Modeled Passage dim:  torch.Size([40, 56, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 56, 1000])
Span start logits:  torch.Size([40, 56])
span start probs dim:  torch.Size([40, 56])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 56]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 199, 21])
Passage ques attention dim:  torch.Size([40, 199, 21])
Passage question vectors dim:  torch.Size([40, 199, 200])
Question Passage Similarity dim:  torch.Size([40, 199])
Question passage attention dim:  torch.Size([40, 199])
Final Merged Passage dim:  torch.Size([40, 199, 800])
Modeled Passage dim:  torch.Size([40, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 199, 1000])
Span start logits:  torch.Size([40, 199])
span start probs dim:  torch.Size([40, 199])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 199]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 238, 19])
Passage ques attention dim:  torch.Size([40, 238, 19])
Passage question vectors dim:  torch.Size([40, 238, 200])
Question Passage Similarity dim:  torch.Size([40, 238])
Question passage attention dim:  torch.Size([40, 238])
Final Merged Passage dim:  torch.Size([40, 238, 800])
Modeled Passage dim:  torch.Size([40, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 238, 1000])
Span start logits:  torch.Size([40, 238])
span start probs dim:  torch.Size([40, 238])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 238]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 19])
Passage ques attention dim:  torch.Size([40, 109, 19])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 248, 200])
Passage Length:  248
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 248, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 248, 22])
Passage ques attention dim:  torch.Size([40, 248, 22])
Passage question vectors dim:  torch.Size([40, 248, 200])
Question Passage Similarity dim:  torch.Size([40, 248])
Question passage attention dim:  torch.Size([40, 248])
Final Merged Passage dim:  torch.Size([40, 248, 800])
Modeled Passage dim:  torch.Size([40, 248, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 248, 1000])
Span start logits:  torch.Size([40, 248])
span start probs dim:  torch.Size([40, 248])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 248]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 252, 200])
Passage Length:  252
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 252, 25])
Passage ques attention dim:  torch.Size([40, 252, 25])
Passage question vectors dim:  torch.Size([40, 252, 200])
Question Passage Similarity dim:  torch.Size([40, 252])
Question passage attention dim:  torch.Size([40, 252])
Final Merged Passage dim:  torch.Size([40, 252, 800])
Modeled Passage dim:  torch.Size([40, 252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 252, 1000])
Span start logits:  torch.Size([40, 252])
span start probs dim:  torch.Size([40, 252])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 252]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 25])
Passage ques attention dim:  torch.Size([40, 167, 25])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 23])
Passage ques attention dim:  torch.Size([40, 198, 23])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 22])
Passage ques attention dim:  torch.Size([40, 151, 22])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 23])
Passage ques attention dim:  torch.Size([40, 101, 23])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 20])
Passage ques attention dim:  torch.Size([40, 109, 20])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 197, 19])
Passage ques attention dim:  torch.Size([40, 197, 19])
Passage question vectors dim:  torch.Size([40, 197, 200])
Question Passage Similarity dim:  torch.Size([40, 197])
Question passage attention dim:  torch.Size([40, 197])
Final Merged Passage dim:  torch.Size([40, 197, 800])
Modeled Passage dim:  torch.Size([40, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 197, 1000])
Span start logits:  torch.Size([40, 197])
span start probs dim:  torch.Size([40, 197])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 197]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 276, 200])
Passage Length:  276
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 276, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 276, 23])
Passage ques attention dim:  torch.Size([40, 276, 23])
Passage question vectors dim:  torch.Size([40, 276, 200])
Question Passage Similarity dim:  torch.Size([40, 276])
Question passage attention dim:  torch.Size([40, 276])
Final Merged Passage dim:  torch.Size([40, 276, 800])
Modeled Passage dim:  torch.Size([40, 276, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 276, 1000])
Span start logits:  torch.Size([40, 276])
span start probs dim:  torch.Size([40, 276])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 276]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 24])
Passage ques attention dim:  torch.Size([40, 128, 24])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 19])
Passage ques attention dim:  torch.Size([40, 182, 19])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 17])
Passage ques attention dim:  torch.Size([40, 130, 17])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 24])
Passage ques attention dim:  torch.Size([40, 149, 24])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 23])
Passage ques attention dim:  torch.Size([40, 141, 23])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 19])
Passage ques attention dim:  torch.Size([40, 204, 19])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 22])
Passage ques attention dim:  torch.Size([40, 162, 22])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 262, 200])
Passage Length:  262
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 262, 17])
Passage ques attention dim:  torch.Size([40, 262, 17])
Passage question vectors dim:  torch.Size([40, 262, 200])
Question Passage Similarity dim:  torch.Size([40, 262])
Question passage attention dim:  torch.Size([40, 262])
Final Merged Passage dim:  torch.Size([40, 262, 800])
Modeled Passage dim:  torch.Size([40, 262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 262, 1000])
Span start logits:  torch.Size([40, 262])
span start probs dim:  torch.Size([40, 262])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 262]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 28])
Passage ques attention dim:  torch.Size([40, 119, 28])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 227, 17])
Passage ques attention dim:  torch.Size([40, 227, 17])
Passage question vectors dim:  torch.Size([40, 227, 200])
Question Passage Similarity dim:  torch.Size([40, 227])
Question passage attention dim:  torch.Size([40, 227])
Final Merged Passage dim:  torch.Size([40, 227, 800])
Modeled Passage dim:  torch.Size([40, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 227, 1000])
Span start logits:  torch.Size([40, 227])
span start probs dim:  torch.Size([40, 227])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 227]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 18])
Passage ques attention dim:  torch.Size([40, 99, 18])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 25])
Passage ques attention dim:  torch.Size([40, 99, 25])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 212, 23])
Passage ques attention dim:  torch.Size([40, 212, 23])
Passage question vectors dim:  torch.Size([40, 212, 200])
Question Passage Similarity dim:  torch.Size([40, 212])
Question passage attention dim:  torch.Size([40, 212])
Final Merged Passage dim:  torch.Size([40, 212, 800])
Modeled Passage dim:  torch.Size([40, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 212, 1000])
Span start logits:  torch.Size([40, 212])
span start probs dim:  torch.Size([40, 212])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 212]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 20])
Passage ques attention dim:  torch.Size([40, 121, 20])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 23])
Passage ques attention dim:  torch.Size([40, 107, 23])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 20])
Passage ques attention dim:  torch.Size([40, 137, 20])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 21])
Passage ques attention dim:  torch.Size([40, 157, 21])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 26])
Passage ques attention dim:  torch.Size([40, 181, 26])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 202, 23])
Passage ques attention dim:  torch.Size([40, 202, 23])
Passage question vectors dim:  torch.Size([40, 202, 200])
Question Passage Similarity dim:  torch.Size([40, 202])
Question passage attention dim:  torch.Size([40, 202])
Final Merged Passage dim:  torch.Size([40, 202, 800])
Modeled Passage dim:  torch.Size([40, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 202, 1000])
Span start logits:  torch.Size([40, 202])
span start probs dim:  torch.Size([40, 202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 58, 200])
Passage Length:  58
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 58, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 58, 18])
Passage ques attention dim:  torch.Size([40, 58, 18])
Passage question vectors dim:  torch.Size([40, 58, 200])
Question Passage Similarity dim:  torch.Size([40, 58])
Question passage attention dim:  torch.Size([40, 58])
Final Merged Passage dim:  torch.Size([40, 58, 800])
Modeled Passage dim:  torch.Size([40, 58, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 58, 1000])
Span start logits:  torch.Size([40, 58])
span start probs dim:  torch.Size([40, 58])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 58]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 23])
Passage ques attention dim:  torch.Size([40, 128, 23])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 20])
Passage ques attention dim:  torch.Size([40, 133, 20])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 263, 200])
Passage Length:  263
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 263, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 263, 28])
Passage ques attention dim:  torch.Size([40, 263, 28])
Passage question vectors dim:  torch.Size([40, 263, 200])
Question Passage Similarity dim:  torch.Size([40, 263])
Question passage attention dim:  torch.Size([40, 263])
Final Merged Passage dim:  torch.Size([40, 263, 800])
Modeled Passage dim:  torch.Size([40, 263, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 263, 1000])
Span start logits:  torch.Size([40, 263])
span start probs dim:  torch.Size([40, 263])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 263]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 20])
Passage ques attention dim:  torch.Size([40, 127, 20])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 21])
Passage ques attention dim:  torch.Size([40, 161, 21])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 21])
Passage ques attention dim:  torch.Size([40, 180, 21])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 20])
Passage ques attention dim:  torch.Size([40, 122, 20])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 21])
Passage ques attention dim:  torch.Size([40, 180, 21])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 19])
Passage ques attention dim:  torch.Size([40, 104, 19])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 22])
Passage ques attention dim:  torch.Size([40, 133, 22])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 22])
Passage ques attention dim:  torch.Size([40, 152, 22])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 49, 200])
Passage Length:  49
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 49, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 49, 27])
Passage ques attention dim:  torch.Size([40, 49, 27])
Passage question vectors dim:  torch.Size([40, 49, 200])
Question Passage Similarity dim:  torch.Size([40, 49])
Question passage attention dim:  torch.Size([40, 49])
Final Merged Passage dim:  torch.Size([40, 49, 800])
Modeled Passage dim:  torch.Size([40, 49, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 49, 1000])
Span start logits:  torch.Size([40, 49])
span start probs dim:  torch.Size([40, 49])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 49]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 21])
Passage ques attention dim:  torch.Size([40, 114, 21])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 22])
Passage ques attention dim:  torch.Size([40, 172, 22])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 17])
Passage ques attention dim:  torch.Size([40, 156, 17])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 227, 21])
Passage ques attention dim:  torch.Size([40, 227, 21])
Passage question vectors dim:  torch.Size([40, 227, 200])
Question Passage Similarity dim:  torch.Size([40, 227])
Question passage attention dim:  torch.Size([40, 227])
Final Merged Passage dim:  torch.Size([40, 227, 800])
Modeled Passage dim:  torch.Size([40, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 227, 1000])
Span start logits:  torch.Size([40, 227])
span start probs dim:  torch.Size([40, 227])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 227]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 22])
Passage ques attention dim:  torch.Size([40, 208, 22])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 274, 200])
Passage Length:  274
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 274, 22])
Passage ques attention dim:  torch.Size([40, 274, 22])
Passage question vectors dim:  torch.Size([40, 274, 200])
Question Passage Similarity dim:  torch.Size([40, 274])
Question passage attention dim:  torch.Size([40, 274])
Final Merged Passage dim:  torch.Size([40, 274, 800])
Modeled Passage dim:  torch.Size([40, 274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 274, 1000])
Span start logits:  torch.Size([40, 274])
span start probs dim:  torch.Size([40, 274])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 274]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 18])
Passage ques attention dim:  torch.Size([40, 116, 18])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 44, 200])
Passage Length:  44
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 44, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 44, 29])
Passage ques attention dim:  torch.Size([40, 44, 29])
Passage question vectors dim:  torch.Size([40, 44, 200])
Question Passage Similarity dim:  torch.Size([40, 44])
Question passage attention dim:  torch.Size([40, 44])
Final Merged Passage dim:  torch.Size([40, 44, 800])
Modeled Passage dim:  torch.Size([40, 44, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 44, 1000])
Span start logits:  torch.Size([40, 44])
span start probs dim:  torch.Size([40, 44])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 44]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 22])
Passage ques attention dim:  torch.Size([40, 137, 22])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 18])
Passage ques attention dim:  torch.Size([40, 121, 18])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 21])
Passage ques attention dim:  torch.Size([40, 218, 21])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 291, 200])
Passage Length:  291
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 291, 19])
Passage ques attention dim:  torch.Size([40, 291, 19])
Passage question vectors dim:  torch.Size([40, 291, 200])
Question Passage Similarity dim:  torch.Size([40, 291])
Question passage attention dim:  torch.Size([40, 291])
Final Merged Passage dim:  torch.Size([40, 291, 800])
Modeled Passage dim:  torch.Size([40, 291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 291, 1000])
Span start logits:  torch.Size([40, 291])
span start probs dim:  torch.Size([40, 291])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 291]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 21])
Passage ques attention dim:  torch.Size([40, 138, 21])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 82, 16])
Passage ques attention dim:  torch.Size([40, 82, 16])
Passage question vectors dim:  torch.Size([40, 82, 200])
Question Passage Similarity dim:  torch.Size([40, 82])
Question passage attention dim:  torch.Size([40, 82])
Final Merged Passage dim:  torch.Size([40, 82, 800])
Modeled Passage dim:  torch.Size([40, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 82, 1000])
Span start logits:  torch.Size([40, 82])
span start probs dim:  torch.Size([40, 82])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 82]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 63, 200])
Passage Length:  63
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 63, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 63, 25])
Passage ques attention dim:  torch.Size([40, 63, 25])
Passage question vectors dim:  torch.Size([40, 63, 200])
Question Passage Similarity dim:  torch.Size([40, 63])
Question passage attention dim:  torch.Size([40, 63])
Final Merged Passage dim:  torch.Size([40, 63, 800])
Modeled Passage dim:  torch.Size([40, 63, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 63, 1000])
Span start logits:  torch.Size([40, 63])
span start probs dim:  torch.Size([40, 63])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 63]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 18])
Passage ques attention dim:  torch.Size([40, 138, 18])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 22])
Passage ques attention dim:  torch.Size([40, 100, 22])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 22])
Passage ques attention dim:  torch.Size([40, 184, 22])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 18])
Passage ques attention dim:  torch.Size([40, 158, 18])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 294, 200])
Passage Length:  294
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 294, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 294, 19])
Passage ques attention dim:  torch.Size([40, 294, 19])
Passage question vectors dim:  torch.Size([40, 294, 200])
Question Passage Similarity dim:  torch.Size([40, 294])
Question passage attention dim:  torch.Size([40, 294])
Final Merged Passage dim:  torch.Size([40, 294, 800])
Modeled Passage dim:  torch.Size([40, 294, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 294, 1000])
Span start logits:  torch.Size([40, 294])
span start probs dim:  torch.Size([40, 294])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 294]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 20])
Passage ques attention dim:  torch.Size([40, 117, 20])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 249, 200])
Passage Length:  249
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 249, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 249, 22])
Passage ques attention dim:  torch.Size([40, 249, 22])
Passage question vectors dim:  torch.Size([40, 249, 200])
Question Passage Similarity dim:  torch.Size([40, 249])
Question passage attention dim:  torch.Size([40, 249])
Final Merged Passage dim:  torch.Size([40, 249, 800])
Modeled Passage dim:  torch.Size([40, 249, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 249, 1000])
Span start logits:  torch.Size([40, 249])
span start probs dim:  torch.Size([40, 249])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 249]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 26])
Passage ques attention dim:  torch.Size([40, 141, 26])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 22])
Passage ques attention dim:  torch.Size([40, 106, 22])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 21])
Passage ques attention dim:  torch.Size([40, 128, 21])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 516, 200])
Passage Length:  516
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 516, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 516, 25])
Passage ques attention dim:  torch.Size([40, 516, 25])
Passage question vectors dim:  torch.Size([40, 516, 200])
Question Passage Similarity dim:  torch.Size([40, 516])
Question passage attention dim:  torch.Size([40, 516])
Final Merged Passage dim:  torch.Size([40, 516, 800])
Modeled Passage dim:  torch.Size([40, 516, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 516, 1000])
Span start logits:  torch.Size([40, 516])
span start probs dim:  torch.Size([40, 516])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 516]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 18])
Passage ques attention dim:  torch.Size([40, 175, 18])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 64, 21])
Passage ques attention dim:  torch.Size([40, 64, 21])
Passage question vectors dim:  torch.Size([40, 64, 200])
Question Passage Similarity dim:  torch.Size([40, 64])
Question passage attention dim:  torch.Size([40, 64])
Final Merged Passage dim:  torch.Size([40, 64, 800])
Modeled Passage dim:  torch.Size([40, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 64, 1000])
Span start logits:  torch.Size([40, 64])
span start probs dim:  torch.Size([40, 64])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 64]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 19])
Passage ques attention dim:  torch.Size([40, 131, 19])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 301, 28])
Passage ques attention dim:  torch.Size([40, 301, 28])
Passage question vectors dim:  torch.Size([40, 301, 200])
Question Passage Similarity dim:  torch.Size([40, 301])
Question passage attention dim:  torch.Size([40, 301])
Final Merged Passage dim:  torch.Size([40, 301, 800])
Modeled Passage dim:  torch.Size([40, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 301, 1000])
Span start logits:  torch.Size([40, 301])
span start probs dim:  torch.Size([40, 301])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 301]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 23])
Passage ques attention dim:  torch.Size([40, 132, 23])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 28])
Passage ques attention dim:  torch.Size([40, 122, 28])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 22])
Passage ques attention dim:  torch.Size([40, 113, 22])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 20])
Passage ques attention dim:  torch.Size([40, 189, 20])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 66, 200])
Passage Length:  66
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 66, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 66, 19])
Passage ques attention dim:  torch.Size([40, 66, 19])
Passage question vectors dim:  torch.Size([40, 66, 200])
Question Passage Similarity dim:  torch.Size([40, 66])
Question passage attention dim:  torch.Size([40, 66])
Final Merged Passage dim:  torch.Size([40, 66, 800])
Modeled Passage dim:  torch.Size([40, 66, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 66, 1000])
Span start logits:  torch.Size([40, 66])
span start probs dim:  torch.Size([40, 66])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 66]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 21])
Passage ques attention dim:  torch.Size([40, 143, 21])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 30])
Passage ques attention dim:  torch.Size([40, 154, 30])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 23])
Passage ques attention dim:  torch.Size([40, 129, 23])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 21])
Passage ques attention dim:  torch.Size([40, 161, 21])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 222, 17])
Passage ques attention dim:  torch.Size([40, 222, 17])
Passage question vectors dim:  torch.Size([40, 222, 200])
Question Passage Similarity dim:  torch.Size([40, 222])
Question passage attention dim:  torch.Size([40, 222])
Final Merged Passage dim:  torch.Size([40, 222, 800])
Modeled Passage dim:  torch.Size([40, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 222, 1000])
Span start logits:  torch.Size([40, 222])
span start probs dim:  torch.Size([40, 222])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 222]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 19])
Passage ques attention dim:  torch.Size([40, 151, 19])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 22])
Passage ques attention dim:  torch.Size([40, 119, 22])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 22])
Passage ques attention dim:  torch.Size([40, 100, 22])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 19])
Passage ques attention dim:  torch.Size([40, 152, 19])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 19])
Passage ques attention dim:  torch.Size([40, 124, 19])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 217, 21])
Passage ques attention dim:  torch.Size([40, 217, 21])
Passage question vectors dim:  torch.Size([40, 217, 200])
Question Passage Similarity dim:  torch.Size([40, 217])
Question passage attention dim:  torch.Size([40, 217])
Final Merged Passage dim:  torch.Size([40, 217, 800])
Modeled Passage dim:  torch.Size([40, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 217, 1000])
Span start logits:  torch.Size([40, 217])
span start probs dim:  torch.Size([40, 217])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 217]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 21])
Passage ques attention dim:  torch.Size([40, 112, 21])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 20])
Passage ques attention dim:  torch.Size([40, 140, 20])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 22])
Passage ques attention dim:  torch.Size([40, 139, 22])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 22])
Passage ques attention dim:  torch.Size([40, 181, 22])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 20])
Passage ques attention dim:  torch.Size([40, 122, 20])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 31, 200])
Passage Length:  31
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 31, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 31, 25])
Passage ques attention dim:  torch.Size([40, 31, 25])
Passage question vectors dim:  torch.Size([40, 31, 200])
Question Passage Similarity dim:  torch.Size([40, 31])
Question passage attention dim:  torch.Size([40, 31])
Final Merged Passage dim:  torch.Size([40, 31, 800])
Modeled Passage dim:  torch.Size([40, 31, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 31, 1000])
Span start logits:  torch.Size([40, 31])
span start probs dim:  torch.Size([40, 31])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 31]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 19])
Passage ques attention dim:  torch.Size([40, 122, 19])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 25])
Passage ques attention dim:  torch.Size([40, 125, 25])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 19])
Passage ques attention dim:  torch.Size([40, 137, 19])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 26])
Passage ques attention dim:  torch.Size([40, 182, 26])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 20])
Passage ques attention dim:  torch.Size([40, 142, 20])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 23])
Passage ques attention dim:  torch.Size([40, 191, 23])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 19])
Passage ques attention dim:  torch.Size([40, 160, 19])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 24])
Passage ques attention dim:  torch.Size([40, 104, 24])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 20])
Passage ques attention dim:  torch.Size([40, 97, 20])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 23])
Passage ques attention dim:  torch.Size([40, 96, 23])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 20])
Passage ques attention dim:  torch.Size([40, 148, 20])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 21])
Passage ques attention dim:  torch.Size([40, 155, 21])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 23])
Passage ques attention dim:  torch.Size([40, 189, 23])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 19])
Passage ques attention dim:  torch.Size([40, 179, 19])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 21])
Passage ques attention dim:  torch.Size([40, 134, 21])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 26])
Passage ques attention dim:  torch.Size([40, 101, 26])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 21])
Passage ques attention dim:  torch.Size([40, 134, 21])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 318, 200])
Passage Length:  318
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 318, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 318, 26])
Passage ques attention dim:  torch.Size([40, 318, 26])
Passage question vectors dim:  torch.Size([40, 318, 200])
Question Passage Similarity dim:  torch.Size([40, 318])
Question passage attention dim:  torch.Size([40, 318])
Final Merged Passage dim:  torch.Size([40, 318, 800])
Modeled Passage dim:  torch.Size([40, 318, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 318, 1000])
Span start logits:  torch.Size([40, 318])
span start probs dim:  torch.Size([40, 318])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 318]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 271, 200])
Passage Length:  271
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 271, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 271, 30])
Passage ques attention dim:  torch.Size([40, 271, 30])
Passage question vectors dim:  torch.Size([40, 271, 200])
Question Passage Similarity dim:  torch.Size([40, 271])
Question passage attention dim:  torch.Size([40, 271])
Final Merged Passage dim:  torch.Size([40, 271, 800])
Modeled Passage dim:  torch.Size([40, 271, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 271, 1000])
Span start logits:  torch.Size([40, 271])
span start probs dim:  torch.Size([40, 271])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 271]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 26])
Passage ques attention dim:  torch.Size([40, 205, 26])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 22])
Passage ques attention dim:  torch.Size([40, 196, 22])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 176, 17])
Passage ques attention dim:  torch.Size([40, 176, 17])
Passage question vectors dim:  torch.Size([40, 176, 200])
Question Passage Similarity dim:  torch.Size([40, 176])
Question passage attention dim:  torch.Size([40, 176])
Final Merged Passage dim:  torch.Size([40, 176, 800])
Modeled Passage dim:  torch.Size([40, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 176, 1000])
Span start logits:  torch.Size([40, 176])
span start probs dim:  torch.Size([40, 176])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 176]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 23])
Passage ques attention dim:  torch.Size([40, 122, 23])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 245, 23])
Passage ques attention dim:  torch.Size([40, 245, 23])
Passage question vectors dim:  torch.Size([40, 245, 200])
Question Passage Similarity dim:  torch.Size([40, 245])
Question passage attention dim:  torch.Size([40, 245])
Final Merged Passage dim:  torch.Size([40, 245, 800])
Modeled Passage dim:  torch.Size([40, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 245, 1000])
Span start logits:  torch.Size([40, 245])
span start probs dim:  torch.Size([40, 245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 26])
Passage ques attention dim:  torch.Size([40, 144, 26])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 21])
Passage ques attention dim:  torch.Size([40, 146, 21])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 30])
Passage ques attention dim:  torch.Size([40, 153, 30])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 79, 32])
Passage ques attention dim:  torch.Size([40, 79, 32])
Passage question vectors dim:  torch.Size([40, 79, 200])
Question Passage Similarity dim:  torch.Size([40, 79])
Question passage attention dim:  torch.Size([40, 79])
Final Merged Passage dim:  torch.Size([40, 79, 800])
Modeled Passage dim:  torch.Size([40, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 79, 1000])
Span start logits:  torch.Size([40, 79])
span start probs dim:  torch.Size([40, 79])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 79]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 20])
Passage ques attention dim:  torch.Size([40, 107, 20])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 93, 21])
Passage ques attention dim:  torch.Size([40, 93, 21])
Passage question vectors dim:  torch.Size([40, 93, 200])
Question Passage Similarity dim:  torch.Size([40, 93])
Question passage attention dim:  torch.Size([40, 93])
Final Merged Passage dim:  torch.Size([40, 93, 800])
Modeled Passage dim:  torch.Size([40, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 93, 1000])
Span start logits:  torch.Size([40, 93])
span start probs dim:  torch.Size([40, 93])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 93]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 239, 200])
Passage Length:  239
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 239, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 239, 21])
Passage ques attention dim:  torch.Size([40, 239, 21])
Passage question vectors dim:  torch.Size([40, 239, 200])
Question Passage Similarity dim:  torch.Size([40, 239])
Question passage attention dim:  torch.Size([40, 239])
Final Merged Passage dim:  torch.Size([40, 239, 800])
Modeled Passage dim:  torch.Size([40, 239, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 239, 1000])
Span start logits:  torch.Size([40, 239])
span start probs dim:  torch.Size([40, 239])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 239]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 26])
Passage ques attention dim:  torch.Size([40, 174, 26])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 240, 200])
Passage Length:  240
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 240, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 240, 19])
Passage ques attention dim:  torch.Size([40, 240, 19])
Passage question vectors dim:  torch.Size([40, 240, 200])
Question Passage Similarity dim:  torch.Size([40, 240])
Question passage attention dim:  torch.Size([40, 240])
Final Merged Passage dim:  torch.Size([40, 240, 800])
Modeled Passage dim:  torch.Size([40, 240, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 240, 1000])
Span start logits:  torch.Size([40, 240])
span start probs dim:  torch.Size([40, 240])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 240]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 28])
Passage ques attention dim:  torch.Size([40, 122, 28])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 201, 200])
Passage Length:  201
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 201, 21])
Passage ques attention dim:  torch.Size([40, 201, 21])
Passage question vectors dim:  torch.Size([40, 201, 200])
Question Passage Similarity dim:  torch.Size([40, 201])
Question passage attention dim:  torch.Size([40, 201])
Final Merged Passage dim:  torch.Size([40, 201, 800])
Modeled Passage dim:  torch.Size([40, 201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 201, 1000])
Span start logits:  torch.Size([40, 201])
span start probs dim:  torch.Size([40, 201])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 201]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 23])
Passage ques attention dim:  torch.Size([40, 135, 23])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 36, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 36, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 36])
Passage ques attention dim:  torch.Size([40, 129, 36])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 23])
Passage ques attention dim:  torch.Size([40, 122, 23])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 27])
Passage ques attention dim:  torch.Size([40, 128, 27])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 20])
Passage ques attention dim:  torch.Size([40, 101, 20])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 22])
Passage ques attention dim:  torch.Size([40, 120, 22])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 27])
Passage ques attention dim:  torch.Size([40, 125, 27])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 21])
Passage ques attention dim:  torch.Size([40, 162, 21])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 19])
Passage ques attention dim:  torch.Size([40, 144, 19])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 20])
Passage ques attention dim:  torch.Size([40, 218, 20])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 275, 200])
Passage Length:  275
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 275, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 275, 20])
Passage ques attention dim:  torch.Size([40, 275, 20])
Passage question vectors dim:  torch.Size([40, 275, 200])
Question Passage Similarity dim:  torch.Size([40, 275])
Question passage attention dim:  torch.Size([40, 275])
Final Merged Passage dim:  torch.Size([40, 275, 800])
Modeled Passage dim:  torch.Size([40, 275, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 275, 1000])
Span start logits:  torch.Size([40, 275])
span start probs dim:  torch.Size([40, 275])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 275]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 28])
Passage ques attention dim:  torch.Size([40, 157, 28])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 21])
Passage ques attention dim:  torch.Size([40, 129, 21])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 26])
Passage ques attention dim:  torch.Size([40, 122, 26])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 23])
Passage ques attention dim:  torch.Size([40, 123, 23])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 20])
Passage ques attention dim:  torch.Size([40, 161, 20])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 18])
Passage ques attention dim:  torch.Size([40, 179, 18])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 24])
Passage ques attention dim:  torch.Size([40, 142, 24])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 22])
Passage ques attention dim:  torch.Size([40, 110, 22])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 25])
Passage ques attention dim:  torch.Size([40, 99, 25])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 21])
Passage ques attention dim:  torch.Size([40, 153, 21])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 19])
Passage ques attention dim:  torch.Size([40, 156, 19])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 34, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 34, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 34])
Passage ques attention dim:  torch.Size([40, 118, 34])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 17])
Passage ques attention dim:  torch.Size([40, 179, 17])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 19])
Passage ques attention dim:  torch.Size([40, 148, 19])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 21])
Passage ques attention dim:  torch.Size([40, 215, 21])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 21])
Passage ques attention dim:  torch.Size([40, 137, 21])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 22])
Passage ques attention dim:  torch.Size([40, 151, 22])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 21])
Passage ques attention dim:  torch.Size([40, 149, 21])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 244, 200])
Passage Length:  244
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 244, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 244, 19])
Passage ques attention dim:  torch.Size([40, 244, 19])
Passage question vectors dim:  torch.Size([40, 244, 200])
Question Passage Similarity dim:  torch.Size([40, 244])
Question passage attention dim:  torch.Size([40, 244])
Final Merged Passage dim:  torch.Size([40, 244, 800])
Modeled Passage dim:  torch.Size([40, 244, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 244, 1000])
Span start logits:  torch.Size([40, 244])
span start probs dim:  torch.Size([40, 244])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 244]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 19])
Passage ques attention dim:  torch.Size([40, 171, 19])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 207, 21])
Passage ques attention dim:  torch.Size([40, 207, 21])
Passage question vectors dim:  torch.Size([40, 207, 200])
Question Passage Similarity dim:  torch.Size([40, 207])
Question passage attention dim:  torch.Size([40, 207])
Final Merged Passage dim:  torch.Size([40, 207, 800])
Modeled Passage dim:  torch.Size([40, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 207, 1000])
Span start logits:  torch.Size([40, 207])
span start probs dim:  torch.Size([40, 207])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 207]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 18])
Passage ques attention dim:  torch.Size([40, 146, 18])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 245, 21])
Passage ques attention dim:  torch.Size([40, 245, 21])
Passage question vectors dim:  torch.Size([40, 245, 200])
Question Passage Similarity dim:  torch.Size([40, 245])
Question passage attention dim:  torch.Size([40, 245])
Final Merged Passage dim:  torch.Size([40, 245, 800])
Modeled Passage dim:  torch.Size([40, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 245, 1000])
Span start logits:  torch.Size([40, 245])
span start probs dim:  torch.Size([40, 245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 20])
Passage ques attention dim:  torch.Size([40, 178, 20])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 22])
Passage ques attention dim:  torch.Size([40, 125, 22])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 23])
Passage ques attention dim:  torch.Size([40, 133, 23])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 23])
Passage ques attention dim:  torch.Size([40, 159, 23])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 20])
Passage ques attention dim:  torch.Size([40, 147, 20])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 23])
Passage ques attention dim:  torch.Size([40, 130, 23])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 22])
Passage ques attention dim:  torch.Size([40, 117, 22])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 24])
Passage ques attention dim:  torch.Size([40, 129, 24])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 18])
Passage ques attention dim:  torch.Size([40, 198, 18])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 409, 200])
Passage Length:  409
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 409, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 409, 21])
Passage ques attention dim:  torch.Size([40, 409, 21])
Passage question vectors dim:  torch.Size([40, 409, 200])
Question Passage Similarity dim:  torch.Size([40, 409])
Question passage attention dim:  torch.Size([40, 409])
Final Merged Passage dim:  torch.Size([40, 409, 800])
Modeled Passage dim:  torch.Size([40, 409, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 409, 1000])
Span start logits:  torch.Size([40, 409])
span start probs dim:  torch.Size([40, 409])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 409]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 17])
Passage ques attention dim:  torch.Size([40, 98, 17])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 28])
Passage ques attention dim:  torch.Size([40, 191, 28])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 30])
Passage ques attention dim:  torch.Size([40, 101, 30])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 24])
Passage ques attention dim:  torch.Size([40, 169, 24])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 20])
Passage ques attention dim:  torch.Size([40, 164, 20])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 42, 200])
Passage Length:  42
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 42, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 42, 20])
Passage ques attention dim:  torch.Size([40, 42, 20])
Passage question vectors dim:  torch.Size([40, 42, 200])
Question Passage Similarity dim:  torch.Size([40, 42])
Question passage attention dim:  torch.Size([40, 42])
Final Merged Passage dim:  torch.Size([40, 42, 800])
Modeled Passage dim:  torch.Size([40, 42, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 42, 1000])
Span start logits:  torch.Size([40, 42])
span start probs dim:  torch.Size([40, 42])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 42]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 23])
Passage ques attention dim:  torch.Size([40, 151, 23])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 21])
Passage ques attention dim:  torch.Size([40, 118, 21])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 26])
Passage ques attention dim:  torch.Size([40, 102, 26])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 311, 24])
Passage ques attention dim:  torch.Size([40, 311, 24])
Passage question vectors dim:  torch.Size([40, 311, 200])
Question Passage Similarity dim:  torch.Size([40, 311])
Question passage attention dim:  torch.Size([40, 311])
Final Merged Passage dim:  torch.Size([40, 311, 800])
Modeled Passage dim:  torch.Size([40, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 311, 1000])
Span start logits:  torch.Size([40, 311])
span start probs dim:  torch.Size([40, 311])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 311]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 52, 21])
Passage ques attention dim:  torch.Size([40, 52, 21])
Passage question vectors dim:  torch.Size([40, 52, 200])
Question Passage Similarity dim:  torch.Size([40, 52])
Question passage attention dim:  torch.Size([40, 52])
Final Merged Passage dim:  torch.Size([40, 52, 800])
Modeled Passage dim:  torch.Size([40, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 52, 1000])
Span start logits:  torch.Size([40, 52])
span start probs dim:  torch.Size([40, 52])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 52]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 20])
Passage ques attention dim:  torch.Size([40, 111, 20])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 19])
Passage ques attention dim:  torch.Size([40, 147, 19])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 88, 23])
Passage ques attention dim:  torch.Size([40, 88, 23])
Passage question vectors dim:  torch.Size([40, 88, 200])
Question Passage Similarity dim:  torch.Size([40, 88])
Question passage attention dim:  torch.Size([40, 88])
Final Merged Passage dim:  torch.Size([40, 88, 800])
Modeled Passage dim:  torch.Size([40, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 88, 1000])
Span start logits:  torch.Size([40, 88])
span start probs dim:  torch.Size([40, 88])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 88]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 23])
Passage ques attention dim:  torch.Size([40, 148, 23])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 18])
Passage ques attention dim:  torch.Size([40, 138, 18])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 24])
Passage ques attention dim:  torch.Size([40, 128, 24])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 231, 22])
Passage ques attention dim:  torch.Size([40, 231, 22])
Passage question vectors dim:  torch.Size([40, 231, 200])
Question Passage Similarity dim:  torch.Size([40, 231])
Question passage attention dim:  torch.Size([40, 231])
Final Merged Passage dim:  torch.Size([40, 231, 800])
Modeled Passage dim:  torch.Size([40, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 231, 1000])
Span start logits:  torch.Size([40, 231])
span start probs dim:  torch.Size([40, 231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 21])
Passage ques attention dim:  torch.Size([40, 156, 21])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 19])
Passage ques attention dim:  torch.Size([40, 121, 19])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 24])
Passage ques attention dim:  torch.Size([40, 177, 24])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 18])
Passage ques attention dim:  torch.Size([40, 138, 18])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 24])
Passage ques attention dim:  torch.Size([40, 142, 24])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 22])
Passage ques attention dim:  torch.Size([40, 172, 22])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 261, 200])
Passage Length:  261
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 261, 22])
Passage ques attention dim:  torch.Size([40, 261, 22])
Passage question vectors dim:  torch.Size([40, 261, 200])
Question Passage Similarity dim:  torch.Size([40, 261])
Question passage attention dim:  torch.Size([40, 261])
Final Merged Passage dim:  torch.Size([40, 261, 800])
Modeled Passage dim:  torch.Size([40, 261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 261, 1000])
Span start logits:  torch.Size([40, 261])
span start probs dim:  torch.Size([40, 261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 261]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 28])
Passage ques attention dim:  torch.Size([40, 136, 28])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 18])
Passage ques attention dim:  torch.Size([40, 124, 18])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 241, 200])
Passage Length:  241
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 241, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 241, 19])
Passage ques attention dim:  torch.Size([40, 241, 19])
Passage question vectors dim:  torch.Size([40, 241, 200])
Question Passage Similarity dim:  torch.Size([40, 241])
Question passage attention dim:  torch.Size([40, 241])
Final Merged Passage dim:  torch.Size([40, 241, 800])
Modeled Passage dim:  torch.Size([40, 241, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 241, 1000])
Span start logits:  torch.Size([40, 241])
span start probs dim:  torch.Size([40, 241])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 241]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 21])
Passage ques attention dim:  torch.Size([40, 110, 21])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 25])
Passage ques attention dim:  torch.Size([40, 215, 25])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 18])
Passage ques attention dim:  torch.Size([40, 137, 18])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 18])
Passage ques attention dim:  torch.Size([40, 152, 18])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 21])
Passage ques attention dim:  torch.Size([40, 119, 21])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 268, 200])
Passage Length:  268
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 268, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 268, 19])
Passage ques attention dim:  torch.Size([40, 268, 19])
Passage question vectors dim:  torch.Size([40, 268, 200])
Question Passage Similarity dim:  torch.Size([40, 268])
Question passage attention dim:  torch.Size([40, 268])
Final Merged Passage dim:  torch.Size([40, 268, 800])
Modeled Passage dim:  torch.Size([40, 268, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 268, 1000])
Span start logits:  torch.Size([40, 268])
span start probs dim:  torch.Size([40, 268])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 268]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 18])
Passage ques attention dim:  torch.Size([40, 137, 18])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 21])
Passage ques attention dim:  torch.Size([40, 108, 21])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 19])
Passage ques attention dim:  torch.Size([40, 104, 19])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 222, 24])
Passage ques attention dim:  torch.Size([40, 222, 24])
Passage question vectors dim:  torch.Size([40, 222, 200])
Question Passage Similarity dim:  torch.Size([40, 222])
Question passage attention dim:  torch.Size([40, 222])
Final Merged Passage dim:  torch.Size([40, 222, 800])
Modeled Passage dim:  torch.Size([40, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 222, 1000])
Span start logits:  torch.Size([40, 222])
span start probs dim:  torch.Size([40, 222])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 222]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 18])
Passage ques attention dim:  torch.Size([40, 157, 18])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 19])
Passage ques attention dim:  torch.Size([40, 135, 19])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 18])
Passage ques attention dim:  torch.Size([40, 125, 18])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 17])
Passage ques attention dim:  torch.Size([40, 146, 17])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 19])
Passage ques attention dim:  torch.Size([40, 123, 19])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 22])
Passage ques attention dim:  torch.Size([40, 161, 22])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 70, 25])
Passage ques attention dim:  torch.Size([40, 70, 25])
Passage question vectors dim:  torch.Size([40, 70, 200])
Question Passage Similarity dim:  torch.Size([40, 70])
Question passage attention dim:  torch.Size([40, 70])
Final Merged Passage dim:  torch.Size([40, 70, 800])
Modeled Passage dim:  torch.Size([40, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 70, 1000])
Span start logits:  torch.Size([40, 70])
span start probs dim:  torch.Size([40, 70])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 70]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 195, 29])
Passage ques attention dim:  torch.Size([40, 195, 29])
Passage question vectors dim:  torch.Size([40, 195, 200])
Question Passage Similarity dim:  torch.Size([40, 195])
Question passage attention dim:  torch.Size([40, 195])
Final Merged Passage dim:  torch.Size([40, 195, 800])
Modeled Passage dim:  torch.Size([40, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 195, 1000])
Span start logits:  torch.Size([40, 195])
span start probs dim:  torch.Size([40, 195])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 195]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 25])
Passage ques attention dim:  torch.Size([40, 146, 25])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 247, 200])
Passage Length:  247
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 247, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 247, 23])
Passage ques attention dim:  torch.Size([40, 247, 23])
Passage question vectors dim:  torch.Size([40, 247, 200])
Question Passage Similarity dim:  torch.Size([40, 247])
Question passage attention dim:  torch.Size([40, 247])
Final Merged Passage dim:  torch.Size([40, 247, 800])
Modeled Passage dim:  torch.Size([40, 247, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 247, 1000])
Span start logits:  torch.Size([40, 247])
span start probs dim:  torch.Size([40, 247])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 247]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 231, 22])
Passage ques attention dim:  torch.Size([40, 231, 22])
Passage question vectors dim:  torch.Size([40, 231, 200])
Question Passage Similarity dim:  torch.Size([40, 231])
Question passage attention dim:  torch.Size([40, 231])
Final Merged Passage dim:  torch.Size([40, 231, 800])
Modeled Passage dim:  torch.Size([40, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 231, 1000])
Span start logits:  torch.Size([40, 231])
span start probs dim:  torch.Size([40, 231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 29])
Passage ques attention dim:  torch.Size([40, 145, 29])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 17])
Passage ques attention dim:  torch.Size([40, 165, 17])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 27])
Passage ques attention dim:  torch.Size([40, 114, 27])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 341, 200])
Passage Length:  341
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 341, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 341, 24])
Passage ques attention dim:  torch.Size([40, 341, 24])
Passage question vectors dim:  torch.Size([40, 341, 200])
Question Passage Similarity dim:  torch.Size([40, 341])
Question passage attention dim:  torch.Size([40, 341])
Final Merged Passage dim:  torch.Size([40, 341, 800])
Modeled Passage dim:  torch.Size([40, 341, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 341, 1000])
Span start logits:  torch.Size([40, 341])
span start probs dim:  torch.Size([40, 341])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 341]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 22])
Passage ques attention dim:  torch.Size([40, 124, 22])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 18])
Passage ques attention dim:  torch.Size([40, 140, 18])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 242, 200])
Passage Length:  242
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 242, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 242, 21])
Passage ques attention dim:  torch.Size([40, 242, 21])
Passage question vectors dim:  torch.Size([40, 242, 200])
Question Passage Similarity dim:  torch.Size([40, 242])
Question passage attention dim:  torch.Size([40, 242])
Final Merged Passage dim:  torch.Size([40, 242, 800])
Modeled Passage dim:  torch.Size([40, 242, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 242, 1000])
Span start logits:  torch.Size([40, 242])
span start probs dim:  torch.Size([40, 242])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 242]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 27])
Passage ques attention dim:  torch.Size([40, 143, 27])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 19])
Passage ques attention dim:  torch.Size([40, 158, 19])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 28])
Passage ques attention dim:  torch.Size([40, 166, 28])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 20])
Passage ques attention dim:  torch.Size([40, 116, 20])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 21])
Passage ques attention dim:  torch.Size([40, 153, 21])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 268, 200])
Passage Length:  268
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 268, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 268, 29])
Passage ques attention dim:  torch.Size([40, 268, 29])
Passage question vectors dim:  torch.Size([40, 268, 200])
Question Passage Similarity dim:  torch.Size([40, 268])
Question passage attention dim:  torch.Size([40, 268])
Final Merged Passage dim:  torch.Size([40, 268, 800])
Modeled Passage dim:  torch.Size([40, 268, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 268, 1000])
Span start logits:  torch.Size([40, 268])
span start probs dim:  torch.Size([40, 268])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 268]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 19])
Passage ques attention dim:  torch.Size([40, 181, 19])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 20])
Passage ques attention dim:  torch.Size([40, 167, 20])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 19])
Passage ques attention dim:  torch.Size([40, 139, 19])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 66, 200])
Passage Length:  66
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 66, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 66, 20])
Passage ques attention dim:  torch.Size([40, 66, 20])
Passage question vectors dim:  torch.Size([40, 66, 200])
Question Passage Similarity dim:  torch.Size([40, 66])
Question passage attention dim:  torch.Size([40, 66])
Final Merged Passage dim:  torch.Size([40, 66, 800])
Modeled Passage dim:  torch.Size([40, 66, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 66, 1000])
Span start logits:  torch.Size([40, 66])
span start probs dim:  torch.Size([40, 66])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 66]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 27])
Passage ques attention dim:  torch.Size([40, 135, 27])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 209, 18])
Passage ques attention dim:  torch.Size([40, 209, 18])
Passage question vectors dim:  torch.Size([40, 209, 200])
Question Passage Similarity dim:  torch.Size([40, 209])
Question passage attention dim:  torch.Size([40, 209])
Final Merged Passage dim:  torch.Size([40, 209, 800])
Modeled Passage dim:  torch.Size([40, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 209, 1000])
Span start logits:  torch.Size([40, 209])
span start probs dim:  torch.Size([40, 209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 20])
Passage ques attention dim:  torch.Size([40, 177, 20])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 19])
Passage ques attention dim:  torch.Size([40, 96, 19])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 54, 200])
Passage Length:  54
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 54, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 54, 22])
Passage ques attention dim:  torch.Size([40, 54, 22])
Passage question vectors dim:  torch.Size([40, 54, 200])
Question Passage Similarity dim:  torch.Size([40, 54])
Question passage attention dim:  torch.Size([40, 54])
Final Merged Passage dim:  torch.Size([40, 54, 800])
Modeled Passage dim:  torch.Size([40, 54, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 54, 1000])
Span start logits:  torch.Size([40, 54])
span start probs dim:  torch.Size([40, 54])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 54]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 22])
Passage ques attention dim:  torch.Size([40, 110, 22])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 22])
Passage ques attention dim:  torch.Size([40, 140, 22])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 21])
Passage ques attention dim:  torch.Size([40, 103, 21])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 24])
Passage ques attention dim:  torch.Size([40, 115, 24])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 20])
Passage ques attention dim:  torch.Size([40, 99, 20])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 19])
Passage ques attention dim:  torch.Size([40, 129, 19])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 23])
Passage ques attention dim:  torch.Size([40, 159, 23])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 19])
Passage ques attention dim:  torch.Size([40, 125, 19])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 35])
Passage ques attention dim:  torch.Size([40, 133, 35])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 19])
Passage ques attention dim:  torch.Size([40, 162, 19])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 16])
Passage ques attention dim:  torch.Size([40, 106, 16])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 372, 200])
Passage Length:  372
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 372, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 372, 18])
Passage ques attention dim:  torch.Size([40, 372, 18])
Passage question vectors dim:  torch.Size([40, 372, 200])
Question Passage Similarity dim:  torch.Size([40, 372])
Question passage attention dim:  torch.Size([40, 372])
Final Merged Passage dim:  torch.Size([40, 372, 800])
Modeled Passage dim:  torch.Size([40, 372, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 372, 1000])
Span start logits:  torch.Size([40, 372])
span start probs dim:  torch.Size([40, 372])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 372]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 18])
Passage ques attention dim:  torch.Size([40, 144, 18])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 183, 25])
Passage ques attention dim:  torch.Size([40, 183, 25])
Passage question vectors dim:  torch.Size([40, 183, 200])
Question Passage Similarity dim:  torch.Size([40, 183])
Question passage attention dim:  torch.Size([40, 183])
Final Merged Passage dim:  torch.Size([40, 183, 800])
Modeled Passage dim:  torch.Size([40, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 183, 1000])
Span start logits:  torch.Size([40, 183])
span start probs dim:  torch.Size([40, 183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 20])
Passage ques attention dim:  torch.Size([40, 142, 20])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 83, 25])
Passage ques attention dim:  torch.Size([40, 83, 25])
Passage question vectors dim:  torch.Size([40, 83, 200])
Question Passage Similarity dim:  torch.Size([40, 83])
Question passage attention dim:  torch.Size([40, 83])
Final Merged Passage dim:  torch.Size([40, 83, 800])
Modeled Passage dim:  torch.Size([40, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 83, 1000])
Span start logits:  torch.Size([40, 83])
span start probs dim:  torch.Size([40, 83])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 83]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 20])
Passage ques attention dim:  torch.Size([40, 205, 20])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 285, 200])
Passage Length:  285
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 285, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 285, 18])
Passage ques attention dim:  torch.Size([40, 285, 18])
Passage question vectors dim:  torch.Size([40, 285, 200])
Question Passage Similarity dim:  torch.Size([40, 285])
Question passage attention dim:  torch.Size([40, 285])
Final Merged Passage dim:  torch.Size([40, 285, 800])
Modeled Passage dim:  torch.Size([40, 285, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 285, 1000])
Span start logits:  torch.Size([40, 285])
span start probs dim:  torch.Size([40, 285])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 285]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 176, 23])
Passage ques attention dim:  torch.Size([40, 176, 23])
Passage question vectors dim:  torch.Size([40, 176, 200])
Question Passage Similarity dim:  torch.Size([40, 176])
Question passage attention dim:  torch.Size([40, 176])
Final Merged Passage dim:  torch.Size([40, 176, 800])
Modeled Passage dim:  torch.Size([40, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 176, 1000])
Span start logits:  torch.Size([40, 176])
span start probs dim:  torch.Size([40, 176])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 176]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 19])
Passage ques attention dim:  torch.Size([40, 143, 19])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 221, 17])
Passage ques attention dim:  torch.Size([40, 221, 17])
Passage question vectors dim:  torch.Size([40, 221, 200])
Question Passage Similarity dim:  torch.Size([40, 221])
Question passage attention dim:  torch.Size([40, 221])
Final Merged Passage dim:  torch.Size([40, 221, 800])
Modeled Passage dim:  torch.Size([40, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 221, 1000])
Span start logits:  torch.Size([40, 221])
span start probs dim:  torch.Size([40, 221])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 221]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 209, 25])
Passage ques attention dim:  torch.Size([40, 209, 25])
Passage question vectors dim:  torch.Size([40, 209, 200])
Question Passage Similarity dim:  torch.Size([40, 209])
Question passage attention dim:  torch.Size([40, 209])
Final Merged Passage dim:  torch.Size([40, 209, 800])
Modeled Passage dim:  torch.Size([40, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 209, 1000])
Span start logits:  torch.Size([40, 209])
span start probs dim:  torch.Size([40, 209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 89, 200])
Passage Length:  89
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 89, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 89, 20])
Passage ques attention dim:  torch.Size([40, 89, 20])
Passage question vectors dim:  torch.Size([40, 89, 200])
Question Passage Similarity dim:  torch.Size([40, 89])
Question passage attention dim:  torch.Size([40, 89])
Final Merged Passage dim:  torch.Size([40, 89, 800])
Modeled Passage dim:  torch.Size([40, 89, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 89, 1000])
Span start logits:  torch.Size([40, 89])
span start probs dim:  torch.Size([40, 89])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 89]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 22])
Passage ques attention dim:  torch.Size([40, 158, 22])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 32])
Passage ques attention dim:  torch.Size([40, 147, 32])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 20])
Passage ques attention dim:  torch.Size([40, 155, 20])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 17])
Passage ques attention dim:  torch.Size([40, 151, 17])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 25])
Passage ques attention dim:  torch.Size([40, 148, 25])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 21])
Passage ques attention dim:  torch.Size([40, 122, 21])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 265, 200])
Passage Length:  265
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 265, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 265, 18])
Passage ques attention dim:  torch.Size([40, 265, 18])
Passage question vectors dim:  torch.Size([40, 265, 200])
Question Passage Similarity dim:  torch.Size([40, 265])
Question passage attention dim:  torch.Size([40, 265])
Final Merged Passage dim:  torch.Size([40, 265, 800])
Modeled Passage dim:  torch.Size([40, 265, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 265, 1000])
Span start logits:  torch.Size([40, 265])
span start probs dim:  torch.Size([40, 265])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 265]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 23])
Passage ques attention dim:  torch.Size([40, 110, 23])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 20])
Passage ques attention dim:  torch.Size([40, 189, 20])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 18])
Passage ques attention dim:  torch.Size([40, 181, 18])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 20])
Passage ques attention dim:  torch.Size([40, 109, 20])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 25])
Passage ques attention dim:  torch.Size([40, 111, 25])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 18])
Passage ques attention dim:  torch.Size([40, 144, 18])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 46, 200])
Passage Length:  46
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 46, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 46, 17])
Passage ques attention dim:  torch.Size([40, 46, 17])
Passage question vectors dim:  torch.Size([40, 46, 200])
Question Passage Similarity dim:  torch.Size([40, 46])
Question passage attention dim:  torch.Size([40, 46])
Final Merged Passage dim:  torch.Size([40, 46, 800])
Modeled Passage dim:  torch.Size([40, 46, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 46, 1000])
Span start logits:  torch.Size([40, 46])
span start probs dim:  torch.Size([40, 46])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 46]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 31])
Passage ques attention dim:  torch.Size([40, 179, 31])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 27])
Passage ques attention dim:  torch.Size([40, 196, 27])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 24])
Passage ques attention dim:  torch.Size([40, 132, 24])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 19])
Passage ques attention dim:  torch.Size([40, 205, 19])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 23])
Passage ques attention dim:  torch.Size([40, 196, 23])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 20])
Passage ques attention dim:  torch.Size([40, 169, 20])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 213, 20])
Passage ques attention dim:  torch.Size([40, 213, 20])
Passage question vectors dim:  torch.Size([40, 213, 200])
Question Passage Similarity dim:  torch.Size([40, 213])
Question passage attention dim:  torch.Size([40, 213])
Final Merged Passage dim:  torch.Size([40, 213, 800])
Modeled Passage dim:  torch.Size([40, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 213, 1000])
Span start logits:  torch.Size([40, 213])
span start probs dim:  torch.Size([40, 213])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 213]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 60, 200])
Passage Length:  60
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 60, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 60, 18])
Passage ques attention dim:  torch.Size([40, 60, 18])
Passage question vectors dim:  torch.Size([40, 60, 200])
Question Passage Similarity dim:  torch.Size([40, 60])
Question passage attention dim:  torch.Size([40, 60])
Final Merged Passage dim:  torch.Size([40, 60, 800])
Modeled Passage dim:  torch.Size([40, 60, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 60, 1000])
Span start logits:  torch.Size([40, 60])
span start probs dim:  torch.Size([40, 60])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 60]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 21])
Passage ques attention dim:  torch.Size([40, 147, 21])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 254, 20])
Passage ques attention dim:  torch.Size([40, 254, 20])
Passage question vectors dim:  torch.Size([40, 254, 200])
Question Passage Similarity dim:  torch.Size([40, 254])
Question passage attention dim:  torch.Size([40, 254])
Final Merged Passage dim:  torch.Size([40, 254, 800])
Modeled Passage dim:  torch.Size([40, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 254, 1000])
Span start logits:  torch.Size([40, 254])
span start probs dim:  torch.Size([40, 254])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 254]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 23])
Passage ques attention dim:  torch.Size([40, 156, 23])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 23])
Passage ques attention dim:  torch.Size([40, 95, 23])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 18])
Passage ques attention dim:  torch.Size([40, 124, 18])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 19])
Passage ques attention dim:  torch.Size([40, 113, 19])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 64, 20])
Passage ques attention dim:  torch.Size([40, 64, 20])
Passage question vectors dim:  torch.Size([40, 64, 200])
Question Passage Similarity dim:  torch.Size([40, 64])
Question passage attention dim:  torch.Size([40, 64])
Final Merged Passage dim:  torch.Size([40, 64, 800])
Modeled Passage dim:  torch.Size([40, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 64, 1000])
Span start logits:  torch.Size([40, 64])
span start probs dim:  torch.Size([40, 64])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 64]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 27])
Passage ques attention dim:  torch.Size([40, 162, 27])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 35])
Passage ques attention dim:  torch.Size([40, 182, 35])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 21])
Passage ques attention dim:  torch.Size([40, 166, 21])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 21])
Passage ques attention dim:  torch.Size([40, 165, 21])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 22])
Passage ques attention dim:  torch.Size([40, 117, 22])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 23])
Passage ques attention dim:  torch.Size([40, 155, 23])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 19])
Passage ques attention dim:  torch.Size([40, 111, 19])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 258, 21])
Passage ques attention dim:  torch.Size([40, 258, 21])
Passage question vectors dim:  torch.Size([40, 258, 200])
Question Passage Similarity dim:  torch.Size([40, 258])
Question passage attention dim:  torch.Size([40, 258])
Final Merged Passage dim:  torch.Size([40, 258, 800])
Modeled Passage dim:  torch.Size([40, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 258, 1000])
Span start logits:  torch.Size([40, 258])
span start probs dim:  torch.Size([40, 258])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 258]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 29])
Passage ques attention dim:  torch.Size([40, 171, 29])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 216, 200])
Passage Length:  216
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 216, 22])
Passage ques attention dim:  torch.Size([40, 216, 22])
Passage question vectors dim:  torch.Size([40, 216, 200])
Question Passage Similarity dim:  torch.Size([40, 216])
Question passage attention dim:  torch.Size([40, 216])
Final Merged Passage dim:  torch.Size([40, 216, 800])
Modeled Passage dim:  torch.Size([40, 216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 216, 1000])
Span start logits:  torch.Size([40, 216])
span start probs dim:  torch.Size([40, 216])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 216]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 22])
Passage ques attention dim:  torch.Size([40, 154, 22])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 188, 28])
Passage ques attention dim:  torch.Size([40, 188, 28])
Passage question vectors dim:  torch.Size([40, 188, 200])
Question Passage Similarity dim:  torch.Size([40, 188])
Question passage attention dim:  torch.Size([40, 188])
Final Merged Passage dim:  torch.Size([40, 188, 800])
Modeled Passage dim:  torch.Size([40, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 188, 1000])
Span start logits:  torch.Size([40, 188])
span start probs dim:  torch.Size([40, 188])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 188]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 19])
Passage ques attention dim:  torch.Size([40, 114, 19])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 22])
Passage ques attention dim:  torch.Size([40, 161, 22])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 326, 200])
Passage Length:  326
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 326, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 326, 18])
Passage ques attention dim:  torch.Size([40, 326, 18])
Passage question vectors dim:  torch.Size([40, 326, 200])
Question Passage Similarity dim:  torch.Size([40, 326])
Question passage attention dim:  torch.Size([40, 326])
Final Merged Passage dim:  torch.Size([40, 326, 800])
Modeled Passage dim:  torch.Size([40, 326, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 326, 1000])
Span start logits:  torch.Size([40, 326])
span start probs dim:  torch.Size([40, 326])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 326]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 17])
Passage ques attention dim:  torch.Size([40, 118, 17])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 22])
Passage ques attention dim:  torch.Size([40, 181, 22])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 27])
Passage ques attention dim:  torch.Size([40, 152, 27])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 22])
Passage ques attention dim:  torch.Size([40, 129, 22])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 23])
Passage ques attention dim:  torch.Size([40, 162, 23])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 19])
Passage ques attention dim:  torch.Size([40, 106, 19])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 26])
Passage ques attention dim:  torch.Size([40, 150, 26])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 21])
Passage ques attention dim:  torch.Size([40, 163, 21])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 25])
Passage ques attention dim:  torch.Size([40, 105, 25])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 25])
Passage ques attention dim:  torch.Size([40, 98, 25])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 17])
Passage ques attention dim:  torch.Size([40, 182, 17])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 21])
Passage ques attention dim:  torch.Size([40, 136, 21])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 21])
Passage ques attention dim:  torch.Size([40, 156, 21])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 21])
Passage ques attention dim:  torch.Size([40, 184, 21])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 26])
Passage ques attention dim:  torch.Size([40, 181, 26])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 18])
Passage ques attention dim:  torch.Size([40, 145, 18])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 23])
Passage ques attention dim:  torch.Size([40, 132, 23])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 23])
Passage ques attention dim:  torch.Size([40, 121, 23])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 254, 30])
Passage ques attention dim:  torch.Size([40, 254, 30])
Passage question vectors dim:  torch.Size([40, 254, 200])
Question Passage Similarity dim:  torch.Size([40, 254])
Question passage attention dim:  torch.Size([40, 254])
Final Merged Passage dim:  torch.Size([40, 254, 800])
Modeled Passage dim:  torch.Size([40, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 254, 1000])
Span start logits:  torch.Size([40, 254])
span start probs dim:  torch.Size([40, 254])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 254]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 24])
Passage ques attention dim:  torch.Size([40, 96, 24])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 200, 18])
Passage ques attention dim:  torch.Size([40, 200, 18])
Passage question vectors dim:  torch.Size([40, 200, 200])
Question Passage Similarity dim:  torch.Size([40, 200])
Question passage attention dim:  torch.Size([40, 200])
Final Merged Passage dim:  torch.Size([40, 200, 800])
Modeled Passage dim:  torch.Size([40, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 200, 1000])
Span start logits:  torch.Size([40, 200])
span start probs dim:  torch.Size([40, 200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 23])
Passage ques attention dim:  torch.Size([40, 125, 23])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 197, 18])
Passage ques attention dim:  torch.Size([40, 197, 18])
Passage question vectors dim:  torch.Size([40, 197, 200])
Question Passage Similarity dim:  torch.Size([40, 197])
Question passage attention dim:  torch.Size([40, 197])
Final Merged Passage dim:  torch.Size([40, 197, 800])
Modeled Passage dim:  torch.Size([40, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 197, 1000])
Span start logits:  torch.Size([40, 197])
span start probs dim:  torch.Size([40, 197])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 197]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 22])
Passage ques attention dim:  torch.Size([40, 180, 22])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 92, 19])
Passage ques attention dim:  torch.Size([40, 92, 19])
Passage question vectors dim:  torch.Size([40, 92, 200])
Question Passage Similarity dim:  torch.Size([40, 92])
Question passage attention dim:  torch.Size([40, 92])
Final Merged Passage dim:  torch.Size([40, 92, 800])
Modeled Passage dim:  torch.Size([40, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 92, 1000])
Span start logits:  torch.Size([40, 92])
span start probs dim:  torch.Size([40, 92])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 92]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 21])
Passage ques attention dim:  torch.Size([40, 96, 21])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 188, 23])
Passage ques attention dim:  torch.Size([40, 188, 23])
Passage question vectors dim:  torch.Size([40, 188, 200])
Question Passage Similarity dim:  torch.Size([40, 188])
Question passage attention dim:  torch.Size([40, 188])
Final Merged Passage dim:  torch.Size([40, 188, 800])
Modeled Passage dim:  torch.Size([40, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 188, 1000])
Span start logits:  torch.Size([40, 188])
span start probs dim:  torch.Size([40, 188])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 188]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 20])
Passage ques attention dim:  torch.Size([40, 111, 20])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 213, 20])
Passage ques attention dim:  torch.Size([40, 213, 20])
Passage question vectors dim:  torch.Size([40, 213, 200])
Question Passage Similarity dim:  torch.Size([40, 213])
Question passage attention dim:  torch.Size([40, 213])
Final Merged Passage dim:  torch.Size([40, 213, 800])
Modeled Passage dim:  torch.Size([40, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 213, 1000])
Span start logits:  torch.Size([40, 213])
span start probs dim:  torch.Size([40, 213])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 213]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 48, 200])
Passage Length:  48
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 48, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 48, 22])
Passage ques attention dim:  torch.Size([40, 48, 22])
Passage question vectors dim:  torch.Size([40, 48, 200])
Question Passage Similarity dim:  torch.Size([40, 48])
Question passage attention dim:  torch.Size([40, 48])
Final Merged Passage dim:  torch.Size([40, 48, 800])
Modeled Passage dim:  torch.Size([40, 48, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 48, 1000])
Span start logits:  torch.Size([40, 48])
span start probs dim:  torch.Size([40, 48])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 48]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 65, 200])
Passage Length:  65
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 65, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 65, 20])
Passage ques attention dim:  torch.Size([40, 65, 20])
Passage question vectors dim:  torch.Size([40, 65, 200])
Question Passage Similarity dim:  torch.Size([40, 65])
Question passage attention dim:  torch.Size([40, 65])
Final Merged Passage dim:  torch.Size([40, 65, 800])
Modeled Passage dim:  torch.Size([40, 65, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 65, 1000])
Span start logits:  torch.Size([40, 65])
span start probs dim:  torch.Size([40, 65])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 65]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 19])
Passage ques attention dim:  torch.Size([40, 128, 19])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 231, 20])
Passage ques attention dim:  torch.Size([40, 231, 20])
Passage question vectors dim:  torch.Size([40, 231, 200])
Question Passage Similarity dim:  torch.Size([40, 231])
Question passage attention dim:  torch.Size([40, 231])
Final Merged Passage dim:  torch.Size([40, 231, 800])
Modeled Passage dim:  torch.Size([40, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 231, 1000])
Span start logits:  torch.Size([40, 231])
span start probs dim:  torch.Size([40, 231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 18])
Passage ques attention dim:  torch.Size([40, 131, 18])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 337, 200])
Passage Length:  337
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 337, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 337, 23])
Passage ques attention dim:  torch.Size([40, 337, 23])
Passage question vectors dim:  torch.Size([40, 337, 200])
Question Passage Similarity dim:  torch.Size([40, 337])
Question passage attention dim:  torch.Size([40, 337])
Final Merged Passage dim:  torch.Size([40, 337, 800])
Modeled Passage dim:  torch.Size([40, 337, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 337, 1000])
Span start logits:  torch.Size([40, 337])
span start probs dim:  torch.Size([40, 337])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 337]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 22])
Passage ques attention dim:  torch.Size([40, 151, 22])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 23])
Passage ques attention dim:  torch.Size([40, 196, 23])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 24])
Passage ques attention dim:  torch.Size([40, 112, 24])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 22])
Passage ques attention dim:  torch.Size([40, 107, 22])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 20])
Passage ques attention dim:  torch.Size([40, 170, 20])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 94, 21])
Passage ques attention dim:  torch.Size([40, 94, 21])
Passage question vectors dim:  torch.Size([40, 94, 200])
Question Passage Similarity dim:  torch.Size([40, 94])
Question passage attention dim:  torch.Size([40, 94])
Final Merged Passage dim:  torch.Size([40, 94, 800])
Modeled Passage dim:  torch.Size([40, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 94, 1000])
Span start logits:  torch.Size([40, 94])
span start probs dim:  torch.Size([40, 94])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 94]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 24])
Passage ques attention dim:  torch.Size([40, 103, 24])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 210, 200])
Passage Length:  210
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 210, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 210, 19])
Passage ques attention dim:  torch.Size([40, 210, 19])
Passage question vectors dim:  torch.Size([40, 210, 200])
Question Passage Similarity dim:  torch.Size([40, 210])
Question passage attention dim:  torch.Size([40, 210])
Final Merged Passage dim:  torch.Size([40, 210, 800])
Modeled Passage dim:  torch.Size([40, 210, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 210, 1000])
Span start logits:  torch.Size([40, 210])
span start probs dim:  torch.Size([40, 210])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 210]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 68, 200])
Passage Length:  68
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 68, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 68, 19])
Passage ques attention dim:  torch.Size([40, 68, 19])
Passage question vectors dim:  torch.Size([40, 68, 200])
Question Passage Similarity dim:  torch.Size([40, 68])
Question passage attention dim:  torch.Size([40, 68])
Final Merged Passage dim:  torch.Size([40, 68, 800])
Modeled Passage dim:  torch.Size([40, 68, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 68, 1000])
Span start logits:  torch.Size([40, 68])
span start probs dim:  torch.Size([40, 68])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 68]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 80, 200])
Passage Length:  80
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 80, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 80, 25])
Passage ques attention dim:  torch.Size([40, 80, 25])
Passage question vectors dim:  torch.Size([40, 80, 200])
Question Passage Similarity dim:  torch.Size([40, 80])
Question passage attention dim:  torch.Size([40, 80])
Final Merged Passage dim:  torch.Size([40, 80, 800])
Modeled Passage dim:  torch.Size([40, 80, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 80, 1000])
Span start logits:  torch.Size([40, 80])
span start probs dim:  torch.Size([40, 80])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 80]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 183, 26])
Passage ques attention dim:  torch.Size([40, 183, 26])
Passage question vectors dim:  torch.Size([40, 183, 200])
Question Passage Similarity dim:  torch.Size([40, 183])
Question passage attention dim:  torch.Size([40, 183])
Final Merged Passage dim:  torch.Size([40, 183, 800])
Modeled Passage dim:  torch.Size([40, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 183, 1000])
Span start logits:  torch.Size([40, 183])
span start probs dim:  torch.Size([40, 183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 19])
Passage ques attention dim:  torch.Size([40, 185, 19])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 22])
Passage ques attention dim:  torch.Size([40, 108, 22])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 27])
Passage ques attention dim:  torch.Size([40, 109, 27])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 19])
Passage ques attention dim:  torch.Size([40, 135, 19])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 25])
Passage ques attention dim:  torch.Size([40, 133, 25])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 24])
Passage ques attention dim:  torch.Size([40, 157, 24])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 229, 19])
Passage ques attention dim:  torch.Size([40, 229, 19])
Passage question vectors dim:  torch.Size([40, 229, 200])
Question Passage Similarity dim:  torch.Size([40, 229])
Question passage attention dim:  torch.Size([40, 229])
Final Merged Passage dim:  torch.Size([40, 229, 800])
Modeled Passage dim:  torch.Size([40, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 229, 1000])
Span start logits:  torch.Size([40, 229])
span start probs dim:  torch.Size([40, 229])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 229]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 20])
Passage ques attention dim:  torch.Size([40, 138, 20])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 68, 200])
Passage Length:  68
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 68, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 68, 20])
Passage ques attention dim:  torch.Size([40, 68, 20])
Passage question vectors dim:  torch.Size([40, 68, 200])
Question Passage Similarity dim:  torch.Size([40, 68])
Question passage attention dim:  torch.Size([40, 68])
Final Merged Passage dim:  torch.Size([40, 68, 800])
Modeled Passage dim:  torch.Size([40, 68, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 68, 1000])
Span start logits:  torch.Size([40, 68])
span start probs dim:  torch.Size([40, 68])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 68]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 236, 200])
Passage Length:  236
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 236, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 236, 21])
Passage ques attention dim:  torch.Size([40, 236, 21])
Passage question vectors dim:  torch.Size([40, 236, 200])
Question Passage Similarity dim:  torch.Size([40, 236])
Question passage attention dim:  torch.Size([40, 236])
Final Merged Passage dim:  torch.Size([40, 236, 800])
Modeled Passage dim:  torch.Size([40, 236, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 236, 1000])
Span start logits:  torch.Size([40, 236])
span start probs dim:  torch.Size([40, 236])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 236]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 21])
Passage ques attention dim:  torch.Size([40, 204, 21])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 267, 200])
Passage Length:  267
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 267, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 267, 21])
Passage ques attention dim:  torch.Size([40, 267, 21])
Passage question vectors dim:  torch.Size([40, 267, 200])
Question Passage Similarity dim:  torch.Size([40, 267])
Question passage attention dim:  torch.Size([40, 267])
Final Merged Passage dim:  torch.Size([40, 267, 800])
Modeled Passage dim:  torch.Size([40, 267, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 267, 1000])
Span start logits:  torch.Size([40, 267])
span start probs dim:  torch.Size([40, 267])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 267]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 20])
Passage ques attention dim:  torch.Size([40, 116, 20])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 21])
Passage ques attention dim:  torch.Size([40, 117, 21])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 18])
Passage ques attention dim:  torch.Size([40, 164, 18])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 19])
Passage ques attention dim:  torch.Size([40, 154, 19])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 209, 18])
Passage ques attention dim:  torch.Size([40, 209, 18])
Passage question vectors dim:  torch.Size([40, 209, 200])
Question Passage Similarity dim:  torch.Size([40, 209])
Question passage attention dim:  torch.Size([40, 209])
Final Merged Passage dim:  torch.Size([40, 209, 800])
Modeled Passage dim:  torch.Size([40, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 209, 1000])
Span start logits:  torch.Size([40, 209])
span start probs dim:  torch.Size([40, 209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 19])
Passage ques attention dim:  torch.Size([40, 160, 19])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 24])
Passage ques attention dim:  torch.Size([40, 167, 24])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 23])
Passage ques attention dim:  torch.Size([40, 137, 23])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 24])
Passage ques attention dim:  torch.Size([40, 185, 24])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 20])
Passage ques attention dim:  torch.Size([40, 127, 20])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 24])
Passage ques attention dim:  torch.Size([40, 133, 24])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 238, 24])
Passage ques attention dim:  torch.Size([40, 238, 24])
Passage question vectors dim:  torch.Size([40, 238, 200])
Question Passage Similarity dim:  torch.Size([40, 238])
Question passage attention dim:  torch.Size([40, 238])
Final Merged Passage dim:  torch.Size([40, 238, 800])
Modeled Passage dim:  torch.Size([40, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 238, 1000])
Span start logits:  torch.Size([40, 238])
span start probs dim:  torch.Size([40, 238])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 238]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 18])
Passage ques attention dim:  torch.Size([40, 107, 18])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 91, 19])
Passage ques attention dim:  torch.Size([40, 91, 19])
Passage question vectors dim:  torch.Size([40, 91, 200])
Question Passage Similarity dim:  torch.Size([40, 91])
Question passage attention dim:  torch.Size([40, 91])
Final Merged Passage dim:  torch.Size([40, 91, 800])
Modeled Passage dim:  torch.Size([40, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 91, 1000])
Span start logits:  torch.Size([40, 91])
span start probs dim:  torch.Size([40, 91])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 91]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 27])
Passage ques attention dim:  torch.Size([40, 104, 27])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 19])
Passage ques attention dim:  torch.Size([40, 175, 19])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 73, 24])
Passage ques attention dim:  torch.Size([40, 73, 24])
Passage question vectors dim:  torch.Size([40, 73, 200])
Question Passage Similarity dim:  torch.Size([40, 73])
Question passage attention dim:  torch.Size([40, 73])
Final Merged Passage dim:  torch.Size([40, 73, 800])
Modeled Passage dim:  torch.Size([40, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 73, 1000])
Span start logits:  torch.Size([40, 73])
span start probs dim:  torch.Size([40, 73])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 73]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 201, 200])
Passage Length:  201
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 201, 21])
Passage ques attention dim:  torch.Size([40, 201, 21])
Passage question vectors dim:  torch.Size([40, 201, 200])
Question Passage Similarity dim:  torch.Size([40, 201])
Question passage attention dim:  torch.Size([40, 201])
Final Merged Passage dim:  torch.Size([40, 201, 800])
Modeled Passage dim:  torch.Size([40, 201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 201, 1000])
Span start logits:  torch.Size([40, 201])
span start probs dim:  torch.Size([40, 201])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 201]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 79, 26])
Passage ques attention dim:  torch.Size([40, 79, 26])
Passage question vectors dim:  torch.Size([40, 79, 200])
Question Passage Similarity dim:  torch.Size([40, 79])
Question passage attention dim:  torch.Size([40, 79])
Final Merged Passage dim:  torch.Size([40, 79, 800])
Modeled Passage dim:  torch.Size([40, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 79, 1000])
Span start logits:  torch.Size([40, 79])
span start probs dim:  torch.Size([40, 79])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 79]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 26])
Passage ques attention dim:  torch.Size([40, 163, 26])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 19])
Passage ques attention dim:  torch.Size([40, 133, 19])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 77, 200])
Passage Length:  77
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 77, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 77, 33])
Passage ques attention dim:  torch.Size([40, 77, 33])
Passage question vectors dim:  torch.Size([40, 77, 200])
Question Passage Similarity dim:  torch.Size([40, 77])
Question passage attention dim:  torch.Size([40, 77])
Final Merged Passage dim:  torch.Size([40, 77, 800])
Modeled Passage dim:  torch.Size([40, 77, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 77, 1000])
Span start logits:  torch.Size([40, 77])
span start probs dim:  torch.Size([40, 77])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 77]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 200, 22])
Passage ques attention dim:  torch.Size([40, 200, 22])
Passage question vectors dim:  torch.Size([40, 200, 200])
Question Passage Similarity dim:  torch.Size([40, 200])
Question passage attention dim:  torch.Size([40, 200])
Final Merged Passage dim:  torch.Size([40, 200, 800])
Modeled Passage dim:  torch.Size([40, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 200, 1000])
Span start logits:  torch.Size([40, 200])
span start probs dim:  torch.Size([40, 200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 50, 200])
Passage Length:  50
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 50, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 50, 30])
Passage ques attention dim:  torch.Size([40, 50, 30])
Passage question vectors dim:  torch.Size([40, 50, 200])
Question Passage Similarity dim:  torch.Size([40, 50])
Question passage attention dim:  torch.Size([40, 50])
Final Merged Passage dim:  torch.Size([40, 50, 800])
Modeled Passage dim:  torch.Size([40, 50, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 50, 1000])
Span start logits:  torch.Size([40, 50])
span start probs dim:  torch.Size([40, 50])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 50]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 19])
Passage ques attention dim:  torch.Size([40, 100, 19])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 20])
Passage ques attention dim:  torch.Size([40, 170, 20])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 22])
Passage ques attention dim:  torch.Size([40, 157, 22])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 21])
Passage ques attention dim:  torch.Size([40, 215, 21])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 278, 200])
Passage Length:  278
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 278, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 278, 23])
Passage ques attention dim:  torch.Size([40, 278, 23])
Passage question vectors dim:  torch.Size([40, 278, 200])
Question Passage Similarity dim:  torch.Size([40, 278])
Question passage attention dim:  torch.Size([40, 278])
Final Merged Passage dim:  torch.Size([40, 278, 800])
Modeled Passage dim:  torch.Size([40, 278, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 278, 1000])
Span start logits:  torch.Size([40, 278])
span start probs dim:  torch.Size([40, 278])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 278]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 23])
Passage ques attention dim:  torch.Size([40, 100, 23])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 92, 23])
Passage ques attention dim:  torch.Size([40, 92, 23])
Passage question vectors dim:  torch.Size([40, 92, 200])
Question Passage Similarity dim:  torch.Size([40, 92])
Question passage attention dim:  torch.Size([40, 92])
Final Merged Passage dim:  torch.Size([40, 92, 800])
Modeled Passage dim:  torch.Size([40, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 92, 1000])
Span start logits:  torch.Size([40, 92])
span start probs dim:  torch.Size([40, 92])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 92]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 25])
Passage ques attention dim:  torch.Size([40, 144, 25])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 20])
Passage ques attention dim:  torch.Size([40, 115, 20])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 18])
Passage ques attention dim:  torch.Size([40, 102, 18])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 22])
Passage ques attention dim:  torch.Size([40, 127, 22])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 24])
Passage ques attention dim:  torch.Size([40, 127, 24])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 78, 200])
Passage Length:  78
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 78, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 78, 21])
Passage ques attention dim:  torch.Size([40, 78, 21])
Passage question vectors dim:  torch.Size([40, 78, 200])
Question Passage Similarity dim:  torch.Size([40, 78])
Question passage attention dim:  torch.Size([40, 78])
Final Merged Passage dim:  torch.Size([40, 78, 800])
Modeled Passage dim:  torch.Size([40, 78, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 78, 1000])
Span start logits:  torch.Size([40, 78])
span start probs dim:  torch.Size([40, 78])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 78]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 23])
Passage ques attention dim:  torch.Size([40, 175, 23])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 22])
Passage ques attention dim:  torch.Size([40, 234, 22])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 69, 200])
Passage Length:  69
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 69, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 69, 21])
Passage ques attention dim:  torch.Size([40, 69, 21])
Passage question vectors dim:  torch.Size([40, 69, 200])
Question Passage Similarity dim:  torch.Size([40, 69])
Question passage attention dim:  torch.Size([40, 69])
Final Merged Passage dim:  torch.Size([40, 69, 800])
Modeled Passage dim:  torch.Size([40, 69, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 69, 1000])
Span start logits:  torch.Size([40, 69])
span start probs dim:  torch.Size([40, 69])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 69]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 209, 21])
Passage ques attention dim:  torch.Size([40, 209, 21])
Passage question vectors dim:  torch.Size([40, 209, 200])
Question Passage Similarity dim:  torch.Size([40, 209])
Question passage attention dim:  torch.Size([40, 209])
Final Merged Passage dim:  torch.Size([40, 209, 800])
Modeled Passage dim:  torch.Size([40, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 209, 1000])
Span start logits:  torch.Size([40, 209])
span start probs dim:  torch.Size([40, 209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 23])
Passage ques attention dim:  torch.Size([40, 204, 23])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 42, 200])
Passage Length:  42
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 42, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 42, 26])
Passage ques attention dim:  torch.Size([40, 42, 26])
Passage question vectors dim:  torch.Size([40, 42, 200])
Question Passage Similarity dim:  torch.Size([40, 42])
Question passage attention dim:  torch.Size([40, 42])
Final Merged Passage dim:  torch.Size([40, 42, 800])
Modeled Passage dim:  torch.Size([40, 42, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 42, 1000])
Span start logits:  torch.Size([40, 42])
span start probs dim:  torch.Size([40, 42])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 42]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 220, 200])
Passage Length:  220
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 220, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 220, 21])
Passage ques attention dim:  torch.Size([40, 220, 21])
Passage question vectors dim:  torch.Size([40, 220, 200])
Question Passage Similarity dim:  torch.Size([40, 220])
Question passage attention dim:  torch.Size([40, 220])
Final Merged Passage dim:  torch.Size([40, 220, 800])
Modeled Passage dim:  torch.Size([40, 220, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 220, 1000])
Span start logits:  torch.Size([40, 220])
span start probs dim:  torch.Size([40, 220])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 220]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 36, 200])
Passage Length:  36
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 36, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 36, 26])
Passage ques attention dim:  torch.Size([40, 36, 26])
Passage question vectors dim:  torch.Size([40, 36, 200])
Question Passage Similarity dim:  torch.Size([40, 36])
Question passage attention dim:  torch.Size([40, 36])
Final Merged Passage dim:  torch.Size([40, 36, 800])
Modeled Passage dim:  torch.Size([40, 36, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 36, 1000])
Span start logits:  torch.Size([40, 36])
span start probs dim:  torch.Size([40, 36])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 36]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 22])
Passage ques attention dim:  torch.Size([40, 110, 22])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 213, 21])
Passage ques attention dim:  torch.Size([40, 213, 21])
Passage question vectors dim:  torch.Size([40, 213, 200])
Question Passage Similarity dim:  torch.Size([40, 213])
Question passage attention dim:  torch.Size([40, 213])
Final Merged Passage dim:  torch.Size([40, 213, 800])
Modeled Passage dim:  torch.Size([40, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 213, 1000])
Span start logits:  torch.Size([40, 213])
span start probs dim:  torch.Size([40, 213])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 213]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 22])
Passage ques attention dim:  torch.Size([40, 136, 22])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 57, 200])
Passage Length:  57
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 57, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 57, 23])
Passage ques attention dim:  torch.Size([40, 57, 23])
Passage question vectors dim:  torch.Size([40, 57, 200])
Question Passage Similarity dim:  torch.Size([40, 57])
Question passage attention dim:  torch.Size([40, 57])
Final Merged Passage dim:  torch.Size([40, 57, 800])
Modeled Passage dim:  torch.Size([40, 57, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 57, 1000])
Span start logits:  torch.Size([40, 57])
span start probs dim:  torch.Size([40, 57])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 57]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 26])
Passage ques attention dim:  torch.Size([40, 126, 26])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 23])
Passage ques attention dim:  torch.Size([40, 185, 23])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 85, 200])
Passage Length:  85
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 85, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 85, 20])
Passage ques attention dim:  torch.Size([40, 85, 20])
Passage question vectors dim:  torch.Size([40, 85, 200])
Question Passage Similarity dim:  torch.Size([40, 85])
Question passage attention dim:  torch.Size([40, 85])
Final Merged Passage dim:  torch.Size([40, 85, 800])
Modeled Passage dim:  torch.Size([40, 85, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 85, 1000])
Span start logits:  torch.Size([40, 85])
span start probs dim:  torch.Size([40, 85])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 85]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 16])
Passage ques attention dim:  torch.Size([40, 122, 16])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 199, 19])
Passage ques attention dim:  torch.Size([40, 199, 19])
Passage question vectors dim:  torch.Size([40, 199, 200])
Question Passage Similarity dim:  torch.Size([40, 199])
Question passage attention dim:  torch.Size([40, 199])
Final Merged Passage dim:  torch.Size([40, 199, 800])
Modeled Passage dim:  torch.Size([40, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 199, 1000])
Span start logits:  torch.Size([40, 199])
span start probs dim:  torch.Size([40, 199])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 199]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 23])
Passage ques attention dim:  torch.Size([40, 145, 23])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 221, 26])
Passage ques attention dim:  torch.Size([40, 221, 26])
Passage question vectors dim:  torch.Size([40, 221, 200])
Question Passage Similarity dim:  torch.Size([40, 221])
Question passage attention dim:  torch.Size([40, 221])
Final Merged Passage dim:  torch.Size([40, 221, 800])
Modeled Passage dim:  torch.Size([40, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 221, 1000])
Span start logits:  torch.Size([40, 221])
span start probs dim:  torch.Size([40, 221])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 221]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 22])
Passage ques attention dim:  torch.Size([40, 137, 22])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 20])
Passage ques attention dim:  torch.Size([40, 152, 20])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 250, 29])
Passage ques attention dim:  torch.Size([40, 250, 29])
Passage question vectors dim:  torch.Size([40, 250, 200])
Question Passage Similarity dim:  torch.Size([40, 250])
Question passage attention dim:  torch.Size([40, 250])
Final Merged Passage dim:  torch.Size([40, 250, 800])
Modeled Passage dim:  torch.Size([40, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 250, 1000])
Span start logits:  torch.Size([40, 250])
span start probs dim:  torch.Size([40, 250])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 250]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 183, 20])
Passage ques attention dim:  torch.Size([40, 183, 20])
Passage question vectors dim:  torch.Size([40, 183, 200])
Question Passage Similarity dim:  torch.Size([40, 183])
Question passage attention dim:  torch.Size([40, 183])
Final Merged Passage dim:  torch.Size([40, 183, 800])
Modeled Passage dim:  torch.Size([40, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 183, 1000])
Span start logits:  torch.Size([40, 183])
span start probs dim:  torch.Size([40, 183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 26])
Passage ques attention dim:  torch.Size([40, 179, 26])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 22])
Passage ques attention dim:  torch.Size([40, 147, 22])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 23])
Passage ques attention dim:  torch.Size([40, 102, 23])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 79, 21])
Passage ques attention dim:  torch.Size([40, 79, 21])
Passage question vectors dim:  torch.Size([40, 79, 200])
Question Passage Similarity dim:  torch.Size([40, 79])
Question passage attention dim:  torch.Size([40, 79])
Final Merged Passage dim:  torch.Size([40, 79, 800])
Modeled Passage dim:  torch.Size([40, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 79, 1000])
Span start logits:  torch.Size([40, 79])
span start probs dim:  torch.Size([40, 79])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 79]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 24])
Passage ques attention dim:  torch.Size([40, 177, 24])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 22])
Passage ques attention dim:  torch.Size([40, 153, 22])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 386, 200])
Passage Length:  386
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 386, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 386, 23])
Passage ques attention dim:  torch.Size([40, 386, 23])
Passage question vectors dim:  torch.Size([40, 386, 200])
Question Passage Similarity dim:  torch.Size([40, 386])
Question passage attention dim:  torch.Size([40, 386])
Final Merged Passage dim:  torch.Size([40, 386, 800])
Modeled Passage dim:  torch.Size([40, 386, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 386, 1000])
Span start logits:  torch.Size([40, 386])
span start probs dim:  torch.Size([40, 386])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 386]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 23])
Passage ques attention dim:  torch.Size([40, 134, 23])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 290, 200])
Passage Length:  290
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 290, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 290, 22])
Passage ques attention dim:  torch.Size([40, 290, 22])
Passage question vectors dim:  torch.Size([40, 290, 200])
Question Passage Similarity dim:  torch.Size([40, 290])
Question passage attention dim:  torch.Size([40, 290])
Final Merged Passage dim:  torch.Size([40, 290, 800])
Modeled Passage dim:  torch.Size([40, 290, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 290, 1000])
Span start logits:  torch.Size([40, 290])
span start probs dim:  torch.Size([40, 290])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 290]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 295, 200])
Passage Length:  295
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 295, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 295, 23])
Passage ques attention dim:  torch.Size([40, 295, 23])
Passage question vectors dim:  torch.Size([40, 295, 200])
Question Passage Similarity dim:  torch.Size([40, 295])
Question passage attention dim:  torch.Size([40, 295])
Final Merged Passage dim:  torch.Size([40, 295, 800])
Modeled Passage dim:  torch.Size([40, 295, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 295, 1000])
Span start logits:  torch.Size([40, 295])
span start probs dim:  torch.Size([40, 295])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 295]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 295, 200])
Passage Length:  295
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 295, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 295, 26])
Passage ques attention dim:  torch.Size([40, 295, 26])
Passage question vectors dim:  torch.Size([40, 295, 200])
Question Passage Similarity dim:  torch.Size([40, 295])
Question passage attention dim:  torch.Size([40, 295])
Final Merged Passage dim:  torch.Size([40, 295, 800])
Modeled Passage dim:  torch.Size([40, 295, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 295, 1000])
Span start logits:  torch.Size([40, 295])
span start probs dim:  torch.Size([40, 295])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 295]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 249, 200])
Passage Length:  249
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 249, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 249, 26])
Passage ques attention dim:  torch.Size([40, 249, 26])
Passage question vectors dim:  torch.Size([40, 249, 200])
Question Passage Similarity dim:  torch.Size([40, 249])
Question passage attention dim:  torch.Size([40, 249])
Final Merged Passage dim:  torch.Size([40, 249, 800])
Modeled Passage dim:  torch.Size([40, 249, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 249, 1000])
Span start logits:  torch.Size([40, 249])
span start probs dim:  torch.Size([40, 249])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 249]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 75, 17])
Passage ques attention dim:  torch.Size([40, 75, 17])
Passage question vectors dim:  torch.Size([40, 75, 200])
Question Passage Similarity dim:  torch.Size([40, 75])
Question passage attention dim:  torch.Size([40, 75])
Final Merged Passage dim:  torch.Size([40, 75, 800])
Modeled Passage dim:  torch.Size([40, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 75, 1000])
Span start logits:  torch.Size([40, 75])
span start probs dim:  torch.Size([40, 75])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 75]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 26])
Passage ques attention dim:  torch.Size([40, 119, 26])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 86, 25])
Passage ques attention dim:  torch.Size([40, 86, 25])
Passage question vectors dim:  torch.Size([40, 86, 200])
Question Passage Similarity dim:  torch.Size([40, 86])
Question passage attention dim:  torch.Size([40, 86])
Final Merged Passage dim:  torch.Size([40, 86, 800])
Modeled Passage dim:  torch.Size([40, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 86, 1000])
Span start logits:  torch.Size([40, 86])
span start probs dim:  torch.Size([40, 86])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 86]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 21])
Passage ques attention dim:  torch.Size([40, 110, 21])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 23])
Passage ques attention dim:  torch.Size([40, 160, 23])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 24])
Passage ques attention dim:  torch.Size([40, 170, 24])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 220, 200])
Passage Length:  220
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 220, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 220, 30])
Passage ques attention dim:  torch.Size([40, 220, 30])
Passage question vectors dim:  torch.Size([40, 220, 200])
Question Passage Similarity dim:  torch.Size([40, 220])
Question passage attention dim:  torch.Size([40, 220])
Final Merged Passage dim:  torch.Size([40, 220, 800])
Modeled Passage dim:  torch.Size([40, 220, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 220, 1000])
Span start logits:  torch.Size([40, 220])
span start probs dim:  torch.Size([40, 220])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 220]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 24])
Passage ques attention dim:  torch.Size([40, 196, 24])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 22])
Passage ques attention dim:  torch.Size([40, 178, 22])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 18])
Passage ques attention dim:  torch.Size([40, 109, 18])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 230, 200])
Passage Length:  230
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 230, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 230, 21])
Passage ques attention dim:  torch.Size([40, 230, 21])
Passage question vectors dim:  torch.Size([40, 230, 200])
Question Passage Similarity dim:  torch.Size([40, 230])
Question passage attention dim:  torch.Size([40, 230])
Final Merged Passage dim:  torch.Size([40, 230, 800])
Modeled Passage dim:  torch.Size([40, 230, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 230, 1000])
Span start logits:  torch.Size([40, 230])
span start probs dim:  torch.Size([40, 230])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 230]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 18])
Passage ques attention dim:  torch.Size([40, 146, 18])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 93, 20])
Passage ques attention dim:  torch.Size([40, 93, 20])
Passage question vectors dim:  torch.Size([40, 93, 200])
Question Passage Similarity dim:  torch.Size([40, 93])
Question passage attention dim:  torch.Size([40, 93])
Final Merged Passage dim:  torch.Size([40, 93, 800])
Modeled Passage dim:  torch.Size([40, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 93, 1000])
Span start logits:  torch.Size([40, 93])
span start probs dim:  torch.Size([40, 93])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 93]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 247, 200])
Passage Length:  247
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 247, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 247, 22])
Passage ques attention dim:  torch.Size([40, 247, 22])
Passage question vectors dim:  torch.Size([40, 247, 200])
Question Passage Similarity dim:  torch.Size([40, 247])
Question passage attention dim:  torch.Size([40, 247])
Final Merged Passage dim:  torch.Size([40, 247, 800])
Modeled Passage dim:  torch.Size([40, 247, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 247, 1000])
Span start logits:  torch.Size([40, 247])
span start probs dim:  torch.Size([40, 247])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 247]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 22])
Passage ques attention dim:  torch.Size([40, 108, 22])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 17])
Passage ques attention dim:  torch.Size([40, 140, 17])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 38, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 38, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 38])
Passage ques attention dim:  torch.Size([40, 145, 38])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 76, 200])
Passage Length:  76
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 76, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 76, 31])
Passage ques attention dim:  torch.Size([40, 76, 31])
Passage question vectors dim:  torch.Size([40, 76, 200])
Question Passage Similarity dim:  torch.Size([40, 76])
Question passage attention dim:  torch.Size([40, 76])
Final Merged Passage dim:  torch.Size([40, 76, 800])
Modeled Passage dim:  torch.Size([40, 76, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 76, 1000])
Span start logits:  torch.Size([40, 76])
span start probs dim:  torch.Size([40, 76])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 76]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 19])
Passage ques attention dim:  torch.Size([40, 158, 19])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 245, 17])
Passage ques attention dim:  torch.Size([40, 245, 17])
Passage question vectors dim:  torch.Size([40, 245, 200])
Question Passage Similarity dim:  torch.Size([40, 245])
Question passage attention dim:  torch.Size([40, 245])
Final Merged Passage dim:  torch.Size([40, 245, 800])
Modeled Passage dim:  torch.Size([40, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 245, 1000])
Span start logits:  torch.Size([40, 245])
span start probs dim:  torch.Size([40, 245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 23])
Passage ques attention dim:  torch.Size([40, 104, 23])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 20])
Passage ques attention dim:  torch.Size([40, 218, 20])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 20])
Passage ques attention dim:  torch.Size([40, 139, 20])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 66, 200])
Passage Length:  66
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 66, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 66, 26])
Passage ques attention dim:  torch.Size([40, 66, 26])
Passage question vectors dim:  torch.Size([40, 66, 200])
Question Passage Similarity dim:  torch.Size([40, 66])
Question passage attention dim:  torch.Size([40, 66])
Final Merged Passage dim:  torch.Size([40, 66, 800])
Modeled Passage dim:  torch.Size([40, 66, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 66, 1000])
Span start logits:  torch.Size([40, 66])
span start probs dim:  torch.Size([40, 66])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 66]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 269, 200])
Passage Length:  269
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 269, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 269, 25])
Passage ques attention dim:  torch.Size([40, 269, 25])
Passage question vectors dim:  torch.Size([40, 269, 200])
Question Passage Similarity dim:  torch.Size([40, 269])
Question passage attention dim:  torch.Size([40, 269])
Final Merged Passage dim:  torch.Size([40, 269, 800])
Modeled Passage dim:  torch.Size([40, 269, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 269, 1000])
Span start logits:  torch.Size([40, 269])
span start probs dim:  torch.Size([40, 269])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 269]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 18])
Passage ques attention dim:  torch.Size([40, 234, 18])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 25])
Passage ques attention dim:  torch.Size([40, 166, 25])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 30])
Passage ques attention dim:  torch.Size([40, 191, 30])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 390, 200])
Passage Length:  390
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 390, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 390, 24])
Passage ques attention dim:  torch.Size([40, 390, 24])
Passage question vectors dim:  torch.Size([40, 390, 200])
Question Passage Similarity dim:  torch.Size([40, 390])
Question passage attention dim:  torch.Size([40, 390])
Final Merged Passage dim:  torch.Size([40, 390, 800])
Modeled Passage dim:  torch.Size([40, 390, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 390, 1000])
Span start logits:  torch.Size([40, 390])
span start probs dim:  torch.Size([40, 390])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 390]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 343, 23])
Passage ques attention dim:  torch.Size([40, 343, 23])
Passage question vectors dim:  torch.Size([40, 343, 200])
Question Passage Similarity dim:  torch.Size([40, 343])
Question passage attention dim:  torch.Size([40, 343])
Final Merged Passage dim:  torch.Size([40, 343, 800])
Modeled Passage dim:  torch.Size([40, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 343, 1000])
Span start logits:  torch.Size([40, 343])
span start probs dim:  torch.Size([40, 343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 21])
Passage ques attention dim:  torch.Size([40, 186, 21])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 83, 22])
Passage ques attention dim:  torch.Size([40, 83, 22])
Passage question vectors dim:  torch.Size([40, 83, 200])
Question Passage Similarity dim:  torch.Size([40, 83])
Question passage attention dim:  torch.Size([40, 83])
Final Merged Passage dim:  torch.Size([40, 83, 800])
Modeled Passage dim:  torch.Size([40, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 83, 1000])
Span start logits:  torch.Size([40, 83])
span start probs dim:  torch.Size([40, 83])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 83]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 20])
Passage ques attention dim:  torch.Size([40, 182, 20])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 19])
Passage ques attention dim:  torch.Size([40, 145, 19])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 21])
Passage ques attention dim:  torch.Size([40, 131, 21])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 25])
Passage ques attention dim:  torch.Size([40, 177, 25])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 22])
Passage ques attention dim:  torch.Size([40, 196, 22])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 221, 28])
Passage ques attention dim:  torch.Size([40, 221, 28])
Passage question vectors dim:  torch.Size([40, 221, 200])
Question Passage Similarity dim:  torch.Size([40, 221])
Question passage attention dim:  torch.Size([40, 221])
Final Merged Passage dim:  torch.Size([40, 221, 800])
Modeled Passage dim:  torch.Size([40, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 221, 1000])
Span start logits:  torch.Size([40, 221])
span start probs dim:  torch.Size([40, 221])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 221]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 26])
Passage ques attention dim:  torch.Size([40, 106, 26])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 78, 200])
Passage Length:  78
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 78, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 78, 28])
Passage ques attention dim:  torch.Size([40, 78, 28])
Passage question vectors dim:  torch.Size([40, 78, 200])
Question Passage Similarity dim:  torch.Size([40, 78])
Question passage attention dim:  torch.Size([40, 78])
Final Merged Passage dim:  torch.Size([40, 78, 800])
Modeled Passage dim:  torch.Size([40, 78, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 78, 1000])
Span start logits:  torch.Size([40, 78])
span start probs dim:  torch.Size([40, 78])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 78]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 21])
Passage ques attention dim:  torch.Size([40, 105, 21])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 280, 200])
Passage Length:  280
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 280, 19])
Passage ques attention dim:  torch.Size([40, 280, 19])
Passage question vectors dim:  torch.Size([40, 280, 200])
Question Passage Similarity dim:  torch.Size([40, 280])
Question passage attention dim:  torch.Size([40, 280])
Final Merged Passage dim:  torch.Size([40, 280, 800])
Modeled Passage dim:  torch.Size([40, 280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 280, 1000])
Span start logits:  torch.Size([40, 280])
span start probs dim:  torch.Size([40, 280])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 280]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 17])
Passage ques attention dim:  torch.Size([40, 186, 17])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 302, 200])
Passage Length:  302
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 302, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 302, 26])
Passage ques attention dim:  torch.Size([40, 302, 26])
Passage question vectors dim:  torch.Size([40, 302, 200])
Question Passage Similarity dim:  torch.Size([40, 302])
Question passage attention dim:  torch.Size([40, 302])
Final Merged Passage dim:  torch.Size([40, 302, 800])
Modeled Passage dim:  torch.Size([40, 302, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 302, 1000])
Span start logits:  torch.Size([40, 302])
span start probs dim:  torch.Size([40, 302])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 302]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 21])
Passage ques attention dim:  torch.Size([40, 134, 21])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 202, 22])
Passage ques attention dim:  torch.Size([40, 202, 22])
Passage question vectors dim:  torch.Size([40, 202, 200])
Question Passage Similarity dim:  torch.Size([40, 202])
Question passage attention dim:  torch.Size([40, 202])
Final Merged Passage dim:  torch.Size([40, 202, 800])
Modeled Passage dim:  torch.Size([40, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 202, 1000])
Span start logits:  torch.Size([40, 202])
span start probs dim:  torch.Size([40, 202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 20])
Passage ques attention dim:  torch.Size([40, 218, 20])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 19])
Passage ques attention dim:  torch.Size([40, 118, 19])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 200, 19])
Passage ques attention dim:  torch.Size([40, 200, 19])
Passage question vectors dim:  torch.Size([40, 200, 200])
Question Passage Similarity dim:  torch.Size([40, 200])
Question passage attention dim:  torch.Size([40, 200])
Final Merged Passage dim:  torch.Size([40, 200, 800])
Modeled Passage dim:  torch.Size([40, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 200, 1000])
Span start logits:  torch.Size([40, 200])
span start probs dim:  torch.Size([40, 200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 22])
Passage ques attention dim:  torch.Size([40, 198, 22])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 21])
Passage ques attention dim:  torch.Size([40, 149, 21])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 20])
Passage ques attention dim:  torch.Size([40, 173, 20])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 20])
Passage ques attention dim:  torch.Size([40, 108, 20])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 36, 200])
Passage Length:  36
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 36, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 36, 20])
Passage ques attention dim:  torch.Size([40, 36, 20])
Passage question vectors dim:  torch.Size([40, 36, 200])
Question Passage Similarity dim:  torch.Size([40, 36])
Question passage attention dim:  torch.Size([40, 36])
Final Merged Passage dim:  torch.Size([40, 36, 800])
Modeled Passage dim:  torch.Size([40, 36, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 36, 1000])
Span start logits:  torch.Size([40, 36])
span start probs dim:  torch.Size([40, 36])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 36]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 24])
Passage ques attention dim:  torch.Size([40, 119, 24])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 27])
Passage ques attention dim:  torch.Size([40, 125, 27])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 26])
Passage ques attention dim:  torch.Size([40, 189, 26])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 78, 200])
Passage Length:  78
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 78, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 78, 26])
Passage ques attention dim:  torch.Size([40, 78, 26])
Passage question vectors dim:  torch.Size([40, 78, 200])
Question Passage Similarity dim:  torch.Size([40, 78])
Question passage attention dim:  torch.Size([40, 78])
Final Merged Passage dim:  torch.Size([40, 78, 800])
Modeled Passage dim:  torch.Size([40, 78, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 78, 1000])
Span start logits:  torch.Size([40, 78])
span start probs dim:  torch.Size([40, 78])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 78]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 245, 24])
Passage ques attention dim:  torch.Size([40, 245, 24])
Passage question vectors dim:  torch.Size([40, 245, 200])
Question Passage Similarity dim:  torch.Size([40, 245])
Question passage attention dim:  torch.Size([40, 245])
Final Merged Passage dim:  torch.Size([40, 245, 800])
Modeled Passage dim:  torch.Size([40, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 245, 1000])
Span start logits:  torch.Size([40, 245])
span start probs dim:  torch.Size([40, 245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 82, 20])
Passage ques attention dim:  torch.Size([40, 82, 20])
Passage question vectors dim:  torch.Size([40, 82, 200])
Question Passage Similarity dim:  torch.Size([40, 82])
Question passage attention dim:  torch.Size([40, 82])
Final Merged Passage dim:  torch.Size([40, 82, 800])
Modeled Passage dim:  torch.Size([40, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 82, 1000])
Span start logits:  torch.Size([40, 82])
span start probs dim:  torch.Size([40, 82])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 82]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 19])
Passage ques attention dim:  torch.Size([40, 154, 19])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 23])
Passage ques attention dim:  torch.Size([40, 135, 23])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 26])
Passage ques attention dim:  torch.Size([40, 160, 26])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 20])
Passage ques attention dim:  torch.Size([40, 181, 20])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 231, 22])
Passage ques attention dim:  torch.Size([40, 231, 22])
Passage question vectors dim:  torch.Size([40, 231, 200])
Question Passage Similarity dim:  torch.Size([40, 231])
Question passage attention dim:  torch.Size([40, 231])
Final Merged Passage dim:  torch.Size([40, 231, 800])
Modeled Passage dim:  torch.Size([40, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 231, 1000])
Span start logits:  torch.Size([40, 231])
span start probs dim:  torch.Size([40, 231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 21])
Passage ques attention dim:  torch.Size([40, 102, 21])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 19])
Passage ques attention dim:  torch.Size([40, 142, 19])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 20])
Passage ques attention dim:  torch.Size([40, 107, 20])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 38, 200])
Passage Length:  38
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 38, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 38, 18])
Passage ques attention dim:  torch.Size([40, 38, 18])
Passage question vectors dim:  torch.Size([40, 38, 200])
Question Passage Similarity dim:  torch.Size([40, 38])
Question passage attention dim:  torch.Size([40, 38])
Final Merged Passage dim:  torch.Size([40, 38, 800])
Modeled Passage dim:  torch.Size([40, 38, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 38, 1000])
Span start logits:  torch.Size([40, 38])
span start probs dim:  torch.Size([40, 38])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 38]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 31])
Passage ques attention dim:  torch.Size([40, 115, 31])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 27, 200])
Passage Length:  27
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 27, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 27, 25])
Passage ques attention dim:  torch.Size([40, 27, 25])
Passage question vectors dim:  torch.Size([40, 27, 200])
Question Passage Similarity dim:  torch.Size([40, 27])
Question passage attention dim:  torch.Size([40, 27])
Final Merged Passage dim:  torch.Size([40, 27, 800])
Modeled Passage dim:  torch.Size([40, 27, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 27, 1000])
Span start logits:  torch.Size([40, 27])
span start probs dim:  torch.Size([40, 27])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 27]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 24])
Passage ques attention dim:  torch.Size([40, 96, 24])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 23])
Passage ques attention dim:  torch.Size([40, 109, 23])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 22])
Passage ques attention dim:  torch.Size([40, 113, 22])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 23])
Passage ques attention dim:  torch.Size([40, 196, 23])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 333, 200])
Passage Length:  333
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 333, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 333, 20])
Passage ques attention dim:  torch.Size([40, 333, 20])
Passage question vectors dim:  torch.Size([40, 333, 200])
Question Passage Similarity dim:  torch.Size([40, 333])
Question passage attention dim:  torch.Size([40, 333])
Final Merged Passage dim:  torch.Size([40, 333, 800])
Modeled Passage dim:  torch.Size([40, 333, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 333, 1000])
Span start logits:  torch.Size([40, 333])
span start probs dim:  torch.Size([40, 333])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 333]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 65, 200])
Passage Length:  65
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 65, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 65, 22])
Passage ques attention dim:  torch.Size([40, 65, 22])
Passage question vectors dim:  torch.Size([40, 65, 200])
Question Passage Similarity dim:  torch.Size([40, 65])
Question passage attention dim:  torch.Size([40, 65])
Final Merged Passage dim:  torch.Size([40, 65, 800])
Modeled Passage dim:  torch.Size([40, 65, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 65, 1000])
Span start logits:  torch.Size([40, 65])
span start probs dim:  torch.Size([40, 65])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 65]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 89, 200])
Passage Length:  89
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 89, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 89, 18])
Passage ques attention dim:  torch.Size([40, 89, 18])
Passage question vectors dim:  torch.Size([40, 89, 200])
Question Passage Similarity dim:  torch.Size([40, 89])
Question passage attention dim:  torch.Size([40, 89])
Final Merged Passage dim:  torch.Size([40, 89, 800])
Modeled Passage dim:  torch.Size([40, 89, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 89, 1000])
Span start logits:  torch.Size([40, 89])
span start probs dim:  torch.Size([40, 89])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 89]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 20])
Passage ques attention dim:  torch.Size([40, 111, 20])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 230, 200])
Passage Length:  230
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 230, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 230, 18])
Passage ques attention dim:  torch.Size([40, 230, 18])
Passage question vectors dim:  torch.Size([40, 230, 200])
Question Passage Similarity dim:  torch.Size([40, 230])
Question passage attention dim:  torch.Size([40, 230])
Final Merged Passage dim:  torch.Size([40, 230, 800])
Modeled Passage dim:  torch.Size([40, 230, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 230, 1000])
Span start logits:  torch.Size([40, 230])
span start probs dim:  torch.Size([40, 230])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 230]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 83, 200])
Passage Length:  83
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 83, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 83, 22])
Passage ques attention dim:  torch.Size([40, 83, 22])
Passage question vectors dim:  torch.Size([40, 83, 200])
Question Passage Similarity dim:  torch.Size([40, 83])
Question passage attention dim:  torch.Size([40, 83])
Final Merged Passage dim:  torch.Size([40, 83, 800])
Modeled Passage dim:  torch.Size([40, 83, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 83, 1000])
Span start logits:  torch.Size([40, 83])
span start probs dim:  torch.Size([40, 83])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 83]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 20])
Passage ques attention dim:  torch.Size([40, 124, 20])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 47, 200])
Passage Length:  47
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 47, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 47, 21])
Passage ques attention dim:  torch.Size([40, 47, 21])
Passage question vectors dim:  torch.Size([40, 47, 200])
Question Passage Similarity dim:  torch.Size([40, 47])
Question passage attention dim:  torch.Size([40, 47])
Final Merged Passage dim:  torch.Size([40, 47, 800])
Modeled Passage dim:  torch.Size([40, 47, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 47, 1000])
Span start logits:  torch.Size([40, 47])
span start probs dim:  torch.Size([40, 47])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 47]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 22])
Passage ques attention dim:  torch.Size([40, 184, 22])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 20])
Passage ques attention dim:  torch.Size([40, 137, 20])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 354, 200])
Passage Length:  354
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 354, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 354, 18])
Passage ques attention dim:  torch.Size([40, 354, 18])
Passage question vectors dim:  torch.Size([40, 354, 200])
Question Passage Similarity dim:  torch.Size([40, 354])
Question passage attention dim:  torch.Size([40, 354])
Final Merged Passage dim:  torch.Size([40, 354, 800])
Modeled Passage dim:  torch.Size([40, 354, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 354, 1000])
Span start logits:  torch.Size([40, 354])
span start probs dim:  torch.Size([40, 354])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 354]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 24])
Passage ques attention dim:  torch.Size([40, 155, 24])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 65, 200])
Passage Length:  65
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 65, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 65, 20])
Passage ques attention dim:  torch.Size([40, 65, 20])
Passage question vectors dim:  torch.Size([40, 65, 200])
Question Passage Similarity dim:  torch.Size([40, 65])
Question passage attention dim:  torch.Size([40, 65])
Final Merged Passage dim:  torch.Size([40, 65, 800])
Modeled Passage dim:  torch.Size([40, 65, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 65, 1000])
Span start logits:  torch.Size([40, 65])
span start probs dim:  torch.Size([40, 65])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 65]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 24])
Passage ques attention dim:  torch.Size([40, 138, 24])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 18])
Passage ques attention dim:  torch.Size([40, 103, 18])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 21])
Passage ques attention dim:  torch.Size([40, 234, 21])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 224, 200])
Passage Length:  224
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 224, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 224, 20])
Passage ques attention dim:  torch.Size([40, 224, 20])
Passage question vectors dim:  torch.Size([40, 224, 200])
Question Passage Similarity dim:  torch.Size([40, 224])
Question passage attention dim:  torch.Size([40, 224])
Final Merged Passage dim:  torch.Size([40, 224, 800])
Modeled Passage dim:  torch.Size([40, 224, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 224, 1000])
Span start logits:  torch.Size([40, 224])
span start probs dim:  torch.Size([40, 224])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 224]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 25])
Passage ques attention dim:  torch.Size([40, 175, 25])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 22])
Passage ques attention dim:  torch.Size([40, 172, 22])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 19])
Passage ques attention dim:  torch.Size([40, 198, 19])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 23])
Passage ques attention dim:  torch.Size([40, 117, 23])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 216, 200])
Passage Length:  216
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 216, 19])
Passage ques attention dim:  torch.Size([40, 216, 19])
Passage question vectors dim:  torch.Size([40, 216, 200])
Question Passage Similarity dim:  torch.Size([40, 216])
Question passage attention dim:  torch.Size([40, 216])
Final Merged Passage dim:  torch.Size([40, 216, 800])
Modeled Passage dim:  torch.Size([40, 216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 216, 1000])
Span start logits:  torch.Size([40, 216])
span start probs dim:  torch.Size([40, 216])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 216]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 26])
Passage ques attention dim:  torch.Size([40, 158, 26])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 84, 19])
Passage ques attention dim:  torch.Size([40, 84, 19])
Passage question vectors dim:  torch.Size([40, 84, 200])
Question Passage Similarity dim:  torch.Size([40, 84])
Question passage attention dim:  torch.Size([40, 84])
Final Merged Passage dim:  torch.Size([40, 84, 800])
Modeled Passage dim:  torch.Size([40, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 84, 1000])
Span start logits:  torch.Size([40, 84])
span start probs dim:  torch.Size([40, 84])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 84]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 558, 200])
Passage Length:  558
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 558, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 558, 20])
Passage ques attention dim:  torch.Size([40, 558, 20])
Passage question vectors dim:  torch.Size([40, 558, 200])
Question Passage Similarity dim:  torch.Size([40, 558])
Question passage attention dim:  torch.Size([40, 558])
Final Merged Passage dim:  torch.Size([40, 558, 800])
Modeled Passage dim:  torch.Size([40, 558, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 558, 1000])
Span start logits:  torch.Size([40, 558])
span start probs dim:  torch.Size([40, 558])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 558]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 276, 200])
Passage Length:  276
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 276, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 276, 22])
Passage ques attention dim:  torch.Size([40, 276, 22])
Passage question vectors dim:  torch.Size([40, 276, 200])
Question Passage Similarity dim:  torch.Size([40, 276])
Question passage attention dim:  torch.Size([40, 276])
Final Merged Passage dim:  torch.Size([40, 276, 800])
Modeled Passage dim:  torch.Size([40, 276, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 276, 1000])
Span start logits:  torch.Size([40, 276])
span start probs dim:  torch.Size([40, 276])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 276]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 20])
Passage ques attention dim:  torch.Size([40, 97, 20])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 61, 200])
Passage Length:  61
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 61, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 61, 23])
Passage ques attention dim:  torch.Size([40, 61, 23])
Passage question vectors dim:  torch.Size([40, 61, 200])
Question Passage Similarity dim:  torch.Size([40, 61])
Question passage attention dim:  torch.Size([40, 61])
Final Merged Passage dim:  torch.Size([40, 61, 800])
Modeled Passage dim:  torch.Size([40, 61, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 61, 1000])
Span start logits:  torch.Size([40, 61])
span start probs dim:  torch.Size([40, 61])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 61]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 274, 200])
Passage Length:  274
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 274, 23])
Passage ques attention dim:  torch.Size([40, 274, 23])
Passage question vectors dim:  torch.Size([40, 274, 200])
Question Passage Similarity dim:  torch.Size([40, 274])
Question passage attention dim:  torch.Size([40, 274])
Final Merged Passage dim:  torch.Size([40, 274, 800])
Modeled Passage dim:  torch.Size([40, 274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 274, 1000])
Span start logits:  torch.Size([40, 274])
span start probs dim:  torch.Size([40, 274])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 274]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 207, 22])
Passage ques attention dim:  torch.Size([40, 207, 22])
Passage question vectors dim:  torch.Size([40, 207, 200])
Question Passage Similarity dim:  torch.Size([40, 207])
Question passage attention dim:  torch.Size([40, 207])
Final Merged Passage dim:  torch.Size([40, 207, 800])
Modeled Passage dim:  torch.Size([40, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 207, 1000])
Span start logits:  torch.Size([40, 207])
span start probs dim:  torch.Size([40, 207])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 207]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 20])
Passage ques attention dim:  torch.Size([40, 106, 20])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 23])
Passage ques attention dim:  torch.Size([40, 120, 23])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 23])
Passage ques attention dim:  torch.Size([40, 153, 23])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 20])
Passage ques attention dim:  torch.Size([40, 100, 20])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 20])
Passage ques attention dim:  torch.Size([40, 148, 20])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 299, 200])
Passage Length:  299
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 299, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 299, 20])
Passage ques attention dim:  torch.Size([40, 299, 20])
Passage question vectors dim:  torch.Size([40, 299, 200])
Question Passage Similarity dim:  torch.Size([40, 299])
Question passage attention dim:  torch.Size([40, 299])
Final Merged Passage dim:  torch.Size([40, 299, 800])
Modeled Passage dim:  torch.Size([40, 299, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 299, 1000])
Span start logits:  torch.Size([40, 299])
span start probs dim:  torch.Size([40, 299])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 299]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 21])
Passage ques attention dim:  torch.Size([40, 129, 21])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 77, 200])
Passage Length:  77
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 77, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 77, 19])
Passage ques attention dim:  torch.Size([40, 77, 19])
Passage question vectors dim:  torch.Size([40, 77, 200])
Question Passage Similarity dim:  torch.Size([40, 77])
Question passage attention dim:  torch.Size([40, 77])
Final Merged Passage dim:  torch.Size([40, 77, 800])
Modeled Passage dim:  torch.Size([40, 77, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 77, 1000])
Span start logits:  torch.Size([40, 77])
span start probs dim:  torch.Size([40, 77])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 77]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 31])
Passage ques attention dim:  torch.Size([40, 161, 31])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 19])
Passage ques attention dim:  torch.Size([40, 107, 19])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 20])
Passage ques attention dim:  torch.Size([40, 171, 20])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 78, 200])
Passage Length:  78
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 78, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 78, 18])
Passage ques attention dim:  torch.Size([40, 78, 18])
Passage question vectors dim:  torch.Size([40, 78, 200])
Question Passage Similarity dim:  torch.Size([40, 78])
Question passage attention dim:  torch.Size([40, 78])
Final Merged Passage dim:  torch.Size([40, 78, 800])
Modeled Passage dim:  torch.Size([40, 78, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 78, 1000])
Span start logits:  torch.Size([40, 78])
span start probs dim:  torch.Size([40, 78])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 78]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 41, 200])
Passage Length:  41
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 41, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 41, 31])
Passage ques attention dim:  torch.Size([40, 41, 31])
Passage question vectors dim:  torch.Size([40, 41, 200])
Question Passage Similarity dim:  torch.Size([40, 41])
Question passage attention dim:  torch.Size([40, 41])
Final Merged Passage dim:  torch.Size([40, 41, 800])
Modeled Passage dim:  torch.Size([40, 41, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 41, 1000])
Span start logits:  torch.Size([40, 41])
span start probs dim:  torch.Size([40, 41])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 41]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 20])
Passage ques attention dim:  torch.Size([40, 144, 20])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 190, 21])
Passage ques attention dim:  torch.Size([40, 190, 21])
Passage question vectors dim:  torch.Size([40, 190, 200])
Question Passage Similarity dim:  torch.Size([40, 190])
Question passage attention dim:  torch.Size([40, 190])
Final Merged Passage dim:  torch.Size([40, 190, 800])
Modeled Passage dim:  torch.Size([40, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 190, 1000])
Span start logits:  torch.Size([40, 190])
span start probs dim:  torch.Size([40, 190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 16])
Passage ques attention dim:  torch.Size([40, 126, 16])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 20])
Passage ques attention dim:  torch.Size([40, 120, 20])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 24])
Passage ques attention dim:  torch.Size([40, 111, 24])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 92, 19])
Passage ques attention dim:  torch.Size([40, 92, 19])
Passage question vectors dim:  torch.Size([40, 92, 200])
Question Passage Similarity dim:  torch.Size([40, 92])
Question passage attention dim:  torch.Size([40, 92])
Final Merged Passage dim:  torch.Size([40, 92, 800])
Modeled Passage dim:  torch.Size([40, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 92, 1000])
Span start logits:  torch.Size([40, 92])
span start probs dim:  torch.Size([40, 92])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 92]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 20])
Passage ques attention dim:  torch.Size([40, 117, 20])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 21])
Passage ques attention dim:  torch.Size([40, 117, 21])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 25])
Passage ques attention dim:  torch.Size([40, 134, 25])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 22])
Passage ques attention dim:  torch.Size([40, 131, 22])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 44, 200])
Passage Length:  44
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 44, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 44, 33])
Passage ques attention dim:  torch.Size([40, 44, 33])
Passage question vectors dim:  torch.Size([40, 44, 200])
Question Passage Similarity dim:  torch.Size([40, 44])
Question passage attention dim:  torch.Size([40, 44])
Final Merged Passage dim:  torch.Size([40, 44, 800])
Modeled Passage dim:  torch.Size([40, 44, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 44, 1000])
Span start logits:  torch.Size([40, 44])
span start probs dim:  torch.Size([40, 44])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 44]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 27])
Passage ques attention dim:  torch.Size([40, 123, 27])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 22])
Passage ques attention dim:  torch.Size([40, 116, 22])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 47, 200])
Passage Length:  47
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 47, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 47, 29])
Passage ques attention dim:  torch.Size([40, 47, 29])
Passage question vectors dim:  torch.Size([40, 47, 200])
Question Passage Similarity dim:  torch.Size([40, 47])
Question passage attention dim:  torch.Size([40, 47])
Final Merged Passage dim:  torch.Size([40, 47, 800])
Modeled Passage dim:  torch.Size([40, 47, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 47, 1000])
Span start logits:  torch.Size([40, 47])
span start probs dim:  torch.Size([40, 47])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 47]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 19])
Passage ques attention dim:  torch.Size([40, 184, 19])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 32])
Passage ques attention dim:  torch.Size([40, 132, 32])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 18])
Passage ques attention dim:  torch.Size([40, 179, 18])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 25])
Passage ques attention dim:  torch.Size([40, 165, 25])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 17])
Passage ques attention dim:  torch.Size([40, 155, 17])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 266, 200])
Passage Length:  266
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 266, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 266, 18])
Passage ques attention dim:  torch.Size([40, 266, 18])
Passage question vectors dim:  torch.Size([40, 266, 200])
Question Passage Similarity dim:  torch.Size([40, 266])
Question passage attention dim:  torch.Size([40, 266])
Final Merged Passage dim:  torch.Size([40, 266, 800])
Modeled Passage dim:  torch.Size([40, 266, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 266, 1000])
Span start logits:  torch.Size([40, 266])
span start probs dim:  torch.Size([40, 266])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 266]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 26])
Passage ques attention dim:  torch.Size([40, 99, 26])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 322, 200])
Passage Length:  322
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 322, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 322, 19])
Passage ques attention dim:  torch.Size([40, 322, 19])
Passage question vectors dim:  torch.Size([40, 322, 200])
Question Passage Similarity dim:  torch.Size([40, 322])
Question passage attention dim:  torch.Size([40, 322])
Final Merged Passage dim:  torch.Size([40, 322, 800])
Modeled Passage dim:  torch.Size([40, 322, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 322, 1000])
Span start logits:  torch.Size([40, 322])
span start probs dim:  torch.Size([40, 322])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 322]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 34, 200])
Passage Length:  34
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 34, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 34, 19])
Passage ques attention dim:  torch.Size([40, 34, 19])
Passage question vectors dim:  torch.Size([40, 34, 200])
Question Passage Similarity dim:  torch.Size([40, 34])
Question passage attention dim:  torch.Size([40, 34])
Final Merged Passage dim:  torch.Size([40, 34, 800])
Modeled Passage dim:  torch.Size([40, 34, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 34, 1000])
Span start logits:  torch.Size([40, 34])
span start probs dim:  torch.Size([40, 34])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 34]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 21])
Passage ques attention dim:  torch.Size([40, 171, 21])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 28])
Passage ques attention dim:  torch.Size([40, 143, 28])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 18])
Passage ques attention dim:  torch.Size([40, 109, 18])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 20])
Passage ques attention dim:  torch.Size([40, 208, 20])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 27])
Passage ques attention dim:  torch.Size([40, 189, 27])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 26])
Passage ques attention dim:  torch.Size([40, 234, 26])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 20])
Passage ques attention dim:  torch.Size([40, 108, 20])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 20])
Passage ques attention dim:  torch.Size([40, 136, 20])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 20])
Passage ques attention dim:  torch.Size([40, 111, 20])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 18])
Passage ques attention dim:  torch.Size([40, 194, 18])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 193, 20])
Passage ques attention dim:  torch.Size([40, 193, 20])
Passage question vectors dim:  torch.Size([40, 193, 200])
Question Passage Similarity dim:  torch.Size([40, 193])
Question passage attention dim:  torch.Size([40, 193])
Final Merged Passage dim:  torch.Size([40, 193, 800])
Modeled Passage dim:  torch.Size([40, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 193, 1000])
Span start logits:  torch.Size([40, 193])
span start probs dim:  torch.Size([40, 193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 24])
Passage ques attention dim:  torch.Size([40, 151, 24])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 20])
Passage ques attention dim:  torch.Size([40, 194, 20])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 24])
Passage ques attention dim:  torch.Size([40, 120, 24])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 24])
Passage ques attention dim:  torch.Size([40, 167, 24])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 27])
Passage ques attention dim:  torch.Size([40, 128, 27])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 22])
Passage ques attention dim:  torch.Size([40, 143, 22])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 24])
Passage ques attention dim:  torch.Size([40, 163, 24])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 216, 200])
Passage Length:  216
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 216, 28])
Passage ques attention dim:  torch.Size([40, 216, 28])
Passage question vectors dim:  torch.Size([40, 216, 200])
Question Passage Similarity dim:  torch.Size([40, 216])
Question passage attention dim:  torch.Size([40, 216])
Final Merged Passage dim:  torch.Size([40, 216, 800])
Modeled Passage dim:  torch.Size([40, 216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 216, 1000])
Span start logits:  torch.Size([40, 216])
span start probs dim:  torch.Size([40, 216])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 216]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 19])
Passage ques attention dim:  torch.Size([40, 129, 19])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 22])
Passage ques attention dim:  torch.Size([40, 122, 22])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 51, 200])
Passage Length:  51
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 51, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 51, 29])
Passage ques attention dim:  torch.Size([40, 51, 29])
Passage question vectors dim:  torch.Size([40, 51, 200])
Question Passage Similarity dim:  torch.Size([40, 51])
Question passage attention dim:  torch.Size([40, 51])
Final Merged Passage dim:  torch.Size([40, 51, 800])
Modeled Passage dim:  torch.Size([40, 51, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 51, 1000])
Span start logits:  torch.Size([40, 51])
span start probs dim:  torch.Size([40, 51])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 51]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 24])
Passage ques attention dim:  torch.Size([40, 185, 24])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 25])
Passage ques attention dim:  torch.Size([40, 173, 25])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 25])
Passage ques attention dim:  torch.Size([40, 133, 25])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 27])
Passage ques attention dim:  torch.Size([40, 101, 27])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 23])
Passage ques attention dim:  torch.Size([40, 196, 23])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 20])
Passage ques attention dim:  torch.Size([40, 98, 20])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 221, 22])
Passage ques attention dim:  torch.Size([40, 221, 22])
Passage question vectors dim:  torch.Size([40, 221, 200])
Question Passage Similarity dim:  torch.Size([40, 221])
Question passage attention dim:  torch.Size([40, 221])
Final Merged Passage dim:  torch.Size([40, 221, 800])
Modeled Passage dim:  torch.Size([40, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 221, 1000])
Span start logits:  torch.Size([40, 221])
span start probs dim:  torch.Size([40, 221])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 221]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 81, 200])
Passage Length:  81
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 81, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 81, 20])
Passage ques attention dim:  torch.Size([40, 81, 20])
Passage question vectors dim:  torch.Size([40, 81, 200])
Question Passage Similarity dim:  torch.Size([40, 81])
Question passage attention dim:  torch.Size([40, 81])
Final Merged Passage dim:  torch.Size([40, 81, 800])
Modeled Passage dim:  torch.Size([40, 81, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 81, 1000])
Span start logits:  torch.Size([40, 81])
span start probs dim:  torch.Size([40, 81])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 81]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 19])
Passage ques attention dim:  torch.Size([40, 130, 19])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 91, 19])
Passage ques attention dim:  torch.Size([40, 91, 19])
Passage question vectors dim:  torch.Size([40, 91, 200])
Question Passage Similarity dim:  torch.Size([40, 91])
Question passage attention dim:  torch.Size([40, 91])
Final Merged Passage dim:  torch.Size([40, 91, 800])
Modeled Passage dim:  torch.Size([40, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 91, 1000])
Span start logits:  torch.Size([40, 91])
span start probs dim:  torch.Size([40, 91])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 91]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 92, 200])
Passage Length:  92
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 92, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 92, 28])
Passage ques attention dim:  torch.Size([40, 92, 28])
Passage question vectors dim:  torch.Size([40, 92, 200])
Question Passage Similarity dim:  torch.Size([40, 92])
Question passage attention dim:  torch.Size([40, 92])
Final Merged Passage dim:  torch.Size([40, 92, 800])
Modeled Passage dim:  torch.Size([40, 92, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 92, 1000])
Span start logits:  torch.Size([40, 92])
span start probs dim:  torch.Size([40, 92])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 92]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 20])
Passage ques attention dim:  torch.Size([40, 113, 20])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 21])
Passage ques attention dim:  torch.Size([40, 98, 21])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 21])
Passage ques attention dim:  torch.Size([40, 215, 21])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 27])
Passage ques attention dim:  torch.Size([40, 105, 27])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 16])
Passage ques attention dim:  torch.Size([40, 142, 16])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 19])
Passage ques attention dim:  torch.Size([40, 134, 19])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 18])
Passage ques attention dim:  torch.Size([40, 109, 18])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 60, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 60, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 60])
Passage ques attention dim:  torch.Size([40, 169, 60])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 26])
Passage ques attention dim:  torch.Size([40, 173, 26])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 26])
Passage ques attention dim:  torch.Size([40, 194, 26])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 21])
Passage ques attention dim:  torch.Size([40, 110, 21])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 30])
Passage ques attention dim:  torch.Size([40, 126, 30])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 188, 20])
Passage ques attention dim:  torch.Size([40, 188, 20])
Passage question vectors dim:  torch.Size([40, 188, 200])
Question Passage Similarity dim:  torch.Size([40, 188])
Question passage attention dim:  torch.Size([40, 188])
Final Merged Passage dim:  torch.Size([40, 188, 800])
Modeled Passage dim:  torch.Size([40, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 188, 1000])
Span start logits:  torch.Size([40, 188])
span start probs dim:  torch.Size([40, 188])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 188]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 20])
Passage ques attention dim:  torch.Size([40, 173, 20])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 18])
Passage ques attention dim:  torch.Size([40, 155, 18])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 18])
Passage ques attention dim:  torch.Size([40, 125, 18])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 25])
Passage ques attention dim:  torch.Size([40, 97, 25])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 23])
Passage ques attention dim:  torch.Size([40, 177, 23])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 21])
Passage ques attention dim:  torch.Size([40, 173, 21])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 28])
Passage ques attention dim:  torch.Size([40, 163, 28])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 20])
Passage ques attention dim:  torch.Size([40, 128, 20])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 19])
Passage ques attention dim:  torch.Size([40, 130, 19])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 203, 200])
Passage Length:  203
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 203, 20])
Passage ques attention dim:  torch.Size([40, 203, 20])
Passage question vectors dim:  torch.Size([40, 203, 200])
Question Passage Similarity dim:  torch.Size([40, 203])
Question passage attention dim:  torch.Size([40, 203])
Final Merged Passage dim:  torch.Size([40, 203, 800])
Modeled Passage dim:  torch.Size([40, 203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 203, 1000])
Span start logits:  torch.Size([40, 203])
span start probs dim:  torch.Size([40, 203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 34, 200])
Passage Length:  34
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 34, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 34, 20])
Passage ques attention dim:  torch.Size([40, 34, 20])
Passage question vectors dim:  torch.Size([40, 34, 200])
Question Passage Similarity dim:  torch.Size([40, 34])
Question passage attention dim:  torch.Size([40, 34])
Final Merged Passage dim:  torch.Size([40, 34, 800])
Modeled Passage dim:  torch.Size([40, 34, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 34, 1000])
Span start logits:  torch.Size([40, 34])
span start probs dim:  torch.Size([40, 34])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 34]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 23])
Passage ques attention dim:  torch.Size([40, 218, 23])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 84, 25])
Passage ques attention dim:  torch.Size([40, 84, 25])
Passage question vectors dim:  torch.Size([40, 84, 200])
Question Passage Similarity dim:  torch.Size([40, 84])
Question passage attention dim:  torch.Size([40, 84])
Final Merged Passage dim:  torch.Size([40, 84, 800])
Modeled Passage dim:  torch.Size([40, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 84, 1000])
Span start logits:  torch.Size([40, 84])
span start probs dim:  torch.Size([40, 84])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 84]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 22])
Passage ques attention dim:  torch.Size([40, 104, 22])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 19])
Passage ques attention dim:  torch.Size([40, 208, 19])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 21])
Passage ques attention dim:  torch.Size([40, 137, 21])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 16])
Passage ques attention dim:  torch.Size([40, 159, 16])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 18])
Passage ques attention dim:  torch.Size([40, 147, 18])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 71, 17])
Passage ques attention dim:  torch.Size([40, 71, 17])
Passage question vectors dim:  torch.Size([40, 71, 200])
Question Passage Similarity dim:  torch.Size([40, 71])
Question passage attention dim:  torch.Size([40, 71])
Final Merged Passage dim:  torch.Size([40, 71, 800])
Modeled Passage dim:  torch.Size([40, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 71, 1000])
Span start logits:  torch.Size([40, 71])
span start probs dim:  torch.Size([40, 71])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 71]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 213, 19])
Passage ques attention dim:  torch.Size([40, 213, 19])
Passage question vectors dim:  torch.Size([40, 213, 200])
Question Passage Similarity dim:  torch.Size([40, 213])
Question passage attention dim:  torch.Size([40, 213])
Final Merged Passage dim:  torch.Size([40, 213, 800])
Modeled Passage dim:  torch.Size([40, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 213, 1000])
Span start logits:  torch.Size([40, 213])
span start probs dim:  torch.Size([40, 213])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 213]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 30])
Passage ques attention dim:  torch.Size([40, 141, 30])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 20])
Passage ques attention dim:  torch.Size([40, 166, 20])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 20])
Passage ques attention dim:  torch.Size([40, 120, 20])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 58, 200])
Passage Length:  58
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 58, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 58, 24])
Passage ques attention dim:  torch.Size([40, 58, 24])
Passage question vectors dim:  torch.Size([40, 58, 200])
Question Passage Similarity dim:  torch.Size([40, 58])
Question passage attention dim:  torch.Size([40, 58])
Final Merged Passage dim:  torch.Size([40, 58, 800])
Modeled Passage dim:  torch.Size([40, 58, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 58, 1000])
Span start logits:  torch.Size([40, 58])
span start probs dim:  torch.Size([40, 58])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 58]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 254, 26])
Passage ques attention dim:  torch.Size([40, 254, 26])
Passage question vectors dim:  torch.Size([40, 254, 200])
Question Passage Similarity dim:  torch.Size([40, 254])
Question passage attention dim:  torch.Size([40, 254])
Final Merged Passage dim:  torch.Size([40, 254, 800])
Modeled Passage dim:  torch.Size([40, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 254, 1000])
Span start logits:  torch.Size([40, 254])
span start probs dim:  torch.Size([40, 254])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 254]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 314, 200])
Passage Length:  314
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 314, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 314, 21])
Passage ques attention dim:  torch.Size([40, 314, 21])
Passage question vectors dim:  torch.Size([40, 314, 200])
Question Passage Similarity dim:  torch.Size([40, 314])
Question passage attention dim:  torch.Size([40, 314])
Final Merged Passage dim:  torch.Size([40, 314, 800])
Modeled Passage dim:  torch.Size([40, 314, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 314, 1000])
Span start logits:  torch.Size([40, 314])
span start probs dim:  torch.Size([40, 314])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 314]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 20])
Passage ques attention dim:  torch.Size([40, 218, 20])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 199, 200])
Passage Length:  199
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 199, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 199, 17])
Passage ques attention dim:  torch.Size([40, 199, 17])
Passage question vectors dim:  torch.Size([40, 199, 200])
Question Passage Similarity dim:  torch.Size([40, 199])
Question passage attention dim:  torch.Size([40, 199])
Final Merged Passage dim:  torch.Size([40, 199, 800])
Modeled Passage dim:  torch.Size([40, 199, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 199, 1000])
Span start logits:  torch.Size([40, 199])
span start probs dim:  torch.Size([40, 199])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 199]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 190, 20])
Passage ques attention dim:  torch.Size([40, 190, 20])
Passage question vectors dim:  torch.Size([40, 190, 200])
Question Passage Similarity dim:  torch.Size([40, 190])
Question passage attention dim:  torch.Size([40, 190])
Final Merged Passage dim:  torch.Size([40, 190, 800])
Modeled Passage dim:  torch.Size([40, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 190, 1000])
Span start logits:  torch.Size([40, 190])
span start probs dim:  torch.Size([40, 190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 225, 22])
Passage ques attention dim:  torch.Size([40, 225, 22])
Passage question vectors dim:  torch.Size([40, 225, 200])
Question Passage Similarity dim:  torch.Size([40, 225])
Question passage attention dim:  torch.Size([40, 225])
Final Merged Passage dim:  torch.Size([40, 225, 800])
Modeled Passage dim:  torch.Size([40, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 225, 1000])
Span start logits:  torch.Size([40, 225])
span start probs dim:  torch.Size([40, 225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 23])
Passage ques attention dim:  torch.Size([40, 159, 23])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 255, 200])
Passage Length:  255
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 255, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 255, 23])
Passage ques attention dim:  torch.Size([40, 255, 23])
Passage question vectors dim:  torch.Size([40, 255, 200])
Question Passage Similarity dim:  torch.Size([40, 255])
Question passage attention dim:  torch.Size([40, 255])
Final Merged Passage dim:  torch.Size([40, 255, 800])
Modeled Passage dim:  torch.Size([40, 255, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 255, 1000])
Span start logits:  torch.Size([40, 255])
span start probs dim:  torch.Size([40, 255])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 255]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 38, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 38, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 38])
Passage ques attention dim:  torch.Size([40, 106, 38])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 19])
Passage ques attention dim:  torch.Size([40, 121, 19])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 21])
Passage ques attention dim:  torch.Size([40, 169, 21])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 22])
Passage ques attention dim:  torch.Size([40, 146, 22])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 27])
Passage ques attention dim:  torch.Size([40, 159, 27])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 20])
Passage ques attention dim:  torch.Size([40, 136, 20])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 23])
Passage ques attention dim:  torch.Size([40, 105, 23])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 28])
Passage ques attention dim:  torch.Size([40, 132, 28])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 22])
Passage ques attention dim:  torch.Size([40, 134, 22])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 21])
Passage ques attention dim:  torch.Size([40, 157, 21])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 30])
Passage ques attention dim:  torch.Size([40, 140, 30])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 21])
Passage ques attention dim:  torch.Size([40, 164, 21])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 23])
Passage ques attention dim:  torch.Size([40, 149, 23])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 21])
Passage ques attention dim:  torch.Size([40, 121, 21])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 20])
Passage ques attention dim:  torch.Size([40, 114, 20])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 20])
Passage ques attention dim:  torch.Size([40, 138, 20])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 216, 200])
Passage Length:  216
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 216, 17])
Passage ques attention dim:  torch.Size([40, 216, 17])
Passage question vectors dim:  torch.Size([40, 216, 200])
Question Passage Similarity dim:  torch.Size([40, 216])
Question passage attention dim:  torch.Size([40, 216])
Final Merged Passage dim:  torch.Size([40, 216, 800])
Modeled Passage dim:  torch.Size([40, 216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 216, 1000])
Span start logits:  torch.Size([40, 216])
span start probs dim:  torch.Size([40, 216])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 216]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 53, 200])
Passage Length:  53
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 53, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 53, 25])
Passage ques attention dim:  torch.Size([40, 53, 25])
Passage question vectors dim:  torch.Size([40, 53, 200])
Question Passage Similarity dim:  torch.Size([40, 53])
Question passage attention dim:  torch.Size([40, 53])
Final Merged Passage dim:  torch.Size([40, 53, 800])
Modeled Passage dim:  torch.Size([40, 53, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 53, 1000])
Span start logits:  torch.Size([40, 53])
span start probs dim:  torch.Size([40, 53])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 53]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 17])
Passage ques attention dim:  torch.Size([40, 127, 17])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 18])
Passage ques attention dim:  torch.Size([40, 117, 18])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 396, 200])
Passage Length:  396
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 396, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 396, 22])
Passage ques attention dim:  torch.Size([40, 396, 22])
Passage question vectors dim:  torch.Size([40, 396, 200])
Question Passage Similarity dim:  torch.Size([40, 396])
Question passage attention dim:  torch.Size([40, 396])
Final Merged Passage dim:  torch.Size([40, 396, 800])
Modeled Passage dim:  torch.Size([40, 396, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 396, 1000])
Span start logits:  torch.Size([40, 396])
span start probs dim:  torch.Size([40, 396])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 396]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 26])
Passage ques attention dim:  torch.Size([40, 155, 26])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 256, 200])
Passage Length:  256
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 256, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 256, 24])
Passage ques attention dim:  torch.Size([40, 256, 24])
Passage question vectors dim:  torch.Size([40, 256, 200])
Question Passage Similarity dim:  torch.Size([40, 256])
Question passage attention dim:  torch.Size([40, 256])
Final Merged Passage dim:  torch.Size([40, 256, 800])
Modeled Passage dim:  torch.Size([40, 256, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 256, 1000])
Span start logits:  torch.Size([40, 256])
span start probs dim:  torch.Size([40, 256])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 256]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 18])
Passage ques attention dim:  torch.Size([40, 137, 18])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 21])
Passage ques attention dim:  torch.Size([40, 208, 21])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 18])
Passage ques attention dim:  torch.Size([40, 132, 18])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 18])
Passage ques attention dim:  torch.Size([40, 168, 18])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 19])
Passage ques attention dim:  torch.Size([40, 115, 19])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 22])
Passage ques attention dim:  torch.Size([40, 148, 22])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 28])
Passage ques attention dim:  torch.Size([40, 149, 28])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 24])
Passage ques attention dim:  torch.Size([40, 173, 24])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 19])
Passage ques attention dim:  torch.Size([40, 119, 19])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 45, 200])
Passage Length:  45
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 45, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 45, 22])
Passage ques attention dim:  torch.Size([40, 45, 22])
Passage question vectors dim:  torch.Size([40, 45, 200])
Question Passage Similarity dim:  torch.Size([40, 45])
Question passage attention dim:  torch.Size([40, 45])
Final Merged Passage dim:  torch.Size([40, 45, 800])
Modeled Passage dim:  torch.Size([40, 45, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 45, 1000])
Span start logits:  torch.Size([40, 45])
span start probs dim:  torch.Size([40, 45])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 45]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 16])
Passage ques attention dim:  torch.Size([40, 159, 16])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 22])
Passage ques attention dim:  torch.Size([40, 150, 22])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 22])
Passage ques attention dim:  torch.Size([40, 158, 22])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 18])
Passage ques attention dim:  torch.Size([40, 114, 18])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 20])
Passage ques attention dim:  torch.Size([40, 208, 20])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 22])
Passage ques attention dim:  torch.Size([40, 121, 22])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 24])
Passage ques attention dim:  torch.Size([40, 160, 24])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 91, 27])
Passage ques attention dim:  torch.Size([40, 91, 27])
Passage question vectors dim:  torch.Size([40, 91, 200])
Question Passage Similarity dim:  torch.Size([40, 91])
Question passage attention dim:  torch.Size([40, 91])
Final Merged Passage dim:  torch.Size([40, 91, 800])
Modeled Passage dim:  torch.Size([40, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 91, 1000])
Span start logits:  torch.Size([40, 91])
span start probs dim:  torch.Size([40, 91])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 91]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 33])
Passage ques attention dim:  torch.Size([40, 126, 33])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 56, 200])
Passage Length:  56
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 56, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 56, 32])
Passage ques attention dim:  torch.Size([40, 56, 32])
Passage question vectors dim:  torch.Size([40, 56, 200])
Question Passage Similarity dim:  torch.Size([40, 56])
Question passage attention dim:  torch.Size([40, 56])
Final Merged Passage dim:  torch.Size([40, 56, 800])
Modeled Passage dim:  torch.Size([40, 56, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 56, 1000])
Span start logits:  torch.Size([40, 56])
span start probs dim:  torch.Size([40, 56])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 56]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 43, 200])
Passage Length:  43
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 43, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 43, 30])
Passage ques attention dim:  torch.Size([40, 43, 30])
Passage question vectors dim:  torch.Size([40, 43, 200])
Question Passage Similarity dim:  torch.Size([40, 43])
Question passage attention dim:  torch.Size([40, 43])
Final Merged Passage dim:  torch.Size([40, 43, 800])
Modeled Passage dim:  torch.Size([40, 43, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 43, 1000])
Span start logits:  torch.Size([40, 43])
span start probs dim:  torch.Size([40, 43])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 43]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 21])
Passage ques attention dim:  torch.Size([40, 101, 21])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 19])
Passage ques attention dim:  torch.Size([40, 113, 19])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 18])
Passage ques attention dim:  torch.Size([40, 100, 18])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 379, 25])
Passage ques attention dim:  torch.Size([40, 379, 25])
Passage question vectors dim:  torch.Size([40, 379, 200])
Question Passage Similarity dim:  torch.Size([40, 379])
Question passage attention dim:  torch.Size([40, 379])
Final Merged Passage dim:  torch.Size([40, 379, 800])
Modeled Passage dim:  torch.Size([40, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 379, 1000])
Span start logits:  torch.Size([40, 379])
span start probs dim:  torch.Size([40, 379])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 379]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 302, 200])
Passage Length:  302
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 302, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 302, 20])
Passage ques attention dim:  torch.Size([40, 302, 20])
Passage question vectors dim:  torch.Size([40, 302, 200])
Question Passage Similarity dim:  torch.Size([40, 302])
Question passage attention dim:  torch.Size([40, 302])
Final Merged Passage dim:  torch.Size([40, 302, 800])
Modeled Passage dim:  torch.Size([40, 302, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 302, 1000])
Span start logits:  torch.Size([40, 302])
span start probs dim:  torch.Size([40, 302])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 302]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 297, 23])
Passage ques attention dim:  torch.Size([40, 297, 23])
Passage question vectors dim:  torch.Size([40, 297, 200])
Question Passage Similarity dim:  torch.Size([40, 297])
Question passage attention dim:  torch.Size([40, 297])
Final Merged Passage dim:  torch.Size([40, 297, 800])
Modeled Passage dim:  torch.Size([40, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 297, 1000])
Span start logits:  torch.Size([40, 297])
span start probs dim:  torch.Size([40, 297])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 297]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 19])
Passage ques attention dim:  torch.Size([40, 140, 19])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 19])
Passage ques attention dim:  torch.Size([40, 114, 19])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 18])
Passage ques attention dim:  torch.Size([40, 155, 18])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 274, 200])
Passage Length:  274
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 274, 27])
Passage ques attention dim:  torch.Size([40, 274, 27])
Passage question vectors dim:  torch.Size([40, 274, 200])
Question Passage Similarity dim:  torch.Size([40, 274])
Question passage attention dim:  torch.Size([40, 274])
Final Merged Passage dim:  torch.Size([40, 274, 800])
Modeled Passage dim:  torch.Size([40, 274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 274, 1000])
Span start logits:  torch.Size([40, 274])
span start probs dim:  torch.Size([40, 274])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 274]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 89, 200])
Passage Length:  89
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 89, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 89, 26])
Passage ques attention dim:  torch.Size([40, 89, 26])
Passage question vectors dim:  torch.Size([40, 89, 200])
Question Passage Similarity dim:  torch.Size([40, 89])
Question passage attention dim:  torch.Size([40, 89])
Final Merged Passage dim:  torch.Size([40, 89, 800])
Modeled Passage dim:  torch.Size([40, 89, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 89, 1000])
Span start logits:  torch.Size([40, 89])
span start probs dim:  torch.Size([40, 89])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 89]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 31])
Passage ques attention dim:  torch.Size([40, 104, 31])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 206, 19])
Passage ques attention dim:  torch.Size([40, 206, 19])
Passage question vectors dim:  torch.Size([40, 206, 200])
Question Passage Similarity dim:  torch.Size([40, 206])
Question passage attention dim:  torch.Size([40, 206])
Final Merged Passage dim:  torch.Size([40, 206, 800])
Modeled Passage dim:  torch.Size([40, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 206, 1000])
Span start logits:  torch.Size([40, 206])
span start probs dim:  torch.Size([40, 206])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 206]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 22])
Passage ques attention dim:  torch.Size([40, 129, 22])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 21])
Passage ques attention dim:  torch.Size([40, 100, 21])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 209, 21])
Passage ques attention dim:  torch.Size([40, 209, 21])
Passage question vectors dim:  torch.Size([40, 209, 200])
Question Passage Similarity dim:  torch.Size([40, 209])
Question passage attention dim:  torch.Size([40, 209])
Final Merged Passage dim:  torch.Size([40, 209, 800])
Modeled Passage dim:  torch.Size([40, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 209, 1000])
Span start logits:  torch.Size([40, 209])
span start probs dim:  torch.Size([40, 209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 94, 23])
Passage ques attention dim:  torch.Size([40, 94, 23])
Passage question vectors dim:  torch.Size([40, 94, 200])
Question Passage Similarity dim:  torch.Size([40, 94])
Question passage attention dim:  torch.Size([40, 94])
Final Merged Passage dim:  torch.Size([40, 94, 800])
Modeled Passage dim:  torch.Size([40, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 94, 1000])
Span start logits:  torch.Size([40, 94])
span start probs dim:  torch.Size([40, 94])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 94]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 27])
Passage ques attention dim:  torch.Size([40, 172, 27])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 22])
Passage ques attention dim:  torch.Size([40, 146, 22])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 17])
Passage ques attention dim:  torch.Size([40, 150, 17])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 295, 200])
Passage Length:  295
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 295, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 295, 21])
Passage ques attention dim:  torch.Size([40, 295, 21])
Passage question vectors dim:  torch.Size([40, 295, 200])
Question Passage Similarity dim:  torch.Size([40, 295])
Question passage attention dim:  torch.Size([40, 295])
Final Merged Passage dim:  torch.Size([40, 295, 800])
Modeled Passage dim:  torch.Size([40, 295, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 295, 1000])
Span start logits:  torch.Size([40, 295])
span start probs dim:  torch.Size([40, 295])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 295]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 23])
Passage ques attention dim:  torch.Size([40, 133, 23])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 18])
Passage ques attention dim:  torch.Size([40, 130, 18])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 21])
Passage ques attention dim:  torch.Size([40, 107, 21])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 21])
Passage ques attention dim:  torch.Size([40, 180, 21])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 23])
Passage ques attention dim:  torch.Size([40, 101, 23])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 21])
Passage ques attention dim:  torch.Size([40, 142, 21])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 33, 200])
Passage Length:  33
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 33, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 33, 21])
Passage ques attention dim:  torch.Size([40, 33, 21])
Passage question vectors dim:  torch.Size([40, 33, 200])
Question Passage Similarity dim:  torch.Size([40, 33])
Question passage attention dim:  torch.Size([40, 33])
Final Merged Passage dim:  torch.Size([40, 33, 800])
Modeled Passage dim:  torch.Size([40, 33, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 33, 1000])
Span start logits:  torch.Size([40, 33])
span start probs dim:  torch.Size([40, 33])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 33]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 27])
Passage ques attention dim:  torch.Size([40, 109, 27])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 21])
Passage ques attention dim:  torch.Size([40, 116, 21])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 23])
Passage ques attention dim:  torch.Size([40, 119, 23])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 19])
Passage ques attention dim:  torch.Size([40, 130, 19])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 19])
Passage ques attention dim:  torch.Size([40, 121, 19])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 16])
Passage ques attention dim:  torch.Size([40, 122, 16])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 19])
Passage ques attention dim:  torch.Size([40, 141, 19])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 20])
Passage ques attention dim:  torch.Size([40, 166, 20])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 15])
Passage ques attention dim:  torch.Size([40, 174, 15])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 445, 200])
Passage Length:  445
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 445, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 445, 19])
Passage ques attention dim:  torch.Size([40, 445, 19])
Passage question vectors dim:  torch.Size([40, 445, 200])
Question Passage Similarity dim:  torch.Size([40, 445])
Question passage attention dim:  torch.Size([40, 445])
Final Merged Passage dim:  torch.Size([40, 445, 800])
Modeled Passage dim:  torch.Size([40, 445, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 445, 1000])
Span start logits:  torch.Size([40, 445])
span start probs dim:  torch.Size([40, 445])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 445]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 19])
Passage ques attention dim:  torch.Size([40, 175, 19])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 22])
Passage ques attention dim:  torch.Size([40, 122, 22])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 20])
Passage ques attention dim:  torch.Size([40, 130, 20])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 24])
Passage ques attention dim:  torch.Size([40, 168, 24])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 24])
Passage ques attention dim:  torch.Size([40, 105, 24])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 361, 23])
Passage ques attention dim:  torch.Size([40, 361, 23])
Passage question vectors dim:  torch.Size([40, 361, 200])
Question Passage Similarity dim:  torch.Size([40, 361])
Question passage attention dim:  torch.Size([40, 361])
Final Merged Passage dim:  torch.Size([40, 361, 800])
Modeled Passage dim:  torch.Size([40, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 361, 1000])
Span start logits:  torch.Size([40, 361])
span start probs dim:  torch.Size([40, 361])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 361]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 28])
Passage ques attention dim:  torch.Size([40, 234, 28])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 19])
Passage ques attention dim:  torch.Size([40, 161, 19])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 22])
Passage ques attention dim:  torch.Size([40, 234, 22])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 89, 200])
Passage Length:  89
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 89, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 89, 19])
Passage ques attention dim:  torch.Size([40, 89, 19])
Passage question vectors dim:  torch.Size([40, 89, 200])
Question Passage Similarity dim:  torch.Size([40, 89])
Question passage attention dim:  torch.Size([40, 89])
Final Merged Passage dim:  torch.Size([40, 89, 800])
Modeled Passage dim:  torch.Size([40, 89, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 89, 1000])
Span start logits:  torch.Size([40, 89])
span start probs dim:  torch.Size([40, 89])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 89]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 41, 200])
Passage Length:  41
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 41, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 41, 18])
Passage ques attention dim:  torch.Size([40, 41, 18])
Passage question vectors dim:  torch.Size([40, 41, 200])
Question Passage Similarity dim:  torch.Size([40, 41])
Question passage attention dim:  torch.Size([40, 41])
Final Merged Passage dim:  torch.Size([40, 41, 800])
Modeled Passage dim:  torch.Size([40, 41, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 41, 1000])
Span start logits:  torch.Size([40, 41])
span start probs dim:  torch.Size([40, 41])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 41]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 19])
Passage ques attention dim:  torch.Size([40, 152, 19])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 20])
Passage ques attention dim:  torch.Size([40, 98, 20])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 52, 18])
Passage ques attention dim:  torch.Size([40, 52, 18])
Passage question vectors dim:  torch.Size([40, 52, 200])
Question Passage Similarity dim:  torch.Size([40, 52])
Question passage attention dim:  torch.Size([40, 52])
Final Merged Passage dim:  torch.Size([40, 52, 800])
Modeled Passage dim:  torch.Size([40, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 52, 1000])
Span start logits:  torch.Size([40, 52])
span start probs dim:  torch.Size([40, 52])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 52]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 21])
Passage ques attention dim:  torch.Size([40, 134, 21])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 19])
Passage ques attention dim:  torch.Size([40, 127, 19])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 20])
Passage ques attention dim:  torch.Size([40, 113, 20])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 19])
Passage ques attention dim:  torch.Size([40, 113, 19])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 18])
Passage ques attention dim:  torch.Size([40, 133, 18])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 235, 200])
Passage Length:  235
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 235, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 235, 25])
Passage ques attention dim:  torch.Size([40, 235, 25])
Passage question vectors dim:  torch.Size([40, 235, 200])
Question Passage Similarity dim:  torch.Size([40, 235])
Question passage attention dim:  torch.Size([40, 235])
Final Merged Passage dim:  torch.Size([40, 235, 800])
Modeled Passage dim:  torch.Size([40, 235, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 235, 1000])
Span start logits:  torch.Size([40, 235])
span start probs dim:  torch.Size([40, 235])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 235]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 91, 19])
Passage ques attention dim:  torch.Size([40, 91, 19])
Passage question vectors dim:  torch.Size([40, 91, 200])
Question Passage Similarity dim:  torch.Size([40, 91])
Question passage attention dim:  torch.Size([40, 91])
Final Merged Passage dim:  torch.Size([40, 91, 800])
Modeled Passage dim:  torch.Size([40, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 91, 1000])
Span start logits:  torch.Size([40, 91])
span start probs dim:  torch.Size([40, 91])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 91]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 243, 21])
Passage ques attention dim:  torch.Size([40, 243, 21])
Passage question vectors dim:  torch.Size([40, 243, 200])
Question Passage Similarity dim:  torch.Size([40, 243])
Question passage attention dim:  torch.Size([40, 243])
Final Merged Passage dim:  torch.Size([40, 243, 800])
Modeled Passage dim:  torch.Size([40, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 243, 1000])
Span start logits:  torch.Size([40, 243])
span start probs dim:  torch.Size([40, 243])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 243]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 19])
Passage ques attention dim:  torch.Size([40, 109, 19])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 18])
Passage ques attention dim:  torch.Size([40, 139, 18])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 19])
Passage ques attention dim:  torch.Size([40, 104, 19])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 224, 200])
Passage Length:  224
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 224, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 224, 22])
Passage ques attention dim:  torch.Size([40, 224, 22])
Passage question vectors dim:  torch.Size([40, 224, 200])
Question Passage Similarity dim:  torch.Size([40, 224])
Question passage attention dim:  torch.Size([40, 224])
Final Merged Passage dim:  torch.Size([40, 224, 800])
Modeled Passage dim:  torch.Size([40, 224, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 224, 1000])
Span start logits:  torch.Size([40, 224])
span start probs dim:  torch.Size([40, 224])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 224]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 75, 23])
Passage ques attention dim:  torch.Size([40, 75, 23])
Passage question vectors dim:  torch.Size([40, 75, 200])
Question Passage Similarity dim:  torch.Size([40, 75])
Question passage attention dim:  torch.Size([40, 75])
Final Merged Passage dim:  torch.Size([40, 75, 800])
Modeled Passage dim:  torch.Size([40, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 75, 1000])
Span start logits:  torch.Size([40, 75])
span start probs dim:  torch.Size([40, 75])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 75]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 268, 200])
Passage Length:  268
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 268, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 268, 19])
Passage ques attention dim:  torch.Size([40, 268, 19])
Passage question vectors dim:  torch.Size([40, 268, 200])
Question Passage Similarity dim:  torch.Size([40, 268])
Question passage attention dim:  torch.Size([40, 268])
Final Merged Passage dim:  torch.Size([40, 268, 800])
Modeled Passage dim:  torch.Size([40, 268, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 268, 1000])
Span start logits:  torch.Size([40, 268])
span start probs dim:  torch.Size([40, 268])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 268]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 33])
Passage ques attention dim:  torch.Size([40, 111, 33])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 80, 200])
Passage Length:  80
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 80, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 80, 24])
Passage ques attention dim:  torch.Size([40, 80, 24])
Passage question vectors dim:  torch.Size([40, 80, 200])
Question Passage Similarity dim:  torch.Size([40, 80])
Question passage attention dim:  torch.Size([40, 80])
Final Merged Passage dim:  torch.Size([40, 80, 800])
Modeled Passage dim:  torch.Size([40, 80, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 80, 1000])
Span start logits:  torch.Size([40, 80])
span start probs dim:  torch.Size([40, 80])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 80]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 246, 25])
Passage ques attention dim:  torch.Size([40, 246, 25])
Passage question vectors dim:  torch.Size([40, 246, 200])
Question Passage Similarity dim:  torch.Size([40, 246])
Question passage attention dim:  torch.Size([40, 246])
Final Merged Passage dim:  torch.Size([40, 246, 800])
Modeled Passage dim:  torch.Size([40, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 246, 1000])
Span start logits:  torch.Size([40, 246])
span start probs dim:  torch.Size([40, 246])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 246]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 20])
Passage ques attention dim:  torch.Size([40, 160, 20])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 27])
Passage ques attention dim:  torch.Size([40, 162, 27])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 271, 200])
Passage Length:  271
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 271, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 271, 17])
Passage ques attention dim:  torch.Size([40, 271, 17])
Passage question vectors dim:  torch.Size([40, 271, 200])
Question Passage Similarity dim:  torch.Size([40, 271])
Question passage attention dim:  torch.Size([40, 271])
Final Merged Passage dim:  torch.Size([40, 271, 800])
Modeled Passage dim:  torch.Size([40, 271, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 271, 1000])
Span start logits:  torch.Size([40, 271])
span start probs dim:  torch.Size([40, 271])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 271]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 19])
Passage ques attention dim:  torch.Size([40, 96, 19])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 18])
Passage ques attention dim:  torch.Size([40, 137, 18])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 176, 19])
Passage ques attention dim:  torch.Size([40, 176, 19])
Passage question vectors dim:  torch.Size([40, 176, 200])
Question Passage Similarity dim:  torch.Size([40, 176])
Question passage attention dim:  torch.Size([40, 176])
Final Merged Passage dim:  torch.Size([40, 176, 800])
Modeled Passage dim:  torch.Size([40, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 176, 1000])
Span start logits:  torch.Size([40, 176])
span start probs dim:  torch.Size([40, 176])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 176]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 209, 21])
Passage ques attention dim:  torch.Size([40, 209, 21])
Passage question vectors dim:  torch.Size([40, 209, 200])
Question Passage Similarity dim:  torch.Size([40, 209])
Question passage attention dim:  torch.Size([40, 209])
Final Merged Passage dim:  torch.Size([40, 209, 800])
Modeled Passage dim:  torch.Size([40, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 209, 1000])
Span start logits:  torch.Size([40, 209])
span start probs dim:  torch.Size([40, 209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 19])
Passage ques attention dim:  torch.Size([40, 179, 19])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 195, 28])
Passage ques attention dim:  torch.Size([40, 195, 28])
Passage question vectors dim:  torch.Size([40, 195, 200])
Question Passage Similarity dim:  torch.Size([40, 195])
Question passage attention dim:  torch.Size([40, 195])
Final Merged Passage dim:  torch.Size([40, 195, 800])
Modeled Passage dim:  torch.Size([40, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 195, 1000])
Span start logits:  torch.Size([40, 195])
span start probs dim:  torch.Size([40, 195])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 195]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 236, 200])
Passage Length:  236
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 236, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 236, 22])
Passage ques attention dim:  torch.Size([40, 236, 22])
Passage question vectors dim:  torch.Size([40, 236, 200])
Question Passage Similarity dim:  torch.Size([40, 236])
Question passage attention dim:  torch.Size([40, 236])
Final Merged Passage dim:  torch.Size([40, 236, 800])
Modeled Passage dim:  torch.Size([40, 236, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 236, 1000])
Span start logits:  torch.Size([40, 236])
span start probs dim:  torch.Size([40, 236])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 236]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 22])
Passage ques attention dim:  torch.Size([40, 164, 22])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 56, 200])
Passage Length:  56
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 56, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 56, 23])
Passage ques attention dim:  torch.Size([40, 56, 23])
Passage question vectors dim:  torch.Size([40, 56, 200])
Question Passage Similarity dim:  torch.Size([40, 56])
Question passage attention dim:  torch.Size([40, 56])
Final Merged Passage dim:  torch.Size([40, 56, 800])
Modeled Passage dim:  torch.Size([40, 56, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 56, 1000])
Span start logits:  torch.Size([40, 56])
span start probs dim:  torch.Size([40, 56])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 56]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 17])
Passage ques attention dim:  torch.Size([40, 152, 17])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 211, 21])
Passage ques attention dim:  torch.Size([40, 211, 21])
Passage question vectors dim:  torch.Size([40, 211, 200])
Question Passage Similarity dim:  torch.Size([40, 211])
Question passage attention dim:  torch.Size([40, 211])
Final Merged Passage dim:  torch.Size([40, 211, 800])
Modeled Passage dim:  torch.Size([40, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 211, 1000])
Span start logits:  torch.Size([40, 211])
span start probs dim:  torch.Size([40, 211])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 211]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 24])
Passage ques attention dim:  torch.Size([40, 172, 24])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 22])
Passage ques attention dim:  torch.Size([40, 117, 22])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 20])
Passage ques attention dim:  torch.Size([40, 178, 20])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 19])
Passage ques attention dim:  torch.Size([40, 189, 19])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 89, 200])
Passage Length:  89
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 89, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 89, 18])
Passage ques attention dim:  torch.Size([40, 89, 18])
Passage question vectors dim:  torch.Size([40, 89, 200])
Question Passage Similarity dim:  torch.Size([40, 89])
Question passage attention dim:  torch.Size([40, 89])
Final Merged Passage dim:  torch.Size([40, 89, 800])
Modeled Passage dim:  torch.Size([40, 89, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 89, 1000])
Span start logits:  torch.Size([40, 89])
span start probs dim:  torch.Size([40, 89])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 89]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 22])
Passage ques attention dim:  torch.Size([40, 158, 22])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 21])
Passage ques attention dim:  torch.Size([40, 149, 21])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 16])
Passage ques attention dim:  torch.Size([40, 128, 16])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 268, 200])
Passage Length:  268
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 268, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 268, 25])
Passage ques attention dim:  torch.Size([40, 268, 25])
Passage question vectors dim:  torch.Size([40, 268, 200])
Question Passage Similarity dim:  torch.Size([40, 268])
Question passage attention dim:  torch.Size([40, 268])
Final Merged Passage dim:  torch.Size([40, 268, 800])
Modeled Passage dim:  torch.Size([40, 268, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 268, 1000])
Span start logits:  torch.Size([40, 268])
span start probs dim:  torch.Size([40, 268])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 268]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 27])
Passage ques attention dim:  torch.Size([40, 182, 27])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 271, 200])
Passage Length:  271
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 271, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 271, 20])
Passage ques attention dim:  torch.Size([40, 271, 20])
Passage question vectors dim:  torch.Size([40, 271, 200])
Question Passage Similarity dim:  torch.Size([40, 271])
Question passage attention dim:  torch.Size([40, 271])
Final Merged Passage dim:  torch.Size([40, 271, 800])
Modeled Passage dim:  torch.Size([40, 271, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 271, 1000])
Span start logits:  torch.Size([40, 271])
span start probs dim:  torch.Size([40, 271])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 271]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 22])
Passage ques attention dim:  torch.Size([40, 205, 22])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 21])
Passage ques attention dim:  torch.Size([40, 142, 21])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 25])
Passage ques attention dim:  torch.Size([40, 140, 25])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 22])
Passage ques attention dim:  torch.Size([40, 106, 22])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 22])
Passage ques attention dim:  torch.Size([40, 134, 22])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 18])
Passage ques attention dim:  torch.Size([40, 155, 18])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 23])
Passage ques attention dim:  torch.Size([40, 137, 23])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 23])
Passage ques attention dim:  torch.Size([40, 120, 23])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 26])
Passage ques attention dim:  torch.Size([40, 147, 26])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 19])
Passage ques attention dim:  torch.Size([40, 169, 19])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 16])
Passage ques attention dim:  torch.Size([40, 113, 16])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 190, 25])
Passage ques attention dim:  torch.Size([40, 190, 25])
Passage question vectors dim:  torch.Size([40, 190, 200])
Question Passage Similarity dim:  torch.Size([40, 190])
Question passage attention dim:  torch.Size([40, 190])
Final Merged Passage dim:  torch.Size([40, 190, 800])
Modeled Passage dim:  torch.Size([40, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 190, 1000])
Span start logits:  torch.Size([40, 190])
span start probs dim:  torch.Size([40, 190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 22])
Passage ques attention dim:  torch.Size([40, 205, 22])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 24])
Passage ques attention dim:  torch.Size([40, 110, 24])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 19])
Passage ques attention dim:  torch.Size([40, 179, 19])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 230, 200])
Passage Length:  230
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 230, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 230, 20])
Passage ques attention dim:  torch.Size([40, 230, 20])
Passage question vectors dim:  torch.Size([40, 230, 200])
Question Passage Similarity dim:  torch.Size([40, 230])
Question passage attention dim:  torch.Size([40, 230])
Final Merged Passage dim:  torch.Size([40, 230, 800])
Modeled Passage dim:  torch.Size([40, 230, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 230, 1000])
Span start logits:  torch.Size([40, 230])
span start probs dim:  torch.Size([40, 230])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 230]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 25])
Passage ques attention dim:  torch.Size([40, 169, 25])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 19])
Passage ques attention dim:  torch.Size([40, 215, 19])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 363, 200])
Passage Length:  363
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 363, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 363, 20])
Passage ques attention dim:  torch.Size([40, 363, 20])
Passage question vectors dim:  torch.Size([40, 363, 200])
Question Passage Similarity dim:  torch.Size([40, 363])
Question passage attention dim:  torch.Size([40, 363])
Final Merged Passage dim:  torch.Size([40, 363, 800])
Modeled Passage dim:  torch.Size([40, 363, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 363, 1000])
Span start logits:  torch.Size([40, 363])
span start probs dim:  torch.Size([40, 363])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 363]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 63, 200])
Passage Length:  63
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 63, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 63, 20])
Passage ques attention dim:  torch.Size([40, 63, 20])
Passage question vectors dim:  torch.Size([40, 63, 200])
Question Passage Similarity dim:  torch.Size([40, 63])
Question passage attention dim:  torch.Size([40, 63])
Final Merged Passage dim:  torch.Size([40, 63, 800])
Modeled Passage dim:  torch.Size([40, 63, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 63, 1000])
Span start logits:  torch.Size([40, 63])
span start probs dim:  torch.Size([40, 63])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 63]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 20])
Passage ques attention dim:  torch.Size([40, 117, 20])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 195, 18])
Passage ques attention dim:  torch.Size([40, 195, 18])
Passage question vectors dim:  torch.Size([40, 195, 200])
Question Passage Similarity dim:  torch.Size([40, 195])
Question passage attention dim:  torch.Size([40, 195])
Final Merged Passage dim:  torch.Size([40, 195, 800])
Modeled Passage dim:  torch.Size([40, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 195, 1000])
Span start logits:  torch.Size([40, 195])
span start probs dim:  torch.Size([40, 195])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 195]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 19])
Passage ques attention dim:  torch.Size([40, 198, 19])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 49, 200])
Embedded passage dim:  torch.Size([40, 288, 200])
Passage Length:  288
Encoded question dim:  torch.Size([40, 49, 200])
Encoded passage dim:  torch.Size([40, 288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 288, 49])
Passage ques attention dim:  torch.Size([40, 288, 49])
Passage question vectors dim:  torch.Size([40, 288, 200])
Question Passage Similarity dim:  torch.Size([40, 288])
Question passage attention dim:  torch.Size([40, 288])
Final Merged Passage dim:  torch.Size([40, 288, 800])
Modeled Passage dim:  torch.Size([40, 288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 288, 1000])
Span start logits:  torch.Size([40, 288])
span start probs dim:  torch.Size([40, 288])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 288]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 211, 200])
Passage Length:  211
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 211, 18])
Passage ques attention dim:  torch.Size([40, 211, 18])
Passage question vectors dim:  torch.Size([40, 211, 200])
Question Passage Similarity dim:  torch.Size([40, 211])
Question passage attention dim:  torch.Size([40, 211])
Final Merged Passage dim:  torch.Size([40, 211, 800])
Modeled Passage dim:  torch.Size([40, 211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 211, 1000])
Span start logits:  torch.Size([40, 211])
span start probs dim:  torch.Size([40, 211])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 211]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 24])
Passage ques attention dim:  torch.Size([40, 138, 24])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 30])
Passage ques attention dim:  torch.Size([40, 166, 30])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 15])
Passage ques attention dim:  torch.Size([40, 117, 15])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 20])
Passage ques attention dim:  torch.Size([40, 126, 20])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 16])
Passage ques attention dim:  torch.Size([40, 133, 16])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 82, 23])
Passage ques attention dim:  torch.Size([40, 82, 23])
Passage question vectors dim:  torch.Size([40, 82, 200])
Question Passage Similarity dim:  torch.Size([40, 82])
Question passage attention dim:  torch.Size([40, 82])
Final Merged Passage dim:  torch.Size([40, 82, 800])
Modeled Passage dim:  torch.Size([40, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 82, 1000])
Span start logits:  torch.Size([40, 82])
span start probs dim:  torch.Size([40, 82])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 82]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 22])
Passage ques attention dim:  torch.Size([40, 115, 22])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 225, 28])
Passage ques attention dim:  torch.Size([40, 225, 28])
Passage question vectors dim:  torch.Size([40, 225, 200])
Question Passage Similarity dim:  torch.Size([40, 225])
Question passage attention dim:  torch.Size([40, 225])
Final Merged Passage dim:  torch.Size([40, 225, 800])
Modeled Passage dim:  torch.Size([40, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 225, 1000])
Span start logits:  torch.Size([40, 225])
span start probs dim:  torch.Size([40, 225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 23])
Passage ques attention dim:  torch.Size([40, 116, 23])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 192, 25])
Passage ques attention dim:  torch.Size([40, 192, 25])
Passage question vectors dim:  torch.Size([40, 192, 200])
Question Passage Similarity dim:  torch.Size([40, 192])
Question passage attention dim:  torch.Size([40, 192])
Final Merged Passage dim:  torch.Size([40, 192, 800])
Modeled Passage dim:  torch.Size([40, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 192, 1000])
Span start logits:  torch.Size([40, 192])
span start probs dim:  torch.Size([40, 192])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 192]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 18])
Passage ques attention dim:  torch.Size([40, 116, 18])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 23])
Passage ques attention dim:  torch.Size([40, 121, 23])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 310, 200])
Passage Length:  310
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 310, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 310, 20])
Passage ques attention dim:  torch.Size([40, 310, 20])
Passage question vectors dim:  torch.Size([40, 310, 200])
Question Passage Similarity dim:  torch.Size([40, 310])
Question passage attention dim:  torch.Size([40, 310])
Final Merged Passage dim:  torch.Size([40, 310, 800])
Modeled Passage dim:  torch.Size([40, 310, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 310, 1000])
Span start logits:  torch.Size([40, 310])
span start probs dim:  torch.Size([40, 310])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 310]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 18])
Passage ques attention dim:  torch.Size([40, 105, 18])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 20])
Passage ques attention dim:  torch.Size([40, 112, 20])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 19])
Passage ques attention dim:  torch.Size([40, 139, 19])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 20])
Passage ques attention dim:  torch.Size([40, 130, 20])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 72, 200])
Passage Length:  72
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 72, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 72, 26])
Passage ques attention dim:  torch.Size([40, 72, 26])
Passage question vectors dim:  torch.Size([40, 72, 200])
Question Passage Similarity dim:  torch.Size([40, 72])
Question passage attention dim:  torch.Size([40, 72])
Final Merged Passage dim:  torch.Size([40, 72, 800])
Modeled Passage dim:  torch.Size([40, 72, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 72, 1000])
Span start logits:  torch.Size([40, 72])
span start probs dim:  torch.Size([40, 72])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 72]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 19])
Passage ques attention dim:  torch.Size([40, 127, 19])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 225, 27])
Passage ques attention dim:  torch.Size([40, 225, 27])
Passage question vectors dim:  torch.Size([40, 225, 200])
Question Passage Similarity dim:  torch.Size([40, 225])
Question passage attention dim:  torch.Size([40, 225])
Final Merged Passage dim:  torch.Size([40, 225, 800])
Modeled Passage dim:  torch.Size([40, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 225, 1000])
Span start logits:  torch.Size([40, 225])
span start probs dim:  torch.Size([40, 225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 27])
Passage ques attention dim:  torch.Size([40, 112, 27])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 183, 21])
Passage ques attention dim:  torch.Size([40, 183, 21])
Passage question vectors dim:  torch.Size([40, 183, 200])
Question Passage Similarity dim:  torch.Size([40, 183])
Question passage attention dim:  torch.Size([40, 183])
Final Merged Passage dim:  torch.Size([40, 183, 800])
Modeled Passage dim:  torch.Size([40, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 183, 1000])
Span start logits:  torch.Size([40, 183])
span start probs dim:  torch.Size([40, 183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 24])
Passage ques attention dim:  torch.Size([40, 133, 24])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 20])
Passage ques attention dim:  torch.Size([40, 124, 20])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 27])
Passage ques attention dim:  torch.Size([40, 130, 27])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 20])
Passage ques attention dim:  torch.Size([40, 165, 20])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 23])
Passage ques attention dim:  torch.Size([40, 95, 23])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 21])
Passage ques attention dim:  torch.Size([40, 99, 21])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 193, 24])
Passage ques attention dim:  torch.Size([40, 193, 24])
Passage question vectors dim:  torch.Size([40, 193, 200])
Question Passage Similarity dim:  torch.Size([40, 193])
Question passage attention dim:  torch.Size([40, 193])
Final Merged Passage dim:  torch.Size([40, 193, 800])
Modeled Passage dim:  torch.Size([40, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 193, 1000])
Span start logits:  torch.Size([40, 193])
span start probs dim:  torch.Size([40, 193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 17])
Passage ques attention dim:  torch.Size([40, 107, 17])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 18])
Passage ques attention dim:  torch.Size([40, 120, 18])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 16])
Passage ques attention dim:  torch.Size([40, 185, 16])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 24])
Passage ques attention dim:  torch.Size([40, 171, 24])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 21])
Passage ques attention dim:  torch.Size([40, 150, 21])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 20])
Passage ques attention dim:  torch.Size([40, 123, 20])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 17])
Passage ques attention dim:  torch.Size([40, 102, 17])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 62, 200])
Passage Length:  62
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 62, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 62, 19])
Passage ques attention dim:  torch.Size([40, 62, 19])
Passage question vectors dim:  torch.Size([40, 62, 200])
Question Passage Similarity dim:  torch.Size([40, 62])
Question passage attention dim:  torch.Size([40, 62])
Final Merged Passage dim:  torch.Size([40, 62, 800])
Modeled Passage dim:  torch.Size([40, 62, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 62, 1000])
Span start logits:  torch.Size([40, 62])
span start probs dim:  torch.Size([40, 62])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 62]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 87, 200])
Passage Length:  87
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 87, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 87, 32])
Passage ques attention dim:  torch.Size([40, 87, 32])
Passage question vectors dim:  torch.Size([40, 87, 200])
Question Passage Similarity dim:  torch.Size([40, 87])
Question passage attention dim:  torch.Size([40, 87])
Final Merged Passage dim:  torch.Size([40, 87, 800])
Modeled Passage dim:  torch.Size([40, 87, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 87, 1000])
Span start logits:  torch.Size([40, 87])
span start probs dim:  torch.Size([40, 87])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 87]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 22])
Passage ques attention dim:  torch.Size([40, 104, 22])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 24])
Passage ques attention dim:  torch.Size([40, 145, 24])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 20])
Passage ques attention dim:  torch.Size([40, 178, 20])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 30])
Passage ques attention dim:  torch.Size([40, 191, 30])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 20])
Passage ques attention dim:  torch.Size([40, 144, 20])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 176, 21])
Passage ques attention dim:  torch.Size([40, 176, 21])
Passage question vectors dim:  torch.Size([40, 176, 200])
Question Passage Similarity dim:  torch.Size([40, 176])
Question passage attention dim:  torch.Size([40, 176])
Final Merged Passage dim:  torch.Size([40, 176, 800])
Modeled Passage dim:  torch.Size([40, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 176, 1000])
Span start logits:  torch.Size([40, 176])
span start probs dim:  torch.Size([40, 176])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 176]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 20])
Passage ques attention dim:  torch.Size([40, 122, 20])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 19])
Passage ques attention dim:  torch.Size([40, 123, 19])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 22])
Passage ques attention dim:  torch.Size([40, 115, 22])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 206, 26])
Passage ques attention dim:  torch.Size([40, 206, 26])
Passage question vectors dim:  torch.Size([40, 206, 200])
Question Passage Similarity dim:  torch.Size([40, 206])
Question passage attention dim:  torch.Size([40, 206])
Final Merged Passage dim:  torch.Size([40, 206, 800])
Modeled Passage dim:  torch.Size([40, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 206, 1000])
Span start logits:  torch.Size([40, 206])
span start probs dim:  torch.Size([40, 206])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 206]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 18])
Passage ques attention dim:  torch.Size([40, 118, 18])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 43, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 43, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 43])
Passage ques attention dim:  torch.Size([40, 141, 43])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 19])
Passage ques attention dim:  torch.Size([40, 118, 19])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 19])
Passage ques attention dim:  torch.Size([40, 166, 19])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 23])
Passage ques attention dim:  torch.Size([40, 109, 23])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 64, 200])
Passage Length:  64
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 64, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 64, 22])
Passage ques attention dim:  torch.Size([40, 64, 22])
Passage question vectors dim:  torch.Size([40, 64, 200])
Question Passage Similarity dim:  torch.Size([40, 64])
Question passage attention dim:  torch.Size([40, 64])
Final Merged Passage dim:  torch.Size([40, 64, 800])
Modeled Passage dim:  torch.Size([40, 64, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 64, 1000])
Span start logits:  torch.Size([40, 64])
span start probs dim:  torch.Size([40, 64])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 64]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 19])
Passage ques attention dim:  torch.Size([40, 120, 19])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 222, 28])
Passage ques attention dim:  torch.Size([40, 222, 28])
Passage question vectors dim:  torch.Size([40, 222, 200])
Question Passage Similarity dim:  torch.Size([40, 222])
Question passage attention dim:  torch.Size([40, 222])
Final Merged Passage dim:  torch.Size([40, 222, 800])
Modeled Passage dim:  torch.Size([40, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 222, 1000])
Span start logits:  torch.Size([40, 222])
span start probs dim:  torch.Size([40, 222])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 222]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 214, 200])
Passage Length:  214
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 214, 21])
Passage ques attention dim:  torch.Size([40, 214, 21])
Passage question vectors dim:  torch.Size([40, 214, 200])
Question Passage Similarity dim:  torch.Size([40, 214])
Question passage attention dim:  torch.Size([40, 214])
Final Merged Passage dim:  torch.Size([40, 214, 800])
Modeled Passage dim:  torch.Size([40, 214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 214, 1000])
Span start logits:  torch.Size([40, 214])
span start probs dim:  torch.Size([40, 214])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 214]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 288, 200])
Passage Length:  288
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 288, 22])
Passage ques attention dim:  torch.Size([40, 288, 22])
Passage question vectors dim:  torch.Size([40, 288, 200])
Question Passage Similarity dim:  torch.Size([40, 288])
Question passage attention dim:  torch.Size([40, 288])
Final Merged Passage dim:  torch.Size([40, 288, 800])
Modeled Passage dim:  torch.Size([40, 288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 288, 1000])
Span start logits:  torch.Size([40, 288])
span start probs dim:  torch.Size([40, 288])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 288]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 26])
Passage ques attention dim:  torch.Size([40, 147, 26])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 16])
Passage ques attention dim:  torch.Size([40, 204, 16])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 18])
Passage ques attention dim:  torch.Size([40, 111, 18])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 18])
Passage ques attention dim:  torch.Size([40, 112, 18])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 23])
Passage ques attention dim:  torch.Size([40, 103, 23])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 197, 23])
Passage ques attention dim:  torch.Size([40, 197, 23])
Passage question vectors dim:  torch.Size([40, 197, 200])
Question Passage Similarity dim:  torch.Size([40, 197])
Question passage attention dim:  torch.Size([40, 197])
Final Merged Passage dim:  torch.Size([40, 197, 800])
Modeled Passage dim:  torch.Size([40, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 197, 1000])
Span start logits:  torch.Size([40, 197])
span start probs dim:  torch.Size([40, 197])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 197]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 21])
Passage ques attention dim:  torch.Size([40, 102, 21])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 209, 200])
Passage Length:  209
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 209, 24])
Passage ques attention dim:  torch.Size([40, 209, 24])
Passage question vectors dim:  torch.Size([40, 209, 200])
Question Passage Similarity dim:  torch.Size([40, 209])
Question passage attention dim:  torch.Size([40, 209])
Final Merged Passage dim:  torch.Size([40, 209, 800])
Modeled Passage dim:  torch.Size([40, 209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 209, 1000])
Span start logits:  torch.Size([40, 209])
span start probs dim:  torch.Size([40, 209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 20])
Passage ques attention dim:  torch.Size([40, 146, 20])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 20])
Passage ques attention dim:  torch.Size([40, 141, 20])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 27])
Passage ques attention dim:  torch.Size([40, 122, 27])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 56, 200])
Passage Length:  56
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 56, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 56, 25])
Passage ques attention dim:  torch.Size([40, 56, 25])
Passage question vectors dim:  torch.Size([40, 56, 200])
Question Passage Similarity dim:  torch.Size([40, 56])
Question passage attention dim:  torch.Size([40, 56])
Final Merged Passage dim:  torch.Size([40, 56, 800])
Modeled Passage dim:  torch.Size([40, 56, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 56, 1000])
Span start logits:  torch.Size([40, 56])
span start probs dim:  torch.Size([40, 56])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 56]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 24])
Passage ques attention dim:  torch.Size([40, 144, 24])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 25])
Passage ques attention dim:  torch.Size([40, 124, 25])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 20])
Passage ques attention dim:  torch.Size([40, 128, 20])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 235, 200])
Passage Length:  235
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 235, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 235, 27])
Passage ques attention dim:  torch.Size([40, 235, 27])
Passage question vectors dim:  torch.Size([40, 235, 200])
Question Passage Similarity dim:  torch.Size([40, 235])
Question passage attention dim:  torch.Size([40, 235])
Final Merged Passage dim:  torch.Size([40, 235, 800])
Modeled Passage dim:  torch.Size([40, 235, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 235, 1000])
Span start logits:  torch.Size([40, 235])
span start probs dim:  torch.Size([40, 235])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 235]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 265, 200])
Passage Length:  265
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 265, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 265, 25])
Passage ques attention dim:  torch.Size([40, 265, 25])
Passage question vectors dim:  torch.Size([40, 265, 200])
Question Passage Similarity dim:  torch.Size([40, 265])
Question passage attention dim:  torch.Size([40, 265])
Final Merged Passage dim:  torch.Size([40, 265, 800])
Modeled Passage dim:  torch.Size([40, 265, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 265, 1000])
Span start logits:  torch.Size([40, 265])
span start probs dim:  torch.Size([40, 265])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 265]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 413, 200])
Passage Length:  413
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 413, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 413, 23])
Passage ques attention dim:  torch.Size([40, 413, 23])
Passage question vectors dim:  torch.Size([40, 413, 200])
Question Passage Similarity dim:  torch.Size([40, 413])
Question passage attention dim:  torch.Size([40, 413])
Final Merged Passage dim:  torch.Size([40, 413, 800])
Modeled Passage dim:  torch.Size([40, 413, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 413, 1000])
Span start logits:  torch.Size([40, 413])
span start probs dim:  torch.Size([40, 413])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 413]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 20])
Passage ques attention dim:  torch.Size([40, 177, 20])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 28])
Passage ques attention dim:  torch.Size([40, 114, 28])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 23])
Passage ques attention dim:  torch.Size([40, 108, 23])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 21])
Passage ques attention dim:  torch.Size([40, 119, 21])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 22])
Passage ques attention dim:  torch.Size([40, 136, 22])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 21])
Passage ques attention dim:  torch.Size([40, 111, 21])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 21])
Passage ques attention dim:  torch.Size([40, 116, 21])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 87, 200])
Passage Length:  87
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 87, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 87, 26])
Passage ques attention dim:  torch.Size([40, 87, 26])
Passage question vectors dim:  torch.Size([40, 87, 200])
Question Passage Similarity dim:  torch.Size([40, 87])
Question passage attention dim:  torch.Size([40, 87])
Final Merged Passage dim:  torch.Size([40, 87, 800])
Modeled Passage dim:  torch.Size([40, 87, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 87, 1000])
Span start logits:  torch.Size([40, 87])
span start probs dim:  torch.Size([40, 87])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 87]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 22])
Passage ques attention dim:  torch.Size([40, 128, 22])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 33])
Passage ques attention dim:  torch.Size([40, 106, 33])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 21])
Passage ques attention dim:  torch.Size([40, 130, 21])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 23])
Passage ques attention dim:  torch.Size([40, 141, 23])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 42, 200])
Passage Length:  42
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 42, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 42, 24])
Passage ques attention dim:  torch.Size([40, 42, 24])
Passage question vectors dim:  torch.Size([40, 42, 200])
Question Passage Similarity dim:  torch.Size([40, 42])
Question passage attention dim:  torch.Size([40, 42])
Final Merged Passage dim:  torch.Size([40, 42, 800])
Modeled Passage dim:  torch.Size([40, 42, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 42, 1000])
Span start logits:  torch.Size([40, 42])
span start probs dim:  torch.Size([40, 42])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 42]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 69, 200])
Passage Length:  69
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 69, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 69, 21])
Passage ques attention dim:  torch.Size([40, 69, 21])
Passage question vectors dim:  torch.Size([40, 69, 200])
Question Passage Similarity dim:  torch.Size([40, 69])
Question passage attention dim:  torch.Size([40, 69])
Final Merged Passage dim:  torch.Size([40, 69, 800])
Modeled Passage dim:  torch.Size([40, 69, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 69, 1000])
Span start logits:  torch.Size([40, 69])
span start probs dim:  torch.Size([40, 69])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 69]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 264, 200])
Passage Length:  264
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 264, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 264, 21])
Passage ques attention dim:  torch.Size([40, 264, 21])
Passage question vectors dim:  torch.Size([40, 264, 200])
Question Passage Similarity dim:  torch.Size([40, 264])
Question passage attention dim:  torch.Size([40, 264])
Final Merged Passage dim:  torch.Size([40, 264, 800])
Modeled Passage dim:  torch.Size([40, 264, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 264, 1000])
Span start logits:  torch.Size([40, 264])
span start probs dim:  torch.Size([40, 264])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 264]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 20])
Passage ques attention dim:  torch.Size([40, 142, 20])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 22])
Passage ques attention dim:  torch.Size([40, 169, 22])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 21])
Passage ques attention dim:  torch.Size([40, 139, 21])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 20])
Passage ques attention dim:  torch.Size([40, 108, 20])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 20])
Passage ques attention dim:  torch.Size([40, 129, 20])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 21])
Passage ques attention dim:  torch.Size([40, 189, 21])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 203, 200])
Passage Length:  203
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 203, 18])
Passage ques attention dim:  torch.Size([40, 203, 18])
Passage question vectors dim:  torch.Size([40, 203, 200])
Question Passage Similarity dim:  torch.Size([40, 203])
Question passage attention dim:  torch.Size([40, 203])
Final Merged Passage dim:  torch.Size([40, 203, 800])
Modeled Passage dim:  torch.Size([40, 203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 203, 1000])
Span start logits:  torch.Size([40, 203])
span start probs dim:  torch.Size([40, 203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 19])
Passage ques attention dim:  torch.Size([40, 174, 19])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 283, 200])
Passage Length:  283
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 283, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 283, 24])
Passage ques attention dim:  torch.Size([40, 283, 24])
Passage question vectors dim:  torch.Size([40, 283, 200])
Question Passage Similarity dim:  torch.Size([40, 283])
Question passage attention dim:  torch.Size([40, 283])
Final Merged Passage dim:  torch.Size([40, 283, 800])
Modeled Passage dim:  torch.Size([40, 283, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 283, 1000])
Span start logits:  torch.Size([40, 283])
span start probs dim:  torch.Size([40, 283])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 283]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 25])
Passage ques attention dim:  torch.Size([40, 179, 25])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 255, 200])
Passage Length:  255
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 255, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 255, 19])
Passage ques attention dim:  torch.Size([40, 255, 19])
Passage question vectors dim:  torch.Size([40, 255, 200])
Question Passage Similarity dim:  torch.Size([40, 255])
Question passage attention dim:  torch.Size([40, 255])
Final Merged Passage dim:  torch.Size([40, 255, 800])
Modeled Passage dim:  torch.Size([40, 255, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 255, 1000])
Span start logits:  torch.Size([40, 255])
span start probs dim:  torch.Size([40, 255])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 255]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 21])
Passage ques attention dim:  torch.Size([40, 152, 21])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 19])
Passage ques attention dim:  torch.Size([40, 125, 19])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 19])
Passage ques attention dim:  torch.Size([40, 161, 19])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 25])
Passage ques attention dim:  torch.Size([40, 173, 25])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 19])
Passage ques attention dim:  torch.Size([40, 131, 19])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 22])
Passage ques attention dim:  torch.Size([40, 198, 22])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 19])
Passage ques attention dim:  torch.Size([40, 109, 19])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 19])
Passage ques attention dim:  torch.Size([40, 120, 19])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 32])
Passage ques attention dim:  torch.Size([40, 170, 32])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 17])
Passage ques attention dim:  torch.Size([40, 135, 17])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 25])
Passage ques attention dim:  torch.Size([40, 160, 25])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 59, 200])
Passage Length:  59
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 59, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 59, 18])
Passage ques attention dim:  torch.Size([40, 59, 18])
Passage question vectors dim:  torch.Size([40, 59, 200])
Question Passage Similarity dim:  torch.Size([40, 59])
Question passage attention dim:  torch.Size([40, 59])
Final Merged Passage dim:  torch.Size([40, 59, 800])
Modeled Passage dim:  torch.Size([40, 59, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 59, 1000])
Span start logits:  torch.Size([40, 59])
span start probs dim:  torch.Size([40, 59])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 59]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 23])
Passage ques attention dim:  torch.Size([40, 112, 23])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 27])
Passage ques attention dim:  torch.Size([40, 154, 27])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 18])
Passage ques attention dim:  torch.Size([40, 174, 18])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 22])
Passage ques attention dim:  torch.Size([40, 118, 22])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 85, 200])
Passage Length:  85
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 85, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 85, 19])
Passage ques attention dim:  torch.Size([40, 85, 19])
Passage question vectors dim:  torch.Size([40, 85, 200])
Question Passage Similarity dim:  torch.Size([40, 85])
Question passage attention dim:  torch.Size([40, 85])
Final Merged Passage dim:  torch.Size([40, 85, 800])
Modeled Passage dim:  torch.Size([40, 85, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 85, 1000])
Span start logits:  torch.Size([40, 85])
span start probs dim:  torch.Size([40, 85])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 85]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 23])
Passage ques attention dim:  torch.Size([40, 135, 23])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 18])
Passage ques attention dim:  torch.Size([40, 123, 18])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 23])
Passage ques attention dim:  torch.Size([40, 112, 23])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 21])
Passage ques attention dim:  torch.Size([40, 105, 21])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 190, 22])
Passage ques attention dim:  torch.Size([40, 190, 22])
Passage question vectors dim:  torch.Size([40, 190, 200])
Question Passage Similarity dim:  torch.Size([40, 190])
Question passage attention dim:  torch.Size([40, 190])
Final Merged Passage dim:  torch.Size([40, 190, 800])
Modeled Passage dim:  torch.Size([40, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 190, 1000])
Span start logits:  torch.Size([40, 190])
span start probs dim:  torch.Size([40, 190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 28])
Passage ques attention dim:  torch.Size([40, 127, 28])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 203, 200])
Passage Length:  203
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 203, 23])
Passage ques attention dim:  torch.Size([40, 203, 23])
Passage question vectors dim:  torch.Size([40, 203, 200])
Question Passage Similarity dim:  torch.Size([40, 203])
Question passage attention dim:  torch.Size([40, 203])
Final Merged Passage dim:  torch.Size([40, 203, 800])
Modeled Passage dim:  torch.Size([40, 203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 203, 1000])
Span start logits:  torch.Size([40, 203])
span start probs dim:  torch.Size([40, 203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 15])
Passage ques attention dim:  torch.Size([40, 178, 15])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 17])
Passage ques attention dim:  torch.Size([40, 113, 17])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 212, 23])
Passage ques attention dim:  torch.Size([40, 212, 23])
Passage question vectors dim:  torch.Size([40, 212, 200])
Question Passage Similarity dim:  torch.Size([40, 212])
Question passage attention dim:  torch.Size([40, 212])
Final Merged Passage dim:  torch.Size([40, 212, 800])
Modeled Passage dim:  torch.Size([40, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 212, 1000])
Span start logits:  torch.Size([40, 212])
span start probs dim:  torch.Size([40, 212])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 212]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 21])
Passage ques attention dim:  torch.Size([40, 113, 21])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 26])
Passage ques attention dim:  torch.Size([40, 145, 26])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 21])
Passage ques attention dim:  torch.Size([40, 121, 21])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 21])
Passage ques attention dim:  torch.Size([40, 98, 21])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 23])
Passage ques attention dim:  torch.Size([40, 196, 23])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 24])
Passage ques attention dim:  torch.Size([40, 123, 24])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 23])
Passage ques attention dim:  torch.Size([40, 159, 23])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 20])
Passage ques attention dim:  torch.Size([40, 103, 20])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 19])
Passage ques attention dim:  torch.Size([40, 168, 19])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 206, 29])
Passage ques attention dim:  torch.Size([40, 206, 29])
Passage question vectors dim:  torch.Size([40, 206, 200])
Question Passage Similarity dim:  torch.Size([40, 206])
Question passage attention dim:  torch.Size([40, 206])
Final Merged Passage dim:  torch.Size([40, 206, 800])
Modeled Passage dim:  torch.Size([40, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 206, 1000])
Span start logits:  torch.Size([40, 206])
span start probs dim:  torch.Size([40, 206])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 206]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 250, 18])
Passage ques attention dim:  torch.Size([40, 250, 18])
Passage question vectors dim:  torch.Size([40, 250, 200])
Question Passage Similarity dim:  torch.Size([40, 250])
Question passage attention dim:  torch.Size([40, 250])
Final Merged Passage dim:  torch.Size([40, 250, 800])
Modeled Passage dim:  torch.Size([40, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 250, 1000])
Span start logits:  torch.Size([40, 250])
span start probs dim:  torch.Size([40, 250])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 250]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 21])
Passage ques attention dim:  torch.Size([40, 112, 21])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 20])
Passage ques attention dim:  torch.Size([40, 109, 20])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 192, 26])
Passage ques attention dim:  torch.Size([40, 192, 26])
Passage question vectors dim:  torch.Size([40, 192, 200])
Question Passage Similarity dim:  torch.Size([40, 192])
Question passage attention dim:  torch.Size([40, 192])
Final Merged Passage dim:  torch.Size([40, 192, 800])
Modeled Passage dim:  torch.Size([40, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 192, 1000])
Span start logits:  torch.Size([40, 192])
span start probs dim:  torch.Size([40, 192])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 192]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 25])
Passage ques attention dim:  torch.Size([40, 123, 25])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 32])
Passage ques attention dim:  torch.Size([40, 184, 32])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 28])
Passage ques attention dim:  torch.Size([40, 115, 28])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 21])
Passage ques attention dim:  torch.Size([40, 111, 21])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 181, 200])
Passage Length:  181
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 181, 24])
Passage ques attention dim:  torch.Size([40, 181, 24])
Passage question vectors dim:  torch.Size([40, 181, 200])
Question Passage Similarity dim:  torch.Size([40, 181])
Question passage attention dim:  torch.Size([40, 181])
Final Merged Passage dim:  torch.Size([40, 181, 800])
Modeled Passage dim:  torch.Size([40, 181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 181, 1000])
Span start logits:  torch.Size([40, 181])
span start probs dim:  torch.Size([40, 181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 214, 200])
Passage Length:  214
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 214, 21])
Passage ques attention dim:  torch.Size([40, 214, 21])
Passage question vectors dim:  torch.Size([40, 214, 200])
Question Passage Similarity dim:  torch.Size([40, 214])
Question passage attention dim:  torch.Size([40, 214])
Final Merged Passage dim:  torch.Size([40, 214, 800])
Modeled Passage dim:  torch.Size([40, 214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 214, 1000])
Span start logits:  torch.Size([40, 214])
span start probs dim:  torch.Size([40, 214])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 214]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 45, 200])
Passage Length:  45
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 45, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 45, 35])
Passage ques attention dim:  torch.Size([40, 45, 35])
Passage question vectors dim:  torch.Size([40, 45, 200])
Question Passage Similarity dim:  torch.Size([40, 45])
Question passage attention dim:  torch.Size([40, 45])
Final Merged Passage dim:  torch.Size([40, 45, 800])
Modeled Passage dim:  torch.Size([40, 45, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 45, 1000])
Span start logits:  torch.Size([40, 45])
span start probs dim:  torch.Size([40, 45])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 45]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 21])
Passage ques attention dim:  torch.Size([40, 122, 21])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 23])
Passage ques attention dim:  torch.Size([40, 132, 23])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 26])
Passage ques attention dim:  torch.Size([40, 111, 26])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 22])
Passage ques attention dim:  torch.Size([40, 196, 22])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 20])
Passage ques attention dim:  torch.Size([40, 114, 20])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 20])
Passage ques attention dim:  torch.Size([40, 194, 20])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 193, 19])
Passage ques attention dim:  torch.Size([40, 193, 19])
Passage question vectors dim:  torch.Size([40, 193, 200])
Question Passage Similarity dim:  torch.Size([40, 193])
Question passage attention dim:  torch.Size([40, 193])
Final Merged Passage dim:  torch.Size([40, 193, 800])
Modeled Passage dim:  torch.Size([40, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 193, 1000])
Span start logits:  torch.Size([40, 193])
span start probs dim:  torch.Size([40, 193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 24])
Passage ques attention dim:  torch.Size([40, 141, 24])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 17])
Passage ques attention dim:  torch.Size([40, 208, 17])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 23])
Passage ques attention dim:  torch.Size([40, 194, 23])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 190, 23])
Passage ques attention dim:  torch.Size([40, 190, 23])
Passage question vectors dim:  torch.Size([40, 190, 200])
Question Passage Similarity dim:  torch.Size([40, 190])
Question passage attention dim:  torch.Size([40, 190])
Final Merged Passage dim:  torch.Size([40, 190, 800])
Modeled Passage dim:  torch.Size([40, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 190, 1000])
Span start logits:  torch.Size([40, 190])
span start probs dim:  torch.Size([40, 190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 20])
Passage ques attention dim:  torch.Size([40, 99, 20])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 19])
Passage ques attention dim:  torch.Size([40, 130, 19])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 20])
Passage ques attention dim:  torch.Size([40, 132, 20])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 251, 200])
Passage Length:  251
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 251, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 251, 18])
Passage ques attention dim:  torch.Size([40, 251, 18])
Passage question vectors dim:  torch.Size([40, 251, 200])
Question Passage Similarity dim:  torch.Size([40, 251])
Question passage attention dim:  torch.Size([40, 251])
Final Merged Passage dim:  torch.Size([40, 251, 800])
Modeled Passage dim:  torch.Size([40, 251, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 251, 1000])
Span start logits:  torch.Size([40, 251])
span start probs dim:  torch.Size([40, 251])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 251]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 19])
Passage ques attention dim:  torch.Size([40, 118, 19])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 52, 200])
Passage Length:  52
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 52, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 52, 29])
Passage ques attention dim:  torch.Size([40, 52, 29])
Passage question vectors dim:  torch.Size([40, 52, 200])
Question Passage Similarity dim:  torch.Size([40, 52])
Question passage attention dim:  torch.Size([40, 52])
Final Merged Passage dim:  torch.Size([40, 52, 800])
Modeled Passage dim:  torch.Size([40, 52, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 52, 1000])
Span start logits:  torch.Size([40, 52])
span start probs dim:  torch.Size([40, 52])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 52]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 19])
Passage ques attention dim:  torch.Size([40, 110, 19])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 22])
Passage ques attention dim:  torch.Size([40, 133, 22])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 22])
Passage ques attention dim:  torch.Size([40, 140, 22])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 21])
Passage ques attention dim:  torch.Size([40, 120, 21])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 23])
Passage ques attention dim:  torch.Size([40, 109, 23])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 19])
Passage ques attention dim:  torch.Size([40, 118, 19])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 24])
Passage ques attention dim:  torch.Size([40, 160, 24])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 21])
Passage ques attention dim:  torch.Size([40, 167, 21])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 21])
Passage ques attention dim:  torch.Size([40, 167, 21])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 17])
Passage ques attention dim:  torch.Size([40, 102, 17])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 239, 200])
Passage Length:  239
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 239, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 239, 18])
Passage ques attention dim:  torch.Size([40, 239, 18])
Passage question vectors dim:  torch.Size([40, 239, 200])
Question Passage Similarity dim:  torch.Size([40, 239])
Question passage attention dim:  torch.Size([40, 239])
Final Merged Passage dim:  torch.Size([40, 239, 800])
Modeled Passage dim:  torch.Size([40, 239, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 239, 1000])
Span start logits:  torch.Size([40, 239])
span start probs dim:  torch.Size([40, 239])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 239]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 20])
Passage ques attention dim:  torch.Size([40, 123, 20])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 58, 200])
Passage Length:  58
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 58, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 58, 21])
Passage ques attention dim:  torch.Size([40, 58, 21])
Passage question vectors dim:  torch.Size([40, 58, 200])
Question Passage Similarity dim:  torch.Size([40, 58])
Question passage attention dim:  torch.Size([40, 58])
Final Merged Passage dim:  torch.Size([40, 58, 800])
Modeled Passage dim:  torch.Size([40, 58, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 58, 1000])
Span start logits:  torch.Size([40, 58])
span start probs dim:  torch.Size([40, 58])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 58]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 20])
Passage ques attention dim:  torch.Size([40, 165, 20])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 26])
Passage ques attention dim:  torch.Size([40, 134, 26])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 21])
Passage ques attention dim:  torch.Size([40, 165, 21])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 57, 200])
Passage Length:  57
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 57, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 57, 19])
Passage ques attention dim:  torch.Size([40, 57, 19])
Passage question vectors dim:  torch.Size([40, 57, 200])
Question Passage Similarity dim:  torch.Size([40, 57])
Question passage attention dim:  torch.Size([40, 57])
Final Merged Passage dim:  torch.Size([40, 57, 800])
Modeled Passage dim:  torch.Size([40, 57, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 57, 1000])
Span start logits:  torch.Size([40, 57])
span start probs dim:  torch.Size([40, 57])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 57]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 17])
Passage ques attention dim:  torch.Size([40, 156, 17])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 24])
Passage ques attention dim:  torch.Size([40, 137, 24])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 24])
Passage ques attention dim:  torch.Size([40, 100, 24])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 400, 200])
Passage Length:  400
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 400, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 400, 25])
Passage ques attention dim:  torch.Size([40, 400, 25])
Passage question vectors dim:  torch.Size([40, 400, 200])
Question Passage Similarity dim:  torch.Size([40, 400])
Question passage attention dim:  torch.Size([40, 400])
Final Merged Passage dim:  torch.Size([40, 400, 800])
Modeled Passage dim:  torch.Size([40, 400, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 400, 1000])
Span start logits:  torch.Size([40, 400])
span start probs dim:  torch.Size([40, 400])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 400]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 189, 200])
Passage Length:  189
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 189, 18])
Passage ques attention dim:  torch.Size([40, 189, 18])
Passage question vectors dim:  torch.Size([40, 189, 200])
Question Passage Similarity dim:  torch.Size([40, 189])
Question passage attention dim:  torch.Size([40, 189])
Final Merged Passage dim:  torch.Size([40, 189, 800])
Modeled Passage dim:  torch.Size([40, 189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 189, 1000])
Span start logits:  torch.Size([40, 189])
span start probs dim:  torch.Size([40, 189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 330, 200])
Passage Length:  330
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 330, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 330, 23])
Passage ques attention dim:  torch.Size([40, 330, 23])
Passage question vectors dim:  torch.Size([40, 330, 200])
Question Passage Similarity dim:  torch.Size([40, 330])
Question passage attention dim:  torch.Size([40, 330])
Final Merged Passage dim:  torch.Size([40, 330, 800])
Modeled Passage dim:  torch.Size([40, 330, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 330, 1000])
Span start logits:  torch.Size([40, 330])
span start probs dim:  torch.Size([40, 330])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 330]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 22])
Passage ques attention dim:  torch.Size([40, 118, 22])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 157, 200])
Passage Length:  157
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 157, 19])
Passage ques attention dim:  torch.Size([40, 157, 19])
Passage question vectors dim:  torch.Size([40, 157, 200])
Question Passage Similarity dim:  torch.Size([40, 157])
Question passage attention dim:  torch.Size([40, 157])
Final Merged Passage dim:  torch.Size([40, 157, 800])
Modeled Passage dim:  torch.Size([40, 157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 157, 1000])
Span start logits:  torch.Size([40, 157])
span start probs dim:  torch.Size([40, 157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 20])
Passage ques attention dim:  torch.Size([40, 143, 20])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 422, 200])
Passage Length:  422
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 422, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 422, 21])
Passage ques attention dim:  torch.Size([40, 422, 21])
Passage question vectors dim:  torch.Size([40, 422, 200])
Question Passage Similarity dim:  torch.Size([40, 422])
Question passage attention dim:  torch.Size([40, 422])
Final Merged Passage dim:  torch.Size([40, 422, 800])
Modeled Passage dim:  torch.Size([40, 422, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 422, 1000])
Span start logits:  torch.Size([40, 422])
span start probs dim:  torch.Size([40, 422])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 422]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 24])
Passage ques attention dim:  torch.Size([40, 215, 24])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 20])
Passage ques attention dim:  torch.Size([40, 108, 20])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 22])
Passage ques attention dim:  torch.Size([40, 186, 22])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 225, 26])
Passage ques attention dim:  torch.Size([40, 225, 26])
Passage question vectors dim:  torch.Size([40, 225, 200])
Question Passage Similarity dim:  torch.Size([40, 225])
Question passage attention dim:  torch.Size([40, 225])
Final Merged Passage dim:  torch.Size([40, 225, 800])
Modeled Passage dim:  torch.Size([40, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 225, 1000])
Span start logits:  torch.Size([40, 225])
span start probs dim:  torch.Size([40, 225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 21])
Passage ques attention dim:  torch.Size([40, 104, 21])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 19])
Passage ques attention dim:  torch.Size([40, 110, 19])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 21])
Passage ques attention dim:  torch.Size([40, 129, 21])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 19])
Passage ques attention dim:  torch.Size([40, 158, 19])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 201, 200])
Passage Length:  201
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 201, 23])
Passage ques attention dim:  torch.Size([40, 201, 23])
Passage question vectors dim:  torch.Size([40, 201, 200])
Question Passage Similarity dim:  torch.Size([40, 201])
Question passage attention dim:  torch.Size([40, 201])
Final Merged Passage dim:  torch.Size([40, 201, 800])
Modeled Passage dim:  torch.Size([40, 201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 201, 1000])
Span start logits:  torch.Size([40, 201])
span start probs dim:  torch.Size([40, 201])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 201]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 23])
Passage ques attention dim:  torch.Size([40, 125, 23])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 21])
Passage ques attention dim:  torch.Size([40, 169, 21])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 93, 200])
Passage Length:  93
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 93, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 93, 27])
Passage ques attention dim:  torch.Size([40, 93, 27])
Passage question vectors dim:  torch.Size([40, 93, 200])
Question Passage Similarity dim:  torch.Size([40, 93])
Question passage attention dim:  torch.Size([40, 93])
Final Merged Passage dim:  torch.Size([40, 93, 800])
Modeled Passage dim:  torch.Size([40, 93, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 93, 1000])
Span start logits:  torch.Size([40, 93])
span start probs dim:  torch.Size([40, 93])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 93]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 32, 200])
Passage Length:  32
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 32, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 32, 25])
Passage ques attention dim:  torch.Size([40, 32, 25])
Passage question vectors dim:  torch.Size([40, 32, 200])
Question Passage Similarity dim:  torch.Size([40, 32])
Question passage attention dim:  torch.Size([40, 32])
Final Merged Passage dim:  torch.Size([40, 32, 800])
Modeled Passage dim:  torch.Size([40, 32, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 32, 1000])
Span start logits:  torch.Size([40, 32])
span start probs dim:  torch.Size([40, 32])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 32]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 29])
Passage ques attention dim:  torch.Size([40, 198, 29])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 242, 200])
Passage Length:  242
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 242, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 242, 27])
Passage ques attention dim:  torch.Size([40, 242, 27])
Passage question vectors dim:  torch.Size([40, 242, 200])
Question Passage Similarity dim:  torch.Size([40, 242])
Question passage attention dim:  torch.Size([40, 242])
Final Merged Passage dim:  torch.Size([40, 242, 800])
Modeled Passage dim:  torch.Size([40, 242, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 242, 1000])
Span start logits:  torch.Size([40, 242])
span start probs dim:  torch.Size([40, 242])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 242]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 22])
Passage ques attention dim:  torch.Size([40, 133, 22])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 44, 200])
Passage Length:  44
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 44, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 44, 20])
Passage ques attention dim:  torch.Size([40, 44, 20])
Passage question vectors dim:  torch.Size([40, 44, 200])
Question Passage Similarity dim:  torch.Size([40, 44])
Question passage attention dim:  torch.Size([40, 44])
Final Merged Passage dim:  torch.Size([40, 44, 800])
Modeled Passage dim:  torch.Size([40, 44, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 44, 1000])
Span start logits:  torch.Size([40, 44])
span start probs dim:  torch.Size([40, 44])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 44]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 24])
Passage ques attention dim:  torch.Size([40, 170, 24])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 25])
Passage ques attention dim:  torch.Size([40, 164, 25])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 19])
Passage ques attention dim:  torch.Size([40, 131, 19])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 19])
Passage ques attention dim:  torch.Size([40, 144, 19])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 82, 20])
Passage ques attention dim:  torch.Size([40, 82, 20])
Passage question vectors dim:  torch.Size([40, 82, 200])
Question Passage Similarity dim:  torch.Size([40, 82])
Question passage attention dim:  torch.Size([40, 82])
Final Merged Passage dim:  torch.Size([40, 82, 800])
Modeled Passage dim:  torch.Size([40, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 82, 1000])
Span start logits:  torch.Size([40, 82])
span start probs dim:  torch.Size([40, 82])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 82]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 314, 200])
Passage Length:  314
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 314, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 314, 21])
Passage ques attention dim:  torch.Size([40, 314, 21])
Passage question vectors dim:  torch.Size([40, 314, 200])
Question Passage Similarity dim:  torch.Size([40, 314])
Question passage attention dim:  torch.Size([40, 314])
Final Merged Passage dim:  torch.Size([40, 314, 800])
Modeled Passage dim:  torch.Size([40, 314, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 314, 1000])
Span start logits:  torch.Size([40, 314])
span start probs dim:  torch.Size([40, 314])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 314]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 21])
Passage ques attention dim:  torch.Size([40, 136, 21])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 20])
Passage ques attention dim:  torch.Size([40, 123, 20])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 23])
Passage ques attention dim:  torch.Size([40, 177, 23])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 18])
Passage ques attention dim:  torch.Size([40, 131, 18])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 197, 24])
Passage ques attention dim:  torch.Size([40, 197, 24])
Passage question vectors dim:  torch.Size([40, 197, 200])
Question Passage Similarity dim:  torch.Size([40, 197])
Question passage attention dim:  torch.Size([40, 197])
Final Merged Passage dim:  torch.Size([40, 197, 800])
Modeled Passage dim:  torch.Size([40, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 197, 1000])
Span start logits:  torch.Size([40, 197])
span start probs dim:  torch.Size([40, 197])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 197]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 225, 20])
Passage ques attention dim:  torch.Size([40, 225, 20])
Passage question vectors dim:  torch.Size([40, 225, 200])
Question Passage Similarity dim:  torch.Size([40, 225])
Question passage attention dim:  torch.Size([40, 225])
Final Merged Passage dim:  torch.Size([40, 225, 800])
Modeled Passage dim:  torch.Size([40, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 225, 1000])
Span start logits:  torch.Size([40, 225])
span start probs dim:  torch.Size([40, 225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 21])
Passage ques attention dim:  torch.Size([40, 136, 21])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 74, 26])
Passage ques attention dim:  torch.Size([40, 74, 26])
Passage question vectors dim:  torch.Size([40, 74, 200])
Question Passage Similarity dim:  torch.Size([40, 74])
Question passage attention dim:  torch.Size([40, 74])
Final Merged Passage dim:  torch.Size([40, 74, 800])
Modeled Passage dim:  torch.Size([40, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 74, 1000])
Span start logits:  torch.Size([40, 74])
span start probs dim:  torch.Size([40, 74])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 74]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 21])
Passage ques attention dim:  torch.Size([40, 205, 21])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 22])
Passage ques attention dim:  torch.Size([40, 110, 22])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 19])
Passage ques attention dim:  torch.Size([40, 170, 19])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 18])
Passage ques attention dim:  torch.Size([40, 108, 18])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 230, 200])
Passage Length:  230
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 230, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 230, 21])
Passage ques attention dim:  torch.Size([40, 230, 21])
Passage question vectors dim:  torch.Size([40, 230, 200])
Question Passage Similarity dim:  torch.Size([40, 230])
Question passage attention dim:  torch.Size([40, 230])
Final Merged Passage dim:  torch.Size([40, 230, 800])
Modeled Passage dim:  torch.Size([40, 230, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 230, 1000])
Span start logits:  torch.Size([40, 230])
span start probs dim:  torch.Size([40, 230])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 230]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 24])
Passage ques attention dim:  torch.Size([40, 136, 24])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 24])
Passage ques attention dim:  torch.Size([40, 170, 24])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 23])
Passage ques attention dim:  torch.Size([40, 126, 23])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 31])
Passage ques attention dim:  torch.Size([40, 122, 31])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 21])
Passage ques attention dim:  torch.Size([40, 116, 21])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 20])
Passage ques attention dim:  torch.Size([40, 125, 20])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 310, 200])
Passage Length:  310
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 310, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 310, 28])
Passage ques attention dim:  torch.Size([40, 310, 28])
Passage question vectors dim:  torch.Size([40, 310, 200])
Question Passage Similarity dim:  torch.Size([40, 310])
Question passage attention dim:  torch.Size([40, 310])
Final Merged Passage dim:  torch.Size([40, 310, 800])
Modeled Passage dim:  torch.Size([40, 310, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 310, 1000])
Span start logits:  torch.Size([40, 310])
span start probs dim:  torch.Size([40, 310])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 310]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 18])
Passage ques attention dim:  torch.Size([40, 98, 18])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 19])
Passage ques attention dim:  torch.Size([40, 99, 19])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 280, 200])
Passage Length:  280
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 280, 23])
Passage ques attention dim:  torch.Size([40, 280, 23])
Passage question vectors dim:  torch.Size([40, 280, 200])
Question Passage Similarity dim:  torch.Size([40, 280])
Question passage attention dim:  torch.Size([40, 280])
Final Merged Passage dim:  torch.Size([40, 280, 800])
Modeled Passage dim:  torch.Size([40, 280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 280, 1000])
Span start logits:  torch.Size([40, 280])
span start probs dim:  torch.Size([40, 280])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 280]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 22])
Passage ques attention dim:  torch.Size([40, 116, 22])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 23])
Passage ques attention dim:  torch.Size([40, 127, 23])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 90, 21])
Passage ques attention dim:  torch.Size([40, 90, 21])
Passage question vectors dim:  torch.Size([40, 90, 200])
Question Passage Similarity dim:  torch.Size([40, 90])
Question passage attention dim:  torch.Size([40, 90])
Final Merged Passage dim:  torch.Size([40, 90, 800])
Modeled Passage dim:  torch.Size([40, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 90, 1000])
Span start logits:  torch.Size([40, 90])
span start probs dim:  torch.Size([40, 90])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 90]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 37, 200])
Passage Length:  37
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 37, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 37, 18])
Passage ques attention dim:  torch.Size([40, 37, 18])
Passage question vectors dim:  torch.Size([40, 37, 200])
Question Passage Similarity dim:  torch.Size([40, 37])
Question passage attention dim:  torch.Size([40, 37])
Final Merged Passage dim:  torch.Size([40, 37, 800])
Modeled Passage dim:  torch.Size([40, 37, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 37, 1000])
Span start logits:  torch.Size([40, 37])
span start probs dim:  torch.Size([40, 37])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 37]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 232, 22])
Passage ques attention dim:  torch.Size([40, 232, 22])
Passage question vectors dim:  torch.Size([40, 232, 200])
Question Passage Similarity dim:  torch.Size([40, 232])
Question passage attention dim:  torch.Size([40, 232])
Final Merged Passage dim:  torch.Size([40, 232, 800])
Modeled Passage dim:  torch.Size([40, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 232, 1000])
Span start logits:  torch.Size([40, 232])
span start probs dim:  torch.Size([40, 232])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 232]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 21])
Passage ques attention dim:  torch.Size([40, 140, 21])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 22])
Passage ques attention dim:  torch.Size([40, 99, 22])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 20])
Passage ques attention dim:  torch.Size([40, 160, 20])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 21])
Passage ques attention dim:  torch.Size([40, 132, 21])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 28])
Passage ques attention dim:  torch.Size([40, 135, 28])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 21])
Passage ques attention dim:  torch.Size([40, 113, 21])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 86, 25])
Passage ques attention dim:  torch.Size([40, 86, 25])
Passage question vectors dim:  torch.Size([40, 86, 200])
Question Passage Similarity dim:  torch.Size([40, 86])
Question passage attention dim:  torch.Size([40, 86])
Final Merged Passage dim:  torch.Size([40, 86, 800])
Modeled Passage dim:  torch.Size([40, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 86, 1000])
Span start logits:  torch.Size([40, 86])
span start probs dim:  torch.Size([40, 86])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 86]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 26])
Passage ques attention dim:  torch.Size([40, 115, 26])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 20])
Passage ques attention dim:  torch.Size([40, 182, 20])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 20])
Passage ques attention dim:  torch.Size([40, 159, 20])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 22])
Passage ques attention dim:  torch.Size([40, 113, 22])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 19])
Passage ques attention dim:  torch.Size([40, 149, 19])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 333, 200])
Passage Length:  333
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 333, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 333, 22])
Passage ques attention dim:  torch.Size([40, 333, 22])
Passage question vectors dim:  torch.Size([40, 333, 200])
Question Passage Similarity dim:  torch.Size([40, 333])
Question passage attention dim:  torch.Size([40, 333])
Final Merged Passage dim:  torch.Size([40, 333, 800])
Modeled Passage dim:  torch.Size([40, 333, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 333, 1000])
Span start logits:  torch.Size([40, 333])
span start probs dim:  torch.Size([40, 333])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 333]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 200, 19])
Passage ques attention dim:  torch.Size([40, 200, 19])
Passage question vectors dim:  torch.Size([40, 200, 200])
Question Passage Similarity dim:  torch.Size([40, 200])
Question passage attention dim:  torch.Size([40, 200])
Final Merged Passage dim:  torch.Size([40, 200, 800])
Modeled Passage dim:  torch.Size([40, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 200, 1000])
Span start logits:  torch.Size([40, 200])
span start probs dim:  torch.Size([40, 200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 292, 200])
Passage Length:  292
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 292, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 292, 21])
Passage ques attention dim:  torch.Size([40, 292, 21])
Passage question vectors dim:  torch.Size([40, 292, 200])
Question Passage Similarity dim:  torch.Size([40, 292])
Question passage attention dim:  torch.Size([40, 292])
Final Merged Passage dim:  torch.Size([40, 292, 800])
Modeled Passage dim:  torch.Size([40, 292, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 292, 1000])
Span start logits:  torch.Size([40, 292])
span start probs dim:  torch.Size([40, 292])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 292]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 90, 21])
Passage ques attention dim:  torch.Size([40, 90, 21])
Passage question vectors dim:  torch.Size([40, 90, 200])
Question Passage Similarity dim:  torch.Size([40, 90])
Question passage attention dim:  torch.Size([40, 90])
Final Merged Passage dim:  torch.Size([40, 90, 800])
Modeled Passage dim:  torch.Size([40, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 90, 1000])
Span start logits:  torch.Size([40, 90])
span start probs dim:  torch.Size([40, 90])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 90]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 24])
Passage ques attention dim:  torch.Size([40, 103, 24])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 19])
Passage ques attention dim:  torch.Size([40, 141, 19])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 24])
Passage ques attention dim:  torch.Size([40, 170, 24])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 270, 200])
Passage Length:  270
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 270, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 270, 18])
Passage ques attention dim:  torch.Size([40, 270, 18])
Passage question vectors dim:  torch.Size([40, 270, 200])
Question Passage Similarity dim:  torch.Size([40, 270])
Question passage attention dim:  torch.Size([40, 270])
Final Merged Passage dim:  torch.Size([40, 270, 800])
Modeled Passage dim:  torch.Size([40, 270, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 270, 1000])
Span start logits:  torch.Size([40, 270])
span start probs dim:  torch.Size([40, 270])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 270]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 34, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 34, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 34])
Passage ques attention dim:  torch.Size([40, 100, 34])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 22])
Passage ques attention dim:  torch.Size([40, 96, 22])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 18])
Passage ques attention dim:  torch.Size([40, 164, 18])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 17])
Passage ques attention dim:  torch.Size([40, 179, 17])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 65, 200])
Passage Length:  65
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 65, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 65, 19])
Passage ques attention dim:  torch.Size([40, 65, 19])
Passage question vectors dim:  torch.Size([40, 65, 200])
Question Passage Similarity dim:  torch.Size([40, 65])
Question passage attention dim:  torch.Size([40, 65])
Final Merged Passage dim:  torch.Size([40, 65, 800])
Modeled Passage dim:  torch.Size([40, 65, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 65, 1000])
Span start logits:  torch.Size([40, 65])
span start probs dim:  torch.Size([40, 65])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 65]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 172, 200])
Passage Length:  172
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 172, 21])
Passage ques attention dim:  torch.Size([40, 172, 21])
Passage question vectors dim:  torch.Size([40, 172, 200])
Question Passage Similarity dim:  torch.Size([40, 172])
Question passage attention dim:  torch.Size([40, 172])
Final Merged Passage dim:  torch.Size([40, 172, 800])
Modeled Passage dim:  torch.Size([40, 172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 172, 1000])
Span start logits:  torch.Size([40, 172])
span start probs dim:  torch.Size([40, 172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 217, 21])
Passage ques attention dim:  torch.Size([40, 217, 21])
Passage question vectors dim:  torch.Size([40, 217, 200])
Question Passage Similarity dim:  torch.Size([40, 217])
Question passage attention dim:  torch.Size([40, 217])
Final Merged Passage dim:  torch.Size([40, 217, 800])
Modeled Passage dim:  torch.Size([40, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 217, 1000])
Span start logits:  torch.Size([40, 217])
span start probs dim:  torch.Size([40, 217])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 217]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 18])
Passage ques attention dim:  torch.Size([40, 141, 18])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 18])
Passage ques attention dim:  torch.Size([40, 163, 18])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 22])
Passage ques attention dim:  torch.Size([40, 175, 22])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 20])
Passage ques attention dim:  torch.Size([40, 139, 20])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 22])
Passage ques attention dim:  torch.Size([40, 101, 22])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 19])
Passage ques attention dim:  torch.Size([40, 97, 19])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 301, 28])
Passage ques attention dim:  torch.Size([40, 301, 28])
Passage question vectors dim:  torch.Size([40, 301, 200])
Question Passage Similarity dim:  torch.Size([40, 301])
Question passage attention dim:  torch.Size([40, 301])
Final Merged Passage dim:  torch.Size([40, 301, 800])
Modeled Passage dim:  torch.Size([40, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 301, 1000])
Span start logits:  torch.Size([40, 301])
span start probs dim:  torch.Size([40, 301])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 301]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 21])
Passage ques attention dim:  torch.Size([40, 130, 21])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 28])
Passage ques attention dim:  torch.Size([40, 131, 28])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 91, 22])
Passage ques attention dim:  torch.Size([40, 91, 22])
Passage question vectors dim:  torch.Size([40, 91, 200])
Question Passage Similarity dim:  torch.Size([40, 91])
Question passage attention dim:  torch.Size([40, 91])
Final Merged Passage dim:  torch.Size([40, 91, 800])
Modeled Passage dim:  torch.Size([40, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 91, 1000])
Span start logits:  torch.Size([40, 91])
span start probs dim:  torch.Size([40, 91])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 91]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 20])
Passage ques attention dim:  torch.Size([40, 115, 20])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 24])
Passage ques attention dim:  torch.Size([40, 185, 24])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 24])
Passage ques attention dim:  torch.Size([40, 122, 24])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 203, 200])
Passage Length:  203
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 203, 22])
Passage ques attention dim:  torch.Size([40, 203, 22])
Passage question vectors dim:  torch.Size([40, 203, 200])
Question Passage Similarity dim:  torch.Size([40, 203])
Question passage attention dim:  torch.Size([40, 203])
Final Merged Passage dim:  torch.Size([40, 203, 800])
Modeled Passage dim:  torch.Size([40, 203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 203, 1000])
Span start logits:  torch.Size([40, 203])
span start probs dim:  torch.Size([40, 203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 238, 23])
Passage ques attention dim:  torch.Size([40, 238, 23])
Passage question vectors dim:  torch.Size([40, 238, 200])
Question Passage Similarity dim:  torch.Size([40, 238])
Question passage attention dim:  torch.Size([40, 238])
Final Merged Passage dim:  torch.Size([40, 238, 800])
Modeled Passage dim:  torch.Size([40, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 238, 1000])
Span start logits:  torch.Size([40, 238])
span start probs dim:  torch.Size([40, 238])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 238]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 25])
Passage ques attention dim:  torch.Size([40, 100, 25])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 27])
Passage ques attention dim:  torch.Size([40, 167, 27])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 25])
Passage ques attention dim:  torch.Size([40, 187, 25])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 74, 200])
Passage Length:  74
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 74, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 74, 35])
Passage ques attention dim:  torch.Size([40, 74, 35])
Passage question vectors dim:  torch.Size([40, 74, 200])
Question Passage Similarity dim:  torch.Size([40, 74])
Question passage attention dim:  torch.Size([40, 74])
Final Merged Passage dim:  torch.Size([40, 74, 800])
Modeled Passage dim:  torch.Size([40, 74, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 74, 1000])
Span start logits:  torch.Size([40, 74])
span start probs dim:  torch.Size([40, 74])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 74]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 21])
Passage ques attention dim:  torch.Size([40, 113, 21])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 23])
Passage ques attention dim:  torch.Size([40, 116, 23])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 20])
Passage ques attention dim:  torch.Size([40, 127, 20])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 20])
Passage ques attention dim:  torch.Size([40, 120, 20])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 25])
Passage ques attention dim:  torch.Size([40, 116, 25])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 27])
Passage ques attention dim:  torch.Size([40, 126, 27])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 22])
Passage ques attention dim:  torch.Size([40, 100, 22])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 293, 200])
Passage Length:  293
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 293, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 293, 23])
Passage ques attention dim:  torch.Size([40, 293, 23])
Passage question vectors dim:  torch.Size([40, 293, 200])
Question Passage Similarity dim:  torch.Size([40, 293])
Question passage attention dim:  torch.Size([40, 293])
Final Merged Passage dim:  torch.Size([40, 293, 800])
Modeled Passage dim:  torch.Size([40, 293, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 293, 1000])
Span start logits:  torch.Size([40, 293])
span start probs dim:  torch.Size([40, 293])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 293]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 148, 200])
Passage Length:  148
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 148, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 148, 18])
Passage ques attention dim:  torch.Size([40, 148, 18])
Passage question vectors dim:  torch.Size([40, 148, 200])
Question Passage Similarity dim:  torch.Size([40, 148])
Question passage attention dim:  torch.Size([40, 148])
Final Merged Passage dim:  torch.Size([40, 148, 800])
Modeled Passage dim:  torch.Size([40, 148, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 148, 1000])
Span start logits:  torch.Size([40, 148])
span start probs dim:  torch.Size([40, 148])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 148]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 22])
Passage ques attention dim:  torch.Size([40, 128, 22])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 21])
Passage ques attention dim:  torch.Size([40, 101, 21])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 22])
Passage ques attention dim:  torch.Size([40, 146, 22])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 283, 200])
Passage Length:  283
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 283, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 283, 24])
Passage ques attention dim:  torch.Size([40, 283, 24])
Passage question vectors dim:  torch.Size([40, 283, 200])
Question Passage Similarity dim:  torch.Size([40, 283])
Question passage attention dim:  torch.Size([40, 283])
Final Merged Passage dim:  torch.Size([40, 283, 800])
Modeled Passage dim:  torch.Size([40, 283, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 283, 1000])
Span start logits:  torch.Size([40, 283])
span start probs dim:  torch.Size([40, 283])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 283]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 17])
Passage ques attention dim:  torch.Size([40, 125, 17])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 91, 22])
Passage ques attention dim:  torch.Size([40, 91, 22])
Passage question vectors dim:  torch.Size([40, 91, 200])
Question Passage Similarity dim:  torch.Size([40, 91])
Question passage attention dim:  torch.Size([40, 91])
Final Merged Passage dim:  torch.Size([40, 91, 800])
Modeled Passage dim:  torch.Size([40, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 91, 1000])
Span start logits:  torch.Size([40, 91])
span start probs dim:  torch.Size([40, 91])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 91]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 15])
Passage ques attention dim:  torch.Size([40, 106, 15])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 22])
Passage ques attention dim:  torch.Size([40, 171, 22])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 219, 200])
Passage Length:  219
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 219, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 219, 19])
Passage ques attention dim:  torch.Size([40, 219, 19])
Passage question vectors dim:  torch.Size([40, 219, 200])
Question Passage Similarity dim:  torch.Size([40, 219])
Question passage attention dim:  torch.Size([40, 219])
Final Merged Passage dim:  torch.Size([40, 219, 800])
Modeled Passage dim:  torch.Size([40, 219, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 219, 1000])
Span start logits:  torch.Size([40, 219])
span start probs dim:  torch.Size([40, 219])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 219]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 20])
Passage ques attention dim:  torch.Size([40, 159, 20])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 21])
Passage ques attention dim:  torch.Size([40, 198, 21])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 280, 200])
Passage Length:  280
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 280, 23])
Passage ques attention dim:  torch.Size([40, 280, 23])
Passage question vectors dim:  torch.Size([40, 280, 200])
Question Passage Similarity dim:  torch.Size([40, 280])
Question passage attention dim:  torch.Size([40, 280])
Final Merged Passage dim:  torch.Size([40, 280, 800])
Modeled Passage dim:  torch.Size([40, 280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 280, 1000])
Span start logits:  torch.Size([40, 280])
span start probs dim:  torch.Size([40, 280])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 280]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 23])
Passage ques attention dim:  torch.Size([40, 139, 23])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 19])
Passage ques attention dim:  torch.Size([40, 119, 19])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 17])
Passage ques attention dim:  torch.Size([40, 137, 17])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 36, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 36, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 36])
Passage ques attention dim:  torch.Size([40, 109, 36])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 16])
Passage ques attention dim:  torch.Size([40, 173, 16])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 21])
Passage ques attention dim:  torch.Size([40, 175, 21])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 200, 19])
Passage ques attention dim:  torch.Size([40, 200, 19])
Passage question vectors dim:  torch.Size([40, 200, 200])
Question Passage Similarity dim:  torch.Size([40, 200])
Question passage attention dim:  torch.Size([40, 200])
Final Merged Passage dim:  torch.Size([40, 200, 800])
Modeled Passage dim:  torch.Size([40, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 200, 1000])
Span start logits:  torch.Size([40, 200])
span start probs dim:  torch.Size([40, 200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 58, 200])
Passage Length:  58
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 58, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 58, 21])
Passage ques attention dim:  torch.Size([40, 58, 21])
Passage question vectors dim:  torch.Size([40, 58, 200])
Question Passage Similarity dim:  torch.Size([40, 58])
Question passage attention dim:  torch.Size([40, 58])
Final Merged Passage dim:  torch.Size([40, 58, 800])
Modeled Passage dim:  torch.Size([40, 58, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 58, 1000])
Span start logits:  torch.Size([40, 58])
span start probs dim:  torch.Size([40, 58])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 58]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 108, 200])
Passage Length:  108
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 108, 22])
Passage ques attention dim:  torch.Size([40, 108, 22])
Passage question vectors dim:  torch.Size([40, 108, 200])
Question Passage Similarity dim:  torch.Size([40, 108])
Question passage attention dim:  torch.Size([40, 108])
Final Merged Passage dim:  torch.Size([40, 108, 800])
Modeled Passage dim:  torch.Size([40, 108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 108, 1000])
Span start logits:  torch.Size([40, 108])
span start probs dim:  torch.Size([40, 108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 19])
Passage ques attention dim:  torch.Size([40, 149, 19])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 31])
Passage ques attention dim:  torch.Size([40, 144, 31])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 124, 200])
Passage Length:  124
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 124, 30])
Passage ques attention dim:  torch.Size([40, 124, 30])
Passage question vectors dim:  torch.Size([40, 124, 200])
Question Passage Similarity dim:  torch.Size([40, 124])
Question passage attention dim:  torch.Size([40, 124])
Final Merged Passage dim:  torch.Size([40, 124, 800])
Modeled Passage dim:  torch.Size([40, 124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 124, 1000])
Span start logits:  torch.Size([40, 124])
span start probs dim:  torch.Size([40, 124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 200, 25])
Passage ques attention dim:  torch.Size([40, 200, 25])
Passage question vectors dim:  torch.Size([40, 200, 200])
Question Passage Similarity dim:  torch.Size([40, 200])
Question passage attention dim:  torch.Size([40, 200])
Final Merged Passage dim:  torch.Size([40, 200, 800])
Modeled Passage dim:  torch.Size([40, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 200, 1000])
Span start logits:  torch.Size([40, 200])
span start probs dim:  torch.Size([40, 200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 79, 200])
Passage Length:  79
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 79, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 79, 23])
Passage ques attention dim:  torch.Size([40, 79, 23])
Passage question vectors dim:  torch.Size([40, 79, 200])
Question Passage Similarity dim:  torch.Size([40, 79])
Question passage attention dim:  torch.Size([40, 79])
Final Merged Passage dim:  torch.Size([40, 79, 800])
Modeled Passage dim:  torch.Size([40, 79, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 79, 1000])
Span start logits:  torch.Size([40, 79])
span start probs dim:  torch.Size([40, 79])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 79]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 18])
Passage ques attention dim:  torch.Size([40, 142, 18])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 22])
Passage ques attention dim:  torch.Size([40, 117, 22])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 23])
Passage ques attention dim:  torch.Size([40, 120, 23])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 29])
Passage ques attention dim:  torch.Size([40, 169, 29])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 21])
Passage ques attention dim:  torch.Size([40, 114, 21])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 297, 22])
Passage ques attention dim:  torch.Size([40, 297, 22])
Passage question vectors dim:  torch.Size([40, 297, 200])
Question Passage Similarity dim:  torch.Size([40, 297])
Question passage attention dim:  torch.Size([40, 297])
Final Merged Passage dim:  torch.Size([40, 297, 800])
Modeled Passage dim:  torch.Size([40, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 297, 1000])
Span start logits:  torch.Size([40, 297])
span start probs dim:  torch.Size([40, 297])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 297]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 20])
Passage ques attention dim:  torch.Size([40, 154, 20])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 24])
Passage ques attention dim:  torch.Size([40, 115, 24])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 23])
Passage ques attention dim:  torch.Size([40, 114, 23])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 184, 200])
Passage Length:  184
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 184, 18])
Passage ques attention dim:  torch.Size([40, 184, 18])
Passage question vectors dim:  torch.Size([40, 184, 200])
Question Passage Similarity dim:  torch.Size([40, 184])
Question passage attention dim:  torch.Size([40, 184])
Final Merged Passage dim:  torch.Size([40, 184, 800])
Modeled Passage dim:  torch.Size([40, 184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 184, 1000])
Span start logits:  torch.Size([40, 184])
span start probs dim:  torch.Size([40, 184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 231, 20])
Passage ques attention dim:  torch.Size([40, 231, 20])
Passage question vectors dim:  torch.Size([40, 231, 200])
Question Passage Similarity dim:  torch.Size([40, 231])
Question passage attention dim:  torch.Size([40, 231])
Final Merged Passage dim:  torch.Size([40, 231, 800])
Modeled Passage dim:  torch.Size([40, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 231, 1000])
Span start logits:  torch.Size([40, 231])
span start probs dim:  torch.Size([40, 231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 23])
Passage ques attention dim:  torch.Size([40, 156, 23])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 18])
Passage ques attention dim:  torch.Size([40, 103, 18])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 20])
Passage ques attention dim:  torch.Size([40, 122, 20])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 23])
Passage ques attention dim:  torch.Size([40, 111, 23])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 17])
Passage ques attention dim:  torch.Size([40, 105, 17])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 22])
Passage ques attention dim:  torch.Size([40, 134, 22])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 18])
Passage ques attention dim:  torch.Size([40, 142, 18])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 72, 200])
Passage Length:  72
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 72, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 72, 23])
Passage ques attention dim:  torch.Size([40, 72, 23])
Passage question vectors dim:  torch.Size([40, 72, 200])
Question Passage Similarity dim:  torch.Size([40, 72])
Question passage attention dim:  torch.Size([40, 72])
Final Merged Passage dim:  torch.Size([40, 72, 800])
Modeled Passage dim:  torch.Size([40, 72, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 72, 1000])
Span start logits:  torch.Size([40, 72])
span start probs dim:  torch.Size([40, 72])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 72]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 25])
Passage ques attention dim:  torch.Size([40, 106, 25])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 19])
Passage ques attention dim:  torch.Size([40, 137, 19])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 19])
Passage ques attention dim:  torch.Size([40, 104, 19])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 76, 200])
Passage Length:  76
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 76, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 76, 25])
Passage ques attention dim:  torch.Size([40, 76, 25])
Passage question vectors dim:  torch.Size([40, 76, 200])
Question Passage Similarity dim:  torch.Size([40, 76])
Question passage attention dim:  torch.Size([40, 76])
Final Merged Passage dim:  torch.Size([40, 76, 800])
Modeled Passage dim:  torch.Size([40, 76, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 76, 1000])
Span start logits:  torch.Size([40, 76])
span start probs dim:  torch.Size([40, 76])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 76]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 20])
Passage ques attention dim:  torch.Size([40, 153, 20])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 396, 200])
Passage Length:  396
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 396, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 396, 16])
Passage ques attention dim:  torch.Size([40, 396, 16])
Passage question vectors dim:  torch.Size([40, 396, 200])
Question Passage Similarity dim:  torch.Size([40, 396])
Question passage attention dim:  torch.Size([40, 396])
Final Merged Passage dim:  torch.Size([40, 396, 800])
Modeled Passage dim:  torch.Size([40, 396, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 396, 1000])
Span start logits:  torch.Size([40, 396])
span start probs dim:  torch.Size([40, 396])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 396]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 21])
Passage ques attention dim:  torch.Size([40, 123, 21])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 227, 30])
Passage ques attention dim:  torch.Size([40, 227, 30])
Passage question vectors dim:  torch.Size([40, 227, 200])
Question Passage Similarity dim:  torch.Size([40, 227])
Question passage attention dim:  torch.Size([40, 227])
Final Merged Passage dim:  torch.Size([40, 227, 800])
Modeled Passage dim:  torch.Size([40, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 227, 1000])
Span start logits:  torch.Size([40, 227])
span start probs dim:  torch.Size([40, 227])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 227]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 21])
Passage ques attention dim:  torch.Size([40, 167, 21])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 192, 200])
Passage Length:  192
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 192, 22])
Passage ques attention dim:  torch.Size([40, 192, 22])
Passage question vectors dim:  torch.Size([40, 192, 200])
Question Passage Similarity dim:  torch.Size([40, 192])
Question passage attention dim:  torch.Size([40, 192])
Final Merged Passage dim:  torch.Size([40, 192, 800])
Modeled Passage dim:  torch.Size([40, 192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 192, 1000])
Span start logits:  torch.Size([40, 192])
span start probs dim:  torch.Size([40, 192])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 192]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 249, 200])
Passage Length:  249
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 249, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 249, 25])
Passage ques attention dim:  torch.Size([40, 249, 25])
Passage question vectors dim:  torch.Size([40, 249, 200])
Question Passage Similarity dim:  torch.Size([40, 249])
Question passage attention dim:  torch.Size([40, 249])
Final Merged Passage dim:  torch.Size([40, 249, 800])
Modeled Passage dim:  torch.Size([40, 249, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 249, 1000])
Span start logits:  torch.Size([40, 249])
span start probs dim:  torch.Size([40, 249])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 249]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 18])
Passage ques attention dim:  torch.Size([40, 126, 18])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 272, 200])
Passage Length:  272
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 272, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 272, 24])
Passage ques attention dim:  torch.Size([40, 272, 24])
Passage question vectors dim:  torch.Size([40, 272, 200])
Question Passage Similarity dim:  torch.Size([40, 272])
Question passage attention dim:  torch.Size([40, 272])
Final Merged Passage dim:  torch.Size([40, 272, 800])
Modeled Passage dim:  torch.Size([40, 272, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 272, 1000])
Span start logits:  torch.Size([40, 272])
span start probs dim:  torch.Size([40, 272])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 272]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 252, 200])
Passage Length:  252
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 252, 18])
Passage ques attention dim:  torch.Size([40, 252, 18])
Passage question vectors dim:  torch.Size([40, 252, 200])
Question Passage Similarity dim:  torch.Size([40, 252])
Question passage attention dim:  torch.Size([40, 252])
Final Merged Passage dim:  torch.Size([40, 252, 800])
Modeled Passage dim:  torch.Size([40, 252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 252, 1000])
Span start logits:  torch.Size([40, 252])
span start probs dim:  torch.Size([40, 252])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 252]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 20])
Passage ques attention dim:  torch.Size([40, 155, 20])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 35, 200])
Passage Length:  35
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 35, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 35, 19])
Passage ques attention dim:  torch.Size([40, 35, 19])
Passage question vectors dim:  torch.Size([40, 35, 200])
Question Passage Similarity dim:  torch.Size([40, 35])
Question passage attention dim:  torch.Size([40, 35])
Final Merged Passage dim:  torch.Size([40, 35, 800])
Modeled Passage dim:  torch.Size([40, 35, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 35, 1000])
Span start logits:  torch.Size([40, 35])
span start probs dim:  torch.Size([40, 35])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 35]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 202, 21])
Passage ques attention dim:  torch.Size([40, 202, 21])
Passage question vectors dim:  torch.Size([40, 202, 200])
Question Passage Similarity dim:  torch.Size([40, 202])
Question passage attention dim:  torch.Size([40, 202])
Final Merged Passage dim:  torch.Size([40, 202, 800])
Modeled Passage dim:  torch.Size([40, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 202, 1000])
Span start logits:  torch.Size([40, 202])
span start probs dim:  torch.Size([40, 202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 20])
Passage ques attention dim:  torch.Size([40, 98, 20])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 242, 200])
Passage Length:  242
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 242, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 242, 18])
Passage ques attention dim:  torch.Size([40, 242, 18])
Passage question vectors dim:  torch.Size([40, 242, 200])
Question Passage Similarity dim:  torch.Size([40, 242])
Question passage attention dim:  torch.Size([40, 242])
Final Merged Passage dim:  torch.Size([40, 242, 800])
Modeled Passage dim:  torch.Size([40, 242, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 242, 1000])
Span start logits:  torch.Size([40, 242])
span start probs dim:  torch.Size([40, 242])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 242]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 23])
Passage ques attention dim:  torch.Size([40, 205, 23])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 254, 200])
Passage Length:  254
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 254, 26])
Passage ques attention dim:  torch.Size([40, 254, 26])
Passage question vectors dim:  torch.Size([40, 254, 200])
Question Passage Similarity dim:  torch.Size([40, 254])
Question passage attention dim:  torch.Size([40, 254])
Final Merged Passage dim:  torch.Size([40, 254, 800])
Modeled Passage dim:  torch.Size([40, 254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 254, 1000])
Span start logits:  torch.Size([40, 254])
span start probs dim:  torch.Size([40, 254])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 254]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 86, 17])
Passage ques attention dim:  torch.Size([40, 86, 17])
Passage question vectors dim:  torch.Size([40, 86, 200])
Question Passage Similarity dim:  torch.Size([40, 86])
Question passage attention dim:  torch.Size([40, 86])
Final Merged Passage dim:  torch.Size([40, 86, 800])
Modeled Passage dim:  torch.Size([40, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 86, 1000])
Span start logits:  torch.Size([40, 86])
span start probs dim:  torch.Size([40, 86])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 86]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 67, 200])
Passage Length:  67
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 67, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 67, 19])
Passage ques attention dim:  torch.Size([40, 67, 19])
Passage question vectors dim:  torch.Size([40, 67, 200])
Question Passage Similarity dim:  torch.Size([40, 67])
Question passage attention dim:  torch.Size([40, 67])
Final Merged Passage dim:  torch.Size([40, 67, 800])
Modeled Passage dim:  torch.Size([40, 67, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 67, 1000])
Span start logits:  torch.Size([40, 67])
span start probs dim:  torch.Size([40, 67])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 67]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 22])
Passage ques attention dim:  torch.Size([40, 115, 22])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 409, 200])
Passage Length:  409
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 409, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 409, 26])
Passage ques attention dim:  torch.Size([40, 409, 26])
Passage question vectors dim:  torch.Size([40, 409, 200])
Question Passage Similarity dim:  torch.Size([40, 409])
Question passage attention dim:  torch.Size([40, 409])
Final Merged Passage dim:  torch.Size([40, 409, 800])
Modeled Passage dim:  torch.Size([40, 409, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 409, 1000])
Span start logits:  torch.Size([40, 409])
span start probs dim:  torch.Size([40, 409])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 409]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 24])
Passage ques attention dim:  torch.Size([40, 150, 24])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 101, 200])
Passage Length:  101
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 101, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 101, 18])
Passage ques attention dim:  torch.Size([40, 101, 18])
Passage question vectors dim:  torch.Size([40, 101, 200])
Question Passage Similarity dim:  torch.Size([40, 101])
Question passage attention dim:  torch.Size([40, 101])
Final Merged Passage dim:  torch.Size([40, 101, 800])
Modeled Passage dim:  torch.Size([40, 101, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 101, 1000])
Span start logits:  torch.Size([40, 101])
span start probs dim:  torch.Size([40, 101])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 101]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 99, 200])
Passage Length:  99
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 99, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 99, 17])
Passage ques attention dim:  torch.Size([40, 99, 17])
Passage question vectors dim:  torch.Size([40, 99, 200])
Question Passage Similarity dim:  torch.Size([40, 99])
Question passage attention dim:  torch.Size([40, 99])
Final Merged Passage dim:  torch.Size([40, 99, 800])
Modeled Passage dim:  torch.Size([40, 99, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 99, 1000])
Span start logits:  torch.Size([40, 99])
span start probs dim:  torch.Size([40, 99])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 99]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 243, 23])
Passage ques attention dim:  torch.Size([40, 243, 23])
Passage question vectors dim:  torch.Size([40, 243, 200])
Question Passage Similarity dim:  torch.Size([40, 243])
Question passage attention dim:  torch.Size([40, 243])
Final Merged Passage dim:  torch.Size([40, 243, 800])
Modeled Passage dim:  torch.Size([40, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 243, 1000])
Span start logits:  torch.Size([40, 243])
span start probs dim:  torch.Size([40, 243])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 243]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 21])
Passage ques attention dim:  torch.Size([40, 114, 21])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 90, 25])
Passage ques attention dim:  torch.Size([40, 90, 25])
Passage question vectors dim:  torch.Size([40, 90, 200])
Question Passage Similarity dim:  torch.Size([40, 90])
Question passage attention dim:  torch.Size([40, 90])
Final Merged Passage dim:  torch.Size([40, 90, 800])
Modeled Passage dim:  torch.Size([40, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 90, 1000])
Span start logits:  torch.Size([40, 90])
span start probs dim:  torch.Size([40, 90])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 90]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 252, 200])
Passage Length:  252
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 252, 26])
Passage ques attention dim:  torch.Size([40, 252, 26])
Passage question vectors dim:  torch.Size([40, 252, 200])
Question Passage Similarity dim:  torch.Size([40, 252])
Question passage attention dim:  torch.Size([40, 252])
Final Merged Passage dim:  torch.Size([40, 252, 800])
Modeled Passage dim:  torch.Size([40, 252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 252, 1000])
Span start logits:  torch.Size([40, 252])
span start probs dim:  torch.Size([40, 252])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 252]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 18])
Passage ques attention dim:  torch.Size([40, 117, 18])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 238, 26])
Passage ques attention dim:  torch.Size([40, 238, 26])
Passage question vectors dim:  torch.Size([40, 238, 200])
Question Passage Similarity dim:  torch.Size([40, 238])
Question passage attention dim:  torch.Size([40, 238])
Final Merged Passage dim:  torch.Size([40, 238, 800])
Modeled Passage dim:  torch.Size([40, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 238, 1000])
Span start logits:  torch.Size([40, 238])
span start probs dim:  torch.Size([40, 238])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 238]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 88, 25])
Passage ques attention dim:  torch.Size([40, 88, 25])
Passage question vectors dim:  torch.Size([40, 88, 200])
Question Passage Similarity dim:  torch.Size([40, 88])
Question passage attention dim:  torch.Size([40, 88])
Final Merged Passage dim:  torch.Size([40, 88, 800])
Modeled Passage dim:  torch.Size([40, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 88, 1000])
Span start logits:  torch.Size([40, 88])
span start probs dim:  torch.Size([40, 88])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 88]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 20])
Passage ques attention dim:  torch.Size([40, 139, 20])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 75, 200])
Passage Length:  75
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 75, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 75, 23])
Passage ques attention dim:  torch.Size([40, 75, 23])
Passage question vectors dim:  torch.Size([40, 75, 200])
Question Passage Similarity dim:  torch.Size([40, 75])
Question passage attention dim:  torch.Size([40, 75])
Final Merged Passage dim:  torch.Size([40, 75, 800])
Modeled Passage dim:  torch.Size([40, 75, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 75, 1000])
Span start logits:  torch.Size([40, 75])
span start probs dim:  torch.Size([40, 75])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 75]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 68, 200])
Passage Length:  68
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 68, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 68, 20])
Passage ques attention dim:  torch.Size([40, 68, 20])
Passage question vectors dim:  torch.Size([40, 68, 200])
Question Passage Similarity dim:  torch.Size([40, 68])
Question passage attention dim:  torch.Size([40, 68])
Final Merged Passage dim:  torch.Size([40, 68, 800])
Modeled Passage dim:  torch.Size([40, 68, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 68, 1000])
Span start logits:  torch.Size([40, 68])
span start probs dim:  torch.Size([40, 68])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 68]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 90, 27])
Passage ques attention dim:  torch.Size([40, 90, 27])
Passage question vectors dim:  torch.Size([40, 90, 200])
Question Passage Similarity dim:  torch.Size([40, 90])
Question passage attention dim:  torch.Size([40, 90])
Final Merged Passage dim:  torch.Size([40, 90, 800])
Modeled Passage dim:  torch.Size([40, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 90, 1000])
Span start logits:  torch.Size([40, 90])
span start probs dim:  torch.Size([40, 90])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 90]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 23])
Passage ques attention dim:  torch.Size([40, 125, 23])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 23])
Passage ques attention dim:  torch.Size([40, 150, 23])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 21])
Passage ques attention dim:  torch.Size([40, 139, 21])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 94, 20])
Passage ques attention dim:  torch.Size([40, 94, 20])
Passage question vectors dim:  torch.Size([40, 94, 200])
Question Passage Similarity dim:  torch.Size([40, 94])
Question passage attention dim:  torch.Size([40, 94])
Final Merged Passage dim:  torch.Size([40, 94, 800])
Modeled Passage dim:  torch.Size([40, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 94, 1000])
Span start logits:  torch.Size([40, 94])
span start probs dim:  torch.Size([40, 94])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 94]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 19])
Passage ques attention dim:  torch.Size([40, 111, 19])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 24])
Passage ques attention dim:  torch.Size([40, 125, 24])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 22])
Passage ques attention dim:  torch.Size([40, 153, 22])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 26])
Passage ques attention dim:  torch.Size([40, 131, 26])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 195, 200])
Passage Length:  195
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 195, 20])
Passage ques attention dim:  torch.Size([40, 195, 20])
Passage question vectors dim:  torch.Size([40, 195, 200])
Question Passage Similarity dim:  torch.Size([40, 195])
Question passage attention dim:  torch.Size([40, 195])
Final Merged Passage dim:  torch.Size([40, 195, 800])
Modeled Passage dim:  torch.Size([40, 195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 195, 1000])
Span start logits:  torch.Size([40, 195])
span start probs dim:  torch.Size([40, 195])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 195]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 22])
Passage ques attention dim:  torch.Size([40, 137, 22])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 34, 200])
Embedded passage dim:  torch.Size([40, 310, 200])
Passage Length:  310
Encoded question dim:  torch.Size([40, 34, 200])
Encoded passage dim:  torch.Size([40, 310, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 310, 34])
Passage ques attention dim:  torch.Size([40, 310, 34])
Passage question vectors dim:  torch.Size([40, 310, 200])
Question Passage Similarity dim:  torch.Size([40, 310])
Question passage attention dim:  torch.Size([40, 310])
Final Merged Passage dim:  torch.Size([40, 310, 800])
Modeled Passage dim:  torch.Size([40, 310, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 310, 1000])
Span start logits:  torch.Size([40, 310])
span start probs dim:  torch.Size([40, 310])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 310]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 24])
Passage ques attention dim:  torch.Size([40, 109, 24])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 20])
Passage ques attention dim:  torch.Size([40, 196, 20])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 222, 21])
Passage ques attention dim:  torch.Size([40, 222, 21])
Passage question vectors dim:  torch.Size([40, 222, 200])
Question Passage Similarity dim:  torch.Size([40, 222])
Question passage attention dim:  torch.Size([40, 222])
Final Merged Passage dim:  torch.Size([40, 222, 800])
Modeled Passage dim:  torch.Size([40, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 222, 1000])
Span start logits:  torch.Size([40, 222])
span start probs dim:  torch.Size([40, 222])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 222]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 22])
Passage ques attention dim:  torch.Size([40, 112, 22])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 30])
Passage ques attention dim:  torch.Size([40, 205, 30])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 25])
Passage ques attention dim:  torch.Size([40, 107, 25])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 22])
Passage ques attention dim:  torch.Size([40, 110, 22])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 162, 200])
Passage Length:  162
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 162, 26])
Passage ques attention dim:  torch.Size([40, 162, 26])
Passage question vectors dim:  torch.Size([40, 162, 200])
Question Passage Similarity dim:  torch.Size([40, 162])
Question passage attention dim:  torch.Size([40, 162])
Final Merged Passage dim:  torch.Size([40, 162, 800])
Modeled Passage dim:  torch.Size([40, 162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 162, 1000])
Span start logits:  torch.Size([40, 162])
span start probs dim:  torch.Size([40, 162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 21])
Passage ques attention dim:  torch.Size([40, 156, 21])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 190, 27])
Passage ques attention dim:  torch.Size([40, 190, 27])
Passage question vectors dim:  torch.Size([40, 190, 200])
Question Passage Similarity dim:  torch.Size([40, 190])
Question passage attention dim:  torch.Size([40, 190])
Final Merged Passage dim:  torch.Size([40, 190, 800])
Modeled Passage dim:  torch.Size([40, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 190, 1000])
Span start logits:  torch.Size([40, 190])
span start probs dim:  torch.Size([40, 190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 17])
Passage ques attention dim:  torch.Size([40, 118, 17])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 26])
Passage ques attention dim:  torch.Size([40, 158, 26])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 25])
Passage ques attention dim:  torch.Size([40, 142, 25])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 73, 20])
Passage ques attention dim:  torch.Size([40, 73, 20])
Passage question vectors dim:  torch.Size([40, 73, 200])
Question Passage Similarity dim:  torch.Size([40, 73])
Question passage attention dim:  torch.Size([40, 73])
Final Merged Passage dim:  torch.Size([40, 73, 800])
Modeled Passage dim:  torch.Size([40, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 73, 1000])
Span start logits:  torch.Size([40, 73])
span start probs dim:  torch.Size([40, 73])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 73]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 90, 200])
Passage Length:  90
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 90, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 90, 22])
Passage ques attention dim:  torch.Size([40, 90, 22])
Passage question vectors dim:  torch.Size([40, 90, 200])
Question Passage Similarity dim:  torch.Size([40, 90])
Question passage attention dim:  torch.Size([40, 90])
Final Merged Passage dim:  torch.Size([40, 90, 800])
Modeled Passage dim:  torch.Size([40, 90, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 90, 1000])
Span start logits:  torch.Size([40, 90])
span start probs dim:  torch.Size([40, 90])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 90]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 21])
Passage ques attention dim:  torch.Size([40, 158, 21])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 20])
Passage ques attention dim:  torch.Size([40, 186, 20])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 20])
Passage ques attention dim:  torch.Size([40, 139, 20])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 20])
Passage ques attention dim:  torch.Size([40, 114, 20])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 23])
Passage ques attention dim:  torch.Size([40, 134, 23])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 21])
Passage ques attention dim:  torch.Size([40, 164, 21])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 22])
Passage ques attention dim:  torch.Size([40, 117, 22])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 24])
Passage ques attention dim:  torch.Size([40, 125, 24])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 24])
Passage ques attention dim:  torch.Size([40, 119, 24])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 62, 200])
Passage Length:  62
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 62, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 62, 27])
Passage ques attention dim:  torch.Size([40, 62, 27])
Passage question vectors dim:  torch.Size([40, 62, 200])
Question Passage Similarity dim:  torch.Size([40, 62])
Question passage attention dim:  torch.Size([40, 62])
Final Merged Passage dim:  torch.Size([40, 62, 800])
Modeled Passage dim:  torch.Size([40, 62, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 62, 1000])
Span start logits:  torch.Size([40, 62])
span start probs dim:  torch.Size([40, 62])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 62]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 26])
Passage ques attention dim:  torch.Size([40, 164, 26])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 18])
Passage ques attention dim:  torch.Size([40, 149, 18])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 142, 200])
Passage Length:  142
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 142, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 142, 25])
Passage ques attention dim:  torch.Size([40, 142, 25])
Passage question vectors dim:  torch.Size([40, 142, 200])
Question Passage Similarity dim:  torch.Size([40, 142])
Question passage attention dim:  torch.Size([40, 142])
Final Merged Passage dim:  torch.Size([40, 142, 800])
Modeled Passage dim:  torch.Size([40, 142, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 142, 1000])
Span start logits:  torch.Size([40, 142])
span start probs dim:  torch.Size([40, 142])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 142]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 237, 200])
Passage Length:  237
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 237, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 237, 21])
Passage ques attention dim:  torch.Size([40, 237, 21])
Passage question vectors dim:  torch.Size([40, 237, 200])
Question Passage Similarity dim:  torch.Size([40, 237])
Question passage attention dim:  torch.Size([40, 237])
Final Merged Passage dim:  torch.Size([40, 237, 800])
Modeled Passage dim:  torch.Size([40, 237, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 237, 1000])
Span start logits:  torch.Size([40, 237])
span start probs dim:  torch.Size([40, 237])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 237]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 17])
Passage ques attention dim:  torch.Size([40, 120, 17])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 24])
Passage ques attention dim:  torch.Size([40, 182, 24])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 24])
Passage ques attention dim:  torch.Size([40, 198, 24])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 21])
Passage ques attention dim:  torch.Size([40, 116, 21])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 25])
Passage ques attention dim:  torch.Size([40, 127, 25])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 22])
Passage ques attention dim:  torch.Size([40, 134, 22])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 21])
Passage ques attention dim:  torch.Size([40, 129, 21])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 169, 200])
Passage Length:  169
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 169, 21])
Passage ques attention dim:  torch.Size([40, 169, 21])
Passage question vectors dim:  torch.Size([40, 169, 200])
Question Passage Similarity dim:  torch.Size([40, 169])
Question passage attention dim:  torch.Size([40, 169])
Final Merged Passage dim:  torch.Size([40, 169, 800])
Modeled Passage dim:  torch.Size([40, 169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 169, 1000])
Span start logits:  torch.Size([40, 169])
span start probs dim:  torch.Size([40, 169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 19])
Passage ques attention dim:  torch.Size([40, 133, 19])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 18])
Passage ques attention dim:  torch.Size([40, 152, 18])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 24])
Passage ques attention dim:  torch.Size([40, 218, 24])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 217, 23])
Passage ques attention dim:  torch.Size([40, 217, 23])
Passage question vectors dim:  torch.Size([40, 217, 200])
Question Passage Similarity dim:  torch.Size([40, 217])
Question passage attention dim:  torch.Size([40, 217])
Final Merged Passage dim:  torch.Size([40, 217, 800])
Modeled Passage dim:  torch.Size([40, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 217, 1000])
Span start logits:  torch.Size([40, 217])
span start probs dim:  torch.Size([40, 217])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 217]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 17])
Passage ques attention dim:  torch.Size([40, 160, 17])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 22])
Passage ques attention dim:  torch.Size([40, 121, 22])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 305, 200])
Passage Length:  305
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 305, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 305, 22])
Passage ques attention dim:  torch.Size([40, 305, 22])
Passage question vectors dim:  torch.Size([40, 305, 200])
Question Passage Similarity dim:  torch.Size([40, 305])
Question passage attention dim:  torch.Size([40, 305])
Final Merged Passage dim:  torch.Size([40, 305, 800])
Modeled Passage dim:  torch.Size([40, 305, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 305, 1000])
Span start logits:  torch.Size([40, 305])
span start probs dim:  torch.Size([40, 305])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 305]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 21])
Passage ques attention dim:  torch.Size([40, 121, 21])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 28])
Passage ques attention dim:  torch.Size([40, 119, 28])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 27])
Passage ques attention dim:  torch.Size([40, 174, 27])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 20])
Passage ques attention dim:  torch.Size([40, 167, 20])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 22])
Passage ques attention dim:  torch.Size([40, 151, 22])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 27])
Passage ques attention dim:  torch.Size([40, 174, 27])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 21])
Passage ques attention dim:  torch.Size([40, 121, 21])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 21])
Passage ques attention dim:  torch.Size([40, 103, 21])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 226, 16])
Passage ques attention dim:  torch.Size([40, 226, 16])
Passage question vectors dim:  torch.Size([40, 226, 200])
Question Passage Similarity dim:  torch.Size([40, 226])
Question passage attention dim:  torch.Size([40, 226])
Final Merged Passage dim:  torch.Size([40, 226, 800])
Modeled Passage dim:  torch.Size([40, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 226, 1000])
Span start logits:  torch.Size([40, 226])
span start probs dim:  torch.Size([40, 226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 200, 22])
Passage ques attention dim:  torch.Size([40, 200, 22])
Passage question vectors dim:  torch.Size([40, 200, 200])
Question Passage Similarity dim:  torch.Size([40, 200])
Question passage attention dim:  torch.Size([40, 200])
Final Merged Passage dim:  torch.Size([40, 200, 800])
Modeled Passage dim:  torch.Size([40, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 200, 1000])
Span start logits:  torch.Size([40, 200])
span start probs dim:  torch.Size([40, 200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 19])
Passage ques attention dim:  torch.Size([40, 178, 19])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 21])
Passage ques attention dim:  torch.Size([40, 166, 21])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 17])
Passage ques attention dim:  torch.Size([40, 131, 17])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 257, 200])
Passage Length:  257
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 257, 21])
Passage ques attention dim:  torch.Size([40, 257, 21])
Passage question vectors dim:  torch.Size([40, 257, 200])
Question Passage Similarity dim:  torch.Size([40, 257])
Question passage attention dim:  torch.Size([40, 257])
Final Merged Passage dim:  torch.Size([40, 257, 800])
Modeled Passage dim:  torch.Size([40, 257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 257, 1000])
Span start logits:  torch.Size([40, 257])
span start probs dim:  torch.Size([40, 257])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 257]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 18])
Passage ques attention dim:  torch.Size([40, 160, 18])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 223, 200])
Passage Length:  223
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 223, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 223, 27])
Passage ques attention dim:  torch.Size([40, 223, 27])
Passage question vectors dim:  torch.Size([40, 223, 200])
Question Passage Similarity dim:  torch.Size([40, 223])
Question passage attention dim:  torch.Size([40, 223])
Final Merged Passage dim:  torch.Size([40, 223, 800])
Modeled Passage dim:  torch.Size([40, 223, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 223, 1000])
Span start logits:  torch.Size([40, 223])
span start probs dim:  torch.Size([40, 223])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 223]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 223, 200])
Passage Length:  223
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 223, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 223, 20])
Passage ques attention dim:  torch.Size([40, 223, 20])
Passage question vectors dim:  torch.Size([40, 223, 200])
Question Passage Similarity dim:  torch.Size([40, 223])
Question passage attention dim:  torch.Size([40, 223])
Final Merged Passage dim:  torch.Size([40, 223, 800])
Modeled Passage dim:  torch.Size([40, 223, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 223, 1000])
Span start logits:  torch.Size([40, 223])
span start probs dim:  torch.Size([40, 223])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 223]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 20])
Passage ques attention dim:  torch.Size([40, 173, 20])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 202, 18])
Passage ques attention dim:  torch.Size([40, 202, 18])
Passage question vectors dim:  torch.Size([40, 202, 200])
Question Passage Similarity dim:  torch.Size([40, 202])
Question passage attention dim:  torch.Size([40, 202])
Final Merged Passage dim:  torch.Size([40, 202, 800])
Modeled Passage dim:  torch.Size([40, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 202, 1000])
Span start logits:  torch.Size([40, 202])
span start probs dim:  torch.Size([40, 202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 224, 200])
Passage Length:  224
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 224, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 224, 21])
Passage ques attention dim:  torch.Size([40, 224, 21])
Passage question vectors dim:  torch.Size([40, 224, 200])
Question Passage Similarity dim:  torch.Size([40, 224])
Question passage attention dim:  torch.Size([40, 224])
Final Merged Passage dim:  torch.Size([40, 224, 800])
Modeled Passage dim:  torch.Size([40, 224, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 224, 1000])
Span start logits:  torch.Size([40, 224])
span start probs dim:  torch.Size([40, 224])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 224]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 259, 18])
Passage ques attention dim:  torch.Size([40, 259, 18])
Passage question vectors dim:  torch.Size([40, 259, 200])
Question Passage Similarity dim:  torch.Size([40, 259])
Question passage attention dim:  torch.Size([40, 259])
Final Merged Passage dim:  torch.Size([40, 259, 800])
Modeled Passage dim:  torch.Size([40, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 259, 1000])
Span start logits:  torch.Size([40, 259])
span start probs dim:  torch.Size([40, 259])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 259]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 23])
Passage ques attention dim:  torch.Size([40, 177, 23])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 22])
Passage ques attention dim:  torch.Size([40, 187, 22])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 21])
Passage ques attention dim:  torch.Size([40, 164, 21])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 24])
Passage ques attention dim:  torch.Size([40, 134, 24])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 26])
Passage ques attention dim:  torch.Size([40, 131, 26])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 70, 200])
Passage Length:  70
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 70, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 70, 19])
Passage ques attention dim:  torch.Size([40, 70, 19])
Passage question vectors dim:  torch.Size([40, 70, 200])
Question Passage Similarity dim:  torch.Size([40, 70])
Question passage attention dim:  torch.Size([40, 70])
Final Merged Passage dim:  torch.Size([40, 70, 800])
Modeled Passage dim:  torch.Size([40, 70, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 70, 1000])
Span start logits:  torch.Size([40, 70])
span start probs dim:  torch.Size([40, 70])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 70]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 19])
Passage ques attention dim:  torch.Size([40, 146, 19])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 21])
Passage ques attention dim:  torch.Size([40, 115, 21])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 18])
Passage ques attention dim:  torch.Size([40, 131, 18])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 21])
Passage ques attention dim:  torch.Size([40, 119, 21])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 19])
Passage ques attention dim:  torch.Size([40, 121, 19])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 27])
Passage ques attention dim:  torch.Size([40, 140, 27])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 20])
Passage ques attention dim:  torch.Size([40, 164, 20])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 29])
Passage ques attention dim:  torch.Size([40, 218, 29])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 311, 21])
Passage ques attention dim:  torch.Size([40, 311, 21])
Passage question vectors dim:  torch.Size([40, 311, 200])
Question Passage Similarity dim:  torch.Size([40, 311])
Question passage attention dim:  torch.Size([40, 311])
Final Merged Passage dim:  torch.Size([40, 311, 800])
Modeled Passage dim:  torch.Size([40, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 311, 1000])
Span start logits:  torch.Size([40, 311])
span start probs dim:  torch.Size([40, 311])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 311]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 19])
Passage ques attention dim:  torch.Size([40, 119, 19])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 188, 27])
Passage ques attention dim:  torch.Size([40, 188, 27])
Passage question vectors dim:  torch.Size([40, 188, 200])
Question Passage Similarity dim:  torch.Size([40, 188])
Question passage attention dim:  torch.Size([40, 188])
Final Merged Passage dim:  torch.Size([40, 188, 800])
Modeled Passage dim:  torch.Size([40, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 188, 1000])
Span start logits:  torch.Size([40, 188])
span start probs dim:  torch.Size([40, 188])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 188]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 27])
Passage ques attention dim:  torch.Size([40, 140, 27])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 237, 200])
Passage Length:  237
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 237, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 237, 27])
Passage ques attention dim:  torch.Size([40, 237, 27])
Passage question vectors dim:  torch.Size([40, 237, 200])
Question Passage Similarity dim:  torch.Size([40, 237])
Question passage attention dim:  torch.Size([40, 237])
Final Merged Passage dim:  torch.Size([40, 237, 800])
Modeled Passage dim:  torch.Size([40, 237, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 237, 1000])
Span start logits:  torch.Size([40, 237])
span start probs dim:  torch.Size([40, 237])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 237]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 20])
Passage ques attention dim:  torch.Size([40, 110, 20])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 313, 200])
Passage Length:  313
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 313, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 313, 25])
Passage ques attention dim:  torch.Size([40, 313, 25])
Passage question vectors dim:  torch.Size([40, 313, 200])
Question Passage Similarity dim:  torch.Size([40, 313])
Question passage attention dim:  torch.Size([40, 313])
Final Merged Passage dim:  torch.Size([40, 313, 800])
Modeled Passage dim:  torch.Size([40, 313, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 313, 1000])
Span start logits:  torch.Size([40, 313])
span start probs dim:  torch.Size([40, 313])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 313]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 22])
Passage ques attention dim:  torch.Size([40, 144, 22])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 17])
Passage ques attention dim:  torch.Size([40, 144, 17])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 19])
Passage ques attention dim:  torch.Size([40, 191, 19])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 21])
Passage ques attention dim:  torch.Size([40, 111, 21])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 19])
Passage ques attention dim:  torch.Size([40, 118, 19])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 19])
Passage ques attention dim:  torch.Size([40, 152, 19])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 17])
Passage ques attention dim:  torch.Size([40, 100, 17])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 25])
Passage ques attention dim:  torch.Size([40, 154, 25])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 18])
Passage ques attention dim:  torch.Size([40, 114, 18])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 33, 200])
Passage Length:  33
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 33, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 33, 20])
Passage ques attention dim:  torch.Size([40, 33, 20])
Passage question vectors dim:  torch.Size([40, 33, 200])
Question Passage Similarity dim:  torch.Size([40, 33])
Question passage attention dim:  torch.Size([40, 33])
Final Merged Passage dim:  torch.Size([40, 33, 800])
Modeled Passage dim:  torch.Size([40, 33, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 33, 1000])
Span start logits:  torch.Size([40, 33])
span start probs dim:  torch.Size([40, 33])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 33]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 24])
Passage ques attention dim:  torch.Size([40, 144, 24])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 235, 200])
Passage Length:  235
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 235, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 235, 26])
Passage ques attention dim:  torch.Size([40, 235, 26])
Passage question vectors dim:  torch.Size([40, 235, 200])
Question Passage Similarity dim:  torch.Size([40, 235])
Question passage attention dim:  torch.Size([40, 235])
Final Merged Passage dim:  torch.Size([40, 235, 800])
Modeled Passage dim:  torch.Size([40, 235, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 235, 1000])
Span start logits:  torch.Size([40, 235])
span start probs dim:  torch.Size([40, 235])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 235]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 18])
Passage ques attention dim:  torch.Size([40, 122, 18])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 21])
Passage ques attention dim:  torch.Size([40, 130, 21])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 319, 200])
Passage Length:  319
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 319, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 319, 19])
Passage ques attention dim:  torch.Size([40, 319, 19])
Passage question vectors dim:  torch.Size([40, 319, 200])
Question Passage Similarity dim:  torch.Size([40, 319])
Question passage attention dim:  torch.Size([40, 319])
Final Merged Passage dim:  torch.Size([40, 319, 800])
Modeled Passage dim:  torch.Size([40, 319, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 319, 1000])
Span start logits:  torch.Size([40, 319])
span start probs dim:  torch.Size([40, 319])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 319]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 22])
Passage ques attention dim:  torch.Size([40, 114, 22])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 25])
Passage ques attention dim:  torch.Size([40, 105, 25])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 362, 200])
Passage Length:  362
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 362, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 362, 20])
Passage ques attention dim:  torch.Size([40, 362, 20])
Passage question vectors dim:  torch.Size([40, 362, 200])
Question Passage Similarity dim:  torch.Size([40, 362])
Question passage attention dim:  torch.Size([40, 362])
Final Merged Passage dim:  torch.Size([40, 362, 800])
Modeled Passage dim:  torch.Size([40, 362, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 362, 1000])
Span start logits:  torch.Size([40, 362])
span start probs dim:  torch.Size([40, 362])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 362]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 210, 200])
Passage Length:  210
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 210, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 210, 16])
Passage ques attention dim:  torch.Size([40, 210, 16])
Passage question vectors dim:  torch.Size([40, 210, 200])
Question Passage Similarity dim:  torch.Size([40, 210])
Question passage attention dim:  torch.Size([40, 210])
Final Merged Passage dim:  torch.Size([40, 210, 800])
Modeled Passage dim:  torch.Size([40, 210, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 210, 1000])
Span start logits:  torch.Size([40, 210])
span start probs dim:  torch.Size([40, 210])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 210]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 264, 200])
Passage Length:  264
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 264, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 264, 27])
Passage ques attention dim:  torch.Size([40, 264, 27])
Passage question vectors dim:  torch.Size([40, 264, 200])
Question Passage Similarity dim:  torch.Size([40, 264])
Question passage attention dim:  torch.Size([40, 264])
Final Merged Passage dim:  torch.Size([40, 264, 800])
Modeled Passage dim:  torch.Size([40, 264, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 264, 1000])
Span start logits:  torch.Size([40, 264])
span start probs dim:  torch.Size([40, 264])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 264]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 23])
Passage ques attention dim:  torch.Size([40, 191, 23])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 18])
Passage ques attention dim:  torch.Size([40, 106, 18])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 17])
Passage ques attention dim:  torch.Size([40, 143, 17])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 332, 200])
Passage Length:  332
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 332, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 332, 26])
Passage ques attention dim:  torch.Size([40, 332, 26])
Passage question vectors dim:  torch.Size([40, 332, 200])
Question Passage Similarity dim:  torch.Size([40, 332])
Question passage attention dim:  torch.Size([40, 332])
Final Merged Passage dim:  torch.Size([40, 332, 800])
Modeled Passage dim:  torch.Size([40, 332, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 332, 1000])
Span start logits:  torch.Size([40, 332])
span start probs dim:  torch.Size([40, 332])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 332]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 17])
Passage ques attention dim:  torch.Size([40, 152, 17])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 23])
Passage ques attention dim:  torch.Size([40, 196, 23])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 21])
Passage ques attention dim:  torch.Size([40, 113, 21])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 23])
Passage ques attention dim:  torch.Size([40, 135, 23])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 84, 19])
Passage ques attention dim:  torch.Size([40, 84, 19])
Passage question vectors dim:  torch.Size([40, 84, 200])
Question Passage Similarity dim:  torch.Size([40, 84])
Question passage attention dim:  torch.Size([40, 84])
Final Merged Passage dim:  torch.Size([40, 84, 800])
Modeled Passage dim:  torch.Size([40, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 84, 1000])
Span start logits:  torch.Size([40, 84])
span start probs dim:  torch.Size([40, 84])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 84]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 19])
Passage ques attention dim:  torch.Size([40, 125, 19])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 159, 200])
Passage Length:  159
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 159, 22])
Passage ques attention dim:  torch.Size([40, 159, 22])
Passage question vectors dim:  torch.Size([40, 159, 200])
Question Passage Similarity dim:  torch.Size([40, 159])
Question passage attention dim:  torch.Size([40, 159])
Final Merged Passage dim:  torch.Size([40, 159, 800])
Modeled Passage dim:  torch.Size([40, 159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 159, 1000])
Span start logits:  torch.Size([40, 159])
span start probs dim:  torch.Size([40, 159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 86, 200])
Passage Length:  86
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 86, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 86, 27])
Passage ques attention dim:  torch.Size([40, 86, 27])
Passage question vectors dim:  torch.Size([40, 86, 200])
Question Passage Similarity dim:  torch.Size([40, 86])
Question passage attention dim:  torch.Size([40, 86])
Final Merged Passage dim:  torch.Size([40, 86, 800])
Modeled Passage dim:  torch.Size([40, 86, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 86, 1000])
Span start logits:  torch.Size([40, 86])
span start probs dim:  torch.Size([40, 86])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 86]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 137, 200])
Passage Length:  137
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 137, 19])
Passage ques attention dim:  torch.Size([40, 137, 19])
Passage question vectors dim:  torch.Size([40, 137, 200])
Question Passage Similarity dim:  torch.Size([40, 137])
Question passage attention dim:  torch.Size([40, 137])
Final Merged Passage dim:  torch.Size([40, 137, 800])
Modeled Passage dim:  torch.Size([40, 137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 137, 1000])
Span start logits:  torch.Size([40, 137])
span start probs dim:  torch.Size([40, 137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 16])
Passage ques attention dim:  torch.Size([40, 129, 16])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 19])
Passage ques attention dim:  torch.Size([40, 95, 19])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 27])
Passage ques attention dim:  torch.Size([40, 167, 27])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 29])
Passage ques attention dim:  torch.Size([40, 194, 29])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 98, 200])
Passage Length:  98
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 98, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 98, 19])
Passage ques attention dim:  torch.Size([40, 98, 19])
Passage question vectors dim:  torch.Size([40, 98, 200])
Question Passage Similarity dim:  torch.Size([40, 98])
Question passage attention dim:  torch.Size([40, 98])
Final Merged Passage dim:  torch.Size([40, 98, 800])
Modeled Passage dim:  torch.Size([40, 98, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 98, 1000])
Span start logits:  torch.Size([40, 98])
span start probs dim:  torch.Size([40, 98])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 98]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 266, 200])
Passage Length:  266
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 266, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 266, 18])
Passage ques attention dim:  torch.Size([40, 266, 18])
Passage question vectors dim:  torch.Size([40, 266, 200])
Question Passage Similarity dim:  torch.Size([40, 266])
Question passage attention dim:  torch.Size([40, 266])
Final Merged Passage dim:  torch.Size([40, 266, 800])
Modeled Passage dim:  torch.Size([40, 266, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 266, 1000])
Span start logits:  torch.Size([40, 266])
span start probs dim:  torch.Size([40, 266])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 266]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 23])
Passage ques attention dim:  torch.Size([40, 144, 23])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 247, 200])
Passage Length:  247
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 247, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 247, 23])
Passage ques attention dim:  torch.Size([40, 247, 23])
Passage question vectors dim:  torch.Size([40, 247, 200])
Question Passage Similarity dim:  torch.Size([40, 247])
Question passage attention dim:  torch.Size([40, 247])
Final Merged Passage dim:  torch.Size([40, 247, 800])
Modeled Passage dim:  torch.Size([40, 247, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 247, 1000])
Span start logits:  torch.Size([40, 247])
span start probs dim:  torch.Size([40, 247])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 247]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 114, 200])
Passage Length:  114
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 114, 23])
Passage ques attention dim:  torch.Size([40, 114, 23])
Passage question vectors dim:  torch.Size([40, 114, 200])
Question Passage Similarity dim:  torch.Size([40, 114])
Question passage attention dim:  torch.Size([40, 114])
Final Merged Passage dim:  torch.Size([40, 114, 800])
Modeled Passage dim:  torch.Size([40, 114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 114, 1000])
Span start logits:  torch.Size([40, 114])
span start probs dim:  torch.Size([40, 114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 23])
Passage ques attention dim:  torch.Size([40, 131, 23])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 29])
Passage ques attention dim:  torch.Size([40, 115, 29])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 24])
Passage ques attention dim:  torch.Size([40, 95, 24])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 228, 25])
Passage ques attention dim:  torch.Size([40, 228, 25])
Passage question vectors dim:  torch.Size([40, 228, 200])
Question Passage Similarity dim:  torch.Size([40, 228])
Question passage attention dim:  torch.Size([40, 228])
Final Merged Passage dim:  torch.Size([40, 228, 800])
Modeled Passage dim:  torch.Size([40, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 228, 1000])
Span start logits:  torch.Size([40, 228])
span start probs dim:  torch.Size([40, 228])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 228]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 30])
Passage ques attention dim:  torch.Size([40, 116, 30])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 22])
Passage ques attention dim:  torch.Size([40, 146, 22])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 100, 200])
Passage Length:  100
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 100, 22])
Passage ques attention dim:  torch.Size([40, 100, 22])
Passage question vectors dim:  torch.Size([40, 100, 200])
Question Passage Similarity dim:  torch.Size([40, 100])
Question passage attention dim:  torch.Size([40, 100])
Final Merged Passage dim:  torch.Size([40, 100, 800])
Modeled Passage dim:  torch.Size([40, 100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 100, 1000])
Span start logits:  torch.Size([40, 100])
span start probs dim:  torch.Size([40, 100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 19])
Passage ques attention dim:  torch.Size([40, 125, 19])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 188, 33])
Passage ques attention dim:  torch.Size([40, 188, 33])
Passage question vectors dim:  torch.Size([40, 188, 200])
Question Passage Similarity dim:  torch.Size([40, 188])
Question passage attention dim:  torch.Size([40, 188])
Final Merged Passage dim:  torch.Size([40, 188, 800])
Modeled Passage dim:  torch.Size([40, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 188, 1000])
Span start logits:  torch.Size([40, 188])
span start probs dim:  torch.Size([40, 188])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 188]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 20])
Passage ques attention dim:  torch.Size([40, 171, 20])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 250, 20])
Passage ques attention dim:  torch.Size([40, 250, 20])
Passage question vectors dim:  torch.Size([40, 250, 200])
Question Passage Similarity dim:  torch.Size([40, 250])
Question passage attention dim:  torch.Size([40, 250])
Final Merged Passage dim:  torch.Size([40, 250, 800])
Modeled Passage dim:  torch.Size([40, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 250, 1000])
Span start logits:  torch.Size([40, 250])
span start probs dim:  torch.Size([40, 250])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 250]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 21])
Passage ques attention dim:  torch.Size([40, 115, 21])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 35, 200])
Passage Length:  35
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 35, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 35, 18])
Passage ques attention dim:  torch.Size([40, 35, 18])
Passage question vectors dim:  torch.Size([40, 35, 200])
Question Passage Similarity dim:  torch.Size([40, 35])
Question passage attention dim:  torch.Size([40, 35])
Final Merged Passage dim:  torch.Size([40, 35, 800])
Modeled Passage dim:  torch.Size([40, 35, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 35, 1000])
Span start logits:  torch.Size([40, 35])
span start probs dim:  torch.Size([40, 35])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 35]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 69, 200])
Passage Length:  69
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 69, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 69, 23])
Passage ques attention dim:  torch.Size([40, 69, 23])
Passage question vectors dim:  torch.Size([40, 69, 200])
Question Passage Similarity dim:  torch.Size([40, 69])
Question passage attention dim:  torch.Size([40, 69])
Final Merged Passage dim:  torch.Size([40, 69, 800])
Modeled Passage dim:  torch.Size([40, 69, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 69, 1000])
Span start logits:  torch.Size([40, 69])
span start probs dim:  torch.Size([40, 69])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 69]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 20])
Passage ques attention dim:  torch.Size([40, 178, 20])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 73, 200])
Passage Length:  73
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 73, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 73, 20])
Passage ques attention dim:  torch.Size([40, 73, 20])
Passage question vectors dim:  torch.Size([40, 73, 200])
Question Passage Similarity dim:  torch.Size([40, 73])
Question passage attention dim:  torch.Size([40, 73])
Final Merged Passage dim:  torch.Size([40, 73, 800])
Modeled Passage dim:  torch.Size([40, 73, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 73, 1000])
Span start logits:  torch.Size([40, 73])
span start probs dim:  torch.Size([40, 73])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 73]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 21])
Passage ques attention dim:  torch.Size([40, 185, 21])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 88, 24])
Passage ques attention dim:  torch.Size([40, 88, 24])
Passage question vectors dim:  torch.Size([40, 88, 200])
Question Passage Similarity dim:  torch.Size([40, 88])
Question passage attention dim:  torch.Size([40, 88])
Final Merged Passage dim:  torch.Size([40, 88, 800])
Modeled Passage dim:  torch.Size([40, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 88, 1000])
Span start logits:  torch.Size([40, 88])
span start probs dim:  torch.Size([40, 88])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 88]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 21])
Passage ques attention dim:  torch.Size([40, 135, 21])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 222, 200])
Passage Length:  222
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 222, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 222, 18])
Passage ques attention dim:  torch.Size([40, 222, 18])
Passage question vectors dim:  torch.Size([40, 222, 200])
Question Passage Similarity dim:  torch.Size([40, 222])
Question passage attention dim:  torch.Size([40, 222])
Final Merged Passage dim:  torch.Size([40, 222, 800])
Modeled Passage dim:  torch.Size([40, 222, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 222, 1000])
Span start logits:  torch.Size([40, 222])
span start probs dim:  torch.Size([40, 222])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 222]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 16])
Passage ques attention dim:  torch.Size([40, 128, 16])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 20])
Passage ques attention dim:  torch.Size([40, 160, 20])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 19])
Passage ques attention dim:  torch.Size([40, 204, 19])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 259, 20])
Passage ques attention dim:  torch.Size([40, 259, 20])
Passage question vectors dim:  torch.Size([40, 259, 200])
Question Passage Similarity dim:  torch.Size([40, 259])
Question passage attention dim:  torch.Size([40, 259])
Final Merged Passage dim:  torch.Size([40, 259, 800])
Modeled Passage dim:  torch.Size([40, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 259, 1000])
Span start logits:  torch.Size([40, 259])
span start probs dim:  torch.Size([40, 259])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 259]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 22])
Passage ques attention dim:  torch.Size([40, 123, 22])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 212, 21])
Passage ques attention dim:  torch.Size([40, 212, 21])
Passage question vectors dim:  torch.Size([40, 212, 200])
Question Passage Similarity dim:  torch.Size([40, 212])
Question passage attention dim:  torch.Size([40, 212])
Final Merged Passage dim:  torch.Size([40, 212, 800])
Modeled Passage dim:  torch.Size([40, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 212, 1000])
Span start logits:  torch.Size([40, 212])
span start probs dim:  torch.Size([40, 212])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 212]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 24])
Passage ques attention dim:  torch.Size([40, 120, 24])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 25])
Passage ques attention dim:  torch.Size([40, 132, 25])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 19])
Passage ques attention dim:  torch.Size([40, 150, 19])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 21])
Passage ques attention dim:  torch.Size([40, 117, 21])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 22])
Passage ques attention dim:  torch.Size([40, 110, 22])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 117, 200])
Passage Length:  117
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 117, 18])
Passage ques attention dim:  torch.Size([40, 117, 18])
Passage question vectors dim:  torch.Size([40, 117, 200])
Question Passage Similarity dim:  torch.Size([40, 117])
Question passage attention dim:  torch.Size([40, 117])
Final Merged Passage dim:  torch.Size([40, 117, 800])
Modeled Passage dim:  torch.Size([40, 117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 117, 1000])
Span start logits:  torch.Size([40, 117])
span start probs dim:  torch.Size([40, 117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 17])
Passage ques attention dim:  torch.Size([40, 116, 17])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 18])
Passage ques attention dim:  torch.Size([40, 145, 18])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 18])
Passage ques attention dim:  torch.Size([40, 140, 18])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 290, 200])
Passage Length:  290
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 290, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 290, 22])
Passage ques attention dim:  torch.Size([40, 290, 22])
Passage question vectors dim:  torch.Size([40, 290, 200])
Question Passage Similarity dim:  torch.Size([40, 290])
Question passage attention dim:  torch.Size([40, 290])
Final Merged Passage dim:  torch.Size([40, 290, 800])
Modeled Passage dim:  torch.Size([40, 290, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 290, 1000])
Span start logits:  torch.Size([40, 290])
span start probs dim:  torch.Size([40, 290])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 290]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 18])
Passage ques attention dim:  torch.Size([40, 161, 18])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 19])
Passage ques attention dim:  torch.Size([40, 204, 19])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 19])
Passage ques attention dim:  torch.Size([40, 149, 19])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 18])
Passage ques attention dim:  torch.Size([40, 127, 18])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 19])
Passage ques attention dim:  torch.Size([40, 112, 19])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 245, 20])
Passage ques attention dim:  torch.Size([40, 245, 20])
Passage question vectors dim:  torch.Size([40, 245, 200])
Question Passage Similarity dim:  torch.Size([40, 245])
Question passage attention dim:  torch.Size([40, 245])
Final Merged Passage dim:  torch.Size([40, 245, 800])
Modeled Passage dim:  torch.Size([40, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 245, 1000])
Span start logits:  torch.Size([40, 245])
span start probs dim:  torch.Size([40, 245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 24])
Passage ques attention dim:  torch.Size([40, 158, 24])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 20])
Passage ques attention dim:  torch.Size([40, 102, 20])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 103, 200])
Passage Length:  103
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 103, 20])
Passage ques attention dim:  torch.Size([40, 103, 20])
Passage question vectors dim:  torch.Size([40, 103, 200])
Question Passage Similarity dim:  torch.Size([40, 103])
Question passage attention dim:  torch.Size([40, 103])
Final Merged Passage dim:  torch.Size([40, 103, 800])
Modeled Passage dim:  torch.Size([40, 103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 103, 1000])
Span start logits:  torch.Size([40, 103])
span start probs dim:  torch.Size([40, 103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 21])
Passage ques attention dim:  torch.Size([40, 110, 21])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 140, 200])
Passage Length:  140
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 140, 20])
Passage ques attention dim:  torch.Size([40, 140, 20])
Passage question vectors dim:  torch.Size([40, 140, 200])
Question Passage Similarity dim:  torch.Size([40, 140])
Question passage attention dim:  torch.Size([40, 140])
Final Merged Passage dim:  torch.Size([40, 140, 800])
Modeled Passage dim:  torch.Size([40, 140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 140, 1000])
Span start logits:  torch.Size([40, 140])
span start probs dim:  torch.Size([40, 140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 25])
Passage ques attention dim:  torch.Size([40, 112, 25])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 18])
Passage ques attention dim:  torch.Size([40, 152, 18])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 221, 33])
Passage ques attention dim:  torch.Size([40, 221, 33])
Passage question vectors dim:  torch.Size([40, 221, 200])
Question Passage Similarity dim:  torch.Size([40, 221])
Question passage attention dim:  torch.Size([40, 221])
Final Merged Passage dim:  torch.Size([40, 221, 800])
Modeled Passage dim:  torch.Size([40, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 221, 1000])
Span start logits:  torch.Size([40, 221])
span start probs dim:  torch.Size([40, 221])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 221]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 34, 200])
Embedded passage dim:  torch.Size([40, 143, 200])
Passage Length:  143
Encoded question dim:  torch.Size([40, 34, 200])
Encoded passage dim:  torch.Size([40, 143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 143, 34])
Passage ques attention dim:  torch.Size([40, 143, 34])
Passage question vectors dim:  torch.Size([40, 143, 200])
Question Passage Similarity dim:  torch.Size([40, 143])
Question passage attention dim:  torch.Size([40, 143])
Final Merged Passage dim:  torch.Size([40, 143, 800])
Modeled Passage dim:  torch.Size([40, 143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 143, 1000])
Span start logits:  torch.Size([40, 143])
span start probs dim:  torch.Size([40, 143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 94, 18])
Passage ques attention dim:  torch.Size([40, 94, 18])
Passage question vectors dim:  torch.Size([40, 94, 200])
Question Passage Similarity dim:  torch.Size([40, 94])
Question passage attention dim:  torch.Size([40, 94])
Final Merged Passage dim:  torch.Size([40, 94, 800])
Modeled Passage dim:  torch.Size([40, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 94, 1000])
Span start logits:  torch.Size([40, 94])
span start probs dim:  torch.Size([40, 94])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 94]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 278, 200])
Passage Length:  278
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 278, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 278, 21])
Passage ques attention dim:  torch.Size([40, 278, 21])
Passage question vectors dim:  torch.Size([40, 278, 200])
Question Passage Similarity dim:  torch.Size([40, 278])
Question passage attention dim:  torch.Size([40, 278])
Final Merged Passage dim:  torch.Size([40, 278, 800])
Modeled Passage dim:  torch.Size([40, 278, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 278, 1000])
Span start logits:  torch.Size([40, 278])
span start probs dim:  torch.Size([40, 278])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 278]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 23])
Passage ques attention dim:  torch.Size([40, 118, 23])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 21])
Passage ques attention dim:  torch.Size([40, 144, 21])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 21])
Passage ques attention dim:  torch.Size([40, 112, 21])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 152, 200])
Passage Length:  152
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 152, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 152, 24])
Passage ques attention dim:  torch.Size([40, 152, 24])
Passage question vectors dim:  torch.Size([40, 152, 200])
Question Passage Similarity dim:  torch.Size([40, 152])
Question passage attention dim:  torch.Size([40, 152])
Final Merged Passage dim:  torch.Size([40, 152, 800])
Modeled Passage dim:  torch.Size([40, 152, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 152, 1000])
Span start logits:  torch.Size([40, 152])
span start probs dim:  torch.Size([40, 152])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 152]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 110, 200])
Passage Length:  110
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 110, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 110, 21])
Passage ques attention dim:  torch.Size([40, 110, 21])
Passage question vectors dim:  torch.Size([40, 110, 200])
Question Passage Similarity dim:  torch.Size([40, 110])
Question passage attention dim:  torch.Size([40, 110])
Final Merged Passage dim:  torch.Size([40, 110, 800])
Modeled Passage dim:  torch.Size([40, 110, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 110, 1000])
Span start logits:  torch.Size([40, 110])
span start probs dim:  torch.Size([40, 110])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 110]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 19])
Passage ques attention dim:  torch.Size([40, 158, 19])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 88, 200])
Passage Length:  88
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 88, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 88, 19])
Passage ques attention dim:  torch.Size([40, 88, 19])
Passage question vectors dim:  torch.Size([40, 88, 200])
Question Passage Similarity dim:  torch.Size([40, 88])
Question passage attention dim:  torch.Size([40, 88])
Final Merged Passage dim:  torch.Size([40, 88, 800])
Modeled Passage dim:  torch.Size([40, 88, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 88, 1000])
Span start logits:  torch.Size([40, 88])
span start probs dim:  torch.Size([40, 88])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 88]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 30])
Passage ques attention dim:  torch.Size([40, 135, 30])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 228, 28])
Passage ques attention dim:  torch.Size([40, 228, 28])
Passage question vectors dim:  torch.Size([40, 228, 200])
Question Passage Similarity dim:  torch.Size([40, 228])
Question passage attention dim:  torch.Size([40, 228])
Final Merged Passage dim:  torch.Size([40, 228, 800])
Modeled Passage dim:  torch.Size([40, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 228, 1000])
Span start logits:  torch.Size([40, 228])
span start probs dim:  torch.Size([40, 228])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 228]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 24])
Passage ques attention dim:  torch.Size([40, 109, 24])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 226, 20])
Passage ques attention dim:  torch.Size([40, 226, 20])
Passage question vectors dim:  torch.Size([40, 226, 200])
Question Passage Similarity dim:  torch.Size([40, 226])
Question passage attention dim:  torch.Size([40, 226])
Final Merged Passage dim:  torch.Size([40, 226, 800])
Modeled Passage dim:  torch.Size([40, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 226, 1000])
Span start logits:  torch.Size([40, 226])
span start probs dim:  torch.Size([40, 226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 236, 200])
Passage Length:  236
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 236, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 236, 21])
Passage ques attention dim:  torch.Size([40, 236, 21])
Passage question vectors dim:  torch.Size([40, 236, 200])
Question Passage Similarity dim:  torch.Size([40, 236])
Question passage attention dim:  torch.Size([40, 236])
Final Merged Passage dim:  torch.Size([40, 236, 800])
Modeled Passage dim:  torch.Size([40, 236, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 236, 1000])
Span start logits:  torch.Size([40, 236])
span start probs dim:  torch.Size([40, 236])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 236]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 18])
Passage ques attention dim:  torch.Size([40, 208, 18])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 27])
Passage ques attention dim:  torch.Size([40, 163, 27])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 147, 200])
Passage Length:  147
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 147, 22])
Passage ques attention dim:  torch.Size([40, 147, 22])
Passage question vectors dim:  torch.Size([40, 147, 200])
Question Passage Similarity dim:  torch.Size([40, 147])
Question passage attention dim:  torch.Size([40, 147])
Final Merged Passage dim:  torch.Size([40, 147, 800])
Modeled Passage dim:  torch.Size([40, 147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 147, 1000])
Span start logits:  torch.Size([40, 147])
span start probs dim:  torch.Size([40, 147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 355, 200])
Passage Length:  355
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 355, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 355, 22])
Passage ques attention dim:  torch.Size([40, 355, 22])
Passage question vectors dim:  torch.Size([40, 355, 200])
Question Passage Similarity dim:  torch.Size([40, 355])
Question passage attention dim:  torch.Size([40, 355])
Final Merged Passage dim:  torch.Size([40, 355, 800])
Modeled Passage dim:  torch.Size([40, 355, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 355, 1000])
Span start logits:  torch.Size([40, 355])
span start probs dim:  torch.Size([40, 355])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 355]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 16])
Passage ques attention dim:  torch.Size([40, 141, 16])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 21])
Passage ques attention dim:  torch.Size([40, 161, 21])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 239, 200])
Passage Length:  239
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 239, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 239, 21])
Passage ques attention dim:  torch.Size([40, 239, 21])
Passage question vectors dim:  torch.Size([40, 239, 200])
Question Passage Similarity dim:  torch.Size([40, 239])
Question passage attention dim:  torch.Size([40, 239])
Final Merged Passage dim:  torch.Size([40, 239, 800])
Modeled Passage dim:  torch.Size([40, 239, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 239, 1000])
Span start logits:  torch.Size([40, 239])
span start probs dim:  torch.Size([40, 239])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 239]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 18])
Passage ques attention dim:  torch.Size([40, 180, 18])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 127, 200])
Passage Length:  127
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 127, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 127, 33])
Passage ques attention dim:  torch.Size([40, 127, 33])
Passage question vectors dim:  torch.Size([40, 127, 200])
Question Passage Similarity dim:  torch.Size([40, 127])
Question passage attention dim:  torch.Size([40, 127])
Final Merged Passage dim:  torch.Size([40, 127, 800])
Modeled Passage dim:  torch.Size([40, 127, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 127, 1000])
Span start logits:  torch.Size([40, 127])
span start probs dim:  torch.Size([40, 127])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 127]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 20])
Passage ques attention dim:  torch.Size([40, 104, 20])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 146, 200])
Passage Length:  146
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 146, 21])
Passage ques attention dim:  torch.Size([40, 146, 21])
Passage question vectors dim:  torch.Size([40, 146, 200])
Question Passage Similarity dim:  torch.Size([40, 146])
Question passage attention dim:  torch.Size([40, 146])
Final Merged Passage dim:  torch.Size([40, 146, 800])
Modeled Passage dim:  torch.Size([40, 146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 146, 1000])
Span start logits:  torch.Size([40, 146])
span start probs dim:  torch.Size([40, 146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 106, 200])
Passage Length:  106
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 106, 20])
Passage ques attention dim:  torch.Size([40, 106, 20])
Passage question vectors dim:  torch.Size([40, 106, 200])
Question Passage Similarity dim:  torch.Size([40, 106])
Question passage attention dim:  torch.Size([40, 106])
Final Merged Passage dim:  torch.Size([40, 106, 800])
Modeled Passage dim:  torch.Size([40, 106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 106, 1000])
Span start logits:  torch.Size([40, 106])
span start probs dim:  torch.Size([40, 106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 20])
Passage ques attention dim:  torch.Size([40, 151, 20])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 21])
Passage ques attention dim:  torch.Size([40, 135, 21])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 167, 200])
Passage Length:  167
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 167, 18])
Passage ques attention dim:  torch.Size([40, 167, 18])
Passage question vectors dim:  torch.Size([40, 167, 200])
Question Passage Similarity dim:  torch.Size([40, 167])
Question passage attention dim:  torch.Size([40, 167])
Final Merged Passage dim:  torch.Size([40, 167, 800])
Modeled Passage dim:  torch.Size([40, 167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 167, 1000])
Span start logits:  torch.Size([40, 167])
span start probs dim:  torch.Size([40, 167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 186, 200])
Passage Length:  186
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 186, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 186, 21])
Passage ques attention dim:  torch.Size([40, 186, 21])
Passage question vectors dim:  torch.Size([40, 186, 200])
Question Passage Similarity dim:  torch.Size([40, 186])
Question passage attention dim:  torch.Size([40, 186])
Final Merged Passage dim:  torch.Size([40, 186, 800])
Modeled Passage dim:  torch.Size([40, 186, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 186, 1000])
Span start logits:  torch.Size([40, 186])
span start probs dim:  torch.Size([40, 186])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 186]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 139, 200])
Passage Length:  139
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 139, 22])
Passage ques attention dim:  torch.Size([40, 139, 22])
Passage question vectors dim:  torch.Size([40, 139, 200])
Question Passage Similarity dim:  torch.Size([40, 139])
Question passage attention dim:  torch.Size([40, 139])
Final Merged Passage dim:  torch.Size([40, 139, 800])
Modeled Passage dim:  torch.Size([40, 139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 139, 1000])
Span start logits:  torch.Size([40, 139])
span start probs dim:  torch.Size([40, 139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 20])
Passage ques attention dim:  torch.Size([40, 95, 20])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 202, 25])
Passage ques attention dim:  torch.Size([40, 202, 25])
Passage question vectors dim:  torch.Size([40, 202, 200])
Question Passage Similarity dim:  torch.Size([40, 202])
Question passage attention dim:  torch.Size([40, 202])
Final Merged Passage dim:  torch.Size([40, 202, 800])
Modeled Passage dim:  torch.Size([40, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 202, 1000])
Span start logits:  torch.Size([40, 202])
span start probs dim:  torch.Size([40, 202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 278, 200])
Passage Length:  278
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 278, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 278, 24])
Passage ques attention dim:  torch.Size([40, 278, 24])
Passage question vectors dim:  torch.Size([40, 278, 200])
Question Passage Similarity dim:  torch.Size([40, 278])
Question passage attention dim:  torch.Size([40, 278])
Final Merged Passage dim:  torch.Size([40, 278, 800])
Modeled Passage dim:  torch.Size([40, 278, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 278, 1000])
Span start logits:  torch.Size([40, 278])
span start probs dim:  torch.Size([40, 278])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 278]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 233, 200])
Passage Length:  233
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 233, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 233, 16])
Passage ques attention dim:  torch.Size([40, 233, 16])
Passage question vectors dim:  torch.Size([40, 233, 200])
Question Passage Similarity dim:  torch.Size([40, 233])
Question passage attention dim:  torch.Size([40, 233])
Final Merged Passage dim:  torch.Size([40, 233, 800])
Modeled Passage dim:  torch.Size([40, 233, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 233, 1000])
Span start logits:  torch.Size([40, 233])
span start probs dim:  torch.Size([40, 233])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 233]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 325, 200])
Passage Length:  325
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 325, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 325, 21])
Passage ques attention dim:  torch.Size([40, 325, 21])
Passage question vectors dim:  torch.Size([40, 325, 200])
Question Passage Similarity dim:  torch.Size([40, 325])
Question passage attention dim:  torch.Size([40, 325])
Final Merged Passage dim:  torch.Size([40, 325, 800])
Modeled Passage dim:  torch.Size([40, 325, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 325, 1000])
Span start logits:  torch.Size([40, 325])
span start probs dim:  torch.Size([40, 325])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 325]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 282, 200])
Passage Length:  282
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 282, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 282, 18])
Passage ques attention dim:  torch.Size([40, 282, 18])
Passage question vectors dim:  torch.Size([40, 282, 200])
Question Passage Similarity dim:  torch.Size([40, 282])
Question passage attention dim:  torch.Size([40, 282])
Final Merged Passage dim:  torch.Size([40, 282, 800])
Modeled Passage dim:  torch.Size([40, 282, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 282, 1000])
Span start logits:  torch.Size([40, 282])
span start probs dim:  torch.Size([40, 282])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 282]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 21])
Passage ques attention dim:  torch.Size([40, 122, 21])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 116, 200])
Passage Length:  116
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 116, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 116, 20])
Passage ques attention dim:  torch.Size([40, 116, 20])
Passage question vectors dim:  torch.Size([40, 116, 200])
Question Passage Similarity dim:  torch.Size([40, 116])
Question passage attention dim:  torch.Size([40, 116])
Final Merged Passage dim:  torch.Size([40, 116, 800])
Modeled Passage dim:  torch.Size([40, 116, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 116, 1000])
Span start logits:  torch.Size([40, 116])
span start probs dim:  torch.Size([40, 116])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 116]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 23])
Passage ques attention dim:  torch.Size([40, 107, 23])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 131, 200])
Passage Length:  131
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 131, 20])
Passage ques attention dim:  torch.Size([40, 131, 20])
Passage question vectors dim:  torch.Size([40, 131, 200])
Question Passage Similarity dim:  torch.Size([40, 131])
Question passage attention dim:  torch.Size([40, 131])
Final Merged Passage dim:  torch.Size([40, 131, 800])
Modeled Passage dim:  torch.Size([40, 131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 131, 1000])
Span start logits:  torch.Size([40, 131])
span start probs dim:  torch.Size([40, 131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 132, 200])
Passage Length:  132
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 132, 23])
Passage ques attention dim:  torch.Size([40, 132, 23])
Passage question vectors dim:  torch.Size([40, 132, 200])
Question Passage Similarity dim:  torch.Size([40, 132])
Question passage attention dim:  torch.Size([40, 132])
Final Merged Passage dim:  torch.Size([40, 132, 800])
Modeled Passage dim:  torch.Size([40, 132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 132, 1000])
Span start logits:  torch.Size([40, 132])
span start probs dim:  torch.Size([40, 132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 20])
Passage ques attention dim:  torch.Size([40, 134, 20])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 107, 200])
Passage Length:  107
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 107, 22])
Passage ques attention dim:  torch.Size([40, 107, 22])
Passage question vectors dim:  torch.Size([40, 107, 200])
Question Passage Similarity dim:  torch.Size([40, 107])
Question passage attention dim:  torch.Size([40, 107])
Final Merged Passage dim:  torch.Size([40, 107, 800])
Modeled Passage dim:  torch.Size([40, 107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 107, 1000])
Span start logits:  torch.Size([40, 107])
span start probs dim:  torch.Size([40, 107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 20])
Passage ques attention dim:  torch.Size([40, 138, 20])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 246, 18])
Passage ques attention dim:  torch.Size([40, 246, 18])
Passage question vectors dim:  torch.Size([40, 246, 200])
Question Passage Similarity dim:  torch.Size([40, 246])
Question passage attention dim:  torch.Size([40, 246])
Final Merged Passage dim:  torch.Size([40, 246, 800])
Modeled Passage dim:  torch.Size([40, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 246, 1000])
Span start logits:  torch.Size([40, 246])
span start probs dim:  torch.Size([40, 246])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 246]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 66, 200])
Passage Length:  66
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 66, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 66, 20])
Passage ques attention dim:  torch.Size([40, 66, 20])
Passage question vectors dim:  torch.Size([40, 66, 200])
Question Passage Similarity dim:  torch.Size([40, 66])
Question passage attention dim:  torch.Size([40, 66])
Final Merged Passage dim:  torch.Size([40, 66, 800])
Modeled Passage dim:  torch.Size([40, 66, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 66, 1000])
Span start logits:  torch.Size([40, 66])
span start probs dim:  torch.Size([40, 66])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 66]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 425, 200])
Passage Length:  425
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 425, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 425, 23])
Passage ques attention dim:  torch.Size([40, 425, 23])
Passage question vectors dim:  torch.Size([40, 425, 200])
Question Passage Similarity dim:  torch.Size([40, 425])
Question passage attention dim:  torch.Size([40, 425])
Final Merged Passage dim:  torch.Size([40, 425, 800])
Modeled Passage dim:  torch.Size([40, 425, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 425, 1000])
Span start logits:  torch.Size([40, 425])
span start probs dim:  torch.Size([40, 425])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 425]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 235, 200])
Passage Length:  235
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 235, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 235, 21])
Passage ques attention dim:  torch.Size([40, 235, 21])
Passage question vectors dim:  torch.Size([40, 235, 200])
Question Passage Similarity dim:  torch.Size([40, 235])
Question passage attention dim:  torch.Size([40, 235])
Final Merged Passage dim:  torch.Size([40, 235, 800])
Modeled Passage dim:  torch.Size([40, 235, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 235, 1000])
Span start logits:  torch.Size([40, 235])
span start probs dim:  torch.Size([40, 235])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 235]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 24])
Passage ques attention dim:  torch.Size([40, 112, 24])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 22])
Passage ques attention dim:  torch.Size([40, 97, 22])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 24])
Passage ques attention dim:  torch.Size([40, 156, 24])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 26])
Passage ques attention dim:  torch.Size([40, 113, 26])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 364, 200])
Passage Length:  364
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 364, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 364, 19])
Passage ques attention dim:  torch.Size([40, 364, 19])
Passage question vectors dim:  torch.Size([40, 364, 200])
Question Passage Similarity dim:  torch.Size([40, 364])
Question passage attention dim:  torch.Size([40, 364])
Final Merged Passage dim:  torch.Size([40, 364, 800])
Modeled Passage dim:  torch.Size([40, 364, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 364, 1000])
Span start logits:  torch.Size([40, 364])
span start probs dim:  torch.Size([40, 364])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 364]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 20])
Passage ques attention dim:  torch.Size([40, 154, 20])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 25])
Passage ques attention dim:  torch.Size([40, 144, 25])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 21])
Passage ques attention dim:  torch.Size([40, 151, 21])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 207, 24])
Passage ques attention dim:  torch.Size([40, 207, 24])
Passage question vectors dim:  torch.Size([40, 207, 200])
Question Passage Similarity dim:  torch.Size([40, 207])
Question passage attention dim:  torch.Size([40, 207])
Final Merged Passage dim:  torch.Size([40, 207, 800])
Modeled Passage dim:  torch.Size([40, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 207, 1000])
Span start logits:  torch.Size([40, 207])
span start probs dim:  torch.Size([40, 207])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 207]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 102, 200])
Passage Length:  102
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 102, 18])
Passage ques attention dim:  torch.Size([40, 102, 18])
Passage question vectors dim:  torch.Size([40, 102, 200])
Question Passage Similarity dim:  torch.Size([40, 102])
Question passage attention dim:  torch.Size([40, 102])
Final Merged Passage dim:  torch.Size([40, 102, 800])
Modeled Passage dim:  torch.Size([40, 102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 102, 1000])
Span start logits:  torch.Size([40, 102])
span start probs dim:  torch.Size([40, 102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 84, 200])
Passage Length:  84
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 84, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 84, 19])
Passage ques attention dim:  torch.Size([40, 84, 19])
Passage question vectors dim:  torch.Size([40, 84, 200])
Question Passage Similarity dim:  torch.Size([40, 84])
Question passage attention dim:  torch.Size([40, 84])
Final Merged Passage dim:  torch.Size([40, 84, 800])
Modeled Passage dim:  torch.Size([40, 84, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 84, 1000])
Span start logits:  torch.Size([40, 84])
span start probs dim:  torch.Size([40, 84])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 84]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 240, 200])
Passage Length:  240
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 240, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 240, 23])
Passage ques attention dim:  torch.Size([40, 240, 23])
Passage question vectors dim:  torch.Size([40, 240, 200])
Question Passage Similarity dim:  torch.Size([40, 240])
Question passage attention dim:  torch.Size([40, 240])
Final Merged Passage dim:  torch.Size([40, 240, 800])
Modeled Passage dim:  torch.Size([40, 240, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 240, 1000])
Span start logits:  torch.Size([40, 240])
span start probs dim:  torch.Size([40, 240])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 240]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 151, 200])
Passage Length:  151
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 151, 23])
Passage ques attention dim:  torch.Size([40, 151, 23])
Passage question vectors dim:  torch.Size([40, 151, 200])
Question Passage Similarity dim:  torch.Size([40, 151])
Question passage attention dim:  torch.Size([40, 151])
Final Merged Passage dim:  torch.Size([40, 151, 800])
Modeled Passage dim:  torch.Size([40, 151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 151, 1000])
Span start logits:  torch.Size([40, 151])
span start probs dim:  torch.Size([40, 151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 18])
Passage ques attention dim:  torch.Size([40, 187, 18])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 128, 200])
Passage Length:  128
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 128, 17])
Passage ques attention dim:  torch.Size([40, 128, 17])
Passage question vectors dim:  torch.Size([40, 128, 200])
Question Passage Similarity dim:  torch.Size([40, 128])
Question passage attention dim:  torch.Size([40, 128])
Final Merged Passage dim:  torch.Size([40, 128, 800])
Modeled Passage dim:  torch.Size([40, 128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 128, 1000])
Span start logits:  torch.Size([40, 128])
span start probs dim:  torch.Size([40, 128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 262, 200])
Passage Length:  262
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 262, 18])
Passage ques attention dim:  torch.Size([40, 262, 18])
Passage question vectors dim:  torch.Size([40, 262, 200])
Question Passage Similarity dim:  torch.Size([40, 262])
Question passage attention dim:  torch.Size([40, 262])
Final Merged Passage dim:  torch.Size([40, 262, 800])
Modeled Passage dim:  torch.Size([40, 262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 262, 1000])
Span start logits:  torch.Size([40, 262])
span start probs dim:  torch.Size([40, 262])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 262]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 22])
Passage ques attention dim:  torch.Size([40, 130, 22])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 119, 200])
Passage Length:  119
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 119, 32])
Passage ques attention dim:  torch.Size([40, 119, 32])
Passage question vectors dim:  torch.Size([40, 119, 200])
Question Passage Similarity dim:  torch.Size([40, 119])
Question passage attention dim:  torch.Size([40, 119])
Final Merged Passage dim:  torch.Size([40, 119, 800])
Modeled Passage dim:  torch.Size([40, 119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 119, 1000])
Span start logits:  torch.Size([40, 119])
span start probs dim:  torch.Size([40, 119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 21])
Passage ques attention dim:  torch.Size([40, 129, 21])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 22])
Passage ques attention dim:  torch.Size([40, 129, 22])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 380, 200])
Passage Length:  380
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 380, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 380, 22])
Passage ques attention dim:  torch.Size([40, 380, 22])
Passage question vectors dim:  torch.Size([40, 380, 200])
Question Passage Similarity dim:  torch.Size([40, 380])
Question passage attention dim:  torch.Size([40, 380])
Final Merged Passage dim:  torch.Size([40, 380, 800])
Modeled Passage dim:  torch.Size([40, 380, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 380, 1000])
Span start logits:  torch.Size([40, 380])
span start probs dim:  torch.Size([40, 380])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 380]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 27])
Passage ques attention dim:  torch.Size([40, 166, 27])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 123, 200])
Passage Length:  123
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 123, 17])
Passage ques attention dim:  torch.Size([40, 123, 17])
Passage question vectors dim:  torch.Size([40, 123, 200])
Question Passage Similarity dim:  torch.Size([40, 123])
Question passage attention dim:  torch.Size([40, 123])
Final Merged Passage dim:  torch.Size([40, 123, 800])
Modeled Passage dim:  torch.Size([40, 123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 123, 1000])
Span start logits:  torch.Size([40, 123])
span start probs dim:  torch.Size([40, 123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 216, 200])
Passage Length:  216
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 216, 25])
Passage ques attention dim:  torch.Size([40, 216, 25])
Passage question vectors dim:  torch.Size([40, 216, 200])
Question Passage Similarity dim:  torch.Size([40, 216])
Question passage attention dim:  torch.Size([40, 216])
Final Merged Passage dim:  torch.Size([40, 216, 800])
Modeled Passage dim:  torch.Size([40, 216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 216, 1000])
Span start logits:  torch.Size([40, 216])
span start probs dim:  torch.Size([40, 216])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 216]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 22])
Passage ques attention dim:  torch.Size([40, 112, 22])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 105, 200])
Passage Length:  105
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 105, 23])
Passage ques attention dim:  torch.Size([40, 105, 23])
Passage question vectors dim:  torch.Size([40, 105, 200])
Question Passage Similarity dim:  torch.Size([40, 105])
Question passage attention dim:  torch.Size([40, 105])
Final Merged Passage dim:  torch.Size([40, 105, 800])
Modeled Passage dim:  torch.Size([40, 105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 105, 1000])
Span start logits:  torch.Size([40, 105])
span start probs dim:  torch.Size([40, 105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 261, 200])
Passage Length:  261
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 261, 29])
Passage ques attention dim:  torch.Size([40, 261, 29])
Passage question vectors dim:  torch.Size([40, 261, 200])
Question Passage Similarity dim:  torch.Size([40, 261])
Question passage attention dim:  torch.Size([40, 261])
Final Merged Passage dim:  torch.Size([40, 261, 800])
Modeled Passage dim:  torch.Size([40, 261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 261, 1000])
Span start logits:  torch.Size([40, 261])
span start probs dim:  torch.Size([40, 261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 261]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 17])
Passage ques attention dim:  torch.Size([40, 136, 17])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 18])
Passage ques attention dim:  torch.Size([40, 215, 18])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 30])
Passage ques attention dim:  torch.Size([40, 97, 30])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 193, 19])
Passage ques attention dim:  torch.Size([40, 193, 19])
Passage question vectors dim:  torch.Size([40, 193, 200])
Question Passage Similarity dim:  torch.Size([40, 193])
Question passage attention dim:  torch.Size([40, 193])
Final Merged Passage dim:  torch.Size([40, 193, 800])
Modeled Passage dim:  torch.Size([40, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 193, 1000])
Span start logits:  torch.Size([40, 193])
span start probs dim:  torch.Size([40, 193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 50, 200])
Passage Length:  50
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 50, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 50, 18])
Passage ques attention dim:  torch.Size([40, 50, 18])
Passage question vectors dim:  torch.Size([40, 50, 200])
Question Passage Similarity dim:  torch.Size([40, 50])
Question passage attention dim:  torch.Size([40, 50])
Final Merged Passage dim:  torch.Size([40, 50, 800])
Modeled Passage dim:  torch.Size([40, 50, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 50, 1000])
Span start logits:  torch.Size([40, 50])
span start probs dim:  torch.Size([40, 50])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 50]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 25])
Passage ques attention dim:  torch.Size([40, 113, 25])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 220, 200])
Passage Length:  220
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 220, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 220, 19])
Passage ques attention dim:  torch.Size([40, 220, 19])
Passage question vectors dim:  torch.Size([40, 220, 200])
Question Passage Similarity dim:  torch.Size([40, 220])
Question passage attention dim:  torch.Size([40, 220])
Final Merged Passage dim:  torch.Size([40, 220, 800])
Modeled Passage dim:  torch.Size([40, 220, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 220, 1000])
Span start logits:  torch.Size([40, 220])
span start probs dim:  torch.Size([40, 220])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 220]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 82, 200])
Passage Length:  82
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 82, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 82, 22])
Passage ques attention dim:  torch.Size([40, 82, 22])
Passage question vectors dim:  torch.Size([40, 82, 200])
Question Passage Similarity dim:  torch.Size([40, 82])
Question passage attention dim:  torch.Size([40, 82])
Final Merged Passage dim:  torch.Size([40, 82, 800])
Modeled Passage dim:  torch.Size([40, 82, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 82, 1000])
Span start logits:  torch.Size([40, 82])
span start probs dim:  torch.Size([40, 82])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 82]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 37, 200])
Embedded passage dim:  torch.Size([40, 213, 200])
Passage Length:  213
Encoded question dim:  torch.Size([40, 37, 200])
Encoded passage dim:  torch.Size([40, 213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 213, 37])
Passage ques attention dim:  torch.Size([40, 213, 37])
Passage question vectors dim:  torch.Size([40, 213, 200])
Question Passage Similarity dim:  torch.Size([40, 213])
Question passage attention dim:  torch.Size([40, 213])
Final Merged Passage dim:  torch.Size([40, 213, 800])
Modeled Passage dim:  torch.Size([40, 213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 213, 1000])
Span start logits:  torch.Size([40, 213])
span start probs dim:  torch.Size([40, 213])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 213]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 51, 200])
Passage Length:  51
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 51, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 51, 16])
Passage ques attention dim:  torch.Size([40, 51, 16])
Passage question vectors dim:  torch.Size([40, 51, 200])
Question Passage Similarity dim:  torch.Size([40, 51])
Question passage attention dim:  torch.Size([40, 51])
Final Merged Passage dim:  torch.Size([40, 51, 800])
Modeled Passage dim:  torch.Size([40, 51, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 51, 1000])
Span start logits:  torch.Size([40, 51])
span start probs dim:  torch.Size([40, 51])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 51]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 22])
Passage ques attention dim:  torch.Size([40, 121, 22])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 21])
Passage ques attention dim:  torch.Size([40, 112, 21])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 54, 200])
Passage Length:  54
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 54, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 54, 26])
Passage ques attention dim:  torch.Size([40, 54, 26])
Passage question vectors dim:  torch.Size([40, 54, 200])
Question Passage Similarity dim:  torch.Size([40, 54])
Question passage attention dim:  torch.Size([40, 54])
Final Merged Passage dim:  torch.Size([40, 54, 800])
Modeled Passage dim:  torch.Size([40, 54, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 54, 1000])
Span start logits:  torch.Size([40, 54])
span start probs dim:  torch.Size([40, 54])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 54]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 25])
Passage ques attention dim:  torch.Size([40, 168, 25])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 120, 200])
Passage Length:  120
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 120, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 120, 18])
Passage ques attention dim:  torch.Size([40, 120, 18])
Passage question vectors dim:  torch.Size([40, 120, 200])
Question Passage Similarity dim:  torch.Size([40, 120])
Question passage attention dim:  torch.Size([40, 120])
Final Merged Passage dim:  torch.Size([40, 120, 800])
Modeled Passage dim:  torch.Size([40, 120, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 120, 1000])
Span start logits:  torch.Size([40, 120])
span start probs dim:  torch.Size([40, 120])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 120]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 26])
Passage ques attention dim:  torch.Size([40, 141, 26])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 193, 23])
Passage ques attention dim:  torch.Size([40, 193, 23])
Passage question vectors dim:  torch.Size([40, 193, 200])
Question Passage Similarity dim:  torch.Size([40, 193])
Question passage attention dim:  torch.Size([40, 193])
Final Merged Passage dim:  torch.Size([40, 193, 800])
Modeled Passage dim:  torch.Size([40, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 193, 1000])
Span start logits:  torch.Size([40, 193])
span start probs dim:  torch.Size([40, 193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 112, 200])
Passage Length:  112
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 112, 21])
Passage ques attention dim:  torch.Size([40, 112, 21])
Passage question vectors dim:  torch.Size([40, 112, 200])
Question Passage Similarity dim:  torch.Size([40, 112])
Question passage attention dim:  torch.Size([40, 112])
Final Merged Passage dim:  torch.Size([40, 112, 800])
Modeled Passage dim:  torch.Size([40, 112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 112, 1000])
Span start logits:  torch.Size([40, 112])
span start probs dim:  torch.Size([40, 112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 20])
Passage ques attention dim:  torch.Size([40, 122, 20])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 111, 200])
Passage Length:  111
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 111, 22])
Passage ques attention dim:  torch.Size([40, 111, 22])
Passage question vectors dim:  torch.Size([40, 111, 200])
Question Passage Similarity dim:  torch.Size([40, 111])
Question passage attention dim:  torch.Size([40, 111])
Final Merged Passage dim:  torch.Size([40, 111, 800])
Modeled Passage dim:  torch.Size([40, 111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 111, 1000])
Span start logits:  torch.Size([40, 111])
span start probs dim:  torch.Size([40, 111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 163, 200])
Passage Length:  163
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 163, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 163, 23])
Passage ques attention dim:  torch.Size([40, 163, 23])
Passage question vectors dim:  torch.Size([40, 163, 200])
Question Passage Similarity dim:  torch.Size([40, 163])
Question passage attention dim:  torch.Size([40, 163])
Final Merged Passage dim:  torch.Size([40, 163, 800])
Modeled Passage dim:  torch.Size([40, 163, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 163, 1000])
Span start logits:  torch.Size([40, 163])
span start probs dim:  torch.Size([40, 163])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 163]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 174, 200])
Passage Length:  174
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 174, 20])
Passage ques attention dim:  torch.Size([40, 174, 20])
Passage question vectors dim:  torch.Size([40, 174, 200])
Question Passage Similarity dim:  torch.Size([40, 174])
Question passage attention dim:  torch.Size([40, 174])
Final Merged Passage dim:  torch.Size([40, 174, 800])
Modeled Passage dim:  torch.Size([40, 174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 174, 1000])
Span start logits:  torch.Size([40, 174])
span start probs dim:  torch.Size([40, 174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 279, 200])
Passage Length:  279
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 279, 20])
Passage ques attention dim:  torch.Size([40, 279, 20])
Passage question vectors dim:  torch.Size([40, 279, 200])
Question Passage Similarity dim:  torch.Size([40, 279])
Question passage attention dim:  torch.Size([40, 279])
Final Merged Passage dim:  torch.Size([40, 279, 800])
Modeled Passage dim:  torch.Size([40, 279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 279, 1000])
Span start logits:  torch.Size([40, 279])
span start probs dim:  torch.Size([40, 279])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 279]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 94, 25])
Passage ques attention dim:  torch.Size([40, 94, 25])
Passage question vectors dim:  torch.Size([40, 94, 200])
Question Passage Similarity dim:  torch.Size([40, 94])
Question passage attention dim:  torch.Size([40, 94])
Final Merged Passage dim:  torch.Size([40, 94, 800])
Modeled Passage dim:  torch.Size([40, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 94, 1000])
Span start logits:  torch.Size([40, 94])
span start probs dim:  torch.Size([40, 94])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 94]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 155, 200])
Passage Length:  155
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 155, 35])
Passage ques attention dim:  torch.Size([40, 155, 35])
Passage question vectors dim:  torch.Size([40, 155, 200])
Question Passage Similarity dim:  torch.Size([40, 155])
Question passage attention dim:  torch.Size([40, 155])
Final Merged Passage dim:  torch.Size([40, 155, 800])
Modeled Passage dim:  torch.Size([40, 155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 155, 1000])
Span start logits:  torch.Size([40, 155])
span start probs dim:  torch.Size([40, 155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 48, 200])
Passage Length:  48
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 48, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 48, 22])
Passage ques attention dim:  torch.Size([40, 48, 22])
Passage question vectors dim:  torch.Size([40, 48, 200])
Question Passage Similarity dim:  torch.Size([40, 48])
Question passage attention dim:  torch.Size([40, 48])
Final Merged Passage dim:  torch.Size([40, 48, 800])
Modeled Passage dim:  torch.Size([40, 48, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 48, 1000])
Span start logits:  torch.Size([40, 48])
span start probs dim:  torch.Size([40, 48])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 48]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 306, 200])
Passage Length:  306
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 306, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 306, 22])
Passage ques attention dim:  torch.Size([40, 306, 22])
Passage question vectors dim:  torch.Size([40, 306, 200])
Question Passage Similarity dim:  torch.Size([40, 306])
Question passage attention dim:  torch.Size([40, 306])
Final Merged Passage dim:  torch.Size([40, 306, 800])
Modeled Passage dim:  torch.Size([40, 306, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 306, 1000])
Span start logits:  torch.Size([40, 306])
span start probs dim:  torch.Size([40, 306])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 306]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 95, 200])
Passage Length:  95
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 95, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 95, 19])
Passage ques attention dim:  torch.Size([40, 95, 19])
Passage question vectors dim:  torch.Size([40, 95, 200])
Question Passage Similarity dim:  torch.Size([40, 95])
Question passage attention dim:  torch.Size([40, 95])
Final Merged Passage dim:  torch.Size([40, 95, 800])
Modeled Passage dim:  torch.Size([40, 95, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 95, 1000])
Span start logits:  torch.Size([40, 95])
span start probs dim:  torch.Size([40, 95])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 95]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 23])
Passage ques attention dim:  torch.Size([40, 161, 23])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 182, 200])
Passage Length:  182
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 182, 20])
Passage ques attention dim:  torch.Size([40, 182, 20])
Passage question vectors dim:  torch.Size([40, 182, 200])
Question Passage Similarity dim:  torch.Size([40, 182])
Question passage attention dim:  torch.Size([40, 182])
Final Merged Passage dim:  torch.Size([40, 182, 800])
Modeled Passage dim:  torch.Size([40, 182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 182, 1000])
Span start logits:  torch.Size([40, 182])
span start probs dim:  torch.Size([40, 182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 154, 200])
Passage Length:  154
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 154, 18])
Passage ques attention dim:  torch.Size([40, 154, 18])
Passage question vectors dim:  torch.Size([40, 154, 200])
Question Passage Similarity dim:  torch.Size([40, 154])
Question passage attention dim:  torch.Size([40, 154])
Final Merged Passage dim:  torch.Size([40, 154, 800])
Modeled Passage dim:  torch.Size([40, 154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 154, 1000])
Span start logits:  torch.Size([40, 154])
span start probs dim:  torch.Size([40, 154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 197, 200])
Passage Length:  197
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 197, 33])
Passage ques attention dim:  torch.Size([40, 197, 33])
Passage question vectors dim:  torch.Size([40, 197, 200])
Question Passage Similarity dim:  torch.Size([40, 197])
Question passage attention dim:  torch.Size([40, 197])
Final Merged Passage dim:  torch.Size([40, 197, 800])
Modeled Passage dim:  torch.Size([40, 197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 197, 1000])
Span start logits:  torch.Size([40, 197])
span start probs dim:  torch.Size([40, 197])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 197]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 226, 18])
Passage ques attention dim:  torch.Size([40, 226, 18])
Passage question vectors dim:  torch.Size([40, 226, 200])
Question Passage Similarity dim:  torch.Size([40, 226])
Question passage attention dim:  torch.Size([40, 226])
Final Merged Passage dim:  torch.Size([40, 226, 800])
Modeled Passage dim:  torch.Size([40, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 226, 1000])
Span start logits:  torch.Size([40, 226])
span start probs dim:  torch.Size([40, 226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 243, 19])
Passage ques attention dim:  torch.Size([40, 243, 19])
Passage question vectors dim:  torch.Size([40, 243, 200])
Question Passage Similarity dim:  torch.Size([40, 243])
Question passage attention dim:  torch.Size([40, 243])
Final Merged Passage dim:  torch.Size([40, 243, 800])
Modeled Passage dim:  torch.Size([40, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 243, 1000])
Span start logits:  torch.Size([40, 243])
span start probs dim:  torch.Size([40, 243])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 243]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 176, 25])
Passage ques attention dim:  torch.Size([40, 176, 25])
Passage question vectors dim:  torch.Size([40, 176, 200])
Question Passage Similarity dim:  torch.Size([40, 176])
Question passage attention dim:  torch.Size([40, 176])
Final Merged Passage dim:  torch.Size([40, 176, 800])
Modeled Passage dim:  torch.Size([40, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 176, 1000])
Span start logits:  torch.Size([40, 176])
span start probs dim:  torch.Size([40, 176])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 176]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 97, 200])
Passage Length:  97
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 97, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 97, 21])
Passage ques attention dim:  torch.Size([40, 97, 21])
Passage question vectors dim:  torch.Size([40, 97, 200])
Question Passage Similarity dim:  torch.Size([40, 97])
Question passage attention dim:  torch.Size([40, 97])
Final Merged Passage dim:  torch.Size([40, 97, 800])
Modeled Passage dim:  torch.Size([40, 97, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 97, 1000])
Span start logits:  torch.Size([40, 97])
span start probs dim:  torch.Size([40, 97])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 97]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 71, 200])
Passage Length:  71
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 71, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 71, 19])
Passage ques attention dim:  torch.Size([40, 71, 19])
Passage question vectors dim:  torch.Size([40, 71, 200])
Question Passage Similarity dim:  torch.Size([40, 71])
Question passage attention dim:  torch.Size([40, 71])
Final Merged Passage dim:  torch.Size([40, 71, 800])
Modeled Passage dim:  torch.Size([40, 71, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 71, 1000])
Span start logits:  torch.Size([40, 71])
span start probs dim:  torch.Size([40, 71])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 71]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 176, 200])
Passage Length:  176
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 176, 19])
Passage ques attention dim:  torch.Size([40, 176, 19])
Passage question vectors dim:  torch.Size([40, 176, 200])
Question Passage Similarity dim:  torch.Size([40, 176])
Question passage attention dim:  torch.Size([40, 176])
Final Merged Passage dim:  torch.Size([40, 176, 800])
Modeled Passage dim:  torch.Size([40, 176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 176, 1000])
Span start logits:  torch.Size([40, 176])
span start probs dim:  torch.Size([40, 176])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 176]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 20])
Passage ques attention dim:  torch.Size([40, 134, 20])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 35])
Passage ques attention dim:  torch.Size([40, 145, 35])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 22])
Passage ques attention dim:  torch.Size([40, 126, 22])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 87, 200])
Passage Length:  87
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 87, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 87, 18])
Passage ques attention dim:  torch.Size([40, 87, 18])
Passage question vectors dim:  torch.Size([40, 87, 200])
Question Passage Similarity dim:  torch.Size([40, 87])
Question passage attention dim:  torch.Size([40, 87])
Final Merged Passage dim:  torch.Size([40, 87, 800])
Modeled Passage dim:  torch.Size([40, 87, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 87, 1000])
Span start logits:  torch.Size([40, 87])
span start probs dim:  torch.Size([40, 87])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 87]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 122, 200])
Passage Length:  122
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 122, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 122, 23])
Passage ques attention dim:  torch.Size([40, 122, 23])
Passage question vectors dim:  torch.Size([40, 122, 200])
Question Passage Similarity dim:  torch.Size([40, 122])
Question passage attention dim:  torch.Size([40, 122])
Final Merged Passage dim:  torch.Size([40, 122, 800])
Modeled Passage dim:  torch.Size([40, 122, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 122, 1000])
Span start logits:  torch.Size([40, 122])
span start probs dim:  torch.Size([40, 122])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 122]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 125, 200])
Passage Length:  125
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 125, 20])
Passage ques attention dim:  torch.Size([40, 125, 20])
Passage question vectors dim:  torch.Size([40, 125, 200])
Question Passage Similarity dim:  torch.Size([40, 125])
Question passage attention dim:  torch.Size([40, 125])
Final Merged Passage dim:  torch.Size([40, 125, 800])
Modeled Passage dim:  torch.Size([40, 125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 125, 1000])
Span start logits:  torch.Size([40, 125])
span start probs dim:  torch.Size([40, 125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 144, 200])
Passage Length:  144
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 144, 23])
Passage ques attention dim:  torch.Size([40, 144, 23])
Passage question vectors dim:  torch.Size([40, 144, 200])
Question Passage Similarity dim:  torch.Size([40, 144])
Question passage attention dim:  torch.Size([40, 144])
Final Merged Passage dim:  torch.Size([40, 144, 800])
Modeled Passage dim:  torch.Size([40, 144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 144, 1000])
Span start logits:  torch.Size([40, 144])
span start probs dim:  torch.Size([40, 144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 126, 200])
Passage Length:  126
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 126, 21])
Passage ques attention dim:  torch.Size([40, 126, 21])
Passage question vectors dim:  torch.Size([40, 126, 200])
Question Passage Similarity dim:  torch.Size([40, 126])
Question passage attention dim:  torch.Size([40, 126])
Final Merged Passage dim:  torch.Size([40, 126, 800])
Modeled Passage dim:  torch.Size([40, 126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 126, 1000])
Span start logits:  torch.Size([40, 126])
span start probs dim:  torch.Size([40, 126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 17])
Passage ques attention dim:  torch.Size([40, 109, 17])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 130, 200])
Passage Length:  130
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 130, 18])
Passage ques attention dim:  torch.Size([40, 130, 18])
Passage question vectors dim:  torch.Size([40, 130, 200])
Question Passage Similarity dim:  torch.Size([40, 130])
Question passage attention dim:  torch.Size([40, 130])
Final Merged Passage dim:  torch.Size([40, 130, 800])
Modeled Passage dim:  torch.Size([40, 130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 130, 1000])
Span start logits:  torch.Size([40, 130])
span start probs dim:  torch.Size([40, 130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 19])
Passage ques attention dim:  torch.Size([40, 191, 19])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 35, 200])
Embedded passage dim:  torch.Size([40, 118, 200])
Passage Length:  118
Encoded question dim:  torch.Size([40, 35, 200])
Encoded passage dim:  torch.Size([40, 118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 118, 35])
Passage ques attention dim:  torch.Size([40, 118, 35])
Passage question vectors dim:  torch.Size([40, 118, 200])
Question Passage Similarity dim:  torch.Size([40, 118])
Question passage attention dim:  torch.Size([40, 118])
Final Merged Passage dim:  torch.Size([40, 118, 800])
Modeled Passage dim:  torch.Size([40, 118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 118, 1000])
Span start logits:  torch.Size([40, 118])
span start probs dim:  torch.Size([40, 118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 22])
Passage ques attention dim:  torch.Size([40, 185, 22])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 19])
Passage ques attention dim:  torch.Size([40, 179, 19])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 23])
Passage ques attention dim:  torch.Size([40, 161, 23])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 23])
Passage ques attention dim:  torch.Size([40, 180, 23])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 333, 200])
Passage Length:  333
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 333, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 333, 18])
Passage ques attention dim:  torch.Size([40, 333, 18])
Passage question vectors dim:  torch.Size([40, 333, 200])
Question Passage Similarity dim:  torch.Size([40, 333])
Question passage attention dim:  torch.Size([40, 333])
Final Merged Passage dim:  torch.Size([40, 333, 800])
Modeled Passage dim:  torch.Size([40, 333, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 333, 1000])
Span start logits:  torch.Size([40, 333])
span start probs dim:  torch.Size([40, 333])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 333]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 136, 200])
Passage Length:  136
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 136, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 136, 28])
Passage ques attention dim:  torch.Size([40, 136, 28])
Passage question vectors dim:  torch.Size([40, 136, 200])
Question Passage Similarity dim:  torch.Size([40, 136])
Question passage attention dim:  torch.Size([40, 136])
Final Merged Passage dim:  torch.Size([40, 136, 800])
Modeled Passage dim:  torch.Size([40, 136, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 136, 1000])
Span start logits:  torch.Size([40, 136])
span start probs dim:  torch.Size([40, 136])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 136]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 177, 200])
Passage Length:  177
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 177, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 177, 17])
Passage ques attention dim:  torch.Size([40, 177, 17])
Passage question vectors dim:  torch.Size([40, 177, 200])
Question Passage Similarity dim:  torch.Size([40, 177])
Question passage attention dim:  torch.Size([40, 177])
Final Merged Passage dim:  torch.Size([40, 177, 800])
Modeled Passage dim:  torch.Size([40, 177, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 177, 1000])
Span start logits:  torch.Size([40, 177])
span start probs dim:  torch.Size([40, 177])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 177]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 285, 200])
Passage Length:  285
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 285, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 285, 18])
Passage ques attention dim:  torch.Size([40, 285, 18])
Passage question vectors dim:  torch.Size([40, 285, 200])
Question Passage Similarity dim:  torch.Size([40, 285])
Question passage attention dim:  torch.Size([40, 285])
Final Merged Passage dim:  torch.Size([40, 285, 800])
Modeled Passage dim:  torch.Size([40, 285, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 285, 1000])
Span start logits:  torch.Size([40, 285])
span start probs dim:  torch.Size([40, 285])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 285]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 149, 200])
Passage Length:  149
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 149, 27])
Passage ques attention dim:  torch.Size([40, 149, 27])
Passage question vectors dim:  torch.Size([40, 149, 200])
Question Passage Similarity dim:  torch.Size([40, 149])
Question passage attention dim:  torch.Size([40, 149])
Final Merged Passage dim:  torch.Size([40, 149, 800])
Modeled Passage dim:  torch.Size([40, 149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 149, 1000])
Span start logits:  torch.Size([40, 149])
span start probs dim:  torch.Size([40, 149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 66, 200])
Passage Length:  66
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 66, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 66, 26])
Passage ques attention dim:  torch.Size([40, 66, 26])
Passage question vectors dim:  torch.Size([40, 66, 200])
Question Passage Similarity dim:  torch.Size([40, 66])
Question passage attention dim:  torch.Size([40, 66])
Final Merged Passage dim:  torch.Size([40, 66, 800])
Modeled Passage dim:  torch.Size([40, 66, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 66, 1000])
Span start logits:  torch.Size([40, 66])
span start probs dim:  torch.Size([40, 66])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 66]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 94, 200])
Passage Length:  94
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 94, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 94, 19])
Passage ques attention dim:  torch.Size([40, 94, 19])
Passage question vectors dim:  torch.Size([40, 94, 200])
Question Passage Similarity dim:  torch.Size([40, 94])
Question passage attention dim:  torch.Size([40, 94])
Final Merged Passage dim:  torch.Size([40, 94, 800])
Modeled Passage dim:  torch.Size([40, 94, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 94, 1000])
Span start logits:  torch.Size([40, 94])
span start probs dim:  torch.Size([40, 94])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 94]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 165, 200])
Passage Length:  165
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 165, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 165, 30])
Passage ques attention dim:  torch.Size([40, 165, 30])
Passage question vectors dim:  torch.Size([40, 165, 200])
Question Passage Similarity dim:  torch.Size([40, 165])
Question passage attention dim:  torch.Size([40, 165])
Final Merged Passage dim:  torch.Size([40, 165, 800])
Modeled Passage dim:  torch.Size([40, 165, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 165, 1000])
Span start logits:  torch.Size([40, 165])
span start probs dim:  torch.Size([40, 165])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 165]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 91, 200])
Passage Length:  91
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 91, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 91, 30])
Passage ques attention dim:  torch.Size([40, 91, 30])
Passage question vectors dim:  torch.Size([40, 91, 200])
Question Passage Similarity dim:  torch.Size([40, 91])
Question passage attention dim:  torch.Size([40, 91])
Final Merged Passage dim:  torch.Size([40, 91, 800])
Modeled Passage dim:  torch.Size([40, 91, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 91, 1000])
Span start logits:  torch.Size([40, 91])
span start probs dim:  torch.Size([40, 91])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 91]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 96, 200])
Passage Length:  96
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 96, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 96, 24])
Passage ques attention dim:  torch.Size([40, 96, 24])
Passage question vectors dim:  torch.Size([40, 96, 200])
Question Passage Similarity dim:  torch.Size([40, 96])
Question passage attention dim:  torch.Size([40, 96])
Final Merged Passage dim:  torch.Size([40, 96, 800])
Modeled Passage dim:  torch.Size([40, 96, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 96, 1000])
Span start logits:  torch.Size([40, 96])
span start probs dim:  torch.Size([40, 96])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 96]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 29])
Passage ques attention dim:  torch.Size([40, 153, 29])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 160, 200])
Passage Length:  160
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 160, 21])
Passage ques attention dim:  torch.Size([40, 160, 21])
Passage question vectors dim:  torch.Size([40, 160, 200])
Question Passage Similarity dim:  torch.Size([40, 160])
Question passage attention dim:  torch.Size([40, 160])
Final Merged Passage dim:  torch.Size([40, 160, 800])
Modeled Passage dim:  torch.Size([40, 160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 160, 1000])
Span start logits:  torch.Size([40, 160])
span start probs dim:  torch.Size([40, 160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 30])
Passage ques attention dim:  torch.Size([40, 171, 30])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 258, 27])
Passage ques attention dim:  torch.Size([40, 258, 27])
Passage question vectors dim:  torch.Size([40, 258, 200])
Question Passage Similarity dim:  torch.Size([40, 258])
Question passage attention dim:  torch.Size([40, 258])
Final Merged Passage dim:  torch.Size([40, 258, 800])
Modeled Passage dim:  torch.Size([40, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 258, 1000])
Span start logits:  torch.Size([40, 258])
span start probs dim:  torch.Size([40, 258])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 258]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 113, 200])
Passage Length:  113
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 113, 24])
Passage ques attention dim:  torch.Size([40, 113, 24])
Passage question vectors dim:  torch.Size([40, 113, 200])
Question Passage Similarity dim:  torch.Size([40, 113])
Question passage attention dim:  torch.Size([40, 113])
Final Merged Passage dim:  torch.Size([40, 113, 800])
Modeled Passage dim:  torch.Size([40, 113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 113, 1000])
Span start logits:  torch.Size([40, 113])
span start probs dim:  torch.Size([40, 113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 39, 200])
Passage Length:  39
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 39, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 39, 18])
Passage ques attention dim:  torch.Size([40, 39, 18])
Passage question vectors dim:  torch.Size([40, 39, 200])
Question Passage Similarity dim:  torch.Size([40, 39])
Question passage attention dim:  torch.Size([40, 39])
Final Merged Passage dim:  torch.Size([40, 39, 800])
Modeled Passage dim:  torch.Size([40, 39, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 39, 1000])
Span start logits:  torch.Size([40, 39])
span start probs dim:  torch.Size([40, 39])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 39]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 28])
Passage ques attention dim:  torch.Size([40, 134, 28])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 259, 19])
Passage ques attention dim:  torch.Size([40, 259, 19])
Passage question vectors dim:  torch.Size([40, 259, 200])
Question Passage Similarity dim:  torch.Size([40, 259])
Question passage attention dim:  torch.Size([40, 259])
Final Merged Passage dim:  torch.Size([40, 259, 800])
Modeled Passage dim:  torch.Size([40, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 259, 1000])
Span start logits:  torch.Size([40, 259])
span start probs dim:  torch.Size([40, 259])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 259]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 135, 200])
Passage Length:  135
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 135, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 135, 23])
Passage ques attention dim:  torch.Size([40, 135, 23])
Passage question vectors dim:  torch.Size([40, 135, 200])
Question Passage Similarity dim:  torch.Size([40, 135])
Question passage attention dim:  torch.Size([40, 135])
Final Merged Passage dim:  torch.Size([40, 135, 800])
Modeled Passage dim:  torch.Size([40, 135, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 135, 1000])
Span start logits:  torch.Size([40, 135])
span start probs dim:  torch.Size([40, 135])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 135]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 133, 200])
Passage Length:  133
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 133, 18])
Passage ques attention dim:  torch.Size([40, 133, 18])
Passage question vectors dim:  torch.Size([40, 133, 200])
Question Passage Similarity dim:  torch.Size([40, 133])
Question passage attention dim:  torch.Size([40, 133])
Final Merged Passage dim:  torch.Size([40, 133, 800])
Modeled Passage dim:  torch.Size([40, 133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 133, 1000])
Span start logits:  torch.Size([40, 133])
span start probs dim:  torch.Size([40, 133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 133]) 40
