1
87375
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 724, 16])
Passage ques attention dim:  torch.Size([40, 724, 16])
Passage question vectors dim:  torch.Size([40, 724, 200])
Question Passage Similarity dim:  torch.Size([40, 724])
Question passage attention dim:  torch.Size([40, 724])
Final Merged Passage dim:  torch.Size([40, 724, 800])
Modeled Passage dim:  torch.Size([40, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 724, 1000])
Span start logits:  torch.Size([40, 724])
span start probs dim:  torch.Size([40, 724])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 724]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 316, 200])
Passage Length:  316
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 316, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 316, 18])
Passage ques attention dim:  torch.Size([40, 316, 18])
Passage question vectors dim:  torch.Size([40, 316, 200])
Question Passage Similarity dim:  torch.Size([40, 316])
Question passage attention dim:  torch.Size([40, 316])
Final Merged Passage dim:  torch.Size([40, 316, 800])
Modeled Passage dim:  torch.Size([40, 316, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 316, 1000])
Span start logits:  torch.Size([40, 316])
span start probs dim:  torch.Size([40, 316])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 316]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 2096, 200])
Passage Length:  2096
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 2096, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2096, 19])
Passage ques attention dim:  torch.Size([40, 2096, 19])
Passage question vectors dim:  torch.Size([40, 2096, 200])
Question Passage Similarity dim:  torch.Size([40, 2096])
Question passage attention dim:  torch.Size([40, 2096])
Final Merged Passage dim:  torch.Size([40, 2096, 800])
Modeled Passage dim:  torch.Size([40, 2096, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2096, 1000])
Span start logits:  torch.Size([40, 2096])
span start probs dim:  torch.Size([40, 2096])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2096]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1387, 200])
Passage Length:  1387
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1387, 12])
Passage ques attention dim:  torch.Size([40, 1387, 12])
Passage question vectors dim:  torch.Size([40, 1387, 200])
Question Passage Similarity dim:  torch.Size([40, 1387])
Question passage attention dim:  torch.Size([40, 1387])
Final Merged Passage dim:  torch.Size([40, 1387, 800])
Modeled Passage dim:  torch.Size([40, 1387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1387, 1000])
Span start logits:  torch.Size([40, 1387])
span start probs dim:  torch.Size([40, 1387])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1387]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1477, 200])
Passage Length:  1477
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1477, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1477, 14])
Passage ques attention dim:  torch.Size([40, 1477, 14])
Passage question vectors dim:  torch.Size([40, 1477, 200])
Question Passage Similarity dim:  torch.Size([40, 1477])
Question passage attention dim:  torch.Size([40, 1477])
Final Merged Passage dim:  torch.Size([40, 1477, 800])
Modeled Passage dim:  torch.Size([40, 1477, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1477, 1000])
Span start logits:  torch.Size([40, 1477])
span start probs dim:  torch.Size([40, 1477])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1477]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 442, 200])
Passage Length:  442
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 442, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 442, 15])
Passage ques attention dim:  torch.Size([40, 442, 15])
Passage question vectors dim:  torch.Size([40, 442, 200])
Question Passage Similarity dim:  torch.Size([40, 442])
Question passage attention dim:  torch.Size([40, 442])
Final Merged Passage dim:  torch.Size([40, 442, 800])
Modeled Passage dim:  torch.Size([40, 442, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 442, 1000])
Span start logits:  torch.Size([40, 442])
span start probs dim:  torch.Size([40, 442])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 442]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 524, 200])
Passage Length:  524
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 524, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 524, 15])
Passage ques attention dim:  torch.Size([40, 524, 15])
Passage question vectors dim:  torch.Size([40, 524, 200])
Question Passage Similarity dim:  torch.Size([40, 524])
Question passage attention dim:  torch.Size([40, 524])
Final Merged Passage dim:  torch.Size([40, 524, 800])
Modeled Passage dim:  torch.Size([40, 524, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 524, 1000])
Span start logits:  torch.Size([40, 524])
span start probs dim:  torch.Size([40, 524])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 524]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 450, 200])
Passage Length:  450
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 450, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 450, 12])
Passage ques attention dim:  torch.Size([40, 450, 12])
Passage question vectors dim:  torch.Size([40, 450, 200])
Question Passage Similarity dim:  torch.Size([40, 450])
Question passage attention dim:  torch.Size([40, 450])
Final Merged Passage dim:  torch.Size([40, 450, 800])
Modeled Passage dim:  torch.Size([40, 450, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 450, 1000])
Span start logits:  torch.Size([40, 450])
span start probs dim:  torch.Size([40, 450])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 450]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 301, 15])
Passage ques attention dim:  torch.Size([40, 301, 15])
Passage question vectors dim:  torch.Size([40, 301, 200])
Question Passage Similarity dim:  torch.Size([40, 301])
Question passage attention dim:  torch.Size([40, 301])
Final Merged Passage dim:  torch.Size([40, 301, 800])
Modeled Passage dim:  torch.Size([40, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 301, 1000])
Span start logits:  torch.Size([40, 301])
span start probs dim:  torch.Size([40, 301])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 301]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 632, 200])
Passage Length:  632
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 632, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 632, 15])
Passage ques attention dim:  torch.Size([40, 632, 15])
Passage question vectors dim:  torch.Size([40, 632, 200])
Question Passage Similarity dim:  torch.Size([40, 632])
Question passage attention dim:  torch.Size([40, 632])
Final Merged Passage dim:  torch.Size([40, 632, 800])
Modeled Passage dim:  torch.Size([40, 632, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 632, 1000])
Span start logits:  torch.Size([40, 632])
span start probs dim:  torch.Size([40, 632])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 632]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 943, 200])
Passage Length:  943
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 943, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 943, 17])
Passage ques attention dim:  torch.Size([40, 943, 17])
Passage question vectors dim:  torch.Size([40, 943, 200])
Question Passage Similarity dim:  torch.Size([40, 943])
Question passage attention dim:  torch.Size([40, 943])
Final Merged Passage dim:  torch.Size([40, 943, 800])
Modeled Passage dim:  torch.Size([40, 943, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 943, 1000])
Span start logits:  torch.Size([40, 943])
span start probs dim:  torch.Size([40, 943])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 943]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1164, 200])
Passage Length:  1164
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1164, 13])
Passage ques attention dim:  torch.Size([40, 1164, 13])
Passage question vectors dim:  torch.Size([40, 1164, 200])
Question Passage Similarity dim:  torch.Size([40, 1164])
Question passage attention dim:  torch.Size([40, 1164])
Final Merged Passage dim:  torch.Size([40, 1164, 800])
Modeled Passage dim:  torch.Size([40, 1164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1164, 1000])
Span start logits:  torch.Size([40, 1164])
span start probs dim:  torch.Size([40, 1164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 662, 200])
Passage Length:  662
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 662, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 662, 13])
Passage ques attention dim:  torch.Size([40, 662, 13])
Passage question vectors dim:  torch.Size([40, 662, 200])
Question Passage Similarity dim:  torch.Size([40, 662])
Question passage attention dim:  torch.Size([40, 662])
Final Merged Passage dim:  torch.Size([40, 662, 800])
Modeled Passage dim:  torch.Size([40, 662, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 662, 1000])
Span start logits:  torch.Size([40, 662])
span start probs dim:  torch.Size([40, 662])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 662]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 859, 200])
Passage Length:  859
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 859, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 859, 25])
Passage ques attention dim:  torch.Size([40, 859, 25])
Passage question vectors dim:  torch.Size([40, 859, 200])
Question Passage Similarity dim:  torch.Size([40, 859])
Question passage attention dim:  torch.Size([40, 859])
Final Merged Passage dim:  torch.Size([40, 859, 800])
Modeled Passage dim:  torch.Size([40, 859, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 859, 1000])
Span start logits:  torch.Size([40, 859])
span start probs dim:  torch.Size([40, 859])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 859]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 783, 200])
Passage Length:  783
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 783, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 783, 13])
Passage ques attention dim:  torch.Size([40, 783, 13])
Passage question vectors dim:  torch.Size([40, 783, 200])
Question Passage Similarity dim:  torch.Size([40, 783])
Question passage attention dim:  torch.Size([40, 783])
Final Merged Passage dim:  torch.Size([40, 783, 800])
Modeled Passage dim:  torch.Size([40, 783, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 783, 1000])
Span start logits:  torch.Size([40, 783])
span start probs dim:  torch.Size([40, 783])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 783]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 769, 200])
Passage Length:  769
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 769, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 769, 14])
Passage ques attention dim:  torch.Size([40, 769, 14])
Passage question vectors dim:  torch.Size([40, 769, 200])
Question Passage Similarity dim:  torch.Size([40, 769])
Question passage attention dim:  torch.Size([40, 769])
Final Merged Passage dim:  torch.Size([40, 769, 800])
Modeled Passage dim:  torch.Size([40, 769, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 769, 1000])
Span start logits:  torch.Size([40, 769])
span start probs dim:  torch.Size([40, 769])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 769]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1156, 200])
Passage Length:  1156
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1156, 13])
Passage ques attention dim:  torch.Size([40, 1156, 13])
Passage question vectors dim:  torch.Size([40, 1156, 200])
Question Passage Similarity dim:  torch.Size([40, 1156])
Question passage attention dim:  torch.Size([40, 1156])
Final Merged Passage dim:  torch.Size([40, 1156, 800])
Modeled Passage dim:  torch.Size([40, 1156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1156, 1000])
Span start logits:  torch.Size([40, 1156])
span start probs dim:  torch.Size([40, 1156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 496, 200])
Passage Length:  496
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 496, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 496, 15])
Passage ques attention dim:  torch.Size([40, 496, 15])
Passage question vectors dim:  torch.Size([40, 496, 200])
Question Passage Similarity dim:  torch.Size([40, 496])
Question passage attention dim:  torch.Size([40, 496])
Final Merged Passage dim:  torch.Size([40, 496, 800])
Modeled Passage dim:  torch.Size([40, 496, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 496, 1000])
Span start logits:  torch.Size([40, 496])
span start probs dim:  torch.Size([40, 496])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 496]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 950, 200])
Passage Length:  950
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 950, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 950, 13])
Passage ques attention dim:  torch.Size([40, 950, 13])
Passage question vectors dim:  torch.Size([40, 950, 200])
Question Passage Similarity dim:  torch.Size([40, 950])
Question passage attention dim:  torch.Size([40, 950])
Final Merged Passage dim:  torch.Size([40, 950, 800])
Modeled Passage dim:  torch.Size([40, 950, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 950, 1000])
Span start logits:  torch.Size([40, 950])
span start probs dim:  torch.Size([40, 950])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 950]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1174, 200])
Passage Length:  1174
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1174, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1174, 15])
Passage ques attention dim:  torch.Size([40, 1174, 15])
Passage question vectors dim:  torch.Size([40, 1174, 200])
Question Passage Similarity dim:  torch.Size([40, 1174])
Question passage attention dim:  torch.Size([40, 1174])
Final Merged Passage dim:  torch.Size([40, 1174, 800])
Modeled Passage dim:  torch.Size([40, 1174, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1174, 1000])
Span start logits:  torch.Size([40, 1174])
span start probs dim:  torch.Size([40, 1174])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1174]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 932, 200])
Passage Length:  932
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 932, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 932, 13])
Passage ques attention dim:  torch.Size([40, 932, 13])
Passage question vectors dim:  torch.Size([40, 932, 200])
Question Passage Similarity dim:  torch.Size([40, 932])
Question passage attention dim:  torch.Size([40, 932])
Final Merged Passage dim:  torch.Size([40, 932, 800])
Modeled Passage dim:  torch.Size([40, 932, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 932, 1000])
Span start logits:  torch.Size([40, 932])
span start probs dim:  torch.Size([40, 932])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 932]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1975, 200])
Passage Length:  1975
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1975, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1975, 15])
Passage ques attention dim:  torch.Size([40, 1975, 15])
Passage question vectors dim:  torch.Size([40, 1975, 200])
Question Passage Similarity dim:  torch.Size([40, 1975])
Question passage attention dim:  torch.Size([40, 1975])
Final Merged Passage dim:  torch.Size([40, 1975, 800])
Modeled Passage dim:  torch.Size([40, 1975, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1975, 1000])
Span start logits:  torch.Size([40, 1975])
span start probs dim:  torch.Size([40, 1975])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1975]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 528, 200])
Passage Length:  528
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 528, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 528, 12])
Passage ques attention dim:  torch.Size([40, 528, 12])
Passage question vectors dim:  torch.Size([40, 528, 200])
Question Passage Similarity dim:  torch.Size([40, 528])
Question passage attention dim:  torch.Size([40, 528])
Final Merged Passage dim:  torch.Size([40, 528, 800])
Modeled Passage dim:  torch.Size([40, 528, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 528, 1000])
Span start logits:  torch.Size([40, 528])
span start probs dim:  torch.Size([40, 528])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 528]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 836, 200])
Passage Length:  836
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 836, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 836, 16])
Passage ques attention dim:  torch.Size([40, 836, 16])
Passage question vectors dim:  torch.Size([40, 836, 200])
Question Passage Similarity dim:  torch.Size([40, 836])
Question passage attention dim:  torch.Size([40, 836])
Final Merged Passage dim:  torch.Size([40, 836, 800])
Modeled Passage dim:  torch.Size([40, 836, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 836, 1000])
Span start logits:  torch.Size([40, 836])
span start probs dim:  torch.Size([40, 836])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 836]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1655, 200])
Passage Length:  1655
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1655, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1655, 13])
Passage ques attention dim:  torch.Size([40, 1655, 13])
Passage question vectors dim:  torch.Size([40, 1655, 200])
Question Passage Similarity dim:  torch.Size([40, 1655])
Question passage attention dim:  torch.Size([40, 1655])
Final Merged Passage dim:  torch.Size([40, 1655, 800])
Modeled Passage dim:  torch.Size([40, 1655, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1655, 1000])
Span start logits:  torch.Size([40, 1655])
span start probs dim:  torch.Size([40, 1655])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1655]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 185, 200])
Passage Length:  185
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 185, 21])
Passage ques attention dim:  torch.Size([40, 185, 21])
Passage question vectors dim:  torch.Size([40, 185, 200])
Question Passage Similarity dim:  torch.Size([40, 185])
Question passage attention dim:  torch.Size([40, 185])
Final Merged Passage dim:  torch.Size([40, 185, 800])
Modeled Passage dim:  torch.Size([40, 185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 185, 1000])
Span start logits:  torch.Size([40, 185])
span start probs dim:  torch.Size([40, 185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1566, 200])
Passage Length:  1566
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1566, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1566, 13])
Passage ques attention dim:  torch.Size([40, 1566, 13])
Passage question vectors dim:  torch.Size([40, 1566, 200])
Question Passage Similarity dim:  torch.Size([40, 1566])
Question passage attention dim:  torch.Size([40, 1566])
Final Merged Passage dim:  torch.Size([40, 1566, 800])
Modeled Passage dim:  torch.Size([40, 1566, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1566, 1000])
Span start logits:  torch.Size([40, 1566])
span start probs dim:  torch.Size([40, 1566])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1566]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 517, 200])
Passage Length:  517
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 517, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 517, 13])
Passage ques attention dim:  torch.Size([40, 517, 13])
Passage question vectors dim:  torch.Size([40, 517, 200])
Question Passage Similarity dim:  torch.Size([40, 517])
Question passage attention dim:  torch.Size([40, 517])
Final Merged Passage dim:  torch.Size([40, 517, 800])
Modeled Passage dim:  torch.Size([40, 517, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 517, 1000])
Span start logits:  torch.Size([40, 517])
span start probs dim:  torch.Size([40, 517])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 517]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 303, 200])
Passage Length:  303
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 303, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 303, 16])
Passage ques attention dim:  torch.Size([40, 303, 16])
Passage question vectors dim:  torch.Size([40, 303, 200])
Question Passage Similarity dim:  torch.Size([40, 303])
Question passage attention dim:  torch.Size([40, 303])
Final Merged Passage dim:  torch.Size([40, 303, 800])
Modeled Passage dim:  torch.Size([40, 303, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 303, 1000])
Span start logits:  torch.Size([40, 303])
span start probs dim:  torch.Size([40, 303])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 303]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 220, 200])
Passage Length:  220
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 220, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 220, 12])
Passage ques attention dim:  torch.Size([40, 220, 12])
Passage question vectors dim:  torch.Size([40, 220, 200])
Question Passage Similarity dim:  torch.Size([40, 220])
Question passage attention dim:  torch.Size([40, 220])
Final Merged Passage dim:  torch.Size([40, 220, 800])
Modeled Passage dim:  torch.Size([40, 220, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 220, 1000])
Span start logits:  torch.Size([40, 220])
span start probs dim:  torch.Size([40, 220])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 220]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1375, 200])
Passage Length:  1375
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1375, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1375, 18])
Passage ques attention dim:  torch.Size([40, 1375, 18])
Passage question vectors dim:  torch.Size([40, 1375, 200])
Question Passage Similarity dim:  torch.Size([40, 1375])
Question passage attention dim:  torch.Size([40, 1375])
Final Merged Passage dim:  torch.Size([40, 1375, 800])
Modeled Passage dim:  torch.Size([40, 1375, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1375, 1000])
Span start logits:  torch.Size([40, 1375])
span start probs dim:  torch.Size([40, 1375])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1375]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1104, 200])
Passage Length:  1104
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1104, 15])
Passage ques attention dim:  torch.Size([40, 1104, 15])
Passage question vectors dim:  torch.Size([40, 1104, 200])
Question Passage Similarity dim:  torch.Size([40, 1104])
Question passage attention dim:  torch.Size([40, 1104])
Final Merged Passage dim:  torch.Size([40, 1104, 800])
Modeled Passage dim:  torch.Size([40, 1104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1104, 1000])
Span start logits:  torch.Size([40, 1104])
span start probs dim:  torch.Size([40, 1104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 408, 200])
Passage Length:  408
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 408, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 408, 15])
Passage ques attention dim:  torch.Size([40, 408, 15])
Passage question vectors dim:  torch.Size([40, 408, 200])
Question Passage Similarity dim:  torch.Size([40, 408])
Question passage attention dim:  torch.Size([40, 408])
Final Merged Passage dim:  torch.Size([40, 408, 800])
Modeled Passage dim:  torch.Size([40, 408, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 408, 1000])
Span start logits:  torch.Size([40, 408])
span start probs dim:  torch.Size([40, 408])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 408]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1313, 200])
Passage Length:  1313
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1313, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1313, 19])
Passage ques attention dim:  torch.Size([40, 1313, 19])
Passage question vectors dim:  torch.Size([40, 1313, 200])
Question Passage Similarity dim:  torch.Size([40, 1313])
Question passage attention dim:  torch.Size([40, 1313])
Final Merged Passage dim:  torch.Size([40, 1313, 800])
Modeled Passage dim:  torch.Size([40, 1313, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1313, 1000])
Span start logits:  torch.Size([40, 1313])
span start probs dim:  torch.Size([40, 1313])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1313]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1885, 200])
Passage Length:  1885
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1885, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1885, 12])
Passage ques attention dim:  torch.Size([40, 1885, 12])
Passage question vectors dim:  torch.Size([40, 1885, 200])
Question Passage Similarity dim:  torch.Size([40, 1885])
Question passage attention dim:  torch.Size([40, 1885])
Final Merged Passage dim:  torch.Size([40, 1885, 800])
Modeled Passage dim:  torch.Size([40, 1885, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1885, 1000])
Span start logits:  torch.Size([40, 1885])
span start probs dim:  torch.Size([40, 1885])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1885]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1223, 200])
Passage Length:  1223
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1223, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1223, 17])
Passage ques attention dim:  torch.Size([40, 1223, 17])
Passage question vectors dim:  torch.Size([40, 1223, 200])
Question Passage Similarity dim:  torch.Size([40, 1223])
Question passage attention dim:  torch.Size([40, 1223])
Final Merged Passage dim:  torch.Size([40, 1223, 800])
Modeled Passage dim:  torch.Size([40, 1223, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1223, 1000])
Span start logits:  torch.Size([40, 1223])
span start probs dim:  torch.Size([40, 1223])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1223]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1139, 200])
Passage Length:  1139
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1139, 13])
Passage ques attention dim:  torch.Size([40, 1139, 13])
Passage question vectors dim:  torch.Size([40, 1139, 200])
Question Passage Similarity dim:  torch.Size([40, 1139])
Question passage attention dim:  torch.Size([40, 1139])
Final Merged Passage dim:  torch.Size([40, 1139, 800])
Modeled Passage dim:  torch.Size([40, 1139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1139, 1000])
Span start logits:  torch.Size([40, 1139])
span start probs dim:  torch.Size([40, 1139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1449, 200])
Passage Length:  1449
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1449, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1449, 13])
Passage ques attention dim:  torch.Size([40, 1449, 13])
Passage question vectors dim:  torch.Size([40, 1449, 200])
Question Passage Similarity dim:  torch.Size([40, 1449])
Question passage attention dim:  torch.Size([40, 1449])
Final Merged Passage dim:  torch.Size([40, 1449, 800])
Modeled Passage dim:  torch.Size([40, 1449, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1449, 1000])
Span start logits:  torch.Size([40, 1449])
span start probs dim:  torch.Size([40, 1449])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1449]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 635, 200])
Passage Length:  635
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 635, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 635, 15])
Passage ques attention dim:  torch.Size([40, 635, 15])
Passage question vectors dim:  torch.Size([40, 635, 200])
Question Passage Similarity dim:  torch.Size([40, 635])
Question passage attention dim:  torch.Size([40, 635])
Final Merged Passage dim:  torch.Size([40, 635, 800])
Modeled Passage dim:  torch.Size([40, 635, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 635, 1000])
Span start logits:  torch.Size([40, 635])
span start probs dim:  torch.Size([40, 635])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 635]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1416, 200])
Passage Length:  1416
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1416, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1416, 13])
Passage ques attention dim:  torch.Size([40, 1416, 13])
Passage question vectors dim:  torch.Size([40, 1416, 200])
Question Passage Similarity dim:  torch.Size([40, 1416])
Question passage attention dim:  torch.Size([40, 1416])
Final Merged Passage dim:  torch.Size([40, 1416, 800])
Modeled Passage dim:  torch.Size([40, 1416, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1416, 1000])
Span start logits:  torch.Size([40, 1416])
span start probs dim:  torch.Size([40, 1416])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1416]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 429, 200])
Passage Length:  429
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 429, 17])
Passage ques attention dim:  torch.Size([40, 429, 17])
Passage question vectors dim:  torch.Size([40, 429, 200])
Question Passage Similarity dim:  torch.Size([40, 429])
Question passage attention dim:  torch.Size([40, 429])
Final Merged Passage dim:  torch.Size([40, 429, 800])
Modeled Passage dim:  torch.Size([40, 429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 429, 1000])
Span start logits:  torch.Size([40, 429])
span start probs dim:  torch.Size([40, 429])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 429]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1265, 200])
Passage Length:  1265
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1265, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1265, 15])
Passage ques attention dim:  torch.Size([40, 1265, 15])
Passage question vectors dim:  torch.Size([40, 1265, 200])
Question Passage Similarity dim:  torch.Size([40, 1265])
Question passage attention dim:  torch.Size([40, 1265])
Final Merged Passage dim:  torch.Size([40, 1265, 800])
Modeled Passage dim:  torch.Size([40, 1265, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1265, 1000])
Span start logits:  torch.Size([40, 1265])
span start probs dim:  torch.Size([40, 1265])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1265]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 676, 200])
Passage Length:  676
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 676, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 676, 15])
Passage ques attention dim:  torch.Size([40, 676, 15])
Passage question vectors dim:  torch.Size([40, 676, 200])
Question Passage Similarity dim:  torch.Size([40, 676])
Question passage attention dim:  torch.Size([40, 676])
Final Merged Passage dim:  torch.Size([40, 676, 800])
Modeled Passage dim:  torch.Size([40, 676, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 676, 1000])
Span start logits:  torch.Size([40, 676])
span start probs dim:  torch.Size([40, 676])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 676]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 792, 200])
Passage Length:  792
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 792, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 792, 11])
Passage ques attention dim:  torch.Size([40, 792, 11])
Passage question vectors dim:  torch.Size([40, 792, 200])
Question Passage Similarity dim:  torch.Size([40, 792])
Question passage attention dim:  torch.Size([40, 792])
Final Merged Passage dim:  torch.Size([40, 792, 800])
Modeled Passage dim:  torch.Size([40, 792, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 792, 1000])
Span start logits:  torch.Size([40, 792])
span start probs dim:  torch.Size([40, 792])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 792]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 360, 200])
Passage Length:  360
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 360, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 360, 14])
Passage ques attention dim:  torch.Size([40, 360, 14])
Passage question vectors dim:  torch.Size([40, 360, 200])
Question Passage Similarity dim:  torch.Size([40, 360])
Question passage attention dim:  torch.Size([40, 360])
Final Merged Passage dim:  torch.Size([40, 360, 800])
Modeled Passage dim:  torch.Size([40, 360, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 360, 1000])
Span start logits:  torch.Size([40, 360])
span start probs dim:  torch.Size([40, 360])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 360]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1007, 200])
Passage Length:  1007
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1007, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1007, 14])
Passage ques attention dim:  torch.Size([40, 1007, 14])
Passage question vectors dim:  torch.Size([40, 1007, 200])
Question Passage Similarity dim:  torch.Size([40, 1007])
Question passage attention dim:  torch.Size([40, 1007])
Final Merged Passage dim:  torch.Size([40, 1007, 800])
Modeled Passage dim:  torch.Size([40, 1007, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1007, 1000])
Span start logits:  torch.Size([40, 1007])
span start probs dim:  torch.Size([40, 1007])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1007]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 416, 200])
Passage Length:  416
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 416, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 416, 12])
Passage ques attention dim:  torch.Size([40, 416, 12])
Passage question vectors dim:  torch.Size([40, 416, 200])
Question Passage Similarity dim:  torch.Size([40, 416])
Question passage attention dim:  torch.Size([40, 416])
Final Merged Passage dim:  torch.Size([40, 416, 800])
Modeled Passage dim:  torch.Size([40, 416, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 416, 1000])
Span start logits:  torch.Size([40, 416])
span start probs dim:  torch.Size([40, 416])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 416]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 960, 200])
Passage Length:  960
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 960, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 960, 18])
Passage ques attention dim:  torch.Size([40, 960, 18])
Passage question vectors dim:  torch.Size([40, 960, 200])
Question Passage Similarity dim:  torch.Size([40, 960])
Question passage attention dim:  torch.Size([40, 960])
Final Merged Passage dim:  torch.Size([40, 960, 800])
Modeled Passage dim:  torch.Size([40, 960, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 960, 1000])
Span start logits:  torch.Size([40, 960])
span start probs dim:  torch.Size([40, 960])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 960]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 535, 200])
Passage Length:  535
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 535, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 535, 15])
Passage ques attention dim:  torch.Size([40, 535, 15])
Passage question vectors dim:  torch.Size([40, 535, 200])
Question Passage Similarity dim:  torch.Size([40, 535])
Question passage attention dim:  torch.Size([40, 535])
Final Merged Passage dim:  torch.Size([40, 535, 800])
Modeled Passage dim:  torch.Size([40, 535, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 535, 1000])
Span start logits:  torch.Size([40, 535])
span start probs dim:  torch.Size([40, 535])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 535]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 550, 200])
Passage Length:  550
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 550, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 550, 15])
Passage ques attention dim:  torch.Size([40, 550, 15])
Passage question vectors dim:  torch.Size([40, 550, 200])
Question Passage Similarity dim:  torch.Size([40, 550])
Question passage attention dim:  torch.Size([40, 550])
Final Merged Passage dim:  torch.Size([40, 550, 800])
Modeled Passage dim:  torch.Size([40, 550, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 550, 1000])
Span start logits:  torch.Size([40, 550])
span start probs dim:  torch.Size([40, 550])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 550]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 646, 200])
Passage Length:  646
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 646, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 646, 15])
Passage ques attention dim:  torch.Size([40, 646, 15])
Passage question vectors dim:  torch.Size([40, 646, 200])
Question Passage Similarity dim:  torch.Size([40, 646])
Question passage attention dim:  torch.Size([40, 646])
Final Merged Passage dim:  torch.Size([40, 646, 800])
Modeled Passage dim:  torch.Size([40, 646, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 646, 1000])
Span start logits:  torch.Size([40, 646])
span start probs dim:  torch.Size([40, 646])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 646]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1216, 200])
Passage Length:  1216
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1216, 19])
Passage ques attention dim:  torch.Size([40, 1216, 19])
Passage question vectors dim:  torch.Size([40, 1216, 200])
Question Passage Similarity dim:  torch.Size([40, 1216])
Question passage attention dim:  torch.Size([40, 1216])
Final Merged Passage dim:  torch.Size([40, 1216, 800])
Modeled Passage dim:  torch.Size([40, 1216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1216, 1000])
Span start logits:  torch.Size([40, 1216])
span start probs dim:  torch.Size([40, 1216])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1216]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 818, 200])
Passage Length:  818
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 818, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 818, 18])
Passage ques attention dim:  torch.Size([40, 818, 18])
Passage question vectors dim:  torch.Size([40, 818, 200])
Question Passage Similarity dim:  torch.Size([40, 818])
Question passage attention dim:  torch.Size([40, 818])
Final Merged Passage dim:  torch.Size([40, 818, 800])
Modeled Passage dim:  torch.Size([40, 818, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 818, 1000])
Span start logits:  torch.Size([40, 818])
span start probs dim:  torch.Size([40, 818])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 818]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 393, 200])
Passage Length:  393
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 393, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 393, 13])
Passage ques attention dim:  torch.Size([40, 393, 13])
Passage question vectors dim:  torch.Size([40, 393, 200])
Question Passage Similarity dim:  torch.Size([40, 393])
Question passage attention dim:  torch.Size([40, 393])
Final Merged Passage dim:  torch.Size([40, 393, 800])
Modeled Passage dim:  torch.Size([40, 393, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 393, 1000])
Span start logits:  torch.Size([40, 393])
span start probs dim:  torch.Size([40, 393])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 393]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 752, 200])
Passage Length:  752
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 752, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 752, 14])
Passage ques attention dim:  torch.Size([40, 752, 14])
Passage question vectors dim:  torch.Size([40, 752, 200])
Question Passage Similarity dim:  torch.Size([40, 752])
Question passage attention dim:  torch.Size([40, 752])
Final Merged Passage dim:  torch.Size([40, 752, 800])
Modeled Passage dim:  torch.Size([40, 752, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 752, 1000])
Span start logits:  torch.Size([40, 752])
span start probs dim:  torch.Size([40, 752])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 752]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 294, 200])
Passage Length:  294
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 294, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 294, 14])
Passage ques attention dim:  torch.Size([40, 294, 14])
Passage question vectors dim:  torch.Size([40, 294, 200])
Question Passage Similarity dim:  torch.Size([40, 294])
Question passage attention dim:  torch.Size([40, 294])
Final Merged Passage dim:  torch.Size([40, 294, 800])
Modeled Passage dim:  torch.Size([40, 294, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 294, 1000])
Span start logits:  torch.Size([40, 294])
span start probs dim:  torch.Size([40, 294])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 294]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 725, 200])
Passage Length:  725
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 725, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 725, 20])
Passage ques attention dim:  torch.Size([40, 725, 20])
Passage question vectors dim:  torch.Size([40, 725, 200])
Question Passage Similarity dim:  torch.Size([40, 725])
Question passage attention dim:  torch.Size([40, 725])
Final Merged Passage dim:  torch.Size([40, 725, 800])
Modeled Passage dim:  torch.Size([40, 725, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 725, 1000])
Span start logits:  torch.Size([40, 725])
span start probs dim:  torch.Size([40, 725])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 725]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1275, 200])
Passage Length:  1275
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1275, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1275, 14])
Passage ques attention dim:  torch.Size([40, 1275, 14])
Passage question vectors dim:  torch.Size([40, 1275, 200])
Question Passage Similarity dim:  torch.Size([40, 1275])
Question passage attention dim:  torch.Size([40, 1275])
Final Merged Passage dim:  torch.Size([40, 1275, 800])
Modeled Passage dim:  torch.Size([40, 1275, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1275, 1000])
Span start logits:  torch.Size([40, 1275])
span start probs dim:  torch.Size([40, 1275])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1275]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1040, 200])
Passage Length:  1040
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1040, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1040, 13])
Passage ques attention dim:  torch.Size([40, 1040, 13])
Passage question vectors dim:  torch.Size([40, 1040, 200])
Question Passage Similarity dim:  torch.Size([40, 1040])
Question passage attention dim:  torch.Size([40, 1040])
Final Merged Passage dim:  torch.Size([40, 1040, 800])
Modeled Passage dim:  torch.Size([40, 1040, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1040, 1000])
Span start logits:  torch.Size([40, 1040])
span start probs dim:  torch.Size([40, 1040])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1040]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1446, 200])
Passage Length:  1446
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1446, 17])
Passage ques attention dim:  torch.Size([40, 1446, 17])
Passage question vectors dim:  torch.Size([40, 1446, 200])
Question Passage Similarity dim:  torch.Size([40, 1446])
Question passage attention dim:  torch.Size([40, 1446])
Final Merged Passage dim:  torch.Size([40, 1446, 800])
Modeled Passage dim:  torch.Size([40, 1446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1446, 1000])
Span start logits:  torch.Size([40, 1446])
span start probs dim:  torch.Size([40, 1446])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1446]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 343, 14])
Passage ques attention dim:  torch.Size([40, 343, 14])
Passage question vectors dim:  torch.Size([40, 343, 200])
Question Passage Similarity dim:  torch.Size([40, 343])
Question passage attention dim:  torch.Size([40, 343])
Final Merged Passage dim:  torch.Size([40, 343, 800])
Modeled Passage dim:  torch.Size([40, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 343, 1000])
Span start logits:  torch.Size([40, 343])
span start probs dim:  torch.Size([40, 343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 725, 200])
Passage Length:  725
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 725, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 725, 15])
Passage ques attention dim:  torch.Size([40, 725, 15])
Passage question vectors dim:  torch.Size([40, 725, 200])
Question Passage Similarity dim:  torch.Size([40, 725])
Question passage attention dim:  torch.Size([40, 725])
Final Merged Passage dim:  torch.Size([40, 725, 800])
Modeled Passage dim:  torch.Size([40, 725, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 725, 1000])
Span start logits:  torch.Size([40, 725])
span start probs dim:  torch.Size([40, 725])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 725]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1140, 200])
Passage Length:  1140
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1140, 15])
Passage ques attention dim:  torch.Size([40, 1140, 15])
Passage question vectors dim:  torch.Size([40, 1140, 200])
Question Passage Similarity dim:  torch.Size([40, 1140])
Question passage attention dim:  torch.Size([40, 1140])
Final Merged Passage dim:  torch.Size([40, 1140, 800])
Modeled Passage dim:  torch.Size([40, 1140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1140, 1000])
Span start logits:  torch.Size([40, 1140])
span start probs dim:  torch.Size([40, 1140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 322, 200])
Passage Length:  322
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 322, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 322, 13])
Passage ques attention dim:  torch.Size([40, 322, 13])
Passage question vectors dim:  torch.Size([40, 322, 200])
Question Passage Similarity dim:  torch.Size([40, 322])
Question passage attention dim:  torch.Size([40, 322])
Final Merged Passage dim:  torch.Size([40, 322, 800])
Modeled Passage dim:  torch.Size([40, 322, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 322, 1000])
Span start logits:  torch.Size([40, 322])
span start probs dim:  torch.Size([40, 322])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 322]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1087, 200])
Passage Length:  1087
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1087, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1087, 12])
Passage ques attention dim:  torch.Size([40, 1087, 12])
Passage question vectors dim:  torch.Size([40, 1087, 200])
Question Passage Similarity dim:  torch.Size([40, 1087])
Question passage attention dim:  torch.Size([40, 1087])
Final Merged Passage dim:  torch.Size([40, 1087, 800])
Modeled Passage dim:  torch.Size([40, 1087, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1087, 1000])
Span start logits:  torch.Size([40, 1087])
span start probs dim:  torch.Size([40, 1087])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1087]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 454, 200])
Passage Length:  454
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 454, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 454, 12])
Passage ques attention dim:  torch.Size([40, 454, 12])
Passage question vectors dim:  torch.Size([40, 454, 200])
Question Passage Similarity dim:  torch.Size([40, 454])
Question passage attention dim:  torch.Size([40, 454])
Final Merged Passage dim:  torch.Size([40, 454, 800])
Modeled Passage dim:  torch.Size([40, 454, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 454, 1000])
Span start logits:  torch.Size([40, 454])
span start probs dim:  torch.Size([40, 454])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 454]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 743, 200])
Passage Length:  743
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 743, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 743, 13])
Passage ques attention dim:  torch.Size([40, 743, 13])
Passage question vectors dim:  torch.Size([40, 743, 200])
Question Passage Similarity dim:  torch.Size([40, 743])
Question passage attention dim:  torch.Size([40, 743])
Final Merged Passage dim:  torch.Size([40, 743, 800])
Modeled Passage dim:  torch.Size([40, 743, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 743, 1000])
Span start logits:  torch.Size([40, 743])
span start probs dim:  torch.Size([40, 743])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 743]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 830, 200])
Passage Length:  830
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 830, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 830, 17])
Passage ques attention dim:  torch.Size([40, 830, 17])
Passage question vectors dim:  torch.Size([40, 830, 200])
Question Passage Similarity dim:  torch.Size([40, 830])
Question passage attention dim:  torch.Size([40, 830])
Final Merged Passage dim:  torch.Size([40, 830, 800])
Modeled Passage dim:  torch.Size([40, 830, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 830, 1000])
Span start logits:  torch.Size([40, 830])
span start probs dim:  torch.Size([40, 830])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 830]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 416, 200])
Passage Length:  416
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 416, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 416, 13])
Passage ques attention dim:  torch.Size([40, 416, 13])
Passage question vectors dim:  torch.Size([40, 416, 200])
Question Passage Similarity dim:  torch.Size([40, 416])
Question passage attention dim:  torch.Size([40, 416])
Final Merged Passage dim:  torch.Size([40, 416, 800])
Modeled Passage dim:  torch.Size([40, 416, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 416, 1000])
Span start logits:  torch.Size([40, 416])
span start probs dim:  torch.Size([40, 416])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 416]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 728, 200])
Passage Length:  728
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 728, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 728, 15])
Passage ques attention dim:  torch.Size([40, 728, 15])
Passage question vectors dim:  torch.Size([40, 728, 200])
Question Passage Similarity dim:  torch.Size([40, 728])
Question passage attention dim:  torch.Size([40, 728])
Final Merged Passage dim:  torch.Size([40, 728, 800])
Modeled Passage dim:  torch.Size([40, 728, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 728, 1000])
Span start logits:  torch.Size([40, 728])
span start probs dim:  torch.Size([40, 728])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 728]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 996, 200])
Passage Length:  996
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 996, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 996, 12])
Passage ques attention dim:  torch.Size([40, 996, 12])
Passage question vectors dim:  torch.Size([40, 996, 200])
Question Passage Similarity dim:  torch.Size([40, 996])
Question passage attention dim:  torch.Size([40, 996])
Final Merged Passage dim:  torch.Size([40, 996, 800])
Modeled Passage dim:  torch.Size([40, 996, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 996, 1000])
Span start logits:  torch.Size([40, 996])
span start probs dim:  torch.Size([40, 996])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 996]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 433, 200])
Passage Length:  433
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 433, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 433, 17])
Passage ques attention dim:  torch.Size([40, 433, 17])
Passage question vectors dim:  torch.Size([40, 433, 200])
Question Passage Similarity dim:  torch.Size([40, 433])
Question passage attention dim:  torch.Size([40, 433])
Final Merged Passage dim:  torch.Size([40, 433, 800])
Modeled Passage dim:  torch.Size([40, 433, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 433, 1000])
Span start logits:  torch.Size([40, 433])
span start probs dim:  torch.Size([40, 433])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 433]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 746, 200])
Passage Length:  746
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 746, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 746, 17])
Passage ques attention dim:  torch.Size([40, 746, 17])
Passage question vectors dim:  torch.Size([40, 746, 200])
Question Passage Similarity dim:  torch.Size([40, 746])
Question passage attention dim:  torch.Size([40, 746])
Final Merged Passage dim:  torch.Size([40, 746, 800])
Modeled Passage dim:  torch.Size([40, 746, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 746, 1000])
Span start logits:  torch.Size([40, 746])
span start probs dim:  torch.Size([40, 746])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 746]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 462, 18])
Passage ques attention dim:  torch.Size([40, 462, 18])
Passage question vectors dim:  torch.Size([40, 462, 200])
Question Passage Similarity dim:  torch.Size([40, 462])
Question passage attention dim:  torch.Size([40, 462])
Final Merged Passage dim:  torch.Size([40, 462, 800])
Modeled Passage dim:  torch.Size([40, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 462, 1000])
Span start logits:  torch.Size([40, 462])
span start probs dim:  torch.Size([40, 462])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 462]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 439, 200])
Passage Length:  439
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 439, 19])
Passage ques attention dim:  torch.Size([40, 439, 19])
Passage question vectors dim:  torch.Size([40, 439, 200])
Question Passage Similarity dim:  torch.Size([40, 439])
Question passage attention dim:  torch.Size([40, 439])
Final Merged Passage dim:  torch.Size([40, 439, 800])
Modeled Passage dim:  torch.Size([40, 439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 439, 1000])
Span start logits:  torch.Size([40, 439])
span start probs dim:  torch.Size([40, 439])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 439]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1155, 200])
Passage Length:  1155
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1155, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1155, 16])
Passage ques attention dim:  torch.Size([40, 1155, 16])
Passage question vectors dim:  torch.Size([40, 1155, 200])
Question Passage Similarity dim:  torch.Size([40, 1155])
Question passage attention dim:  torch.Size([40, 1155])
Final Merged Passage dim:  torch.Size([40, 1155, 800])
Modeled Passage dim:  torch.Size([40, 1155, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1155, 1000])
Span start logits:  torch.Size([40, 1155])
span start probs dim:  torch.Size([40, 1155])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1155]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 429, 200])
Passage Length:  429
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 429, 13])
Passage ques attention dim:  torch.Size([40, 429, 13])
Passage question vectors dim:  torch.Size([40, 429, 200])
Question Passage Similarity dim:  torch.Size([40, 429])
Question passage attention dim:  torch.Size([40, 429])
Final Merged Passage dim:  torch.Size([40, 429, 800])
Modeled Passage dim:  torch.Size([40, 429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 429, 1000])
Span start logits:  torch.Size([40, 429])
span start probs dim:  torch.Size([40, 429])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 429]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 396, 200])
Passage Length:  396
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 396, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 396, 15])
Passage ques attention dim:  torch.Size([40, 396, 15])
Passage question vectors dim:  torch.Size([40, 396, 200])
Question Passage Similarity dim:  torch.Size([40, 396])
Question passage attention dim:  torch.Size([40, 396])
Final Merged Passage dim:  torch.Size([40, 396, 800])
Modeled Passage dim:  torch.Size([40, 396, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 396, 1000])
Span start logits:  torch.Size([40, 396])
span start probs dim:  torch.Size([40, 396])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 396]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1203, 200])
Passage Length:  1203
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1203, 14])
Passage ques attention dim:  torch.Size([40, 1203, 14])
Passage question vectors dim:  torch.Size([40, 1203, 200])
Question Passage Similarity dim:  torch.Size([40, 1203])
Question passage attention dim:  torch.Size([40, 1203])
Final Merged Passage dim:  torch.Size([40, 1203, 800])
Modeled Passage dim:  torch.Size([40, 1203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1203, 1000])
Span start logits:  torch.Size([40, 1203])
span start probs dim:  torch.Size([40, 1203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 250, 13])
Passage ques attention dim:  torch.Size([40, 250, 13])
Passage question vectors dim:  torch.Size([40, 250, 200])
Question Passage Similarity dim:  torch.Size([40, 250])
Question passage attention dim:  torch.Size([40, 250])
Final Merged Passage dim:  torch.Size([40, 250, 800])
Modeled Passage dim:  torch.Size([40, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 250, 1000])
Span start logits:  torch.Size([40, 250])
span start probs dim:  torch.Size([40, 250])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 250]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 507, 200])
Passage Length:  507
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 507, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 507, 15])
Passage ques attention dim:  torch.Size([40, 507, 15])
Passage question vectors dim:  torch.Size([40, 507, 200])
Question Passage Similarity dim:  torch.Size([40, 507])
Question passage attention dim:  torch.Size([40, 507])
Final Merged Passage dim:  torch.Size([40, 507, 800])
Modeled Passage dim:  torch.Size([40, 507, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 507, 1000])
Span start logits:  torch.Size([40, 507])
span start probs dim:  torch.Size([40, 507])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 507]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 432, 200])
Passage Length:  432
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 432, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 432, 21])
Passage ques attention dim:  torch.Size([40, 432, 21])
Passage question vectors dim:  torch.Size([40, 432, 200])
Question Passage Similarity dim:  torch.Size([40, 432])
Question passage attention dim:  torch.Size([40, 432])
Final Merged Passage dim:  torch.Size([40, 432, 800])
Modeled Passage dim:  torch.Size([40, 432, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 432, 1000])
Span start logits:  torch.Size([40, 432])
span start probs dim:  torch.Size([40, 432])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 432]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 840, 200])
Passage Length:  840
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 840, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 840, 14])
Passage ques attention dim:  torch.Size([40, 840, 14])
Passage question vectors dim:  torch.Size([40, 840, 200])
Question Passage Similarity dim:  torch.Size([40, 840])
Question passage attention dim:  torch.Size([40, 840])
Final Merged Passage dim:  torch.Size([40, 840, 800])
Modeled Passage dim:  torch.Size([40, 840, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 840, 1000])
Span start logits:  torch.Size([40, 840])
span start probs dim:  torch.Size([40, 840])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 840]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 429, 200])
Passage Length:  429
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 429, 20])
Passage ques attention dim:  torch.Size([40, 429, 20])
Passage question vectors dim:  torch.Size([40, 429, 200])
Question Passage Similarity dim:  torch.Size([40, 429])
Question passage attention dim:  torch.Size([40, 429])
Final Merged Passage dim:  torch.Size([40, 429, 800])
Modeled Passage dim:  torch.Size([40, 429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 429, 1000])
Span start logits:  torch.Size([40, 429])
span start probs dim:  torch.Size([40, 429])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 429]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1099, 200])
Passage Length:  1099
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1099, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1099, 18])
Passage ques attention dim:  torch.Size([40, 1099, 18])
Passage question vectors dim:  torch.Size([40, 1099, 200])
Question Passage Similarity dim:  torch.Size([40, 1099])
Question passage attention dim:  torch.Size([40, 1099])
Final Merged Passage dim:  torch.Size([40, 1099, 800])
Modeled Passage dim:  torch.Size([40, 1099, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1099, 1000])
Span start logits:  torch.Size([40, 1099])
span start probs dim:  torch.Size([40, 1099])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1099]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 410, 200])
Passage Length:  410
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 410, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 410, 11])
Passage ques attention dim:  torch.Size([40, 410, 11])
Passage question vectors dim:  torch.Size([40, 410, 200])
Question Passage Similarity dim:  torch.Size([40, 410])
Question passage attention dim:  torch.Size([40, 410])
Final Merged Passage dim:  torch.Size([40, 410, 800])
Modeled Passage dim:  torch.Size([40, 410, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 410, 1000])
Span start logits:  torch.Size([40, 410])
span start probs dim:  torch.Size([40, 410])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 410]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 62, 200])
Embedded passage dim:  torch.Size([40, 1614, 200])
Passage Length:  1614
Encoded question dim:  torch.Size([40, 62, 200])
Encoded passage dim:  torch.Size([40, 1614, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1614, 62])
Passage ques attention dim:  torch.Size([40, 1614, 62])
Passage question vectors dim:  torch.Size([40, 1614, 200])
Question Passage Similarity dim:  torch.Size([40, 1614])
Question passage attention dim:  torch.Size([40, 1614])
Final Merged Passage dim:  torch.Size([40, 1614, 800])
Modeled Passage dim:  torch.Size([40, 1614, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1614, 1000])
Span start logits:  torch.Size([40, 1614])
span start probs dim:  torch.Size([40, 1614])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1614]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 818, 200])
Passage Length:  818
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 818, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 818, 14])
Passage ques attention dim:  torch.Size([40, 818, 14])
Passage question vectors dim:  torch.Size([40, 818, 200])
Question Passage Similarity dim:  torch.Size([40, 818])
Question passage attention dim:  torch.Size([40, 818])
Final Merged Passage dim:  torch.Size([40, 818, 800])
Modeled Passage dim:  torch.Size([40, 818, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 818, 1000])
Span start logits:  torch.Size([40, 818])
span start probs dim:  torch.Size([40, 818])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 818]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 360, 200])
Passage Length:  360
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 360, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 360, 13])
Passage ques attention dim:  torch.Size([40, 360, 13])
Passage question vectors dim:  torch.Size([40, 360, 200])
Question Passage Similarity dim:  torch.Size([40, 360])
Question passage attention dim:  torch.Size([40, 360])
Final Merged Passage dim:  torch.Size([40, 360, 800])
Modeled Passage dim:  torch.Size([40, 360, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 360, 1000])
Span start logits:  torch.Size([40, 360])
span start probs dim:  torch.Size([40, 360])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 360]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 746, 200])
Passage Length:  746
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 746, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 746, 15])
Passage ques attention dim:  torch.Size([40, 746, 15])
Passage question vectors dim:  torch.Size([40, 746, 200])
Question Passage Similarity dim:  torch.Size([40, 746])
Question passage attention dim:  torch.Size([40, 746])
Final Merged Passage dim:  torch.Size([40, 746, 800])
Modeled Passage dim:  torch.Size([40, 746, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 746, 1000])
Span start logits:  torch.Size([40, 746])
span start probs dim:  torch.Size([40, 746])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 746]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 473, 200])
Passage Length:  473
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 473, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 473, 18])
Passage ques attention dim:  torch.Size([40, 473, 18])
Passage question vectors dim:  torch.Size([40, 473, 200])
Question Passage Similarity dim:  torch.Size([40, 473])
Question passage attention dim:  torch.Size([40, 473])
Final Merged Passage dim:  torch.Size([40, 473, 800])
Modeled Passage dim:  torch.Size([40, 473, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 473, 1000])
Span start logits:  torch.Size([40, 473])
span start probs dim:  torch.Size([40, 473])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 473]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 422, 200])
Passage Length:  422
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 422, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 422, 13])
Passage ques attention dim:  torch.Size([40, 422, 13])
Passage question vectors dim:  torch.Size([40, 422, 200])
Question Passage Similarity dim:  torch.Size([40, 422])
Question passage attention dim:  torch.Size([40, 422])
Final Merged Passage dim:  torch.Size([40, 422, 800])
Modeled Passage dim:  torch.Size([40, 422, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 422, 1000])
Span start logits:  torch.Size([40, 422])
span start probs dim:  torch.Size([40, 422])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 422]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 709, 200])
Passage Length:  709
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 709, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 709, 17])
Passage ques attention dim:  torch.Size([40, 709, 17])
Passage question vectors dim:  torch.Size([40, 709, 200])
Question Passage Similarity dim:  torch.Size([40, 709])
Question passage attention dim:  torch.Size([40, 709])
Final Merged Passage dim:  torch.Size([40, 709, 800])
Modeled Passage dim:  torch.Size([40, 709, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 709, 1000])
Span start logits:  torch.Size([40, 709])
span start probs dim:  torch.Size([40, 709])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 709]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 932, 200])
Passage Length:  932
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 932, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 932, 15])
Passage ques attention dim:  torch.Size([40, 932, 15])
Passage question vectors dim:  torch.Size([40, 932, 200])
Question Passage Similarity dim:  torch.Size([40, 932])
Question passage attention dim:  torch.Size([40, 932])
Final Merged Passage dim:  torch.Size([40, 932, 800])
Modeled Passage dim:  torch.Size([40, 932, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 932, 1000])
Span start logits:  torch.Size([40, 932])
span start probs dim:  torch.Size([40, 932])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 932]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1482, 200])
Passage Length:  1482
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1482, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1482, 15])
Passage ques attention dim:  torch.Size([40, 1482, 15])
Passage question vectors dim:  torch.Size([40, 1482, 200])
Question Passage Similarity dim:  torch.Size([40, 1482])
Question passage attention dim:  torch.Size([40, 1482])
Final Merged Passage dim:  torch.Size([40, 1482, 800])
Modeled Passage dim:  torch.Size([40, 1482, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1482, 1000])
Span start logits:  torch.Size([40, 1482])
span start probs dim:  torch.Size([40, 1482])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1482]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 29, 200])
Embedded passage dim:  torch.Size([40, 607, 200])
Passage Length:  607
Encoded question dim:  torch.Size([40, 29, 200])
Encoded passage dim:  torch.Size([40, 607, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 607, 29])
Passage ques attention dim:  torch.Size([40, 607, 29])
Passage question vectors dim:  torch.Size([40, 607, 200])
Question Passage Similarity dim:  torch.Size([40, 607])
Question passage attention dim:  torch.Size([40, 607])
Final Merged Passage dim:  torch.Size([40, 607, 800])
Modeled Passage dim:  torch.Size([40, 607, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 607, 1000])
Span start logits:  torch.Size([40, 607])
span start probs dim:  torch.Size([40, 607])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 607]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1311, 200])
Passage Length:  1311
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1311, 15])
Passage ques attention dim:  torch.Size([40, 1311, 15])
Passage question vectors dim:  torch.Size([40, 1311, 200])
Question Passage Similarity dim:  torch.Size([40, 1311])
Question passage attention dim:  torch.Size([40, 1311])
Final Merged Passage dim:  torch.Size([40, 1311, 800])
Modeled Passage dim:  torch.Size([40, 1311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1311, 1000])
Span start logits:  torch.Size([40, 1311])
span start probs dim:  torch.Size([40, 1311])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1311]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 980, 200])
Passage Length:  980
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 980, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 980, 18])
Passage ques attention dim:  torch.Size([40, 980, 18])
Passage question vectors dim:  torch.Size([40, 980, 200])
Question Passage Similarity dim:  torch.Size([40, 980])
Question passage attention dim:  torch.Size([40, 980])
Final Merged Passage dim:  torch.Size([40, 980, 800])
Modeled Passage dim:  torch.Size([40, 980, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 980, 1000])
Span start logits:  torch.Size([40, 980])
span start probs dim:  torch.Size([40, 980])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 980]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 428, 200])
Passage Length:  428
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 428, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 428, 13])
Passage ques attention dim:  torch.Size([40, 428, 13])
Passage question vectors dim:  torch.Size([40, 428, 200])
Question Passage Similarity dim:  torch.Size([40, 428])
Question passage attention dim:  torch.Size([40, 428])
Final Merged Passage dim:  torch.Size([40, 428, 800])
Modeled Passage dim:  torch.Size([40, 428, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 428, 1000])
Span start logits:  torch.Size([40, 428])
span start probs dim:  torch.Size([40, 428])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 428]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 776, 200])
Passage Length:  776
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 776, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 776, 16])
Passage ques attention dim:  torch.Size([40, 776, 16])
Passage question vectors dim:  torch.Size([40, 776, 200])
Question Passage Similarity dim:  torch.Size([40, 776])
Question passage attention dim:  torch.Size([40, 776])
Final Merged Passage dim:  torch.Size([40, 776, 800])
Modeled Passage dim:  torch.Size([40, 776, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 776, 1000])
Span start logits:  torch.Size([40, 776])
span start probs dim:  torch.Size([40, 776])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 776]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 582, 200])
Passage Length:  582
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 582, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 582, 14])
Passage ques attention dim:  torch.Size([40, 582, 14])
Passage question vectors dim:  torch.Size([40, 582, 200])
Question Passage Similarity dim:  torch.Size([40, 582])
Question passage attention dim:  torch.Size([40, 582])
Final Merged Passage dim:  torch.Size([40, 582, 800])
Modeled Passage dim:  torch.Size([40, 582, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 582, 1000])
Span start logits:  torch.Size([40, 582])
span start probs dim:  torch.Size([40, 582])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 582]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 883, 200])
Passage Length:  883
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 883, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 883, 14])
Passage ques attention dim:  torch.Size([40, 883, 14])
Passage question vectors dim:  torch.Size([40, 883, 200])
Question Passage Similarity dim:  torch.Size([40, 883])
Question passage attention dim:  torch.Size([40, 883])
Final Merged Passage dim:  torch.Size([40, 883, 800])
Modeled Passage dim:  torch.Size([40, 883, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 883, 1000])
Span start logits:  torch.Size([40, 883])
span start probs dim:  torch.Size([40, 883])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 883]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 417, 200])
Passage Length:  417
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 417, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 417, 14])
Passage ques attention dim:  torch.Size([40, 417, 14])
Passage question vectors dim:  torch.Size([40, 417, 200])
Question Passage Similarity dim:  torch.Size([40, 417])
Question passage attention dim:  torch.Size([40, 417])
Final Merged Passage dim:  torch.Size([40, 417, 800])
Modeled Passage dim:  torch.Size([40, 417, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 417, 1000])
Span start logits:  torch.Size([40, 417])
span start probs dim:  torch.Size([40, 417])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 417]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 347, 200])
Passage Length:  347
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 347, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 347, 15])
Passage ques attention dim:  torch.Size([40, 347, 15])
Passage question vectors dim:  torch.Size([40, 347, 200])
Question Passage Similarity dim:  torch.Size([40, 347])
Question passage attention dim:  torch.Size([40, 347])
Final Merged Passage dim:  torch.Size([40, 347, 800])
Modeled Passage dim:  torch.Size([40, 347, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 347, 1000])
Span start logits:  torch.Size([40, 347])
span start probs dim:  torch.Size([40, 347])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 347]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 451, 200])
Passage Length:  451
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 451, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 451, 14])
Passage ques attention dim:  torch.Size([40, 451, 14])
Passage question vectors dim:  torch.Size([40, 451, 200])
Question Passage Similarity dim:  torch.Size([40, 451])
Question passage attention dim:  torch.Size([40, 451])
Final Merged Passage dim:  torch.Size([40, 451, 800])
Modeled Passage dim:  torch.Size([40, 451, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 451, 1000])
Span start logits:  torch.Size([40, 451])
span start probs dim:  torch.Size([40, 451])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 451]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 556, 200])
Passage Length:  556
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 556, 21])
Passage ques attention dim:  torch.Size([40, 556, 21])
Passage question vectors dim:  torch.Size([40, 556, 200])
Question Passage Similarity dim:  torch.Size([40, 556])
Question passage attention dim:  torch.Size([40, 556])
Final Merged Passage dim:  torch.Size([40, 556, 800])
Modeled Passage dim:  torch.Size([40, 556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 556, 1000])
Span start logits:  torch.Size([40, 556])
span start probs dim:  torch.Size([40, 556])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 556]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1190, 200])
Passage Length:  1190
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1190, 11])
Passage ques attention dim:  torch.Size([40, 1190, 11])
Passage question vectors dim:  torch.Size([40, 1190, 200])
Question Passage Similarity dim:  torch.Size([40, 1190])
Question passage attention dim:  torch.Size([40, 1190])
Final Merged Passage dim:  torch.Size([40, 1190, 800])
Modeled Passage dim:  torch.Size([40, 1190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1190, 1000])
Span start logits:  torch.Size([40, 1190])
span start probs dim:  torch.Size([40, 1190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 418, 200])
Passage Length:  418
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 418, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 418, 16])
Passage ques attention dim:  torch.Size([40, 418, 16])
Passage question vectors dim:  torch.Size([40, 418, 200])
Question Passage Similarity dim:  torch.Size([40, 418])
Question passage attention dim:  torch.Size([40, 418])
Final Merged Passage dim:  torch.Size([40, 418, 800])
Modeled Passage dim:  torch.Size([40, 418, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 418, 1000])
Span start logits:  torch.Size([40, 418])
span start probs dim:  torch.Size([40, 418])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 418]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 512, 200])
Passage Length:  512
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 512, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 512, 12])
Passage ques attention dim:  torch.Size([40, 512, 12])
Passage question vectors dim:  torch.Size([40, 512, 200])
Question Passage Similarity dim:  torch.Size([40, 512])
Question passage attention dim:  torch.Size([40, 512])
Final Merged Passage dim:  torch.Size([40, 512, 800])
Modeled Passage dim:  torch.Size([40, 512, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 512, 1000])
Span start logits:  torch.Size([40, 512])
span start probs dim:  torch.Size([40, 512])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 512]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 406, 200])
Passage Length:  406
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 406, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 406, 14])
Passage ques attention dim:  torch.Size([40, 406, 14])
Passage question vectors dim:  torch.Size([40, 406, 200])
Question Passage Similarity dim:  torch.Size([40, 406])
Question passage attention dim:  torch.Size([40, 406])
Final Merged Passage dim:  torch.Size([40, 406, 800])
Modeled Passage dim:  torch.Size([40, 406, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 406, 1000])
Span start logits:  torch.Size([40, 406])
span start probs dim:  torch.Size([40, 406])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 406]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 681, 200])
Passage Length:  681
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 681, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 681, 17])
Passage ques attention dim:  torch.Size([40, 681, 17])
Passage question vectors dim:  torch.Size([40, 681, 200])
Question Passage Similarity dim:  torch.Size([40, 681])
Question passage attention dim:  torch.Size([40, 681])
Final Merged Passage dim:  torch.Size([40, 681, 800])
Modeled Passage dim:  torch.Size([40, 681, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 681, 1000])
Span start logits:  torch.Size([40, 681])
span start probs dim:  torch.Size([40, 681])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 681]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 506, 200])
Passage Length:  506
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 506, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 506, 11])
Passage ques attention dim:  torch.Size([40, 506, 11])
Passage question vectors dim:  torch.Size([40, 506, 200])
Question Passage Similarity dim:  torch.Size([40, 506])
Question passage attention dim:  torch.Size([40, 506])
Final Merged Passage dim:  torch.Size([40, 506, 800])
Modeled Passage dim:  torch.Size([40, 506, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 506, 1000])
Span start logits:  torch.Size([40, 506])
span start probs dim:  torch.Size([40, 506])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 506]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1491, 200])
Passage Length:  1491
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1491, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1491, 15])
Passage ques attention dim:  torch.Size([40, 1491, 15])
Passage question vectors dim:  torch.Size([40, 1491, 200])
Question Passage Similarity dim:  torch.Size([40, 1491])
Question passage attention dim:  torch.Size([40, 1491])
Final Merged Passage dim:  torch.Size([40, 1491, 800])
Modeled Passage dim:  torch.Size([40, 1491, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1491, 1000])
Span start logits:  torch.Size([40, 1491])
span start probs dim:  torch.Size([40, 1491])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1491]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 500, 200])
Passage Length:  500
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 500, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 500, 16])
Passage ques attention dim:  torch.Size([40, 500, 16])
Passage question vectors dim:  torch.Size([40, 500, 200])
Question Passage Similarity dim:  torch.Size([40, 500])
Question passage attention dim:  torch.Size([40, 500])
Final Merged Passage dim:  torch.Size([40, 500, 800])
Modeled Passage dim:  torch.Size([40, 500, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 500, 1000])
Span start logits:  torch.Size([40, 500])
span start probs dim:  torch.Size([40, 500])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 500]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 358, 200])
Passage Length:  358
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 358, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 358, 17])
Passage ques attention dim:  torch.Size([40, 358, 17])
Passage question vectors dim:  torch.Size([40, 358, 200])
Question Passage Similarity dim:  torch.Size([40, 358])
Question passage attention dim:  torch.Size([40, 358])
Final Merged Passage dim:  torch.Size([40, 358, 800])
Modeled Passage dim:  torch.Size([40, 358, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 358, 1000])
Span start logits:  torch.Size([40, 358])
span start probs dim:  torch.Size([40, 358])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 358]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 477, 200])
Passage Length:  477
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 477, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 477, 15])
Passage ques attention dim:  torch.Size([40, 477, 15])
Passage question vectors dim:  torch.Size([40, 477, 200])
Question Passage Similarity dim:  torch.Size([40, 477])
Question passage attention dim:  torch.Size([40, 477])
Final Merged Passage dim:  torch.Size([40, 477, 800])
Modeled Passage dim:  torch.Size([40, 477, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 477, 1000])
Span start logits:  torch.Size([40, 477])
span start probs dim:  torch.Size([40, 477])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 477]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 850, 200])
Passage Length:  850
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 850, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 850, 12])
Passage ques attention dim:  torch.Size([40, 850, 12])
Passage question vectors dim:  torch.Size([40, 850, 200])
Question Passage Similarity dim:  torch.Size([40, 850])
Question passage attention dim:  torch.Size([40, 850])
Final Merged Passage dim:  torch.Size([40, 850, 800])
Modeled Passage dim:  torch.Size([40, 850, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 850, 1000])
Span start logits:  torch.Size([40, 850])
span start probs dim:  torch.Size([40, 850])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 850]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 370, 200])
Passage Length:  370
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 370, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 370, 17])
Passage ques attention dim:  torch.Size([40, 370, 17])
Passage question vectors dim:  torch.Size([40, 370, 200])
Question Passage Similarity dim:  torch.Size([40, 370])
Question passage attention dim:  torch.Size([40, 370])
Final Merged Passage dim:  torch.Size([40, 370, 800])
Modeled Passage dim:  torch.Size([40, 370, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 370, 1000])
Span start logits:  torch.Size([40, 370])
span start probs dim:  torch.Size([40, 370])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 370]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 884, 200])
Passage Length:  884
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 884, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 884, 16])
Passage ques attention dim:  torch.Size([40, 884, 16])
Passage question vectors dim:  torch.Size([40, 884, 200])
Question Passage Similarity dim:  torch.Size([40, 884])
Question passage attention dim:  torch.Size([40, 884])
Final Merged Passage dim:  torch.Size([40, 884, 800])
Modeled Passage dim:  torch.Size([40, 884, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 884, 1000])
Span start logits:  torch.Size([40, 884])
span start probs dim:  torch.Size([40, 884])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 884]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 434, 200])
Passage Length:  434
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 434, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 434, 17])
Passage ques attention dim:  torch.Size([40, 434, 17])
Passage question vectors dim:  torch.Size([40, 434, 200])
Question Passage Similarity dim:  torch.Size([40, 434])
Question passage attention dim:  torch.Size([40, 434])
Final Merged Passage dim:  torch.Size([40, 434, 800])
Modeled Passage dim:  torch.Size([40, 434, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 434, 1000])
Span start logits:  torch.Size([40, 434])
span start probs dim:  torch.Size([40, 434])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 434]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1576, 200])
Passage Length:  1576
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1576, 17])
Passage ques attention dim:  torch.Size([40, 1576, 17])
Passage question vectors dim:  torch.Size([40, 1576, 200])
Question Passage Similarity dim:  torch.Size([40, 1576])
Question passage attention dim:  torch.Size([40, 1576])
Final Merged Passage dim:  torch.Size([40, 1576, 800])
Modeled Passage dim:  torch.Size([40, 1576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1576, 1000])
Span start logits:  torch.Size([40, 1576])
span start probs dim:  torch.Size([40, 1576])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1576]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 759, 200])
Passage Length:  759
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 759, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 759, 12])
Passage ques attention dim:  torch.Size([40, 759, 12])
Passage question vectors dim:  torch.Size([40, 759, 200])
Question Passage Similarity dim:  torch.Size([40, 759])
Question passage attention dim:  torch.Size([40, 759])
Final Merged Passage dim:  torch.Size([40, 759, 800])
Modeled Passage dim:  torch.Size([40, 759, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 759, 1000])
Span start logits:  torch.Size([40, 759])
span start probs dim:  torch.Size([40, 759])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 759]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1331, 200])
Passage Length:  1331
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1331, 16])
Passage ques attention dim:  torch.Size([40, 1331, 16])
Passage question vectors dim:  torch.Size([40, 1331, 200])
Question Passage Similarity dim:  torch.Size([40, 1331])
Question passage attention dim:  torch.Size([40, 1331])
Final Merged Passage dim:  torch.Size([40, 1331, 800])
Modeled Passage dim:  torch.Size([40, 1331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1331, 1000])
Span start logits:  torch.Size([40, 1331])
span start probs dim:  torch.Size([40, 1331])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1331]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 959, 200])
Passage Length:  959
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 959, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 959, 14])
Passage ques attention dim:  torch.Size([40, 959, 14])
Passage question vectors dim:  torch.Size([40, 959, 200])
Question Passage Similarity dim:  torch.Size([40, 959])
Question passage attention dim:  torch.Size([40, 959])
Final Merged Passage dim:  torch.Size([40, 959, 800])
Modeled Passage dim:  torch.Size([40, 959, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 959, 1000])
Span start logits:  torch.Size([40, 959])
span start probs dim:  torch.Size([40, 959])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 959]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 845, 200])
Passage Length:  845
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 845, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 845, 16])
Passage ques attention dim:  torch.Size([40, 845, 16])
Passage question vectors dim:  torch.Size([40, 845, 200])
Question Passage Similarity dim:  torch.Size([40, 845])
Question passage attention dim:  torch.Size([40, 845])
Final Merged Passage dim:  torch.Size([40, 845, 800])
Modeled Passage dim:  torch.Size([40, 845, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 845, 1000])
Span start logits:  torch.Size([40, 845])
span start probs dim:  torch.Size([40, 845])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 845]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1050, 200])
Passage Length:  1050
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1050, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1050, 11])
Passage ques attention dim:  torch.Size([40, 1050, 11])
Passage question vectors dim:  torch.Size([40, 1050, 200])
Question Passage Similarity dim:  torch.Size([40, 1050])
Question passage attention dim:  torch.Size([40, 1050])
Final Merged Passage dim:  torch.Size([40, 1050, 800])
Modeled Passage dim:  torch.Size([40, 1050, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1050, 1000])
Span start logits:  torch.Size([40, 1050])
span start probs dim:  torch.Size([40, 1050])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1050]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1036, 200])
Passage Length:  1036
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1036, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1036, 16])
Passage ques attention dim:  torch.Size([40, 1036, 16])
Passage question vectors dim:  torch.Size([40, 1036, 200])
Question Passage Similarity dim:  torch.Size([40, 1036])
Question passage attention dim:  torch.Size([40, 1036])
Final Merged Passage dim:  torch.Size([40, 1036, 800])
Modeled Passage dim:  torch.Size([40, 1036, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1036, 1000])
Span start logits:  torch.Size([40, 1036])
span start probs dim:  torch.Size([40, 1036])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1036]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 362, 200])
Passage Length:  362
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 362, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 362, 14])
Passage ques attention dim:  torch.Size([40, 362, 14])
Passage question vectors dim:  torch.Size([40, 362, 200])
Question Passage Similarity dim:  torch.Size([40, 362])
Question passage attention dim:  torch.Size([40, 362])
Final Merged Passage dim:  torch.Size([40, 362, 800])
Modeled Passage dim:  torch.Size([40, 362, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 362, 1000])
Span start logits:  torch.Size([40, 362])
span start probs dim:  torch.Size([40, 362])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 362]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 194, 200])
Passage Length:  194
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 194, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 194, 11])
Passage ques attention dim:  torch.Size([40, 194, 11])
Passage question vectors dim:  torch.Size([40, 194, 200])
Question Passage Similarity dim:  torch.Size([40, 194])
Question passage attention dim:  torch.Size([40, 194])
Final Merged Passage dim:  torch.Size([40, 194, 800])
Modeled Passage dim:  torch.Size([40, 194, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 194, 1000])
Span start logits:  torch.Size([40, 194])
span start probs dim:  torch.Size([40, 194])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 194]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 2056, 200])
Passage Length:  2056
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 2056, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2056, 15])
Passage ques attention dim:  torch.Size([40, 2056, 15])
Passage question vectors dim:  torch.Size([40, 2056, 200])
Question Passage Similarity dim:  torch.Size([40, 2056])
Question passage attention dim:  torch.Size([40, 2056])
Final Merged Passage dim:  torch.Size([40, 2056, 800])
Modeled Passage dim:  torch.Size([40, 2056, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2056, 1000])
Span start logits:  torch.Size([40, 2056])
span start probs dim:  torch.Size([40, 2056])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2056]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 563, 200])
Passage Length:  563
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 563, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 563, 12])
Passage ques attention dim:  torch.Size([40, 563, 12])
Passage question vectors dim:  torch.Size([40, 563, 200])
Question Passage Similarity dim:  torch.Size([40, 563])
Question passage attention dim:  torch.Size([40, 563])
Final Merged Passage dim:  torch.Size([40, 563, 800])
Modeled Passage dim:  torch.Size([40, 563, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 563, 1000])
Span start logits:  torch.Size([40, 563])
span start probs dim:  torch.Size([40, 563])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 563]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 439, 200])
Passage Length:  439
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 439, 14])
Passage ques attention dim:  torch.Size([40, 439, 14])
Passage question vectors dim:  torch.Size([40, 439, 200])
Question Passage Similarity dim:  torch.Size([40, 439])
Question passage attention dim:  torch.Size([40, 439])
Final Merged Passage dim:  torch.Size([40, 439, 800])
Modeled Passage dim:  torch.Size([40, 439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 439, 1000])
Span start logits:  torch.Size([40, 439])
span start probs dim:  torch.Size([40, 439])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 439]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 451, 200])
Passage Length:  451
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 451, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 451, 15])
Passage ques attention dim:  torch.Size([40, 451, 15])
Passage question vectors dim:  torch.Size([40, 451, 200])
Question Passage Similarity dim:  torch.Size([40, 451])
Question passage attention dim:  torch.Size([40, 451])
Final Merged Passage dim:  torch.Size([40, 451, 800])
Modeled Passage dim:  torch.Size([40, 451, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 451, 1000])
Span start logits:  torch.Size([40, 451])
span start probs dim:  torch.Size([40, 451])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 451]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 205, 200])
Passage Length:  205
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 205, 17])
Passage ques attention dim:  torch.Size([40, 205, 17])
Passage question vectors dim:  torch.Size([40, 205, 200])
Question Passage Similarity dim:  torch.Size([40, 205])
Question passage attention dim:  torch.Size([40, 205])
Final Merged Passage dim:  torch.Size([40, 205, 800])
Modeled Passage dim:  torch.Size([40, 205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 205, 1000])
Span start logits:  torch.Size([40, 205])
span start probs dim:  torch.Size([40, 205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 721, 200])
Passage Length:  721
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 721, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 721, 11])
Passage ques attention dim:  torch.Size([40, 721, 11])
Passage question vectors dim:  torch.Size([40, 721, 200])
Question Passage Similarity dim:  torch.Size([40, 721])
Question passage attention dim:  torch.Size([40, 721])
Final Merged Passage dim:  torch.Size([40, 721, 800])
Modeled Passage dim:  torch.Size([40, 721, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 721, 1000])
Span start logits:  torch.Size([40, 721])
span start probs dim:  torch.Size([40, 721])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 721]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 625, 200])
Passage Length:  625
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 625, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 625, 16])
Passage ques attention dim:  torch.Size([40, 625, 16])
Passage question vectors dim:  torch.Size([40, 625, 200])
Question Passage Similarity dim:  torch.Size([40, 625])
Question passage attention dim:  torch.Size([40, 625])
Final Merged Passage dim:  torch.Size([40, 625, 800])
Modeled Passage dim:  torch.Size([40, 625, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 625, 1000])
Span start logits:  torch.Size([40, 625])
span start probs dim:  torch.Size([40, 625])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 625]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 390, 200])
Passage Length:  390
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 390, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 390, 16])
Passage ques attention dim:  torch.Size([40, 390, 16])
Passage question vectors dim:  torch.Size([40, 390, 200])
Question Passage Similarity dim:  torch.Size([40, 390])
Question passage attention dim:  torch.Size([40, 390])
Final Merged Passage dim:  torch.Size([40, 390, 800])
Modeled Passage dim:  torch.Size([40, 390, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 390, 1000])
Span start logits:  torch.Size([40, 390])
span start probs dim:  torch.Size([40, 390])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 390]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 800, 200])
Passage Length:  800
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 800, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 800, 17])
Passage ques attention dim:  torch.Size([40, 800, 17])
Passage question vectors dim:  torch.Size([40, 800, 200])
Question Passage Similarity dim:  torch.Size([40, 800])
Question passage attention dim:  torch.Size([40, 800])
Final Merged Passage dim:  torch.Size([40, 800, 800])
Modeled Passage dim:  torch.Size([40, 800, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 800, 1000])
Span start logits:  torch.Size([40, 800])
span start probs dim:  torch.Size([40, 800])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 800]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 876, 200])
Passage Length:  876
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 876, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 876, 14])
Passage ques attention dim:  torch.Size([40, 876, 14])
Passage question vectors dim:  torch.Size([40, 876, 200])
Question Passage Similarity dim:  torch.Size([40, 876])
Question passage attention dim:  torch.Size([40, 876])
Final Merged Passage dim:  torch.Size([40, 876, 800])
Modeled Passage dim:  torch.Size([40, 876, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 876, 1000])
Span start logits:  torch.Size([40, 876])
span start probs dim:  torch.Size([40, 876])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 876]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 687, 200])
Passage Length:  687
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 687, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 687, 22])
Passage ques attention dim:  torch.Size([40, 687, 22])
Passage question vectors dim:  torch.Size([40, 687, 200])
Question Passage Similarity dim:  torch.Size([40, 687])
Question passage attention dim:  torch.Size([40, 687])
Final Merged Passage dim:  torch.Size([40, 687, 800])
Modeled Passage dim:  torch.Size([40, 687, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 687, 1000])
Span start logits:  torch.Size([40, 687])
span start probs dim:  torch.Size([40, 687])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 687]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 946, 200])
Passage Length:  946
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 946, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 946, 15])
Passage ques attention dim:  torch.Size([40, 946, 15])
Passage question vectors dim:  torch.Size([40, 946, 200])
Question Passage Similarity dim:  torch.Size([40, 946])
Question passage attention dim:  torch.Size([40, 946])
Final Merged Passage dim:  torch.Size([40, 946, 800])
Modeled Passage dim:  torch.Size([40, 946, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 946, 1000])
Span start logits:  torch.Size([40, 946])
span start probs dim:  torch.Size([40, 946])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 946]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 575, 200])
Passage Length:  575
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 575, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 575, 14])
Passage ques attention dim:  torch.Size([40, 575, 14])
Passage question vectors dim:  torch.Size([40, 575, 200])
Question Passage Similarity dim:  torch.Size([40, 575])
Question passage attention dim:  torch.Size([40, 575])
Final Merged Passage dim:  torch.Size([40, 575, 800])
Modeled Passage dim:  torch.Size([40, 575, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 575, 1000])
Span start logits:  torch.Size([40, 575])
span start probs dim:  torch.Size([40, 575])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 575]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 462, 12])
Passage ques attention dim:  torch.Size([40, 462, 12])
Passage question vectors dim:  torch.Size([40, 462, 200])
Question Passage Similarity dim:  torch.Size([40, 462])
Question passage attention dim:  torch.Size([40, 462])
Final Merged Passage dim:  torch.Size([40, 462, 800])
Modeled Passage dim:  torch.Size([40, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 462, 1000])
Span start logits:  torch.Size([40, 462])
span start probs dim:  torch.Size([40, 462])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 462]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 399, 200])
Passage Length:  399
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 399, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 399, 12])
Passage ques attention dim:  torch.Size([40, 399, 12])
Passage question vectors dim:  torch.Size([40, 399, 200])
Question Passage Similarity dim:  torch.Size([40, 399])
Question passage attention dim:  torch.Size([40, 399])
Final Merged Passage dim:  torch.Size([40, 399, 800])
Modeled Passage dim:  torch.Size([40, 399, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 399, 1000])
Span start logits:  torch.Size([40, 399])
span start probs dim:  torch.Size([40, 399])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 399]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 936, 200])
Passage Length:  936
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 936, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 936, 24])
Passage ques attention dim:  torch.Size([40, 936, 24])
Passage question vectors dim:  torch.Size([40, 936, 200])
Question Passage Similarity dim:  torch.Size([40, 936])
Question passage attention dim:  torch.Size([40, 936])
Final Merged Passage dim:  torch.Size([40, 936, 800])
Modeled Passage dim:  torch.Size([40, 936, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 936, 1000])
Span start logits:  torch.Size([40, 936])
span start probs dim:  torch.Size([40, 936])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 936]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 598, 200])
Passage Length:  598
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 598, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 598, 15])
Passage ques attention dim:  torch.Size([40, 598, 15])
Passage question vectors dim:  torch.Size([40, 598, 200])
Question Passage Similarity dim:  torch.Size([40, 598])
Question passage attention dim:  torch.Size([40, 598])
Final Merged Passage dim:  torch.Size([40, 598, 800])
Modeled Passage dim:  torch.Size([40, 598, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 598, 1000])
Span start logits:  torch.Size([40, 598])
span start probs dim:  torch.Size([40, 598])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 598]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 967, 18])
Passage ques attention dim:  torch.Size([40, 967, 18])
Passage question vectors dim:  torch.Size([40, 967, 200])
Question Passage Similarity dim:  torch.Size([40, 967])
Question passage attention dim:  torch.Size([40, 967])
Final Merged Passage dim:  torch.Size([40, 967, 800])
Modeled Passage dim:  torch.Size([40, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 967, 1000])
Span start logits:  torch.Size([40, 967])
span start probs dim:  torch.Size([40, 967])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 967]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1243, 200])
Passage Length:  1243
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1243, 15])
Passage ques attention dim:  torch.Size([40, 1243, 15])
Passage question vectors dim:  torch.Size([40, 1243, 200])
Question Passage Similarity dim:  torch.Size([40, 1243])
Question passage attention dim:  torch.Size([40, 1243])
Final Merged Passage dim:  torch.Size([40, 1243, 800])
Modeled Passage dim:  torch.Size([40, 1243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1243, 1000])
Span start logits:  torch.Size([40, 1243])
span start probs dim:  torch.Size([40, 1243])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1243]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1226, 200])
Passage Length:  1226
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1226, 17])
Passage ques attention dim:  torch.Size([40, 1226, 17])
Passage question vectors dim:  torch.Size([40, 1226, 200])
Question Passage Similarity dim:  torch.Size([40, 1226])
Question passage attention dim:  torch.Size([40, 1226])
Final Merged Passage dim:  torch.Size([40, 1226, 800])
Modeled Passage dim:  torch.Size([40, 1226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1226, 1000])
Span start logits:  torch.Size([40, 1226])
span start probs dim:  torch.Size([40, 1226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 852, 200])
Passage Length:  852
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 852, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 852, 12])
Passage ques attention dim:  torch.Size([40, 852, 12])
Passage question vectors dim:  torch.Size([40, 852, 200])
Question Passage Similarity dim:  torch.Size([40, 852])
Question passage attention dim:  torch.Size([40, 852])
Final Merged Passage dim:  torch.Size([40, 852, 800])
Modeled Passage dim:  torch.Size([40, 852, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 852, 1000])
Span start logits:  torch.Size([40, 852])
span start probs dim:  torch.Size([40, 852])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 852]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1542, 200])
Passage Length:  1542
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1542, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1542, 15])
Passage ques attention dim:  torch.Size([40, 1542, 15])
Passage question vectors dim:  torch.Size([40, 1542, 200])
Question Passage Similarity dim:  torch.Size([40, 1542])
Question passage attention dim:  torch.Size([40, 1542])
Final Merged Passage dim:  torch.Size([40, 1542, 800])
Modeled Passage dim:  torch.Size([40, 1542, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1542, 1000])
Span start logits:  torch.Size([40, 1542])
span start probs dim:  torch.Size([40, 1542])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1542]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 600, 200])
Passage Length:  600
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 600, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 600, 14])
Passage ques attention dim:  torch.Size([40, 600, 14])
Passage question vectors dim:  torch.Size([40, 600, 200])
Question Passage Similarity dim:  torch.Size([40, 600])
Question passage attention dim:  torch.Size([40, 600])
Final Merged Passage dim:  torch.Size([40, 600, 800])
Modeled Passage dim:  torch.Size([40, 600, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 600, 1000])
Span start logits:  torch.Size([40, 600])
span start probs dim:  torch.Size([40, 600])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 600]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 212, 200])
Passage Length:  212
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 212, 13])
Passage ques attention dim:  torch.Size([40, 212, 13])
Passage question vectors dim:  torch.Size([40, 212, 200])
Question Passage Similarity dim:  torch.Size([40, 212])
Question passage attention dim:  torch.Size([40, 212])
Final Merged Passage dim:  torch.Size([40, 212, 800])
Modeled Passage dim:  torch.Size([40, 212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 212, 1000])
Span start logits:  torch.Size([40, 212])
span start probs dim:  torch.Size([40, 212])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 212]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 445, 200])
Passage Length:  445
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 445, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 445, 12])
Passage ques attention dim:  torch.Size([40, 445, 12])
Passage question vectors dim:  torch.Size([40, 445, 200])
Question Passage Similarity dim:  torch.Size([40, 445])
Question passage attention dim:  torch.Size([40, 445])
Final Merged Passage dim:  torch.Size([40, 445, 800])
Modeled Passage dim:  torch.Size([40, 445, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 445, 1000])
Span start logits:  torch.Size([40, 445])
span start probs dim:  torch.Size([40, 445])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 445]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 508, 200])
Passage Length:  508
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 508, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 508, 16])
Passage ques attention dim:  torch.Size([40, 508, 16])
Passage question vectors dim:  torch.Size([40, 508, 200])
Question Passage Similarity dim:  torch.Size([40, 508])
Question passage attention dim:  torch.Size([40, 508])
Final Merged Passage dim:  torch.Size([40, 508, 800])
Modeled Passage dim:  torch.Size([40, 508, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 508, 1000])
Span start logits:  torch.Size([40, 508])
span start probs dim:  torch.Size([40, 508])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 508]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 1321, 200])
Passage Length:  1321
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 1321, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1321, 22])
Passage ques attention dim:  torch.Size([40, 1321, 22])
Passage question vectors dim:  torch.Size([40, 1321, 200])
Question Passage Similarity dim:  torch.Size([40, 1321])
Question passage attention dim:  torch.Size([40, 1321])
Final Merged Passage dim:  torch.Size([40, 1321, 800])
Modeled Passage dim:  torch.Size([40, 1321, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1321, 1000])
Span start logits:  torch.Size([40, 1321])
span start probs dim:  torch.Size([40, 1321])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1321]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 588, 17])
Passage ques attention dim:  torch.Size([40, 588, 17])
Passage question vectors dim:  torch.Size([40, 588, 200])
Question Passage Similarity dim:  torch.Size([40, 588])
Question passage attention dim:  torch.Size([40, 588])
Final Merged Passage dim:  torch.Size([40, 588, 800])
Modeled Passage dim:  torch.Size([40, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 588, 1000])
Span start logits:  torch.Size([40, 588])
span start probs dim:  torch.Size([40, 588])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 588]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 40, 200])
Embedded passage dim:  torch.Size([40, 533, 200])
Passage Length:  533
Encoded question dim:  torch.Size([40, 40, 200])
Encoded passage dim:  torch.Size([40, 533, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 533, 40])
Passage ques attention dim:  torch.Size([40, 533, 40])
Passage question vectors dim:  torch.Size([40, 533, 200])
Question Passage Similarity dim:  torch.Size([40, 533])
Question passage attention dim:  torch.Size([40, 533])
Final Merged Passage dim:  torch.Size([40, 533, 800])
Modeled Passage dim:  torch.Size([40, 533, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 533, 1000])
Span start logits:  torch.Size([40, 533])
span start probs dim:  torch.Size([40, 533])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 533]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 555, 200])
Passage Length:  555
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 555, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 555, 15])
Passage ques attention dim:  torch.Size([40, 555, 15])
Passage question vectors dim:  torch.Size([40, 555, 200])
Question Passage Similarity dim:  torch.Size([40, 555])
Question passage attention dim:  torch.Size([40, 555])
Final Merged Passage dim:  torch.Size([40, 555, 800])
Modeled Passage dim:  torch.Size([40, 555, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 555, 1000])
Span start logits:  torch.Size([40, 555])
span start probs dim:  torch.Size([40, 555])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 555]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 438, 200])
Passage Length:  438
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 438, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 438, 22])
Passage ques attention dim:  torch.Size([40, 438, 22])
Passage question vectors dim:  torch.Size([40, 438, 200])
Question Passage Similarity dim:  torch.Size([40, 438])
Question passage attention dim:  torch.Size([40, 438])
Final Merged Passage dim:  torch.Size([40, 438, 800])
Modeled Passage dim:  torch.Size([40, 438, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 438, 1000])
Span start logits:  torch.Size([40, 438])
span start probs dim:  torch.Size([40, 438])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 438]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 864, 200])
Passage Length:  864
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 864, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 864, 15])
Passage ques attention dim:  torch.Size([40, 864, 15])
Passage question vectors dim:  torch.Size([40, 864, 200])
Question Passage Similarity dim:  torch.Size([40, 864])
Question passage attention dim:  torch.Size([40, 864])
Final Merged Passage dim:  torch.Size([40, 864, 800])
Modeled Passage dim:  torch.Size([40, 864, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 864, 1000])
Span start logits:  torch.Size([40, 864])
span start probs dim:  torch.Size([40, 864])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 864]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 802, 200])
Passage Length:  802
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 802, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 802, 14])
Passage ques attention dim:  torch.Size([40, 802, 14])
Passage question vectors dim:  torch.Size([40, 802, 200])
Question Passage Similarity dim:  torch.Size([40, 802])
Question passage attention dim:  torch.Size([40, 802])
Final Merged Passage dim:  torch.Size([40, 802, 800])
Modeled Passage dim:  torch.Size([40, 802, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 802, 1000])
Span start logits:  torch.Size([40, 802])
span start probs dim:  torch.Size([40, 802])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 802]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1930, 200])
Passage Length:  1930
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1930, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1930, 13])
Passage ques attention dim:  torch.Size([40, 1930, 13])
Passage question vectors dim:  torch.Size([40, 1930, 200])
Question Passage Similarity dim:  torch.Size([40, 1930])
Question passage attention dim:  torch.Size([40, 1930])
Final Merged Passage dim:  torch.Size([40, 1930, 800])
Modeled Passage dim:  torch.Size([40, 1930, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1930, 1000])
Span start logits:  torch.Size([40, 1930])
span start probs dim:  torch.Size([40, 1930])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1930]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1320, 200])
Passage Length:  1320
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1320, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1320, 14])
Passage ques attention dim:  torch.Size([40, 1320, 14])
Passage question vectors dim:  torch.Size([40, 1320, 200])
Question Passage Similarity dim:  torch.Size([40, 1320])
Question passage attention dim:  torch.Size([40, 1320])
Final Merged Passage dim:  torch.Size([40, 1320, 800])
Modeled Passage dim:  torch.Size([40, 1320, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1320, 1000])
Span start logits:  torch.Size([40, 1320])
span start probs dim:  torch.Size([40, 1320])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1320]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 654, 200])
Passage Length:  654
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 654, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 654, 13])
Passage ques attention dim:  torch.Size([40, 654, 13])
Passage question vectors dim:  torch.Size([40, 654, 200])
Question Passage Similarity dim:  torch.Size([40, 654])
Question passage attention dim:  torch.Size([40, 654])
Final Merged Passage dim:  torch.Size([40, 654, 800])
Modeled Passage dim:  torch.Size([40, 654, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 654, 1000])
Span start logits:  torch.Size([40, 654])
span start probs dim:  torch.Size([40, 654])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 654]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 596, 200])
Passage Length:  596
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 596, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 596, 15])
Passage ques attention dim:  torch.Size([40, 596, 15])
Passage question vectors dim:  torch.Size([40, 596, 200])
Question Passage Similarity dim:  torch.Size([40, 596])
Question passage attention dim:  torch.Size([40, 596])
Final Merged Passage dim:  torch.Size([40, 596, 800])
Modeled Passage dim:  torch.Size([40, 596, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 596, 1000])
Span start logits:  torch.Size([40, 596])
span start probs dim:  torch.Size([40, 596])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 596]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 997, 200])
Passage Length:  997
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 997, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 997, 13])
Passage ques attention dim:  torch.Size([40, 997, 13])
Passage question vectors dim:  torch.Size([40, 997, 200])
Question Passage Similarity dim:  torch.Size([40, 997])
Question passage attention dim:  torch.Size([40, 997])
Final Merged Passage dim:  torch.Size([40, 997, 800])
Modeled Passage dim:  torch.Size([40, 997, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 997, 1000])
Span start logits:  torch.Size([40, 997])
span start probs dim:  torch.Size([40, 997])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 997]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 208, 200])
Passage Length:  208
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 208, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 208, 18])
Passage ques attention dim:  torch.Size([40, 208, 18])
Passage question vectors dim:  torch.Size([40, 208, 200])
Question Passage Similarity dim:  torch.Size([40, 208])
Question passage attention dim:  torch.Size([40, 208])
Final Merged Passage dim:  torch.Size([40, 208, 800])
Modeled Passage dim:  torch.Size([40, 208, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 208, 1000])
Span start logits:  torch.Size([40, 208])
span start probs dim:  torch.Size([40, 208])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 208]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 935, 200])
Passage Length:  935
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 935, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 935, 11])
Passage ques attention dim:  torch.Size([40, 935, 11])
Passage question vectors dim:  torch.Size([40, 935, 200])
Question Passage Similarity dim:  torch.Size([40, 935])
Question passage attention dim:  torch.Size([40, 935])
Final Merged Passage dim:  torch.Size([40, 935, 800])
Modeled Passage dim:  torch.Size([40, 935, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 935, 1000])
Span start logits:  torch.Size([40, 935])
span start probs dim:  torch.Size([40, 935])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 935]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 758, 200])
Passage Length:  758
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 758, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 758, 15])
Passage ques attention dim:  torch.Size([40, 758, 15])
Passage question vectors dim:  torch.Size([40, 758, 200])
Question Passage Similarity dim:  torch.Size([40, 758])
Question passage attention dim:  torch.Size([40, 758])
Final Merged Passage dim:  torch.Size([40, 758, 800])
Modeled Passage dim:  torch.Size([40, 758, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 758, 1000])
Span start logits:  torch.Size([40, 758])
span start probs dim:  torch.Size([40, 758])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 758]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 947, 200])
Passage Length:  947
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 947, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 947, 13])
Passage ques attention dim:  torch.Size([40, 947, 13])
Passage question vectors dim:  torch.Size([40, 947, 200])
Question Passage Similarity dim:  torch.Size([40, 947])
Question passage attention dim:  torch.Size([40, 947])
Final Merged Passage dim:  torch.Size([40, 947, 800])
Modeled Passage dim:  torch.Size([40, 947, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 947, 1000])
Span start logits:  torch.Size([40, 947])
span start probs dim:  torch.Size([40, 947])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 947]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 921, 200])
Passage Length:  921
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 921, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 921, 16])
Passage ques attention dim:  torch.Size([40, 921, 16])
Passage question vectors dim:  torch.Size([40, 921, 200])
Question Passage Similarity dim:  torch.Size([40, 921])
Question passage attention dim:  torch.Size([40, 921])
Final Merged Passage dim:  torch.Size([40, 921, 800])
Modeled Passage dim:  torch.Size([40, 921, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 921, 1000])
Span start logits:  torch.Size([40, 921])
span start probs dim:  torch.Size([40, 921])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 921]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 669, 200])
Passage Length:  669
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 669, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 669, 16])
Passage ques attention dim:  torch.Size([40, 669, 16])
Passage question vectors dim:  torch.Size([40, 669, 200])
Question Passage Similarity dim:  torch.Size([40, 669])
Question passage attention dim:  torch.Size([40, 669])
Final Merged Passage dim:  torch.Size([40, 669, 800])
Modeled Passage dim:  torch.Size([40, 669, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 669, 1000])
Span start logits:  torch.Size([40, 669])
span start probs dim:  torch.Size([40, 669])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 669]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 800, 200])
Passage Length:  800
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 800, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 800, 16])
Passage ques attention dim:  torch.Size([40, 800, 16])
Passage question vectors dim:  torch.Size([40, 800, 200])
Question Passage Similarity dim:  torch.Size([40, 800])
Question passage attention dim:  torch.Size([40, 800])
Final Merged Passage dim:  torch.Size([40, 800, 800])
Modeled Passage dim:  torch.Size([40, 800, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 800, 1000])
Span start logits:  torch.Size([40, 800])
span start probs dim:  torch.Size([40, 800])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 800]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1061, 200])
Passage Length:  1061
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1061, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1061, 14])
Passage ques attention dim:  torch.Size([40, 1061, 14])
Passage question vectors dim:  torch.Size([40, 1061, 200])
Question Passage Similarity dim:  torch.Size([40, 1061])
Question passage attention dim:  torch.Size([40, 1061])
Final Merged Passage dim:  torch.Size([40, 1061, 800])
Modeled Passage dim:  torch.Size([40, 1061, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1061, 1000])
Span start logits:  torch.Size([40, 1061])
span start probs dim:  torch.Size([40, 1061])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1061]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 635, 200])
Passage Length:  635
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 635, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 635, 13])
Passage ques attention dim:  torch.Size([40, 635, 13])
Passage question vectors dim:  torch.Size([40, 635, 200])
Question Passage Similarity dim:  torch.Size([40, 635])
Question passage attention dim:  torch.Size([40, 635])
Final Merged Passage dim:  torch.Size([40, 635, 800])
Modeled Passage dim:  torch.Size([40, 635, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 635, 1000])
Span start logits:  torch.Size([40, 635])
span start probs dim:  torch.Size([40, 635])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 635]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 912, 200])
Passage Length:  912
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 912, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 912, 15])
Passage ques attention dim:  torch.Size([40, 912, 15])
Passage question vectors dim:  torch.Size([40, 912, 200])
Question Passage Similarity dim:  torch.Size([40, 912])
Question passage attention dim:  torch.Size([40, 912])
Final Merged Passage dim:  torch.Size([40, 912, 800])
Modeled Passage dim:  torch.Size([40, 912, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 912, 1000])
Span start logits:  torch.Size([40, 912])
span start probs dim:  torch.Size([40, 912])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 912]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 954, 200])
Passage Length:  954
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 954, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 954, 14])
Passage ques attention dim:  torch.Size([40, 954, 14])
Passage question vectors dim:  torch.Size([40, 954, 200])
Question Passage Similarity dim:  torch.Size([40, 954])
Question passage attention dim:  torch.Size([40, 954])
Final Merged Passage dim:  torch.Size([40, 954, 800])
Modeled Passage dim:  torch.Size([40, 954, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 954, 1000])
Span start logits:  torch.Size([40, 954])
span start probs dim:  torch.Size([40, 954])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 954]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1235, 200])
Passage Length:  1235
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1235, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1235, 15])
Passage ques attention dim:  torch.Size([40, 1235, 15])
Passage question vectors dim:  torch.Size([40, 1235, 200])
Question Passage Similarity dim:  torch.Size([40, 1235])
Question passage attention dim:  torch.Size([40, 1235])
Final Merged Passage dim:  torch.Size([40, 1235, 800])
Modeled Passage dim:  torch.Size([40, 1235, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1235, 1000])
Span start logits:  torch.Size([40, 1235])
span start probs dim:  torch.Size([40, 1235])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1235]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1254, 200])
Passage Length:  1254
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1254, 15])
Passage ques attention dim:  torch.Size([40, 1254, 15])
Passage question vectors dim:  torch.Size([40, 1254, 200])
Question Passage Similarity dim:  torch.Size([40, 1254])
Question passage attention dim:  torch.Size([40, 1254])
Final Merged Passage dim:  torch.Size([40, 1254, 800])
Modeled Passage dim:  torch.Size([40, 1254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1254, 1000])
Span start logits:  torch.Size([40, 1254])
span start probs dim:  torch.Size([40, 1254])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1254]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 2077, 200])
Passage Length:  2077
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 2077, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2077, 14])
Passage ques attention dim:  torch.Size([40, 2077, 14])
Passage question vectors dim:  torch.Size([40, 2077, 200])
Question Passage Similarity dim:  torch.Size([40, 2077])
Question passage attention dim:  torch.Size([40, 2077])
Final Merged Passage dim:  torch.Size([40, 2077, 800])
Modeled Passage dim:  torch.Size([40, 2077, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2077, 1000])
Span start logits:  torch.Size([40, 2077])
span start probs dim:  torch.Size([40, 2077])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2077]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 369, 200])
Passage Length:  369
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 369, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 369, 13])
Passage ques attention dim:  torch.Size([40, 369, 13])
Passage question vectors dim:  torch.Size([40, 369, 200])
Question Passage Similarity dim:  torch.Size([40, 369])
Question passage attention dim:  torch.Size([40, 369])
Final Merged Passage dim:  torch.Size([40, 369, 800])
Modeled Passage dim:  torch.Size([40, 369, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 369, 1000])
Span start logits:  torch.Size([40, 369])
span start probs dim:  torch.Size([40, 369])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 369]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 465, 200])
Passage Length:  465
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 465, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 465, 17])
Passage ques attention dim:  torch.Size([40, 465, 17])
Passage question vectors dim:  torch.Size([40, 465, 200])
Question Passage Similarity dim:  torch.Size([40, 465])
Question passage attention dim:  torch.Size([40, 465])
Final Merged Passage dim:  torch.Size([40, 465, 800])
Modeled Passage dim:  torch.Size([40, 465, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 465, 1000])
Span start logits:  torch.Size([40, 465])
span start probs dim:  torch.Size([40, 465])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 465]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1390, 200])
Passage Length:  1390
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1390, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1390, 17])
Passage ques attention dim:  torch.Size([40, 1390, 17])
Passage question vectors dim:  torch.Size([40, 1390, 200])
Question Passage Similarity dim:  torch.Size([40, 1390])
Question passage attention dim:  torch.Size([40, 1390])
Final Merged Passage dim:  torch.Size([40, 1390, 800])
Modeled Passage dim:  torch.Size([40, 1390, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1390, 1000])
Span start logits:  torch.Size([40, 1390])
span start probs dim:  torch.Size([40, 1390])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1390]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 493, 200])
Passage Length:  493
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 493, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 493, 15])
Passage ques attention dim:  torch.Size([40, 493, 15])
Passage question vectors dim:  torch.Size([40, 493, 200])
Question Passage Similarity dim:  torch.Size([40, 493])
Question passage attention dim:  torch.Size([40, 493])
Final Merged Passage dim:  torch.Size([40, 493, 800])
Modeled Passage dim:  torch.Size([40, 493, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 493, 1000])
Span start logits:  torch.Size([40, 493])
span start probs dim:  torch.Size([40, 493])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 493]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 280, 200])
Passage Length:  280
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 280, 13])
Passage ques attention dim:  torch.Size([40, 280, 13])
Passage question vectors dim:  torch.Size([40, 280, 200])
Question Passage Similarity dim:  torch.Size([40, 280])
Question passage attention dim:  torch.Size([40, 280])
Final Merged Passage dim:  torch.Size([40, 280, 800])
Modeled Passage dim:  torch.Size([40, 280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 280, 1000])
Span start logits:  torch.Size([40, 280])
span start probs dim:  torch.Size([40, 280])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 280]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1304, 200])
Passage Length:  1304
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1304, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1304, 14])
Passage ques attention dim:  torch.Size([40, 1304, 14])
Passage question vectors dim:  torch.Size([40, 1304, 200])
Question Passage Similarity dim:  torch.Size([40, 1304])
Question passage attention dim:  torch.Size([40, 1304])
Final Merged Passage dim:  torch.Size([40, 1304, 800])
Modeled Passage dim:  torch.Size([40, 1304, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1304, 1000])
Span start logits:  torch.Size([40, 1304])
span start probs dim:  torch.Size([40, 1304])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1304]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 238, 14])
Passage ques attention dim:  torch.Size([40, 238, 14])
Passage question vectors dim:  torch.Size([40, 238, 200])
Question Passage Similarity dim:  torch.Size([40, 238])
Question passage attention dim:  torch.Size([40, 238])
Final Merged Passage dim:  torch.Size([40, 238, 800])
Modeled Passage dim:  torch.Size([40, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 238, 1000])
Span start logits:  torch.Size([40, 238])
span start probs dim:  torch.Size([40, 238])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 238]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 305, 200])
Passage Length:  305
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 305, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 305, 13])
Passage ques attention dim:  torch.Size([40, 305, 13])
Passage question vectors dim:  torch.Size([40, 305, 200])
Question Passage Similarity dim:  torch.Size([40, 305])
Question passage attention dim:  torch.Size([40, 305])
Final Merged Passage dim:  torch.Size([40, 305, 800])
Modeled Passage dim:  torch.Size([40, 305, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 305, 1000])
Span start logits:  torch.Size([40, 305])
span start probs dim:  torch.Size([40, 305])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 305]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 476, 200])
Passage Length:  476
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 476, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 476, 12])
Passage ques attention dim:  torch.Size([40, 476, 12])
Passage question vectors dim:  torch.Size([40, 476, 200])
Question Passage Similarity dim:  torch.Size([40, 476])
Question passage attention dim:  torch.Size([40, 476])
Final Merged Passage dim:  torch.Size([40, 476, 800])
Modeled Passage dim:  torch.Size([40, 476, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 476, 1000])
Span start logits:  torch.Size([40, 476])
span start probs dim:  torch.Size([40, 476])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 476]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 384, 200])
Passage Length:  384
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 384, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 384, 13])
Passage ques attention dim:  torch.Size([40, 384, 13])
Passage question vectors dim:  torch.Size([40, 384, 200])
Question Passage Similarity dim:  torch.Size([40, 384])
Question passage attention dim:  torch.Size([40, 384])
Final Merged Passage dim:  torch.Size([40, 384, 800])
Modeled Passage dim:  torch.Size([40, 384, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 384, 1000])
Span start logits:  torch.Size([40, 384])
span start probs dim:  torch.Size([40, 384])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 384]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 386, 200])
Passage Length:  386
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 386, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 386, 14])
Passage ques attention dim:  torch.Size([40, 386, 14])
Passage question vectors dim:  torch.Size([40, 386, 200])
Question Passage Similarity dim:  torch.Size([40, 386])
Question passage attention dim:  torch.Size([40, 386])
Final Merged Passage dim:  torch.Size([40, 386, 800])
Modeled Passage dim:  torch.Size([40, 386, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 386, 1000])
Span start logits:  torch.Size([40, 386])
span start probs dim:  torch.Size([40, 386])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 386]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 487, 200])
Passage Length:  487
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 487, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 487, 12])
Passage ques attention dim:  torch.Size([40, 487, 12])
Passage question vectors dim:  torch.Size([40, 487, 200])
Question Passage Similarity dim:  torch.Size([40, 487])
Question passage attention dim:  torch.Size([40, 487])
Final Merged Passage dim:  torch.Size([40, 487, 800])
Modeled Passage dim:  torch.Size([40, 487, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 487, 1000])
Span start logits:  torch.Size([40, 487])
span start probs dim:  torch.Size([40, 487])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 487]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 588, 17])
Passage ques attention dim:  torch.Size([40, 588, 17])
Passage question vectors dim:  torch.Size([40, 588, 200])
Question Passage Similarity dim:  torch.Size([40, 588])
Question passage attention dim:  torch.Size([40, 588])
Final Merged Passage dim:  torch.Size([40, 588, 800])
Modeled Passage dim:  torch.Size([40, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 588, 1000])
Span start logits:  torch.Size([40, 588])
span start probs dim:  torch.Size([40, 588])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 588]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 356, 200])
Passage Length:  356
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 356, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 356, 12])
Passage ques attention dim:  torch.Size([40, 356, 12])
Passage question vectors dim:  torch.Size([40, 356, 200])
Question Passage Similarity dim:  torch.Size([40, 356])
Question passage attention dim:  torch.Size([40, 356])
Final Merged Passage dim:  torch.Size([40, 356, 800])
Modeled Passage dim:  torch.Size([40, 356, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 356, 1000])
Span start logits:  torch.Size([40, 356])
span start probs dim:  torch.Size([40, 356])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 356]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1243, 200])
Passage Length:  1243
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1243, 17])
Passage ques attention dim:  torch.Size([40, 1243, 17])
Passage question vectors dim:  torch.Size([40, 1243, 200])
Question Passage Similarity dim:  torch.Size([40, 1243])
Question passage attention dim:  torch.Size([40, 1243])
Final Merged Passage dim:  torch.Size([40, 1243, 800])
Modeled Passage dim:  torch.Size([40, 1243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1243, 1000])
Span start logits:  torch.Size([40, 1243])
span start probs dim:  torch.Size([40, 1243])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1243]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 511, 200])
Passage Length:  511
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 511, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 511, 13])
Passage ques attention dim:  torch.Size([40, 511, 13])
Passage question vectors dim:  torch.Size([40, 511, 200])
Question Passage Similarity dim:  torch.Size([40, 511])
Question passage attention dim:  torch.Size([40, 511])
Final Merged Passage dim:  torch.Size([40, 511, 800])
Modeled Passage dim:  torch.Size([40, 511, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 511, 1000])
Span start logits:  torch.Size([40, 511])
span start probs dim:  torch.Size([40, 511])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 511]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 623, 200])
Passage Length:  623
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 623, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 623, 16])
Passage ques attention dim:  torch.Size([40, 623, 16])
Passage question vectors dim:  torch.Size([40, 623, 200])
Question Passage Similarity dim:  torch.Size([40, 623])
Question passage attention dim:  torch.Size([40, 623])
Final Merged Passage dim:  torch.Size([40, 623, 800])
Modeled Passage dim:  torch.Size([40, 623, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 623, 1000])
Span start logits:  torch.Size([40, 623])
span start probs dim:  torch.Size([40, 623])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 623]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 616, 200])
Passage Length:  616
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 616, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 616, 14])
Passage ques attention dim:  torch.Size([40, 616, 14])
Passage question vectors dim:  torch.Size([40, 616, 200])
Question Passage Similarity dim:  torch.Size([40, 616])
Question passage attention dim:  torch.Size([40, 616])
Final Merged Passage dim:  torch.Size([40, 616, 800])
Modeled Passage dim:  torch.Size([40, 616, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 616, 1000])
Span start logits:  torch.Size([40, 616])
span start probs dim:  torch.Size([40, 616])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 616]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 340, 200])
Passage Length:  340
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 340, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 340, 12])
Passage ques attention dim:  torch.Size([40, 340, 12])
Passage question vectors dim:  torch.Size([40, 340, 200])
Question Passage Similarity dim:  torch.Size([40, 340])
Question passage attention dim:  torch.Size([40, 340])
Final Merged Passage dim:  torch.Size([40, 340, 800])
Modeled Passage dim:  torch.Size([40, 340, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 340, 1000])
Span start logits:  torch.Size([40, 340])
span start probs dim:  torch.Size([40, 340])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 340]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1517, 200])
Passage Length:  1517
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1517, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1517, 15])
Passage ques attention dim:  torch.Size([40, 1517, 15])
Passage question vectors dim:  torch.Size([40, 1517, 200])
Question Passage Similarity dim:  torch.Size([40, 1517])
Question passage attention dim:  torch.Size([40, 1517])
Final Merged Passage dim:  torch.Size([40, 1517, 800])
Modeled Passage dim:  torch.Size([40, 1517, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1517, 1000])
Span start logits:  torch.Size([40, 1517])
span start probs dim:  torch.Size([40, 1517])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1517]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1007, 200])
Passage Length:  1007
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1007, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1007, 15])
Passage ques attention dim:  torch.Size([40, 1007, 15])
Passage question vectors dim:  torch.Size([40, 1007, 200])
Question Passage Similarity dim:  torch.Size([40, 1007])
Question passage attention dim:  torch.Size([40, 1007])
Final Merged Passage dim:  torch.Size([40, 1007, 800])
Modeled Passage dim:  torch.Size([40, 1007, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1007, 1000])
Span start logits:  torch.Size([40, 1007])
span start probs dim:  torch.Size([40, 1007])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1007]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 271, 200])
Passage Length:  271
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 271, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 271, 15])
Passage ques attention dim:  torch.Size([40, 271, 15])
Passage question vectors dim:  torch.Size([40, 271, 200])
Question Passage Similarity dim:  torch.Size([40, 271])
Question passage attention dim:  torch.Size([40, 271])
Final Merged Passage dim:  torch.Size([40, 271, 800])
Modeled Passage dim:  torch.Size([40, 271, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 271, 1000])
Span start logits:  torch.Size([40, 271])
span start probs dim:  torch.Size([40, 271])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 271]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 990, 200])
Passage Length:  990
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 990, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 990, 15])
Passage ques attention dim:  torch.Size([40, 990, 15])
Passage question vectors dim:  torch.Size([40, 990, 200])
Question Passage Similarity dim:  torch.Size([40, 990])
Question passage attention dim:  torch.Size([40, 990])
Final Merged Passage dim:  torch.Size([40, 990, 800])
Modeled Passage dim:  torch.Size([40, 990, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 990, 1000])
Span start logits:  torch.Size([40, 990])
span start probs dim:  torch.Size([40, 990])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 990]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 370, 200])
Passage Length:  370
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 370, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 370, 16])
Passage ques attention dim:  torch.Size([40, 370, 16])
Passage question vectors dim:  torch.Size([40, 370, 200])
Question Passage Similarity dim:  torch.Size([40, 370])
Question passage attention dim:  torch.Size([40, 370])
Final Merged Passage dim:  torch.Size([40, 370, 800])
Modeled Passage dim:  torch.Size([40, 370, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 370, 1000])
Span start logits:  torch.Size([40, 370])
span start probs dim:  torch.Size([40, 370])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 370]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 667, 200])
Passage Length:  667
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 667, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 667, 12])
Passage ques attention dim:  torch.Size([40, 667, 12])
Passage question vectors dim:  torch.Size([40, 667, 200])
Question Passage Similarity dim:  torch.Size([40, 667])
Question passage attention dim:  torch.Size([40, 667])
Final Merged Passage dim:  torch.Size([40, 667, 800])
Modeled Passage dim:  torch.Size([40, 667, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 667, 1000])
Span start logits:  torch.Size([40, 667])
span start probs dim:  torch.Size([40, 667])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 667]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 556, 200])
Passage Length:  556
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 556, 24])
Passage ques attention dim:  torch.Size([40, 556, 24])
Passage question vectors dim:  torch.Size([40, 556, 200])
Question Passage Similarity dim:  torch.Size([40, 556])
Question passage attention dim:  torch.Size([40, 556])
Final Merged Passage dim:  torch.Size([40, 556, 800])
Modeled Passage dim:  torch.Size([40, 556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 556, 1000])
Span start logits:  torch.Size([40, 556])
span start probs dim:  torch.Size([40, 556])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 556]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 957, 200])
Passage Length:  957
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 957, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 957, 14])
Passage ques attention dim:  torch.Size([40, 957, 14])
Passage question vectors dim:  torch.Size([40, 957, 200])
Question Passage Similarity dim:  torch.Size([40, 957])
Question passage attention dim:  torch.Size([40, 957])
Final Merged Passage dim:  torch.Size([40, 957, 800])
Modeled Passage dim:  torch.Size([40, 957, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 957, 1000])
Span start logits:  torch.Size([40, 957])
span start probs dim:  torch.Size([40, 957])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 957]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 684, 200])
Passage Length:  684
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 684, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 684, 20])
Passage ques attention dim:  torch.Size([40, 684, 20])
Passage question vectors dim:  torch.Size([40, 684, 200])
Question Passage Similarity dim:  torch.Size([40, 684])
Question passage attention dim:  torch.Size([40, 684])
Final Merged Passage dim:  torch.Size([40, 684, 800])
Modeled Passage dim:  torch.Size([40, 684, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 684, 1000])
Span start logits:  torch.Size([40, 684])
span start probs dim:  torch.Size([40, 684])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 684]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 485, 200])
Passage Length:  485
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 485, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 485, 17])
Passage ques attention dim:  torch.Size([40, 485, 17])
Passage question vectors dim:  torch.Size([40, 485, 200])
Question Passage Similarity dim:  torch.Size([40, 485])
Question passage attention dim:  torch.Size([40, 485])
Final Merged Passage dim:  torch.Size([40, 485, 800])
Modeled Passage dim:  torch.Size([40, 485, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 485, 1000])
Span start logits:  torch.Size([40, 485])
span start probs dim:  torch.Size([40, 485])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 485]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 575, 200])
Passage Length:  575
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 575, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 575, 13])
Passage ques attention dim:  torch.Size([40, 575, 13])
Passage question vectors dim:  torch.Size([40, 575, 200])
Question Passage Similarity dim:  torch.Size([40, 575])
Question passage attention dim:  torch.Size([40, 575])
Final Merged Passage dim:  torch.Size([40, 575, 800])
Modeled Passage dim:  torch.Size([40, 575, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 575, 1000])
Span start logits:  torch.Size([40, 575])
span start probs dim:  torch.Size([40, 575])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 575]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 718, 200])
Passage Length:  718
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 718, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 718, 17])
Passage ques attention dim:  torch.Size([40, 718, 17])
Passage question vectors dim:  torch.Size([40, 718, 200])
Question Passage Similarity dim:  torch.Size([40, 718])
Question passage attention dim:  torch.Size([40, 718])
Final Merged Passage dim:  torch.Size([40, 718, 800])
Modeled Passage dim:  torch.Size([40, 718, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 718, 1000])
Span start logits:  torch.Size([40, 718])
span start probs dim:  torch.Size([40, 718])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 718]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 607, 200])
Passage Length:  607
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 607, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 607, 12])
Passage ques attention dim:  torch.Size([40, 607, 12])
Passage question vectors dim:  torch.Size([40, 607, 200])
Question Passage Similarity dim:  torch.Size([40, 607])
Question passage attention dim:  torch.Size([40, 607])
Final Merged Passage dim:  torch.Size([40, 607, 800])
Modeled Passage dim:  torch.Size([40, 607, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 607, 1000])
Span start logits:  torch.Size([40, 607])
span start probs dim:  torch.Size([40, 607])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 607]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 515, 200])
Passage Length:  515
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 515, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 515, 13])
Passage ques attention dim:  torch.Size([40, 515, 13])
Passage question vectors dim:  torch.Size([40, 515, 200])
Question Passage Similarity dim:  torch.Size([40, 515])
Question passage attention dim:  torch.Size([40, 515])
Final Merged Passage dim:  torch.Size([40, 515, 800])
Modeled Passage dim:  torch.Size([40, 515, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 515, 1000])
Span start logits:  torch.Size([40, 515])
span start probs dim:  torch.Size([40, 515])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 515]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1446, 200])
Passage Length:  1446
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1446, 17])
Passage ques attention dim:  torch.Size([40, 1446, 17])
Passage question vectors dim:  torch.Size([40, 1446, 200])
Question Passage Similarity dim:  torch.Size([40, 1446])
Question passage attention dim:  torch.Size([40, 1446])
Final Merged Passage dim:  torch.Size([40, 1446, 800])
Modeled Passage dim:  torch.Size([40, 1446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1446, 1000])
Span start logits:  torch.Size([40, 1446])
span start probs dim:  torch.Size([40, 1446])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1446]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 635, 200])
Passage Length:  635
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 635, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 635, 14])
Passage ques attention dim:  torch.Size([40, 635, 14])
Passage question vectors dim:  torch.Size([40, 635, 200])
Question Passage Similarity dim:  torch.Size([40, 635])
Question passage attention dim:  torch.Size([40, 635])
Final Merged Passage dim:  torch.Size([40, 635, 800])
Modeled Passage dim:  torch.Size([40, 635, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 635, 1000])
Span start logits:  torch.Size([40, 635])
span start probs dim:  torch.Size([40, 635])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 635]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1002, 200])
Passage Length:  1002
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1002, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1002, 15])
Passage ques attention dim:  torch.Size([40, 1002, 15])
Passage question vectors dim:  torch.Size([40, 1002, 200])
Question Passage Similarity dim:  torch.Size([40, 1002])
Question passage attention dim:  torch.Size([40, 1002])
Final Merged Passage dim:  torch.Size([40, 1002, 800])
Modeled Passage dim:  torch.Size([40, 1002, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1002, 1000])
Span start logits:  torch.Size([40, 1002])
span start probs dim:  torch.Size([40, 1002])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1002]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 396, 200])
Passage Length:  396
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 396, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 396, 14])
Passage ques attention dim:  torch.Size([40, 396, 14])
Passage question vectors dim:  torch.Size([40, 396, 200])
Question Passage Similarity dim:  torch.Size([40, 396])
Question passage attention dim:  torch.Size([40, 396])
Final Merged Passage dim:  torch.Size([40, 396, 800])
Modeled Passage dim:  torch.Size([40, 396, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 396, 1000])
Span start logits:  torch.Size([40, 396])
span start probs dim:  torch.Size([40, 396])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 396]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 434, 200])
Passage Length:  434
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 434, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 434, 14])
Passage ques attention dim:  torch.Size([40, 434, 14])
Passage question vectors dim:  torch.Size([40, 434, 200])
Question Passage Similarity dim:  torch.Size([40, 434])
Question passage attention dim:  torch.Size([40, 434])
Final Merged Passage dim:  torch.Size([40, 434, 800])
Modeled Passage dim:  torch.Size([40, 434, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 434, 1000])
Span start logits:  torch.Size([40, 434])
span start probs dim:  torch.Size([40, 434])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 434]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 866, 200])
Passage Length:  866
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 866, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 866, 14])
Passage ques attention dim:  torch.Size([40, 866, 14])
Passage question vectors dim:  torch.Size([40, 866, 200])
Question Passage Similarity dim:  torch.Size([40, 866])
Question passage attention dim:  torch.Size([40, 866])
Final Merged Passage dim:  torch.Size([40, 866, 800])
Modeled Passage dim:  torch.Size([40, 866, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 866, 1000])
Span start logits:  torch.Size([40, 866])
span start probs dim:  torch.Size([40, 866])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 866]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 490, 200])
Passage Length:  490
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 490, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 490, 19])
Passage ques attention dim:  torch.Size([40, 490, 19])
Passage question vectors dim:  torch.Size([40, 490, 200])
Question Passage Similarity dim:  torch.Size([40, 490])
Question passage attention dim:  torch.Size([40, 490])
Final Merged Passage dim:  torch.Size([40, 490, 800])
Modeled Passage dim:  torch.Size([40, 490, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 490, 1000])
Span start logits:  torch.Size([40, 490])
span start probs dim:  torch.Size([40, 490])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 490]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 613, 200])
Passage Length:  613
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 613, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 613, 15])
Passage ques attention dim:  torch.Size([40, 613, 15])
Passage question vectors dim:  torch.Size([40, 613, 200])
Question Passage Similarity dim:  torch.Size([40, 613])
Question passage attention dim:  torch.Size([40, 613])
Final Merged Passage dim:  torch.Size([40, 613, 800])
Modeled Passage dim:  torch.Size([40, 613, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 613, 1000])
Span start logits:  torch.Size([40, 613])
span start probs dim:  torch.Size([40, 613])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 613]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 743, 200])
Passage Length:  743
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 743, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 743, 18])
Passage ques attention dim:  torch.Size([40, 743, 18])
Passage question vectors dim:  torch.Size([40, 743, 200])
Question Passage Similarity dim:  torch.Size([40, 743])
Question passage attention dim:  torch.Size([40, 743])
Final Merged Passage dim:  torch.Size([40, 743, 800])
Modeled Passage dim:  torch.Size([40, 743, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 743, 1000])
Span start logits:  torch.Size([40, 743])
span start probs dim:  torch.Size([40, 743])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 743]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1203, 200])
Passage Length:  1203
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1203, 14])
Passage ques attention dim:  torch.Size([40, 1203, 14])
Passage question vectors dim:  torch.Size([40, 1203, 200])
Question Passage Similarity dim:  torch.Size([40, 1203])
Question passage attention dim:  torch.Size([40, 1203])
Final Merged Passage dim:  torch.Size([40, 1203, 800])
Modeled Passage dim:  torch.Size([40, 1203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1203, 1000])
Span start logits:  torch.Size([40, 1203])
span start probs dim:  torch.Size([40, 1203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1053, 200])
Passage Length:  1053
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1053, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1053, 13])
Passage ques attention dim:  torch.Size([40, 1053, 13])
Passage question vectors dim:  torch.Size([40, 1053, 200])
Question Passage Similarity dim:  torch.Size([40, 1053])
Question passage attention dim:  torch.Size([40, 1053])
Final Merged Passage dim:  torch.Size([40, 1053, 800])
Modeled Passage dim:  torch.Size([40, 1053, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1053, 1000])
Span start logits:  torch.Size([40, 1053])
span start probs dim:  torch.Size([40, 1053])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1053]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 420, 200])
Passage Length:  420
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 420, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 420, 13])
Passage ques attention dim:  torch.Size([40, 420, 13])
Passage question vectors dim:  torch.Size([40, 420, 200])
Question Passage Similarity dim:  torch.Size([40, 420])
Question passage attention dim:  torch.Size([40, 420])
Final Merged Passage dim:  torch.Size([40, 420, 800])
Modeled Passage dim:  torch.Size([40, 420, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 420, 1000])
Span start logits:  torch.Size([40, 420])
span start probs dim:  torch.Size([40, 420])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 420]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1212, 200])
Passage Length:  1212
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1212, 18])
Passage ques attention dim:  torch.Size([40, 1212, 18])
Passage question vectors dim:  torch.Size([40, 1212, 200])
Question Passage Similarity dim:  torch.Size([40, 1212])
Question passage attention dim:  torch.Size([40, 1212])
Final Merged Passage dim:  torch.Size([40, 1212, 800])
Modeled Passage dim:  torch.Size([40, 1212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1212, 1000])
Span start logits:  torch.Size([40, 1212])
span start probs dim:  torch.Size([40, 1212])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1212]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 1503, 200])
Passage Length:  1503
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 1503, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1503, 25])
Passage ques attention dim:  torch.Size([40, 1503, 25])
Passage question vectors dim:  torch.Size([40, 1503, 200])
Question Passage Similarity dim:  torch.Size([40, 1503])
Question passage attention dim:  torch.Size([40, 1503])
Final Merged Passage dim:  torch.Size([40, 1503, 800])
Modeled Passage dim:  torch.Size([40, 1503, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1503, 1000])
Span start logits:  torch.Size([40, 1503])
span start probs dim:  torch.Size([40, 1503])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1503]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 768, 200])
Passage Length:  768
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 768, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 768, 13])
Passage ques attention dim:  torch.Size([40, 768, 13])
Passage question vectors dim:  torch.Size([40, 768, 200])
Question Passage Similarity dim:  torch.Size([40, 768])
Question passage attention dim:  torch.Size([40, 768])
Final Merged Passage dim:  torch.Size([40, 768, 800])
Modeled Passage dim:  torch.Size([40, 768, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 768, 1000])
Span start logits:  torch.Size([40, 768])
span start probs dim:  torch.Size([40, 768])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 768]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 943, 200])
Passage Length:  943
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 943, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 943, 15])
Passage ques attention dim:  torch.Size([40, 943, 15])
Passage question vectors dim:  torch.Size([40, 943, 200])
Question Passage Similarity dim:  torch.Size([40, 943])
Question passage attention dim:  torch.Size([40, 943])
Final Merged Passage dim:  torch.Size([40, 943, 800])
Modeled Passage dim:  torch.Size([40, 943, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 943, 1000])
Span start logits:  torch.Size([40, 943])
span start probs dim:  torch.Size([40, 943])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 943]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 318, 200])
Passage Length:  318
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 318, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 318, 14])
Passage ques attention dim:  torch.Size([40, 318, 14])
Passage question vectors dim:  torch.Size([40, 318, 200])
Question Passage Similarity dim:  torch.Size([40, 318])
Question passage attention dim:  torch.Size([40, 318])
Final Merged Passage dim:  torch.Size([40, 318, 800])
Modeled Passage dim:  torch.Size([40, 318, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 318, 1000])
Span start logits:  torch.Size([40, 318])
span start probs dim:  torch.Size([40, 318])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 318]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1279, 200])
Passage Length:  1279
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1279, 13])
Passage ques attention dim:  torch.Size([40, 1279, 13])
Passage question vectors dim:  torch.Size([40, 1279, 200])
Question Passage Similarity dim:  torch.Size([40, 1279])
Question passage attention dim:  torch.Size([40, 1279])
Final Merged Passage dim:  torch.Size([40, 1279, 800])
Modeled Passage dim:  torch.Size([40, 1279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1279, 1000])
Span start logits:  torch.Size([40, 1279])
span start probs dim:  torch.Size([40, 1279])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1279]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 956, 200])
Passage Length:  956
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 956, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 956, 15])
Passage ques attention dim:  torch.Size([40, 956, 15])
Passage question vectors dim:  torch.Size([40, 956, 200])
Question Passage Similarity dim:  torch.Size([40, 956])
Question passage attention dim:  torch.Size([40, 956])
Final Merged Passage dim:  torch.Size([40, 956, 800])
Modeled Passage dim:  torch.Size([40, 956, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 956, 1000])
Span start logits:  torch.Size([40, 956])
span start probs dim:  torch.Size([40, 956])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 956]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1044, 200])
Passage Length:  1044
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1044, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1044, 13])
Passage ques attention dim:  torch.Size([40, 1044, 13])
Passage question vectors dim:  torch.Size([40, 1044, 200])
Question Passage Similarity dim:  torch.Size([40, 1044])
Question passage attention dim:  torch.Size([40, 1044])
Final Merged Passage dim:  torch.Size([40, 1044, 800])
Modeled Passage dim:  torch.Size([40, 1044, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1044, 1000])
Span start logits:  torch.Size([40, 1044])
span start probs dim:  torch.Size([40, 1044])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1044]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 859, 200])
Passage Length:  859
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 859, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 859, 13])
Passage ques attention dim:  torch.Size([40, 859, 13])
Passage question vectors dim:  torch.Size([40, 859, 200])
Question Passage Similarity dim:  torch.Size([40, 859])
Question passage attention dim:  torch.Size([40, 859])
Final Merged Passage dim:  torch.Size([40, 859, 800])
Modeled Passage dim:  torch.Size([40, 859, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 859, 1000])
Span start logits:  torch.Size([40, 859])
span start probs dim:  torch.Size([40, 859])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 859]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 378, 200])
Passage Length:  378
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 378, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 378, 13])
Passage ques attention dim:  torch.Size([40, 378, 13])
Passage question vectors dim:  torch.Size([40, 378, 200])
Question Passage Similarity dim:  torch.Size([40, 378])
Question passage attention dim:  torch.Size([40, 378])
Final Merged Passage dim:  torch.Size([40, 378, 800])
Modeled Passage dim:  torch.Size([40, 378, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 378, 1000])
Span start logits:  torch.Size([40, 378])
span start probs dim:  torch.Size([40, 378])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 378]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 966, 200])
Passage Length:  966
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 966, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 966, 15])
Passage ques attention dim:  torch.Size([40, 966, 15])
Passage question vectors dim:  torch.Size([40, 966, 200])
Question Passage Similarity dim:  torch.Size([40, 966])
Question passage attention dim:  torch.Size([40, 966])
Final Merged Passage dim:  torch.Size([40, 966, 800])
Modeled Passage dim:  torch.Size([40, 966, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 966, 1000])
Span start logits:  torch.Size([40, 966])
span start probs dim:  torch.Size([40, 966])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 966]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1166, 200])
Passage Length:  1166
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1166, 14])
Passage ques attention dim:  torch.Size([40, 1166, 14])
Passage question vectors dim:  torch.Size([40, 1166, 200])
Question Passage Similarity dim:  torch.Size([40, 1166])
Question passage attention dim:  torch.Size([40, 1166])
Final Merged Passage dim:  torch.Size([40, 1166, 800])
Modeled Passage dim:  torch.Size([40, 1166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1166, 1000])
Span start logits:  torch.Size([40, 1166])
span start probs dim:  torch.Size([40, 1166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 469, 200])
Passage Length:  469
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 469, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 469, 15])
Passage ques attention dim:  torch.Size([40, 469, 15])
Passage question vectors dim:  torch.Size([40, 469, 200])
Question Passage Similarity dim:  torch.Size([40, 469])
Question passage attention dim:  torch.Size([40, 469])
Final Merged Passage dim:  torch.Size([40, 469, 800])
Modeled Passage dim:  torch.Size([40, 469, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 469, 1000])
Span start logits:  torch.Size([40, 469])
span start probs dim:  torch.Size([40, 469])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 469]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 367, 200])
Passage Length:  367
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 367, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 367, 12])
Passage ques attention dim:  torch.Size([40, 367, 12])
Passage question vectors dim:  torch.Size([40, 367, 200])
Question Passage Similarity dim:  torch.Size([40, 367])
Question passage attention dim:  torch.Size([40, 367])
Final Merged Passage dim:  torch.Size([40, 367, 800])
Modeled Passage dim:  torch.Size([40, 367, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 367, 1000])
Span start logits:  torch.Size([40, 367])
span start probs dim:  torch.Size([40, 367])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 367]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 821, 200])
Passage Length:  821
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 821, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 821, 13])
Passage ques attention dim:  torch.Size([40, 821, 13])
Passage question vectors dim:  torch.Size([40, 821, 200])
Question Passage Similarity dim:  torch.Size([40, 821])
Question passage attention dim:  torch.Size([40, 821])
Final Merged Passage dim:  torch.Size([40, 821, 800])
Modeled Passage dim:  torch.Size([40, 821, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 821, 1000])
Span start logits:  torch.Size([40, 821])
span start probs dim:  torch.Size([40, 821])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 821]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 490, 200])
Passage Length:  490
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 490, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 490, 14])
Passage ques attention dim:  torch.Size([40, 490, 14])
Passage question vectors dim:  torch.Size([40, 490, 200])
Question Passage Similarity dim:  torch.Size([40, 490])
Question passage attention dim:  torch.Size([40, 490])
Final Merged Passage dim:  torch.Size([40, 490, 800])
Modeled Passage dim:  torch.Size([40, 490, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 490, 1000])
Span start logits:  torch.Size([40, 490])
span start probs dim:  torch.Size([40, 490])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 490]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 568, 200])
Passage Length:  568
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 568, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 568, 16])
Passage ques attention dim:  torch.Size([40, 568, 16])
Passage question vectors dim:  torch.Size([40, 568, 200])
Question Passage Similarity dim:  torch.Size([40, 568])
Question passage attention dim:  torch.Size([40, 568])
Final Merged Passage dim:  torch.Size([40, 568, 800])
Modeled Passage dim:  torch.Size([40, 568, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 568, 1000])
Span start logits:  torch.Size([40, 568])
span start probs dim:  torch.Size([40, 568])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 568]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 672, 200])
Passage Length:  672
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 672, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 672, 16])
Passage ques attention dim:  torch.Size([40, 672, 16])
Passage question vectors dim:  torch.Size([40, 672, 200])
Question Passage Similarity dim:  torch.Size([40, 672])
Question passage attention dim:  torch.Size([40, 672])
Final Merged Passage dim:  torch.Size([40, 672, 800])
Modeled Passage dim:  torch.Size([40, 672, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 672, 1000])
Span start logits:  torch.Size([40, 672])
span start probs dim:  torch.Size([40, 672])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 672]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1217, 200])
Passage Length:  1217
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1217, 18])
Passage ques attention dim:  torch.Size([40, 1217, 18])
Passage question vectors dim:  torch.Size([40, 1217, 200])
Question Passage Similarity dim:  torch.Size([40, 1217])
Question passage attention dim:  torch.Size([40, 1217])
Final Merged Passage dim:  torch.Size([40, 1217, 800])
Modeled Passage dim:  torch.Size([40, 1217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1217, 1000])
Span start logits:  torch.Size([40, 1217])
span start probs dim:  torch.Size([40, 1217])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1217]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 412, 200])
Passage Length:  412
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 412, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 412, 15])
Passage ques attention dim:  torch.Size([40, 412, 15])
Passage question vectors dim:  torch.Size([40, 412, 200])
Question Passage Similarity dim:  torch.Size([40, 412])
Question passage attention dim:  torch.Size([40, 412])
Final Merged Passage dim:  torch.Size([40, 412, 800])
Modeled Passage dim:  torch.Size([40, 412, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 412, 1000])
Span start logits:  torch.Size([40, 412])
span start probs dim:  torch.Size([40, 412])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 412]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 491, 200])
Passage Length:  491
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 491, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 491, 17])
Passage ques attention dim:  torch.Size([40, 491, 17])
Passage question vectors dim:  torch.Size([40, 491, 200])
Question Passage Similarity dim:  torch.Size([40, 491])
Question passage attention dim:  torch.Size([40, 491])
Final Merged Passage dim:  torch.Size([40, 491, 800])
Modeled Passage dim:  torch.Size([40, 491, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 491, 1000])
Span start logits:  torch.Size([40, 491])
span start probs dim:  torch.Size([40, 491])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 491]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 2006, 200])
Passage Length:  2006
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 2006, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2006, 13])
Passage ques attention dim:  torch.Size([40, 2006, 13])
Passage question vectors dim:  torch.Size([40, 2006, 200])
Question Passage Similarity dim:  torch.Size([40, 2006])
Question passage attention dim:  torch.Size([40, 2006])
Final Merged Passage dim:  torch.Size([40, 2006, 800])
Modeled Passage dim:  torch.Size([40, 2006, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2006, 1000])
Span start logits:  torch.Size([40, 2006])
span start probs dim:  torch.Size([40, 2006])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2006]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 14])
Passage ques attention dim:  torch.Size([40, 215, 14])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 443, 200])
Passage Length:  443
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 443, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 443, 13])
Passage ques attention dim:  torch.Size([40, 443, 13])
Passage question vectors dim:  torch.Size([40, 443, 200])
Question Passage Similarity dim:  torch.Size([40, 443])
Question passage attention dim:  torch.Size([40, 443])
Final Merged Passage dim:  torch.Size([40, 443, 800])
Modeled Passage dim:  torch.Size([40, 443, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 443, 1000])
Span start logits:  torch.Size([40, 443])
span start probs dim:  torch.Size([40, 443])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 443]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 488, 200])
Passage Length:  488
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 488, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 488, 11])
Passage ques attention dim:  torch.Size([40, 488, 11])
Passage question vectors dim:  torch.Size([40, 488, 200])
Question Passage Similarity dim:  torch.Size([40, 488])
Question passage attention dim:  torch.Size([40, 488])
Final Merged Passage dim:  torch.Size([40, 488, 800])
Modeled Passage dim:  torch.Size([40, 488, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 488, 1000])
Span start logits:  torch.Size([40, 488])
span start probs dim:  torch.Size([40, 488])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 488]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1061, 200])
Passage Length:  1061
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1061, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1061, 18])
Passage ques attention dim:  torch.Size([40, 1061, 18])
Passage question vectors dim:  torch.Size([40, 1061, 200])
Question Passage Similarity dim:  torch.Size([40, 1061])
Question passage attention dim:  torch.Size([40, 1061])
Final Merged Passage dim:  torch.Size([40, 1061, 800])
Modeled Passage dim:  torch.Size([40, 1061, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1061, 1000])
Span start logits:  torch.Size([40, 1061])
span start probs dim:  torch.Size([40, 1061])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1061]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 776, 200])
Passage Length:  776
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 776, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 776, 15])
Passage ques attention dim:  torch.Size([40, 776, 15])
Passage question vectors dim:  torch.Size([40, 776, 200])
Question Passage Similarity dim:  torch.Size([40, 776])
Question passage attention dim:  torch.Size([40, 776])
Final Merged Passage dim:  torch.Size([40, 776, 800])
Modeled Passage dim:  torch.Size([40, 776, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 776, 1000])
Span start logits:  torch.Size([40, 776])
span start probs dim:  torch.Size([40, 776])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 776]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 347, 200])
Passage Length:  347
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 347, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 347, 13])
Passage ques attention dim:  torch.Size([40, 347, 13])
Passage question vectors dim:  torch.Size([40, 347, 200])
Question Passage Similarity dim:  torch.Size([40, 347])
Question passage attention dim:  torch.Size([40, 347])
Final Merged Passage dim:  torch.Size([40, 347, 800])
Modeled Passage dim:  torch.Size([40, 347, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 347, 1000])
Span start logits:  torch.Size([40, 347])
span start probs dim:  torch.Size([40, 347])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 347]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1801, 200])
Passage Length:  1801
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1801, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1801, 16])
Passage ques attention dim:  torch.Size([40, 1801, 16])
Passage question vectors dim:  torch.Size([40, 1801, 200])
Question Passage Similarity dim:  torch.Size([40, 1801])
Question passage attention dim:  torch.Size([40, 1801])
Final Merged Passage dim:  torch.Size([40, 1801, 800])
Modeled Passage dim:  torch.Size([40, 1801, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1801, 1000])
Span start logits:  torch.Size([40, 1801])
span start probs dim:  torch.Size([40, 1801])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1801]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1841, 200])
Passage Length:  1841
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1841, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1841, 12])
Passage ques attention dim:  torch.Size([40, 1841, 12])
Passage question vectors dim:  torch.Size([40, 1841, 200])
Question Passage Similarity dim:  torch.Size([40, 1841])
Question passage attention dim:  torch.Size([40, 1841])
Final Merged Passage dim:  torch.Size([40, 1841, 800])
Modeled Passage dim:  torch.Size([40, 1841, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1841, 1000])
Span start logits:  torch.Size([40, 1841])
span start probs dim:  torch.Size([40, 1841])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1841]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 894, 200])
Passage Length:  894
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 894, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 894, 14])
Passage ques attention dim:  torch.Size([40, 894, 14])
Passage question vectors dim:  torch.Size([40, 894, 200])
Question Passage Similarity dim:  torch.Size([40, 894])
Question passage attention dim:  torch.Size([40, 894])
Final Merged Passage dim:  torch.Size([40, 894, 800])
Modeled Passage dim:  torch.Size([40, 894, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 894, 1000])
Span start logits:  torch.Size([40, 894])
span start probs dim:  torch.Size([40, 894])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 894]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 479, 200])
Passage Length:  479
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 479, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 479, 12])
Passage ques attention dim:  torch.Size([40, 479, 12])
Passage question vectors dim:  torch.Size([40, 479, 200])
Question Passage Similarity dim:  torch.Size([40, 479])
Question passage attention dim:  torch.Size([40, 479])
Final Merged Passage dim:  torch.Size([40, 479, 800])
Modeled Passage dim:  torch.Size([40, 479, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 479, 1000])
Span start logits:  torch.Size([40, 479])
span start probs dim:  torch.Size([40, 479])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 479]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 274, 200])
Passage Length:  274
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 274, 18])
Passage ques attention dim:  torch.Size([40, 274, 18])
Passage question vectors dim:  torch.Size([40, 274, 200])
Question Passage Similarity dim:  torch.Size([40, 274])
Question passage attention dim:  torch.Size([40, 274])
Final Merged Passage dim:  torch.Size([40, 274, 800])
Modeled Passage dim:  torch.Size([40, 274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 274, 1000])
Span start logits:  torch.Size([40, 274])
span start probs dim:  torch.Size([40, 274])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 274]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 590, 200])
Passage Length:  590
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 590, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 590, 17])
Passage ques attention dim:  torch.Size([40, 590, 17])
Passage question vectors dim:  torch.Size([40, 590, 200])
Question Passage Similarity dim:  torch.Size([40, 590])
Question passage attention dim:  torch.Size([40, 590])
Final Merged Passage dim:  torch.Size([40, 590, 800])
Modeled Passage dim:  torch.Size([40, 590, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 590, 1000])
Span start logits:  torch.Size([40, 590])
span start probs dim:  torch.Size([40, 590])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 590]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 490, 200])
Passage Length:  490
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 490, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 490, 14])
Passage ques attention dim:  torch.Size([40, 490, 14])
Passage question vectors dim:  torch.Size([40, 490, 200])
Question Passage Similarity dim:  torch.Size([40, 490])
Question passage attention dim:  torch.Size([40, 490])
Final Merged Passage dim:  torch.Size([40, 490, 800])
Modeled Passage dim:  torch.Size([40, 490, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 490, 1000])
Span start logits:  torch.Size([40, 490])
span start probs dim:  torch.Size([40, 490])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 490]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 791, 200])
Passage Length:  791
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 791, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 791, 16])
Passage ques attention dim:  torch.Size([40, 791, 16])
Passage question vectors dim:  torch.Size([40, 791, 200])
Question Passage Similarity dim:  torch.Size([40, 791])
Question passage attention dim:  torch.Size([40, 791])
Final Merged Passage dim:  torch.Size([40, 791, 800])
Modeled Passage dim:  torch.Size([40, 791, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 791, 1000])
Span start logits:  torch.Size([40, 791])
span start probs dim:  torch.Size([40, 791])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 791]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 379, 15])
Passage ques attention dim:  torch.Size([40, 379, 15])
Passage question vectors dim:  torch.Size([40, 379, 200])
Question Passage Similarity dim:  torch.Size([40, 379])
Question passage attention dim:  torch.Size([40, 379])
Final Merged Passage dim:  torch.Size([40, 379, 800])
Modeled Passage dim:  torch.Size([40, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 379, 1000])
Span start logits:  torch.Size([40, 379])
span start probs dim:  torch.Size([40, 379])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 379]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 227, 200])
Passage Length:  227
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 227, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 227, 12])
Passage ques attention dim:  torch.Size([40, 227, 12])
Passage question vectors dim:  torch.Size([40, 227, 200])
Question Passage Similarity dim:  torch.Size([40, 227])
Question passage attention dim:  torch.Size([40, 227])
Final Merged Passage dim:  torch.Size([40, 227, 800])
Modeled Passage dim:  torch.Size([40, 227, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 227, 1000])
Span start logits:  torch.Size([40, 227])
span start probs dim:  torch.Size([40, 227])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 227]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 501, 200])
Passage Length:  501
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 501, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 501, 16])
Passage ques attention dim:  torch.Size([40, 501, 16])
Passage question vectors dim:  torch.Size([40, 501, 200])
Question Passage Similarity dim:  torch.Size([40, 501])
Question passage attention dim:  torch.Size([40, 501])
Final Merged Passage dim:  torch.Size([40, 501, 800])
Modeled Passage dim:  torch.Size([40, 501, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 501, 1000])
Span start logits:  torch.Size([40, 501])
span start probs dim:  torch.Size([40, 501])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 501]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 441, 200])
Passage Length:  441
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 441, 17])
Passage ques attention dim:  torch.Size([40, 441, 17])
Passage question vectors dim:  torch.Size([40, 441, 200])
Question Passage Similarity dim:  torch.Size([40, 441])
Question passage attention dim:  torch.Size([40, 441])
Final Merged Passage dim:  torch.Size([40, 441, 800])
Modeled Passage dim:  torch.Size([40, 441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 441, 1000])
Span start logits:  torch.Size([40, 441])
span start probs dim:  torch.Size([40, 441])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 441]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 259, 200])
Passage Length:  259
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 259, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 259, 13])
Passage ques attention dim:  torch.Size([40, 259, 13])
Passage question vectors dim:  torch.Size([40, 259, 200])
Question Passage Similarity dim:  torch.Size([40, 259])
Question passage attention dim:  torch.Size([40, 259])
Final Merged Passage dim:  torch.Size([40, 259, 800])
Modeled Passage dim:  torch.Size([40, 259, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 259, 1000])
Span start logits:  torch.Size([40, 259])
span start probs dim:  torch.Size([40, 259])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 259]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 298, 200])
Passage Length:  298
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 298, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 298, 17])
Passage ques attention dim:  torch.Size([40, 298, 17])
Passage question vectors dim:  torch.Size([40, 298, 200])
Question Passage Similarity dim:  torch.Size([40, 298])
Question passage attention dim:  torch.Size([40, 298])
Final Merged Passage dim:  torch.Size([40, 298, 800])
Modeled Passage dim:  torch.Size([40, 298, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 298, 1000])
Span start logits:  torch.Size([40, 298])
span start probs dim:  torch.Size([40, 298])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 298]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1298, 200])
Passage Length:  1298
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1298, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1298, 14])
Passage ques attention dim:  torch.Size([40, 1298, 14])
Passage question vectors dim:  torch.Size([40, 1298, 200])
Question Passage Similarity dim:  torch.Size([40, 1298])
Question passage attention dim:  torch.Size([40, 1298])
Final Merged Passage dim:  torch.Size([40, 1298, 800])
Modeled Passage dim:  torch.Size([40, 1298, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1298, 1000])
Span start logits:  torch.Size([40, 1298])
span start probs dim:  torch.Size([40, 1298])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1298]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1509, 200])
Passage Length:  1509
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1509, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1509, 14])
Passage ques attention dim:  torch.Size([40, 1509, 14])
Passage question vectors dim:  torch.Size([40, 1509, 200])
Question Passage Similarity dim:  torch.Size([40, 1509])
Question passage attention dim:  torch.Size([40, 1509])
Final Merged Passage dim:  torch.Size([40, 1509, 800])
Modeled Passage dim:  torch.Size([40, 1509, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1509, 1000])
Span start logits:  torch.Size([40, 1509])
span start probs dim:  torch.Size([40, 1509])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1509]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1290, 200])
Passage Length:  1290
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1290, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1290, 15])
Passage ques attention dim:  torch.Size([40, 1290, 15])
Passage question vectors dim:  torch.Size([40, 1290, 200])
Question Passage Similarity dim:  torch.Size([40, 1290])
Question passage attention dim:  torch.Size([40, 1290])
Final Merged Passage dim:  torch.Size([40, 1290, 800])
Modeled Passage dim:  torch.Size([40, 1290, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1290, 1000])
Span start logits:  torch.Size([40, 1290])
span start probs dim:  torch.Size([40, 1290])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1290]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 362, 200])
Passage Length:  362
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 362, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 362, 13])
Passage ques attention dim:  torch.Size([40, 362, 13])
Passage question vectors dim:  torch.Size([40, 362, 200])
Question Passage Similarity dim:  torch.Size([40, 362])
Question passage attention dim:  torch.Size([40, 362])
Final Merged Passage dim:  torch.Size([40, 362, 800])
Modeled Passage dim:  torch.Size([40, 362, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 362, 1000])
Span start logits:  torch.Size([40, 362])
span start probs dim:  torch.Size([40, 362])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 362]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 178, 200])
Passage Length:  178
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 178, 13])
Passage ques attention dim:  torch.Size([40, 178, 13])
Passage question vectors dim:  torch.Size([40, 178, 200])
Question Passage Similarity dim:  torch.Size([40, 178])
Question passage attention dim:  torch.Size([40, 178])
Final Merged Passage dim:  torch.Size([40, 178, 800])
Modeled Passage dim:  torch.Size([40, 178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 178, 1000])
Span start logits:  torch.Size([40, 178])
span start probs dim:  torch.Size([40, 178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 621, 200])
Passage Length:  621
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 621, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 621, 16])
Passage ques attention dim:  torch.Size([40, 621, 16])
Passage question vectors dim:  torch.Size([40, 621, 200])
Question Passage Similarity dim:  torch.Size([40, 621])
Question passage attention dim:  torch.Size([40, 621])
Final Merged Passage dim:  torch.Size([40, 621, 800])
Modeled Passage dim:  torch.Size([40, 621, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 621, 1000])
Span start logits:  torch.Size([40, 621])
span start probs dim:  torch.Size([40, 621])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 621]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 250, 200])
Passage Length:  250
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 250, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 250, 23])
Passage ques attention dim:  torch.Size([40, 250, 23])
Passage question vectors dim:  torch.Size([40, 250, 200])
Question Passage Similarity dim:  torch.Size([40, 250])
Question passage attention dim:  torch.Size([40, 250])
Final Merged Passage dim:  torch.Size([40, 250, 800])
Modeled Passage dim:  torch.Size([40, 250, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 250, 1000])
Span start logits:  torch.Size([40, 250])
span start probs dim:  torch.Size([40, 250])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 250]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 571, 200])
Passage Length:  571
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 571, 12])
Passage ques attention dim:  torch.Size([40, 571, 12])
Passage question vectors dim:  torch.Size([40, 571, 200])
Question Passage Similarity dim:  torch.Size([40, 571])
Question passage attention dim:  torch.Size([40, 571])
Final Merged Passage dim:  torch.Size([40, 571, 800])
Modeled Passage dim:  torch.Size([40, 571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 571, 1000])
Span start logits:  torch.Size([40, 571])
span start probs dim:  torch.Size([40, 571])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 571]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1357, 200])
Passage Length:  1357
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1357, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1357, 17])
Passage ques attention dim:  torch.Size([40, 1357, 17])
Passage question vectors dim:  torch.Size([40, 1357, 200])
Question Passage Similarity dim:  torch.Size([40, 1357])
Question passage attention dim:  torch.Size([40, 1357])
Final Merged Passage dim:  torch.Size([40, 1357, 800])
Modeled Passage dim:  torch.Size([40, 1357, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1357, 1000])
Span start logits:  torch.Size([40, 1357])
span start probs dim:  torch.Size([40, 1357])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1357]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1063, 200])
Passage Length:  1063
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1063, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1063, 15])
Passage ques attention dim:  torch.Size([40, 1063, 15])
Passage question vectors dim:  torch.Size([40, 1063, 200])
Question Passage Similarity dim:  torch.Size([40, 1063])
Question passage attention dim:  torch.Size([40, 1063])
Final Merged Passage dim:  torch.Size([40, 1063, 800])
Modeled Passage dim:  torch.Size([40, 1063, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1063, 1000])
Span start logits:  torch.Size([40, 1063])
span start probs dim:  torch.Size([40, 1063])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1063]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 652, 200])
Passage Length:  652
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 652, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 652, 13])
Passage ques attention dim:  torch.Size([40, 652, 13])
Passage question vectors dim:  torch.Size([40, 652, 200])
Question Passage Similarity dim:  torch.Size([40, 652])
Question passage attention dim:  torch.Size([40, 652])
Final Merged Passage dim:  torch.Size([40, 652, 800])
Modeled Passage dim:  torch.Size([40, 652, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 652, 1000])
Span start logits:  torch.Size([40, 652])
span start probs dim:  torch.Size([40, 652])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 652]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 703, 200])
Passage Length:  703
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 703, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 703, 12])
Passage ques attention dim:  torch.Size([40, 703, 12])
Passage question vectors dim:  torch.Size([40, 703, 200])
Question Passage Similarity dim:  torch.Size([40, 703])
Question passage attention dim:  torch.Size([40, 703])
Final Merged Passage dim:  torch.Size([40, 703, 800])
Modeled Passage dim:  torch.Size([40, 703, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 703, 1000])
Span start logits:  torch.Size([40, 703])
span start probs dim:  torch.Size([40, 703])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 703]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 508, 200])
Passage Length:  508
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 508, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 508, 17])
Passage ques attention dim:  torch.Size([40, 508, 17])
Passage question vectors dim:  torch.Size([40, 508, 200])
Question Passage Similarity dim:  torch.Size([40, 508])
Question passage attention dim:  torch.Size([40, 508])
Final Merged Passage dim:  torch.Size([40, 508, 800])
Modeled Passage dim:  torch.Size([40, 508, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 508, 1000])
Span start logits:  torch.Size([40, 508])
span start probs dim:  torch.Size([40, 508])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 508]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 13])
Passage ques attention dim:  torch.Size([40, 198, 13])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 785, 200])
Passage Length:  785
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 785, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 785, 14])
Passage ques attention dim:  torch.Size([40, 785, 14])
Passage question vectors dim:  torch.Size([40, 785, 200])
Question Passage Similarity dim:  torch.Size([40, 785])
Question passage attention dim:  torch.Size([40, 785])
Final Merged Passage dim:  torch.Size([40, 785, 800])
Modeled Passage dim:  torch.Size([40, 785, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 785, 1000])
Span start logits:  torch.Size([40, 785])
span start probs dim:  torch.Size([40, 785])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 785]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 542, 200])
Passage Length:  542
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 542, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 542, 14])
Passage ques attention dim:  torch.Size([40, 542, 14])
Passage question vectors dim:  torch.Size([40, 542, 200])
Question Passage Similarity dim:  torch.Size([40, 542])
Question passage attention dim:  torch.Size([40, 542])
Final Merged Passage dim:  torch.Size([40, 542, 800])
Modeled Passage dim:  torch.Size([40, 542, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 542, 1000])
Span start logits:  torch.Size([40, 542])
span start probs dim:  torch.Size([40, 542])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 542]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 665, 200])
Passage Length:  665
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 665, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 665, 14])
Passage ques attention dim:  torch.Size([40, 665, 14])
Passage question vectors dim:  torch.Size([40, 665, 200])
Question Passage Similarity dim:  torch.Size([40, 665])
Question passage attention dim:  torch.Size([40, 665])
Final Merged Passage dim:  torch.Size([40, 665, 800])
Modeled Passage dim:  torch.Size([40, 665, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 665, 1000])
Span start logits:  torch.Size([40, 665])
span start probs dim:  torch.Size([40, 665])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 665]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 649, 200])
Passage Length:  649
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 649, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 649, 20])
Passage ques attention dim:  torch.Size([40, 649, 20])
Passage question vectors dim:  torch.Size([40, 649, 200])
Question Passage Similarity dim:  torch.Size([40, 649])
Question passage attention dim:  torch.Size([40, 649])
Final Merged Passage dim:  torch.Size([40, 649, 800])
Modeled Passage dim:  torch.Size([40, 649, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 649, 1000])
Span start logits:  torch.Size([40, 649])
span start probs dim:  torch.Size([40, 649])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 649]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1329, 200])
Passage Length:  1329
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1329, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1329, 14])
Passage ques attention dim:  torch.Size([40, 1329, 14])
Passage question vectors dim:  torch.Size([40, 1329, 200])
Question Passage Similarity dim:  torch.Size([40, 1329])
Question passage attention dim:  torch.Size([40, 1329])
Final Merged Passage dim:  torch.Size([40, 1329, 800])
Modeled Passage dim:  torch.Size([40, 1329, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1329, 1000])
Span start logits:  torch.Size([40, 1329])
span start probs dim:  torch.Size([40, 1329])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1329]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1198, 200])
Passage Length:  1198
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1198, 14])
Passage ques attention dim:  torch.Size([40, 1198, 14])
Passage question vectors dim:  torch.Size([40, 1198, 200])
Question Passage Similarity dim:  torch.Size([40, 1198])
Question passage attention dim:  torch.Size([40, 1198])
Final Merged Passage dim:  torch.Size([40, 1198, 800])
Modeled Passage dim:  torch.Size([40, 1198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1198, 1000])
Span start logits:  torch.Size([40, 1198])
span start probs dim:  torch.Size([40, 1198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 425, 200])
Passage Length:  425
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 425, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 425, 14])
Passage ques attention dim:  torch.Size([40, 425, 14])
Passage question vectors dim:  torch.Size([40, 425, 200])
Question Passage Similarity dim:  torch.Size([40, 425])
Question passage attention dim:  torch.Size([40, 425])
Final Merged Passage dim:  torch.Size([40, 425, 800])
Modeled Passage dim:  torch.Size([40, 425, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 425, 1000])
Span start logits:  torch.Size([40, 425])
span start probs dim:  torch.Size([40, 425])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 425]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 352, 200])
Passage Length:  352
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 352, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 352, 15])
Passage ques attention dim:  torch.Size([40, 352, 15])
Passage question vectors dim:  torch.Size([40, 352, 200])
Question Passage Similarity dim:  torch.Size([40, 352])
Question passage attention dim:  torch.Size([40, 352])
Final Merged Passage dim:  torch.Size([40, 352, 800])
Modeled Passage dim:  torch.Size([40, 352, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 352, 1000])
Span start logits:  torch.Size([40, 352])
span start probs dim:  torch.Size([40, 352])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 352]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1056, 200])
Passage Length:  1056
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1056, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1056, 17])
Passage ques attention dim:  torch.Size([40, 1056, 17])
Passage question vectors dim:  torch.Size([40, 1056, 200])
Question Passage Similarity dim:  torch.Size([40, 1056])
Question passage attention dim:  torch.Size([40, 1056])
Final Merged Passage dim:  torch.Size([40, 1056, 800])
Modeled Passage dim:  torch.Size([40, 1056, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1056, 1000])
Span start logits:  torch.Size([40, 1056])
span start probs dim:  torch.Size([40, 1056])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1056]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 758, 200])
Passage Length:  758
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 758, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 758, 18])
Passage ques attention dim:  torch.Size([40, 758, 18])
Passage question vectors dim:  torch.Size([40, 758, 200])
Question Passage Similarity dim:  torch.Size([40, 758])
Question passage attention dim:  torch.Size([40, 758])
Final Merged Passage dim:  torch.Size([40, 758, 800])
Modeled Passage dim:  torch.Size([40, 758, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 758, 1000])
Span start logits:  torch.Size([40, 758])
span start probs dim:  torch.Size([40, 758])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 758]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 426, 200])
Passage Length:  426
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 426, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 426, 16])
Passage ques attention dim:  torch.Size([40, 426, 16])
Passage question vectors dim:  torch.Size([40, 426, 200])
Question Passage Similarity dim:  torch.Size([40, 426])
Question passage attention dim:  torch.Size([40, 426])
Final Merged Passage dim:  torch.Size([40, 426, 800])
Modeled Passage dim:  torch.Size([40, 426, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 426, 1000])
Span start logits:  torch.Size([40, 426])
span start probs dim:  torch.Size([40, 426])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 426]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1441, 200])
Passage Length:  1441
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1441, 14])
Passage ques attention dim:  torch.Size([40, 1441, 14])
Passage question vectors dim:  torch.Size([40, 1441, 200])
Question Passage Similarity dim:  torch.Size([40, 1441])
Question passage attention dim:  torch.Size([40, 1441])
Final Merged Passage dim:  torch.Size([40, 1441, 800])
Modeled Passage dim:  torch.Size([40, 1441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1441, 1000])
Span start logits:  torch.Size([40, 1441])
span start probs dim:  torch.Size([40, 1441])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1441]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 828, 200])
Passage Length:  828
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 828, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 828, 12])
Passage ques attention dim:  torch.Size([40, 828, 12])
Passage question vectors dim:  torch.Size([40, 828, 200])
Question Passage Similarity dim:  torch.Size([40, 828])
Question passage attention dim:  torch.Size([40, 828])
Final Merged Passage dim:  torch.Size([40, 828, 800])
Modeled Passage dim:  torch.Size([40, 828, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 828, 1000])
Span start logits:  torch.Size([40, 828])
span start probs dim:  torch.Size([40, 828])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 828]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1156, 200])
Passage Length:  1156
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1156, 12])
Passage ques attention dim:  torch.Size([40, 1156, 12])
Passage question vectors dim:  torch.Size([40, 1156, 200])
Question Passage Similarity dim:  torch.Size([40, 1156])
Question passage attention dim:  torch.Size([40, 1156])
Final Merged Passage dim:  torch.Size([40, 1156, 800])
Modeled Passage dim:  torch.Size([40, 1156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1156, 1000])
Span start logits:  torch.Size([40, 1156])
span start probs dim:  torch.Size([40, 1156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1029, 200])
Passage Length:  1029
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1029, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1029, 17])
Passage ques attention dim:  torch.Size([40, 1029, 17])
Passage question vectors dim:  torch.Size([40, 1029, 200])
Question Passage Similarity dim:  torch.Size([40, 1029])
Question passage attention dim:  torch.Size([40, 1029])
Final Merged Passage dim:  torch.Size([40, 1029, 800])
Modeled Passage dim:  torch.Size([40, 1029, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1029, 1000])
Span start logits:  torch.Size([40, 1029])
span start probs dim:  torch.Size([40, 1029])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1029]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 347, 200])
Passage Length:  347
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 347, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 347, 13])
Passage ques attention dim:  torch.Size([40, 347, 13])
Passage question vectors dim:  torch.Size([40, 347, 200])
Question Passage Similarity dim:  torch.Size([40, 347])
Question passage attention dim:  torch.Size([40, 347])
Final Merged Passage dim:  torch.Size([40, 347, 800])
Modeled Passage dim:  torch.Size([40, 347, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 347, 1000])
Span start logits:  torch.Size([40, 347])
span start probs dim:  torch.Size([40, 347])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 347]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1803, 200])
Passage Length:  1803
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1803, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1803, 18])
Passage ques attention dim:  torch.Size([40, 1803, 18])
Passage question vectors dim:  torch.Size([40, 1803, 200])
Question Passage Similarity dim:  torch.Size([40, 1803])
Question passage attention dim:  torch.Size([40, 1803])
Final Merged Passage dim:  torch.Size([40, 1803, 800])
Modeled Passage dim:  torch.Size([40, 1803, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1803, 1000])
Span start logits:  torch.Size([40, 1803])
span start probs dim:  torch.Size([40, 1803])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1803]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 984, 200])
Passage Length:  984
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 984, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 984, 14])
Passage ques attention dim:  torch.Size([40, 984, 14])
Passage question vectors dim:  torch.Size([40, 984, 200])
Question Passage Similarity dim:  torch.Size([40, 984])
Question passage attention dim:  torch.Size([40, 984])
Final Merged Passage dim:  torch.Size([40, 984, 800])
Modeled Passage dim:  torch.Size([40, 984, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 984, 1000])
Span start logits:  torch.Size([40, 984])
span start probs dim:  torch.Size([40, 984])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 984]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 357, 200])
Passage Length:  357
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 357, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 357, 14])
Passage ques attention dim:  torch.Size([40, 357, 14])
Passage question vectors dim:  torch.Size([40, 357, 200])
Question Passage Similarity dim:  torch.Size([40, 357])
Question passage attention dim:  torch.Size([40, 357])
Final Merged Passage dim:  torch.Size([40, 357, 800])
Modeled Passage dim:  torch.Size([40, 357, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 357, 1000])
Span start logits:  torch.Size([40, 357])
span start probs dim:  torch.Size([40, 357])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 357]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 727, 200])
Passage Length:  727
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 727, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 727, 12])
Passage ques attention dim:  torch.Size([40, 727, 12])
Passage question vectors dim:  torch.Size([40, 727, 200])
Question Passage Similarity dim:  torch.Size([40, 727])
Question passage attention dim:  torch.Size([40, 727])
Final Merged Passage dim:  torch.Size([40, 727, 800])
Modeled Passage dim:  torch.Size([40, 727, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 727, 1000])
Span start logits:  torch.Size([40, 727])
span start probs dim:  torch.Size([40, 727])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 727]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1483, 200])
Passage Length:  1483
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1483, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1483, 16])
Passage ques attention dim:  torch.Size([40, 1483, 16])
Passage question vectors dim:  torch.Size([40, 1483, 200])
Question Passage Similarity dim:  torch.Size([40, 1483])
Question passage attention dim:  torch.Size([40, 1483])
Final Merged Passage dim:  torch.Size([40, 1483, 800])
Modeled Passage dim:  torch.Size([40, 1483, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1483, 1000])
Span start logits:  torch.Size([40, 1483])
span start probs dim:  torch.Size([40, 1483])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1483]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 493, 200])
Passage Length:  493
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 493, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 493, 13])
Passage ques attention dim:  torch.Size([40, 493, 13])
Passage question vectors dim:  torch.Size([40, 493, 200])
Question Passage Similarity dim:  torch.Size([40, 493])
Question passage attention dim:  torch.Size([40, 493])
Final Merged Passage dim:  torch.Size([40, 493, 800])
Modeled Passage dim:  torch.Size([40, 493, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 493, 1000])
Span start logits:  torch.Size([40, 493])
span start probs dim:  torch.Size([40, 493])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 493]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 542, 200])
Passage Length:  542
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 542, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 542, 14])
Passage ques attention dim:  torch.Size([40, 542, 14])
Passage question vectors dim:  torch.Size([40, 542, 200])
Question Passage Similarity dim:  torch.Size([40, 542])
Question passage attention dim:  torch.Size([40, 542])
Final Merged Passage dim:  torch.Size([40, 542, 800])
Modeled Passage dim:  torch.Size([40, 542, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 542, 1000])
Span start logits:  torch.Size([40, 542])
span start probs dim:  torch.Size([40, 542])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 542]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 779, 200])
Passage Length:  779
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 779, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 779, 15])
Passage ques attention dim:  torch.Size([40, 779, 15])
Passage question vectors dim:  torch.Size([40, 779, 200])
Question Passage Similarity dim:  torch.Size([40, 779])
Question passage attention dim:  torch.Size([40, 779])
Final Merged Passage dim:  torch.Size([40, 779, 800])
Modeled Passage dim:  torch.Size([40, 779, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 779, 1000])
Span start logits:  torch.Size([40, 779])
span start probs dim:  torch.Size([40, 779])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 779]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 407, 200])
Passage Length:  407
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 407, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 407, 14])
Passage ques attention dim:  torch.Size([40, 407, 14])
Passage question vectors dim:  torch.Size([40, 407, 200])
Question Passage Similarity dim:  torch.Size([40, 407])
Question passage attention dim:  torch.Size([40, 407])
Final Merged Passage dim:  torch.Size([40, 407, 800])
Modeled Passage dim:  torch.Size([40, 407, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 407, 1000])
Span start logits:  torch.Size([40, 407])
span start probs dim:  torch.Size([40, 407])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 407]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 282, 200])
Passage Length:  282
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 282, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 282, 15])
Passage ques attention dim:  torch.Size([40, 282, 15])
Passage question vectors dim:  torch.Size([40, 282, 200])
Question Passage Similarity dim:  torch.Size([40, 282])
Question passage attention dim:  torch.Size([40, 282])
Final Merged Passage dim:  torch.Size([40, 282, 800])
Modeled Passage dim:  torch.Size([40, 282, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 282, 1000])
Span start logits:  torch.Size([40, 282])
span start probs dim:  torch.Size([40, 282])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 282]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 261, 200])
Passage Length:  261
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 261, 14])
Passage ques attention dim:  torch.Size([40, 261, 14])
Passage question vectors dim:  torch.Size([40, 261, 200])
Question Passage Similarity dim:  torch.Size([40, 261])
Question passage attention dim:  torch.Size([40, 261])
Final Merged Passage dim:  torch.Size([40, 261, 800])
Modeled Passage dim:  torch.Size([40, 261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 261, 1000])
Span start logits:  torch.Size([40, 261])
span start probs dim:  torch.Size([40, 261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 261]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 947, 200])
Passage Length:  947
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 947, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 947, 15])
Passage ques attention dim:  torch.Size([40, 947, 15])
Passage question vectors dim:  torch.Size([40, 947, 200])
Question Passage Similarity dim:  torch.Size([40, 947])
Question passage attention dim:  torch.Size([40, 947])
Final Merged Passage dim:  torch.Size([40, 947, 800])
Modeled Passage dim:  torch.Size([40, 947, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 947, 1000])
Span start logits:  torch.Size([40, 947])
span start probs dim:  torch.Size([40, 947])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 947]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 668, 200])
Passage Length:  668
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 668, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 668, 14])
Passage ques attention dim:  torch.Size([40, 668, 14])
Passage question vectors dim:  torch.Size([40, 668, 200])
Question Passage Similarity dim:  torch.Size([40, 668])
Question passage attention dim:  torch.Size([40, 668])
Final Merged Passage dim:  torch.Size([40, 668, 800])
Modeled Passage dim:  torch.Size([40, 668, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 668, 1000])
Span start logits:  torch.Size([40, 668])
span start probs dim:  torch.Size([40, 668])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 668]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 872, 200])
Passage Length:  872
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 872, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 872, 11])
Passage ques attention dim:  torch.Size([40, 872, 11])
Passage question vectors dim:  torch.Size([40, 872, 200])
Question Passage Similarity dim:  torch.Size([40, 872])
Question passage attention dim:  torch.Size([40, 872])
Final Merged Passage dim:  torch.Size([40, 872, 800])
Modeled Passage dim:  torch.Size([40, 872, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 872, 1000])
Span start logits:  torch.Size([40, 872])
span start probs dim:  torch.Size([40, 872])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 872]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 458, 200])
Passage Length:  458
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 458, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 458, 12])
Passage ques attention dim:  torch.Size([40, 458, 12])
Passage question vectors dim:  torch.Size([40, 458, 200])
Question Passage Similarity dim:  torch.Size([40, 458])
Question passage attention dim:  torch.Size([40, 458])
Final Merged Passage dim:  torch.Size([40, 458, 800])
Modeled Passage dim:  torch.Size([40, 458, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 458, 1000])
Span start logits:  torch.Size([40, 458])
span start probs dim:  torch.Size([40, 458])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 458]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 755, 200])
Passage Length:  755
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 755, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 755, 16])
Passage ques attention dim:  torch.Size([40, 755, 16])
Passage question vectors dim:  torch.Size([40, 755, 200])
Question Passage Similarity dim:  torch.Size([40, 755])
Question passage attention dim:  torch.Size([40, 755])
Final Merged Passage dim:  torch.Size([40, 755, 800])
Modeled Passage dim:  torch.Size([40, 755, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 755, 1000])
Span start logits:  torch.Size([40, 755])
span start probs dim:  torch.Size([40, 755])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 755]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1918, 200])
Passage Length:  1918
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1918, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1918, 15])
Passage ques attention dim:  torch.Size([40, 1918, 15])
Passage question vectors dim:  torch.Size([40, 1918, 200])
Question Passage Similarity dim:  torch.Size([40, 1918])
Question passage attention dim:  torch.Size([40, 1918])
Final Merged Passage dim:  torch.Size([40, 1918, 800])
Modeled Passage dim:  torch.Size([40, 1918, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1918, 1000])
Span start logits:  torch.Size([40, 1918])
span start probs dim:  torch.Size([40, 1918])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1918]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1100, 200])
Passage Length:  1100
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1100, 13])
Passage ques attention dim:  torch.Size([40, 1100, 13])
Passage question vectors dim:  torch.Size([40, 1100, 200])
Question Passage Similarity dim:  torch.Size([40, 1100])
Question passage attention dim:  torch.Size([40, 1100])
Final Merged Passage dim:  torch.Size([40, 1100, 800])
Modeled Passage dim:  torch.Size([40, 1100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1100, 1000])
Span start logits:  torch.Size([40, 1100])
span start probs dim:  torch.Size([40, 1100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 427, 200])
Passage Length:  427
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 427, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 427, 17])
Passage ques attention dim:  torch.Size([40, 427, 17])
Passage question vectors dim:  torch.Size([40, 427, 200])
Question Passage Similarity dim:  torch.Size([40, 427])
Question passage attention dim:  torch.Size([40, 427])
Final Merged Passage dim:  torch.Size([40, 427, 800])
Modeled Passage dim:  torch.Size([40, 427, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 427, 1000])
Span start logits:  torch.Size([40, 427])
span start probs dim:  torch.Size([40, 427])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 427]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 348, 200])
Passage Length:  348
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 348, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 348, 11])
Passage ques attention dim:  torch.Size([40, 348, 11])
Passage question vectors dim:  torch.Size([40, 348, 200])
Question Passage Similarity dim:  torch.Size([40, 348])
Question passage attention dim:  torch.Size([40, 348])
Final Merged Passage dim:  torch.Size([40, 348, 800])
Modeled Passage dim:  torch.Size([40, 348, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 348, 1000])
Span start logits:  torch.Size([40, 348])
span start probs dim:  torch.Size([40, 348])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 348]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 647, 200])
Passage Length:  647
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 647, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 647, 17])
Passage ques attention dim:  torch.Size([40, 647, 17])
Passage question vectors dim:  torch.Size([40, 647, 200])
Question Passage Similarity dim:  torch.Size([40, 647])
Question passage attention dim:  torch.Size([40, 647])
Final Merged Passage dim:  torch.Size([40, 647, 800])
Modeled Passage dim:  torch.Size([40, 647, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 647, 1000])
Span start logits:  torch.Size([40, 647])
span start probs dim:  torch.Size([40, 647])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 647]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 682, 200])
Passage Length:  682
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 682, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 682, 13])
Passage ques attention dim:  torch.Size([40, 682, 13])
Passage question vectors dim:  torch.Size([40, 682, 200])
Question Passage Similarity dim:  torch.Size([40, 682])
Question passage attention dim:  torch.Size([40, 682])
Final Merged Passage dim:  torch.Size([40, 682, 800])
Modeled Passage dim:  torch.Size([40, 682, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 682, 1000])
Span start logits:  torch.Size([40, 682])
span start probs dim:  torch.Size([40, 682])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 682]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 498, 200])
Passage Length:  498
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 498, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 498, 22])
Passage ques attention dim:  torch.Size([40, 498, 22])
Passage question vectors dim:  torch.Size([40, 498, 200])
Question Passage Similarity dim:  torch.Size([40, 498])
Question passage attention dim:  torch.Size([40, 498])
Final Merged Passage dim:  torch.Size([40, 498, 800])
Modeled Passage dim:  torch.Size([40, 498, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 498, 1000])
Span start logits:  torch.Size([40, 498])
span start probs dim:  torch.Size([40, 498])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 498]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 422, 200])
Passage Length:  422
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 422, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 422, 13])
Passage ques attention dim:  torch.Size([40, 422, 13])
Passage question vectors dim:  torch.Size([40, 422, 200])
Question Passage Similarity dim:  torch.Size([40, 422])
Question passage attention dim:  torch.Size([40, 422])
Final Merged Passage dim:  torch.Size([40, 422, 800])
Modeled Passage dim:  torch.Size([40, 422, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 422, 1000])
Span start logits:  torch.Size([40, 422])
span start probs dim:  torch.Size([40, 422])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 422]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 860, 200])
Passage Length:  860
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 860, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 860, 16])
Passage ques attention dim:  torch.Size([40, 860, 16])
Passage question vectors dim:  torch.Size([40, 860, 200])
Question Passage Similarity dim:  torch.Size([40, 860])
Question passage attention dim:  torch.Size([40, 860])
Final Merged Passage dim:  torch.Size([40, 860, 800])
Modeled Passage dim:  torch.Size([40, 860, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 860, 1000])
Span start logits:  torch.Size([40, 860])
span start probs dim:  torch.Size([40, 860])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 860]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 902, 200])
Passage Length:  902
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 902, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 902, 15])
Passage ques attention dim:  torch.Size([40, 902, 15])
Passage question vectors dim:  torch.Size([40, 902, 200])
Question Passage Similarity dim:  torch.Size([40, 902])
Question passage attention dim:  torch.Size([40, 902])
Final Merged Passage dim:  torch.Size([40, 902, 800])
Modeled Passage dim:  torch.Size([40, 902, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 902, 1000])
Span start logits:  torch.Size([40, 902])
span start probs dim:  torch.Size([40, 902])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 902]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1265, 200])
Passage Length:  1265
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1265, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1265, 20])
Passage ques attention dim:  torch.Size([40, 1265, 20])
Passage question vectors dim:  torch.Size([40, 1265, 200])
Question Passage Similarity dim:  torch.Size([40, 1265])
Question passage attention dim:  torch.Size([40, 1265])
Final Merged Passage dim:  torch.Size([40, 1265, 800])
Modeled Passage dim:  torch.Size([40, 1265, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1265, 1000])
Span start logits:  torch.Size([40, 1265])
span start probs dim:  torch.Size([40, 1265])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1265]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 426, 200])
Passage Length:  426
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 426, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 426, 32])
Passage ques attention dim:  torch.Size([40, 426, 32])
Passage question vectors dim:  torch.Size([40, 426, 200])
Question Passage Similarity dim:  torch.Size([40, 426])
Question passage attention dim:  torch.Size([40, 426])
Final Merged Passage dim:  torch.Size([40, 426, 800])
Modeled Passage dim:  torch.Size([40, 426, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 426, 1000])
Span start logits:  torch.Size([40, 426])
span start probs dim:  torch.Size([40, 426])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 426]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 621, 200])
Passage Length:  621
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 621, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 621, 14])
Passage ques attention dim:  torch.Size([40, 621, 14])
Passage question vectors dim:  torch.Size([40, 621, 200])
Question Passage Similarity dim:  torch.Size([40, 621])
Question passage attention dim:  torch.Size([40, 621])
Final Merged Passage dim:  torch.Size([40, 621, 800])
Modeled Passage dim:  torch.Size([40, 621, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 621, 1000])
Span start logits:  torch.Size([40, 621])
span start probs dim:  torch.Size([40, 621])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 621]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 406, 200])
Passage Length:  406
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 406, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 406, 14])
Passage ques attention dim:  torch.Size([40, 406, 14])
Passage question vectors dim:  torch.Size([40, 406, 200])
Question Passage Similarity dim:  torch.Size([40, 406])
Question passage attention dim:  torch.Size([40, 406])
Final Merged Passage dim:  torch.Size([40, 406, 800])
Modeled Passage dim:  torch.Size([40, 406, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 406, 1000])
Span start logits:  torch.Size([40, 406])
span start probs dim:  torch.Size([40, 406])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 406]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 401, 200])
Passage Length:  401
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 401, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 401, 15])
Passage ques attention dim:  torch.Size([40, 401, 15])
Passage question vectors dim:  torch.Size([40, 401, 200])
Question Passage Similarity dim:  torch.Size([40, 401])
Question passage attention dim:  torch.Size([40, 401])
Final Merged Passage dim:  torch.Size([40, 401, 800])
Modeled Passage dim:  torch.Size([40, 401, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 401, 1000])
Span start logits:  torch.Size([40, 401])
span start probs dim:  torch.Size([40, 401])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 401]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 372, 200])
Passage Length:  372
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 372, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 372, 12])
Passage ques attention dim:  torch.Size([40, 372, 12])
Passage question vectors dim:  torch.Size([40, 372, 200])
Question Passage Similarity dim:  torch.Size([40, 372])
Question passage attention dim:  torch.Size([40, 372])
Final Merged Passage dim:  torch.Size([40, 372, 800])
Modeled Passage dim:  torch.Size([40, 372, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 372, 1000])
Span start logits:  torch.Size([40, 372])
span start probs dim:  torch.Size([40, 372])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 372]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 743, 200])
Passage Length:  743
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 743, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 743, 14])
Passage ques attention dim:  torch.Size([40, 743, 14])
Passage question vectors dim:  torch.Size([40, 743, 200])
Question Passage Similarity dim:  torch.Size([40, 743])
Question passage attention dim:  torch.Size([40, 743])
Final Merged Passage dim:  torch.Size([40, 743, 800])
Modeled Passage dim:  torch.Size([40, 743, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 743, 1000])
Span start logits:  torch.Size([40, 743])
span start probs dim:  torch.Size([40, 743])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 743]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 844, 200])
Passage Length:  844
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 844, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 844, 14])
Passage ques attention dim:  torch.Size([40, 844, 14])
Passage question vectors dim:  torch.Size([40, 844, 200])
Question Passage Similarity dim:  torch.Size([40, 844])
Question passage attention dim:  torch.Size([40, 844])
Final Merged Passage dim:  torch.Size([40, 844, 800])
Modeled Passage dim:  torch.Size([40, 844, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 844, 1000])
Span start logits:  torch.Size([40, 844])
span start probs dim:  torch.Size([40, 844])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 844]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 410, 200])
Passage Length:  410
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 410, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 410, 13])
Passage ques attention dim:  torch.Size([40, 410, 13])
Passage question vectors dim:  torch.Size([40, 410, 200])
Question Passage Similarity dim:  torch.Size([40, 410])
Question passage attention dim:  torch.Size([40, 410])
Final Merged Passage dim:  torch.Size([40, 410, 800])
Modeled Passage dim:  torch.Size([40, 410, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 410, 1000])
Span start logits:  torch.Size([40, 410])
span start probs dim:  torch.Size([40, 410])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 410]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 958, 200])
Passage Length:  958
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 958, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 958, 15])
Passage ques attention dim:  torch.Size([40, 958, 15])
Passage question vectors dim:  torch.Size([40, 958, 200])
Question Passage Similarity dim:  torch.Size([40, 958])
Question passage attention dim:  torch.Size([40, 958])
Final Merged Passage dim:  torch.Size([40, 958, 800])
Modeled Passage dim:  torch.Size([40, 958, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 958, 1000])
Span start logits:  torch.Size([40, 958])
span start probs dim:  torch.Size([40, 958])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 958]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 587, 200])
Passage Length:  587
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 587, 19])
Passage ques attention dim:  torch.Size([40, 587, 19])
Passage question vectors dim:  torch.Size([40, 587, 200])
Question Passage Similarity dim:  torch.Size([40, 587])
Question passage attention dim:  torch.Size([40, 587])
Final Merged Passage dim:  torch.Size([40, 587, 800])
Modeled Passage dim:  torch.Size([40, 587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 587, 1000])
Span start logits:  torch.Size([40, 587])
span start probs dim:  torch.Size([40, 587])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 587]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 692, 200])
Passage Length:  692
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 692, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 692, 13])
Passage ques attention dim:  torch.Size([40, 692, 13])
Passage question vectors dim:  torch.Size([40, 692, 200])
Question Passage Similarity dim:  torch.Size([40, 692])
Question passage attention dim:  torch.Size([40, 692])
Final Merged Passage dim:  torch.Size([40, 692, 800])
Modeled Passage dim:  torch.Size([40, 692, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 692, 1000])
Span start logits:  torch.Size([40, 692])
span start probs dim:  torch.Size([40, 692])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 692]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 385, 15])
Passage ques attention dim:  torch.Size([40, 385, 15])
Passage question vectors dim:  torch.Size([40, 385, 200])
Question Passage Similarity dim:  torch.Size([40, 385])
Question passage attention dim:  torch.Size([40, 385])
Final Merged Passage dim:  torch.Size([40, 385, 800])
Modeled Passage dim:  torch.Size([40, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 385, 1000])
Span start logits:  torch.Size([40, 385])
span start probs dim:  torch.Size([40, 385])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 385]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 37, 200])
Embedded passage dim:  torch.Size([40, 732, 200])
Passage Length:  732
Encoded question dim:  torch.Size([40, 37, 200])
Encoded passage dim:  torch.Size([40, 732, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 732, 37])
Passage ques attention dim:  torch.Size([40, 732, 37])
Passage question vectors dim:  torch.Size([40, 732, 200])
Question Passage Similarity dim:  torch.Size([40, 732])
Question passage attention dim:  torch.Size([40, 732])
Final Merged Passage dim:  torch.Size([40, 732, 800])
Modeled Passage dim:  torch.Size([40, 732, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 732, 1000])
Span start logits:  torch.Size([40, 732])
span start probs dim:  torch.Size([40, 732])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 732]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 371, 200])
Passage Length:  371
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 371, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 371, 12])
Passage ques attention dim:  torch.Size([40, 371, 12])
Passage question vectors dim:  torch.Size([40, 371, 200])
Question Passage Similarity dim:  torch.Size([40, 371])
Question passage attention dim:  torch.Size([40, 371])
Final Merged Passage dim:  torch.Size([40, 371, 800])
Modeled Passage dim:  torch.Size([40, 371, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 371, 1000])
Span start logits:  torch.Size([40, 371])
span start probs dim:  torch.Size([40, 371])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 371]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 999, 200])
Passage Length:  999
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 999, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 999, 14])
Passage ques attention dim:  torch.Size([40, 999, 14])
Passage question vectors dim:  torch.Size([40, 999, 200])
Question Passage Similarity dim:  torch.Size([40, 999])
Question passage attention dim:  torch.Size([40, 999])
Final Merged Passage dim:  torch.Size([40, 999, 800])
Modeled Passage dim:  torch.Size([40, 999, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 999, 1000])
Span start logits:  torch.Size([40, 999])
span start probs dim:  torch.Size([40, 999])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 999]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1141, 200])
Passage Length:  1141
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1141, 18])
Passage ques attention dim:  torch.Size([40, 1141, 18])
Passage question vectors dim:  torch.Size([40, 1141, 200])
Question Passage Similarity dim:  torch.Size([40, 1141])
Question passage attention dim:  torch.Size([40, 1141])
Final Merged Passage dim:  torch.Size([40, 1141, 800])
Modeled Passage dim:  torch.Size([40, 1141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1141, 1000])
Span start logits:  torch.Size([40, 1141])
span start probs dim:  torch.Size([40, 1141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 556, 200])
Passage Length:  556
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 556, 17])
Passage ques attention dim:  torch.Size([40, 556, 17])
Passage question vectors dim:  torch.Size([40, 556, 200])
Question Passage Similarity dim:  torch.Size([40, 556])
Question passage attention dim:  torch.Size([40, 556])
Final Merged Passage dim:  torch.Size([40, 556, 800])
Modeled Passage dim:  torch.Size([40, 556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 556, 1000])
Span start logits:  torch.Size([40, 556])
span start probs dim:  torch.Size([40, 556])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 556]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 817, 200])
Passage Length:  817
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 817, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 817, 15])
Passage ques attention dim:  torch.Size([40, 817, 15])
Passage question vectors dim:  torch.Size([40, 817, 200])
Question Passage Similarity dim:  torch.Size([40, 817])
Question passage attention dim:  torch.Size([40, 817])
Final Merged Passage dim:  torch.Size([40, 817, 800])
Modeled Passage dim:  torch.Size([40, 817, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 817, 1000])
Span start logits:  torch.Size([40, 817])
span start probs dim:  torch.Size([40, 817])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 817]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 858, 200])
Passage Length:  858
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 858, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 858, 14])
Passage ques attention dim:  torch.Size([40, 858, 14])
Passage question vectors dim:  torch.Size([40, 858, 200])
Question Passage Similarity dim:  torch.Size([40, 858])
Question passage attention dim:  torch.Size([40, 858])
Final Merged Passage dim:  torch.Size([40, 858, 800])
Modeled Passage dim:  torch.Size([40, 858, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 858, 1000])
Span start logits:  torch.Size([40, 858])
span start probs dim:  torch.Size([40, 858])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 858]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 475, 200])
Passage Length:  475
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 475, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 475, 15])
Passage ques attention dim:  torch.Size([40, 475, 15])
Passage question vectors dim:  torch.Size([40, 475, 200])
Question Passage Similarity dim:  torch.Size([40, 475])
Question passage attention dim:  torch.Size([40, 475])
Final Merged Passage dim:  torch.Size([40, 475, 800])
Modeled Passage dim:  torch.Size([40, 475, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 475, 1000])
Span start logits:  torch.Size([40, 475])
span start probs dim:  torch.Size([40, 475])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 475]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 433, 200])
Passage Length:  433
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 433, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 433, 13])
Passage ques attention dim:  torch.Size([40, 433, 13])
Passage question vectors dim:  torch.Size([40, 433, 200])
Question Passage Similarity dim:  torch.Size([40, 433])
Question passage attention dim:  torch.Size([40, 433])
Final Merged Passage dim:  torch.Size([40, 433, 800])
Modeled Passage dim:  torch.Size([40, 433, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 433, 1000])
Span start logits:  torch.Size([40, 433])
span start probs dim:  torch.Size([40, 433])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 433]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 319, 200])
Passage Length:  319
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 319, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 319, 12])
Passage ques attention dim:  torch.Size([40, 319, 12])
Passage question vectors dim:  torch.Size([40, 319, 200])
Question Passage Similarity dim:  torch.Size([40, 319])
Question passage attention dim:  torch.Size([40, 319])
Final Merged Passage dim:  torch.Size([40, 319, 800])
Modeled Passage dim:  torch.Size([40, 319, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 319, 1000])
Span start logits:  torch.Size([40, 319])
span start probs dim:  torch.Size([40, 319])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 319]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 793, 200])
Passage Length:  793
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 793, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 793, 15])
Passage ques attention dim:  torch.Size([40, 793, 15])
Passage question vectors dim:  torch.Size([40, 793, 200])
Question Passage Similarity dim:  torch.Size([40, 793])
Question passage attention dim:  torch.Size([40, 793])
Final Merged Passage dim:  torch.Size([40, 793, 800])
Modeled Passage dim:  torch.Size([40, 793, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 793, 1000])
Span start logits:  torch.Size([40, 793])
span start probs dim:  torch.Size([40, 793])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 793]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 440, 200])
Passage Length:  440
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 440, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 440, 16])
Passage ques attention dim:  torch.Size([40, 440, 16])
Passage question vectors dim:  torch.Size([40, 440, 200])
Question Passage Similarity dim:  torch.Size([40, 440])
Question passage attention dim:  torch.Size([40, 440])
Final Merged Passage dim:  torch.Size([40, 440, 800])
Modeled Passage dim:  torch.Size([40, 440, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 440, 1000])
Span start logits:  torch.Size([40, 440])
span start probs dim:  torch.Size([40, 440])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 440]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 852, 200])
Passage Length:  852
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 852, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 852, 17])
Passage ques attention dim:  torch.Size([40, 852, 17])
Passage question vectors dim:  torch.Size([40, 852, 200])
Question Passage Similarity dim:  torch.Size([40, 852])
Question passage attention dim:  torch.Size([40, 852])
Final Merged Passage dim:  torch.Size([40, 852, 800])
Modeled Passage dim:  torch.Size([40, 852, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 852, 1000])
Span start logits:  torch.Size([40, 852])
span start probs dim:  torch.Size([40, 852])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 852]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1687, 200])
Passage Length:  1687
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1687, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1687, 20])
Passage ques attention dim:  torch.Size([40, 1687, 20])
Passage question vectors dim:  torch.Size([40, 1687, 200])
Question Passage Similarity dim:  torch.Size([40, 1687])
Question passage attention dim:  torch.Size([40, 1687])
Final Merged Passage dim:  torch.Size([40, 1687, 800])
Modeled Passage dim:  torch.Size([40, 1687, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1687, 1000])
Span start logits:  torch.Size([40, 1687])
span start probs dim:  torch.Size([40, 1687])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1687]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 520, 200])
Passage Length:  520
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 520, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 520, 14])
Passage ques attention dim:  torch.Size([40, 520, 14])
Passage question vectors dim:  torch.Size([40, 520, 200])
Question Passage Similarity dim:  torch.Size([40, 520])
Question passage attention dim:  torch.Size([40, 520])
Final Merged Passage dim:  torch.Size([40, 520, 800])
Modeled Passage dim:  torch.Size([40, 520, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 520, 1000])
Span start logits:  torch.Size([40, 520])
span start probs dim:  torch.Size([40, 520])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 520]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 560, 200])
Passage Length:  560
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 560, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 560, 12])
Passage ques attention dim:  torch.Size([40, 560, 12])
Passage question vectors dim:  torch.Size([40, 560, 200])
Question Passage Similarity dim:  torch.Size([40, 560])
Question passage attention dim:  torch.Size([40, 560])
Final Merged Passage dim:  torch.Size([40, 560, 800])
Modeled Passage dim:  torch.Size([40, 560, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 560, 1000])
Span start logits:  torch.Size([40, 560])
span start probs dim:  torch.Size([40, 560])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 560]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1015, 200])
Passage Length:  1015
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1015, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1015, 15])
Passage ques attention dim:  torch.Size([40, 1015, 15])
Passage question vectors dim:  torch.Size([40, 1015, 200])
Question Passage Similarity dim:  torch.Size([40, 1015])
Question passage attention dim:  torch.Size([40, 1015])
Final Merged Passage dim:  torch.Size([40, 1015, 800])
Modeled Passage dim:  torch.Size([40, 1015, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1015, 1000])
Span start logits:  torch.Size([40, 1015])
span start probs dim:  torch.Size([40, 1015])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1015]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1125, 200])
Passage Length:  1125
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1125, 18])
Passage ques attention dim:  torch.Size([40, 1125, 18])
Passage question vectors dim:  torch.Size([40, 1125, 200])
Question Passage Similarity dim:  torch.Size([40, 1125])
Question passage attention dim:  torch.Size([40, 1125])
Final Merged Passage dim:  torch.Size([40, 1125, 800])
Modeled Passage dim:  torch.Size([40, 1125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1125, 1000])
Span start logits:  torch.Size([40, 1125])
span start probs dim:  torch.Size([40, 1125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 872, 200])
Passage Length:  872
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 872, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 872, 14])
Passage ques attention dim:  torch.Size([40, 872, 14])
Passage question vectors dim:  torch.Size([40, 872, 200])
Question Passage Similarity dim:  torch.Size([40, 872])
Question passage attention dim:  torch.Size([40, 872])
Final Merged Passage dim:  torch.Size([40, 872, 800])
Modeled Passage dim:  torch.Size([40, 872, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 872, 1000])
Span start logits:  torch.Size([40, 872])
span start probs dim:  torch.Size([40, 872])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 872]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1015, 200])
Passage Length:  1015
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1015, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1015, 14])
Passage ques attention dim:  torch.Size([40, 1015, 14])
Passage question vectors dim:  torch.Size([40, 1015, 200])
Question Passage Similarity dim:  torch.Size([40, 1015])
Question passage attention dim:  torch.Size([40, 1015])
Final Merged Passage dim:  torch.Size([40, 1015, 800])
Modeled Passage dim:  torch.Size([40, 1015, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1015, 1000])
Span start logits:  torch.Size([40, 1015])
span start probs dim:  torch.Size([40, 1015])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1015]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1048, 200])
Passage Length:  1048
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1048, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1048, 13])
Passage ques attention dim:  torch.Size([40, 1048, 13])
Passage question vectors dim:  torch.Size([40, 1048, 200])
Question Passage Similarity dim:  torch.Size([40, 1048])
Question passage attention dim:  torch.Size([40, 1048])
Final Merged Passage dim:  torch.Size([40, 1048, 800])
Modeled Passage dim:  torch.Size([40, 1048, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1048, 1000])
Span start logits:  torch.Size([40, 1048])
span start probs dim:  torch.Size([40, 1048])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1048]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1190, 200])
Passage Length:  1190
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1190, 16])
Passage ques attention dim:  torch.Size([40, 1190, 16])
Passage question vectors dim:  torch.Size([40, 1190, 200])
Question Passage Similarity dim:  torch.Size([40, 1190])
Question passage attention dim:  torch.Size([40, 1190])
Final Merged Passage dim:  torch.Size([40, 1190, 800])
Modeled Passage dim:  torch.Size([40, 1190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1190, 1000])
Span start logits:  torch.Size([40, 1190])
span start probs dim:  torch.Size([40, 1190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 655, 200])
Passage Length:  655
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 655, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 655, 14])
Passage ques attention dim:  torch.Size([40, 655, 14])
Passage question vectors dim:  torch.Size([40, 655, 200])
Question Passage Similarity dim:  torch.Size([40, 655])
Question passage attention dim:  torch.Size([40, 655])
Final Merged Passage dim:  torch.Size([40, 655, 800])
Modeled Passage dim:  torch.Size([40, 655, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 655, 1000])
Span start logits:  torch.Size([40, 655])
span start probs dim:  torch.Size([40, 655])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 655]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1181, 200])
Passage Length:  1181
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1181, 17])
Passage ques attention dim:  torch.Size([40, 1181, 17])
Passage question vectors dim:  torch.Size([40, 1181, 200])
Question Passage Similarity dim:  torch.Size([40, 1181])
Question passage attention dim:  torch.Size([40, 1181])
Final Merged Passage dim:  torch.Size([40, 1181, 800])
Modeled Passage dim:  torch.Size([40, 1181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1181, 1000])
Span start logits:  torch.Size([40, 1181])
span start probs dim:  torch.Size([40, 1181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1114, 200])
Passage Length:  1114
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1114, 14])
Passage ques attention dim:  torch.Size([40, 1114, 14])
Passage question vectors dim:  torch.Size([40, 1114, 200])
Question Passage Similarity dim:  torch.Size([40, 1114])
Question passage attention dim:  torch.Size([40, 1114])
Final Merged Passage dim:  torch.Size([40, 1114, 800])
Modeled Passage dim:  torch.Size([40, 1114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1114, 1000])
Span start logits:  torch.Size([40, 1114])
span start probs dim:  torch.Size([40, 1114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 434, 200])
Passage Length:  434
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 434, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 434, 13])
Passage ques attention dim:  torch.Size([40, 434, 13])
Passage question vectors dim:  torch.Size([40, 434, 200])
Question Passage Similarity dim:  torch.Size([40, 434])
Question passage attention dim:  torch.Size([40, 434])
Final Merged Passage dim:  torch.Size([40, 434, 800])
Modeled Passage dim:  torch.Size([40, 434, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 434, 1000])
Span start logits:  torch.Size([40, 434])
span start probs dim:  torch.Size([40, 434])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 434]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 416, 200])
Passage Length:  416
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 416, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 416, 17])
Passage ques attention dim:  torch.Size([40, 416, 17])
Passage question vectors dim:  torch.Size([40, 416, 200])
Question Passage Similarity dim:  torch.Size([40, 416])
Question passage attention dim:  torch.Size([40, 416])
Final Merged Passage dim:  torch.Size([40, 416, 800])
Modeled Passage dim:  torch.Size([40, 416, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 416, 1000])
Span start logits:  torch.Size([40, 416])
span start probs dim:  torch.Size([40, 416])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 416]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 613, 200])
Passage Length:  613
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 613, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 613, 20])
Passage ques attention dim:  torch.Size([40, 613, 20])
Passage question vectors dim:  torch.Size([40, 613, 200])
Question Passage Similarity dim:  torch.Size([40, 613])
Question passage attention dim:  torch.Size([40, 613])
Final Merged Passage dim:  torch.Size([40, 613, 800])
Modeled Passage dim:  torch.Size([40, 613, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 613, 1000])
Span start logits:  torch.Size([40, 613])
span start probs dim:  torch.Size([40, 613])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 613]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 288, 200])
Passage Length:  288
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 288, 13])
Passage ques attention dim:  torch.Size([40, 288, 13])
Passage question vectors dim:  torch.Size([40, 288, 200])
Question Passage Similarity dim:  torch.Size([40, 288])
Question passage attention dim:  torch.Size([40, 288])
Final Merged Passage dim:  torch.Size([40, 288, 800])
Modeled Passage dim:  torch.Size([40, 288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 288, 1000])
Span start logits:  torch.Size([40, 288])
span start probs dim:  torch.Size([40, 288])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 288]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 273, 16])
Passage ques attention dim:  torch.Size([40, 273, 16])
Passage question vectors dim:  torch.Size([40, 273, 200])
Question Passage Similarity dim:  torch.Size([40, 273])
Question passage attention dim:  torch.Size([40, 273])
Final Merged Passage dim:  torch.Size([40, 273, 800])
Modeled Passage dim:  torch.Size([40, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 273, 1000])
Span start logits:  torch.Size([40, 273])
span start probs dim:  torch.Size([40, 273])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 273]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1485, 200])
Passage Length:  1485
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1485, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1485, 13])
Passage ques attention dim:  torch.Size([40, 1485, 13])
Passage question vectors dim:  torch.Size([40, 1485, 200])
Question Passage Similarity dim:  torch.Size([40, 1485])
Question passage attention dim:  torch.Size([40, 1485])
Final Merged Passage dim:  torch.Size([40, 1485, 800])
Modeled Passage dim:  torch.Size([40, 1485, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1485, 1000])
Span start logits:  torch.Size([40, 1485])
span start probs dim:  torch.Size([40, 1485])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1485]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 762, 200])
Passage Length:  762
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 762, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 762, 13])
Passage ques attention dim:  torch.Size([40, 762, 13])
Passage question vectors dim:  torch.Size([40, 762, 200])
Question Passage Similarity dim:  torch.Size([40, 762])
Question passage attention dim:  torch.Size([40, 762])
Final Merged Passage dim:  torch.Size([40, 762, 800])
Modeled Passage dim:  torch.Size([40, 762, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 762, 1000])
Span start logits:  torch.Size([40, 762])
span start probs dim:  torch.Size([40, 762])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 762]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1111, 200])
Passage Length:  1111
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1111, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1111, 20])
Passage ques attention dim:  torch.Size([40, 1111, 20])
Passage question vectors dim:  torch.Size([40, 1111, 200])
Question Passage Similarity dim:  torch.Size([40, 1111])
Question passage attention dim:  torch.Size([40, 1111])
Final Merged Passage dim:  torch.Size([40, 1111, 800])
Modeled Passage dim:  torch.Size([40, 1111, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1111, 1000])
Span start logits:  torch.Size([40, 1111])
span start probs dim:  torch.Size([40, 1111])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1111]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 329, 200])
Passage Length:  329
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 329, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 329, 15])
Passage ques attention dim:  torch.Size([40, 329, 15])
Passage question vectors dim:  torch.Size([40, 329, 200])
Question Passage Similarity dim:  torch.Size([40, 329])
Question passage attention dim:  torch.Size([40, 329])
Final Merged Passage dim:  torch.Size([40, 329, 800])
Modeled Passage dim:  torch.Size([40, 329, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 329, 1000])
Span start logits:  torch.Size([40, 329])
span start probs dim:  torch.Size([40, 329])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 329]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 30, 200])
Embedded passage dim:  torch.Size([40, 546, 200])
Passage Length:  546
Encoded question dim:  torch.Size([40, 30, 200])
Encoded passage dim:  torch.Size([40, 546, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 546, 30])
Passage ques attention dim:  torch.Size([40, 546, 30])
Passage question vectors dim:  torch.Size([40, 546, 200])
Question Passage Similarity dim:  torch.Size([40, 546])
Question passage attention dim:  torch.Size([40, 546])
Final Merged Passage dim:  torch.Size([40, 546, 800])
Modeled Passage dim:  torch.Size([40, 546, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 546, 1000])
Span start logits:  torch.Size([40, 546])
span start probs dim:  torch.Size([40, 546])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 546]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 514, 200])
Passage Length:  514
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 514, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 514, 12])
Passage ques attention dim:  torch.Size([40, 514, 12])
Passage question vectors dim:  torch.Size([40, 514, 200])
Question Passage Similarity dim:  torch.Size([40, 514])
Question passage attention dim:  torch.Size([40, 514])
Final Merged Passage dim:  torch.Size([40, 514, 800])
Modeled Passage dim:  torch.Size([40, 514, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 514, 1000])
Span start logits:  torch.Size([40, 514])
span start probs dim:  torch.Size([40, 514])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 514]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 895, 200])
Passage Length:  895
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 895, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 895, 12])
Passage ques attention dim:  torch.Size([40, 895, 12])
Passage question vectors dim:  torch.Size([40, 895, 200])
Question Passage Similarity dim:  torch.Size([40, 895])
Question passage attention dim:  torch.Size([40, 895])
Final Merged Passage dim:  torch.Size([40, 895, 800])
Modeled Passage dim:  torch.Size([40, 895, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 895, 1000])
Span start logits:  torch.Size([40, 895])
span start probs dim:  torch.Size([40, 895])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 895]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 598, 200])
Passage Length:  598
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 598, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 598, 16])
Passage ques attention dim:  torch.Size([40, 598, 16])
Passage question vectors dim:  torch.Size([40, 598, 200])
Question Passage Similarity dim:  torch.Size([40, 598])
Question passage attention dim:  torch.Size([40, 598])
Final Merged Passage dim:  torch.Size([40, 598, 800])
Modeled Passage dim:  torch.Size([40, 598, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 598, 1000])
Span start logits:  torch.Size([40, 598])
span start probs dim:  torch.Size([40, 598])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 598]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 434, 200])
Passage Length:  434
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 434, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 434, 13])
Passage ques attention dim:  torch.Size([40, 434, 13])
Passage question vectors dim:  torch.Size([40, 434, 200])
Question Passage Similarity dim:  torch.Size([40, 434])
Question passage attention dim:  torch.Size([40, 434])
Final Merged Passage dim:  torch.Size([40, 434, 800])
Modeled Passage dim:  torch.Size([40, 434, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 434, 1000])
Span start logits:  torch.Size([40, 434])
span start probs dim:  torch.Size([40, 434])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 434]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 557, 200])
Passage Length:  557
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 557, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 557, 16])
Passage ques attention dim:  torch.Size([40, 557, 16])
Passage question vectors dim:  torch.Size([40, 557, 200])
Question Passage Similarity dim:  torch.Size([40, 557])
Question passage attention dim:  torch.Size([40, 557])
Final Merged Passage dim:  torch.Size([40, 557, 800])
Modeled Passage dim:  torch.Size([40, 557, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 557, 1000])
Span start logits:  torch.Size([40, 557])
span start probs dim:  torch.Size([40, 557])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 557]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 672, 200])
Passage Length:  672
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 672, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 672, 15])
Passage ques attention dim:  torch.Size([40, 672, 15])
Passage question vectors dim:  torch.Size([40, 672, 200])
Question Passage Similarity dim:  torch.Size([40, 672])
Question passage attention dim:  torch.Size([40, 672])
Final Merged Passage dim:  torch.Size([40, 672, 800])
Modeled Passage dim:  torch.Size([40, 672, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 672, 1000])
Span start logits:  torch.Size([40, 672])
span start probs dim:  torch.Size([40, 672])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 672]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 495, 200])
Passage Length:  495
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 495, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 495, 15])
Passage ques attention dim:  torch.Size([40, 495, 15])
Passage question vectors dim:  torch.Size([40, 495, 200])
Question Passage Similarity dim:  torch.Size([40, 495])
Question passage attention dim:  torch.Size([40, 495])
Final Merged Passage dim:  torch.Size([40, 495, 800])
Modeled Passage dim:  torch.Size([40, 495, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 495, 1000])
Span start logits:  torch.Size([40, 495])
span start probs dim:  torch.Size([40, 495])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 495]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 895, 200])
Passage Length:  895
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 895, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 895, 16])
Passage ques attention dim:  torch.Size([40, 895, 16])
Passage question vectors dim:  torch.Size([40, 895, 200])
Question Passage Similarity dim:  torch.Size([40, 895])
Question passage attention dim:  torch.Size([40, 895])
Final Merged Passage dim:  torch.Size([40, 895, 800])
Modeled Passage dim:  torch.Size([40, 895, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 895, 1000])
Span start logits:  torch.Size([40, 895])
span start probs dim:  torch.Size([40, 895])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 895]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 496, 200])
Passage Length:  496
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 496, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 496, 13])
Passage ques attention dim:  torch.Size([40, 496, 13])
Passage question vectors dim:  torch.Size([40, 496, 200])
Question Passage Similarity dim:  torch.Size([40, 496])
Question passage attention dim:  torch.Size([40, 496])
Final Merged Passage dim:  torch.Size([40, 496, 800])
Modeled Passage dim:  torch.Size([40, 496, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 496, 1000])
Span start logits:  torch.Size([40, 496])
span start probs dim:  torch.Size([40, 496])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 496]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 532, 200])
Passage Length:  532
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 532, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 532, 16])
Passage ques attention dim:  torch.Size([40, 532, 16])
Passage question vectors dim:  torch.Size([40, 532, 200])
Question Passage Similarity dim:  torch.Size([40, 532])
Question passage attention dim:  torch.Size([40, 532])
Final Merged Passage dim:  torch.Size([40, 532, 800])
Modeled Passage dim:  torch.Size([40, 532, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 532, 1000])
Span start logits:  torch.Size([40, 532])
span start probs dim:  torch.Size([40, 532])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 532]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 632, 200])
Passage Length:  632
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 632, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 632, 19])
Passage ques attention dim:  torch.Size([40, 632, 19])
Passage question vectors dim:  torch.Size([40, 632, 200])
Question Passage Similarity dim:  torch.Size([40, 632])
Question passage attention dim:  torch.Size([40, 632])
Final Merged Passage dim:  torch.Size([40, 632, 800])
Modeled Passage dim:  torch.Size([40, 632, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 632, 1000])
Span start logits:  torch.Size([40, 632])
span start probs dim:  torch.Size([40, 632])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 632]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 87, 200])
Embedded passage dim:  torch.Size([40, 1249, 200])
Passage Length:  1249
Encoded question dim:  torch.Size([40, 87, 200])
Encoded passage dim:  torch.Size([40, 1249, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1249, 87])
Passage ques attention dim:  torch.Size([40, 1249, 87])
Passage question vectors dim:  torch.Size([40, 1249, 200])
Question Passage Similarity dim:  torch.Size([40, 1249])
Question passage attention dim:  torch.Size([40, 1249])
Final Merged Passage dim:  torch.Size([40, 1249, 800])
Modeled Passage dim:  torch.Size([40, 1249, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1249, 1000])
Span start logits:  torch.Size([40, 1249])
span start probs dim:  torch.Size([40, 1249])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1249]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 823, 200])
Passage Length:  823
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 823, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 823, 13])
Passage ques attention dim:  torch.Size([40, 823, 13])
Passage question vectors dim:  torch.Size([40, 823, 200])
Question Passage Similarity dim:  torch.Size([40, 823])
Question passage attention dim:  torch.Size([40, 823])
Final Merged Passage dim:  torch.Size([40, 823, 800])
Modeled Passage dim:  torch.Size([40, 823, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 823, 1000])
Span start logits:  torch.Size([40, 823])
span start probs dim:  torch.Size([40, 823])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 823]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 582, 200])
Passage Length:  582
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 582, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 582, 11])
Passage ques attention dim:  torch.Size([40, 582, 11])
Passage question vectors dim:  torch.Size([40, 582, 200])
Question Passage Similarity dim:  torch.Size([40, 582])
Question passage attention dim:  torch.Size([40, 582])
Final Merged Passage dim:  torch.Size([40, 582, 800])
Modeled Passage dim:  torch.Size([40, 582, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 582, 1000])
Span start logits:  torch.Size([40, 582])
span start probs dim:  torch.Size([40, 582])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 582]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 532, 200])
Passage Length:  532
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 532, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 532, 14])
Passage ques attention dim:  torch.Size([40, 532, 14])
Passage question vectors dim:  torch.Size([40, 532, 200])
Question Passage Similarity dim:  torch.Size([40, 532])
Question passage attention dim:  torch.Size([40, 532])
Final Merged Passage dim:  torch.Size([40, 532, 800])
Modeled Passage dim:  torch.Size([40, 532, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 532, 1000])
Span start logits:  torch.Size([40, 532])
span start probs dim:  torch.Size([40, 532])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 532]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 603, 200])
Passage Length:  603
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 603, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 603, 13])
Passage ques attention dim:  torch.Size([40, 603, 13])
Passage question vectors dim:  torch.Size([40, 603, 200])
Question Passage Similarity dim:  torch.Size([40, 603])
Question passage attention dim:  torch.Size([40, 603])
Final Merged Passage dim:  torch.Size([40, 603, 800])
Modeled Passage dim:  torch.Size([40, 603, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 603, 1000])
Span start logits:  torch.Size([40, 603])
span start probs dim:  torch.Size([40, 603])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 603]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 346, 200])
Passage Length:  346
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 346, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 346, 12])
Passage ques attention dim:  torch.Size([40, 346, 12])
Passage question vectors dim:  torch.Size([40, 346, 200])
Question Passage Similarity dim:  torch.Size([40, 346])
Question passage attention dim:  torch.Size([40, 346])
Final Merged Passage dim:  torch.Size([40, 346, 800])
Modeled Passage dim:  torch.Size([40, 346, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 346, 1000])
Span start logits:  torch.Size([40, 346])
span start probs dim:  torch.Size([40, 346])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 346]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1388, 200])
Passage Length:  1388
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1388, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1388, 15])
Passage ques attention dim:  torch.Size([40, 1388, 15])
Passage question vectors dim:  torch.Size([40, 1388, 200])
Question Passage Similarity dim:  torch.Size([40, 1388])
Question passage attention dim:  torch.Size([40, 1388])
Final Merged Passage dim:  torch.Size([40, 1388, 800])
Modeled Passage dim:  torch.Size([40, 1388, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1388, 1000])
Span start logits:  torch.Size([40, 1388])
span start probs dim:  torch.Size([40, 1388])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1388]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1433, 200])
Passage Length:  1433
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1433, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1433, 15])
Passage ques attention dim:  torch.Size([40, 1433, 15])
Passage question vectors dim:  torch.Size([40, 1433, 200])
Question Passage Similarity dim:  torch.Size([40, 1433])
Question passage attention dim:  torch.Size([40, 1433])
Final Merged Passage dim:  torch.Size([40, 1433, 800])
Modeled Passage dim:  torch.Size([40, 1433, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1433, 1000])
Span start logits:  torch.Size([40, 1433])
span start probs dim:  torch.Size([40, 1433])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1433]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 476, 200])
Passage Length:  476
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 476, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 476, 14])
Passage ques attention dim:  torch.Size([40, 476, 14])
Passage question vectors dim:  torch.Size([40, 476, 200])
Question Passage Similarity dim:  torch.Size([40, 476])
Question passage attention dim:  torch.Size([40, 476])
Final Merged Passage dim:  torch.Size([40, 476, 800])
Modeled Passage dim:  torch.Size([40, 476, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 476, 1000])
Span start logits:  torch.Size([40, 476])
span start probs dim:  torch.Size([40, 476])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 476]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 871, 200])
Passage Length:  871
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 871, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 871, 13])
Passage ques attention dim:  torch.Size([40, 871, 13])
Passage question vectors dim:  torch.Size([40, 871, 200])
Question Passage Similarity dim:  torch.Size([40, 871])
Question passage attention dim:  torch.Size([40, 871])
Final Merged Passage dim:  torch.Size([40, 871, 800])
Modeled Passage dim:  torch.Size([40, 871, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 871, 1000])
Span start logits:  torch.Size([40, 871])
span start probs dim:  torch.Size([40, 871])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 871]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 828, 200])
Passage Length:  828
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 828, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 828, 19])
Passage ques attention dim:  torch.Size([40, 828, 19])
Passage question vectors dim:  torch.Size([40, 828, 200])
Question Passage Similarity dim:  torch.Size([40, 828])
Question passage attention dim:  torch.Size([40, 828])
Final Merged Passage dim:  torch.Size([40, 828, 800])
Modeled Passage dim:  torch.Size([40, 828, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 828, 1000])
Span start logits:  torch.Size([40, 828])
span start probs dim:  torch.Size([40, 828])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 828]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 912, 200])
Passage Length:  912
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 912, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 912, 16])
Passage ques attention dim:  torch.Size([40, 912, 16])
Passage question vectors dim:  torch.Size([40, 912, 200])
Question Passage Similarity dim:  torch.Size([40, 912])
Question passage attention dim:  torch.Size([40, 912])
Final Merged Passage dim:  torch.Size([40, 912, 800])
Modeled Passage dim:  torch.Size([40, 912, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 912, 1000])
Span start logits:  torch.Size([40, 912])
span start probs dim:  torch.Size([40, 912])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 912]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 245, 200])
Passage Length:  245
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 245, 12])
Passage ques attention dim:  torch.Size([40, 245, 12])
Passage question vectors dim:  torch.Size([40, 245, 200])
Question Passage Similarity dim:  torch.Size([40, 245])
Question passage attention dim:  torch.Size([40, 245])
Final Merged Passage dim:  torch.Size([40, 245, 800])
Modeled Passage dim:  torch.Size([40, 245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 245, 1000])
Span start logits:  torch.Size([40, 245])
span start probs dim:  torch.Size([40, 245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 500, 200])
Passage Length:  500
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 500, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 500, 13])
Passage ques attention dim:  torch.Size([40, 500, 13])
Passage question vectors dim:  torch.Size([40, 500, 200])
Question Passage Similarity dim:  torch.Size([40, 500])
Question passage attention dim:  torch.Size([40, 500])
Final Merged Passage dim:  torch.Size([40, 500, 800])
Modeled Passage dim:  torch.Size([40, 500, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 500, 1000])
Span start logits:  torch.Size([40, 500])
span start probs dim:  torch.Size([40, 500])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 500]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 799, 200])
Passage Length:  799
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 799, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 799, 12])
Passage ques attention dim:  torch.Size([40, 799, 12])
Passage question vectors dim:  torch.Size([40, 799, 200])
Question Passage Similarity dim:  torch.Size([40, 799])
Question passage attention dim:  torch.Size([40, 799])
Final Merged Passage dim:  torch.Size([40, 799, 800])
Modeled Passage dim:  torch.Size([40, 799, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 799, 1000])
Span start logits:  torch.Size([40, 799])
span start probs dim:  torch.Size([40, 799])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 799]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 171, 200])
Passage Length:  171
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 171, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 171, 14])
Passage ques attention dim:  torch.Size([40, 171, 14])
Passage question vectors dim:  torch.Size([40, 171, 200])
Question Passage Similarity dim:  torch.Size([40, 171])
Question passage attention dim:  torch.Size([40, 171])
Final Merged Passage dim:  torch.Size([40, 171, 800])
Modeled Passage dim:  torch.Size([40, 171, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 171, 1000])
Span start logits:  torch.Size([40, 171])
span start probs dim:  torch.Size([40, 171])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 171]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1105, 200])
Passage Length:  1105
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1105, 18])
Passage ques attention dim:  torch.Size([40, 1105, 18])
Passage question vectors dim:  torch.Size([40, 1105, 200])
Question Passage Similarity dim:  torch.Size([40, 1105])
Question passage attention dim:  torch.Size([40, 1105])
Final Merged Passage dim:  torch.Size([40, 1105, 800])
Modeled Passage dim:  torch.Size([40, 1105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1105, 1000])
Span start logits:  torch.Size([40, 1105])
span start probs dim:  torch.Size([40, 1105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 626, 200])
Passage Length:  626
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 626, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 626, 10])
Passage ques attention dim:  torch.Size([40, 626, 10])
Passage question vectors dim:  torch.Size([40, 626, 200])
Question Passage Similarity dim:  torch.Size([40, 626])
Question passage attention dim:  torch.Size([40, 626])
Final Merged Passage dim:  torch.Size([40, 626, 800])
Modeled Passage dim:  torch.Size([40, 626, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 626, 1000])
Span start logits:  torch.Size([40, 626])
span start probs dim:  torch.Size([40, 626])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 626]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 457, 200])
Passage Length:  457
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 457, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 457, 13])
Passage ques attention dim:  torch.Size([40, 457, 13])
Passage question vectors dim:  torch.Size([40, 457, 200])
Question Passage Similarity dim:  torch.Size([40, 457])
Question passage attention dim:  torch.Size([40, 457])
Final Merged Passage dim:  torch.Size([40, 457, 800])
Modeled Passage dim:  torch.Size([40, 457, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 457, 1000])
Span start logits:  torch.Size([40, 457])
span start probs dim:  torch.Size([40, 457])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 457]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1325, 200])
Passage Length:  1325
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1325, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1325, 15])
Passage ques attention dim:  torch.Size([40, 1325, 15])
Passage question vectors dim:  torch.Size([40, 1325, 200])
Question Passage Similarity dim:  torch.Size([40, 1325])
Question passage attention dim:  torch.Size([40, 1325])
Final Merged Passage dim:  torch.Size([40, 1325, 800])
Modeled Passage dim:  torch.Size([40, 1325, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1325, 1000])
Span start logits:  torch.Size([40, 1325])
span start probs dim:  torch.Size([40, 1325])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1325]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1258, 200])
Passage Length:  1258
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1258, 14])
Passage ques attention dim:  torch.Size([40, 1258, 14])
Passage question vectors dim:  torch.Size([40, 1258, 200])
Question Passage Similarity dim:  torch.Size([40, 1258])
Question passage attention dim:  torch.Size([40, 1258])
Final Merged Passage dim:  torch.Size([40, 1258, 800])
Modeled Passage dim:  torch.Size([40, 1258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1258, 1000])
Span start logits:  torch.Size([40, 1258])
span start probs dim:  torch.Size([40, 1258])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1258]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 813, 200])
Passage Length:  813
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 813, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 813, 14])
Passage ques attention dim:  torch.Size([40, 813, 14])
Passage question vectors dim:  torch.Size([40, 813, 200])
Question Passage Similarity dim:  torch.Size([40, 813])
Question passage attention dim:  torch.Size([40, 813])
Final Merged Passage dim:  torch.Size([40, 813, 800])
Modeled Passage dim:  torch.Size([40, 813, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 813, 1000])
Span start logits:  torch.Size([40, 813])
span start probs dim:  torch.Size([40, 813])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 813]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1083, 200])
Passage Length:  1083
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1083, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1083, 16])
Passage ques attention dim:  torch.Size([40, 1083, 16])
Passage question vectors dim:  torch.Size([40, 1083, 200])
Question Passage Similarity dim:  torch.Size([40, 1083])
Question passage attention dim:  torch.Size([40, 1083])
Final Merged Passage dim:  torch.Size([40, 1083, 800])
Modeled Passage dim:  torch.Size([40, 1083, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1083, 1000])
Span start logits:  torch.Size([40, 1083])
span start probs dim:  torch.Size([40, 1083])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1083]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1341, 200])
Passage Length:  1341
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1341, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1341, 18])
Passage ques attention dim:  torch.Size([40, 1341, 18])
Passage question vectors dim:  torch.Size([40, 1341, 200])
Question Passage Similarity dim:  torch.Size([40, 1341])
Question passage attention dim:  torch.Size([40, 1341])
Final Merged Passage dim:  torch.Size([40, 1341, 800])
Modeled Passage dim:  torch.Size([40, 1341, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1341, 1000])
Span start logits:  torch.Size([40, 1341])
span start probs dim:  torch.Size([40, 1341])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1341]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1192, 200])
Passage Length:  1192
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1192, 13])
Passage ques attention dim:  torch.Size([40, 1192, 13])
Passage question vectors dim:  torch.Size([40, 1192, 200])
Question Passage Similarity dim:  torch.Size([40, 1192])
Question passage attention dim:  torch.Size([40, 1192])
Final Merged Passage dim:  torch.Size([40, 1192, 800])
Modeled Passage dim:  torch.Size([40, 1192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1192, 1000])
Span start logits:  torch.Size([40, 1192])
span start probs dim:  torch.Size([40, 1192])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1192]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 621, 200])
Passage Length:  621
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 621, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 621, 15])
Passage ques attention dim:  torch.Size([40, 621, 15])
Passage question vectors dim:  torch.Size([40, 621, 200])
Question Passage Similarity dim:  torch.Size([40, 621])
Question passage attention dim:  torch.Size([40, 621])
Final Merged Passage dim:  torch.Size([40, 621, 800])
Modeled Passage dim:  torch.Size([40, 621, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 621, 1000])
Span start logits:  torch.Size([40, 621])
span start probs dim:  torch.Size([40, 621])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 621]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1439, 200])
Passage Length:  1439
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1439, 16])
Passage ques attention dim:  torch.Size([40, 1439, 16])
Passage question vectors dim:  torch.Size([40, 1439, 200])
Question Passage Similarity dim:  torch.Size([40, 1439])
Question passage attention dim:  torch.Size([40, 1439])
Final Merged Passage dim:  torch.Size([40, 1439, 800])
Modeled Passage dim:  torch.Size([40, 1439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1439, 1000])
Span start logits:  torch.Size([40, 1439])
span start probs dim:  torch.Size([40, 1439])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1439]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1181, 200])
Passage Length:  1181
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1181, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1181, 15])
Passage ques attention dim:  torch.Size([40, 1181, 15])
Passage question vectors dim:  torch.Size([40, 1181, 200])
Question Passage Similarity dim:  torch.Size([40, 1181])
Question passage attention dim:  torch.Size([40, 1181])
Final Merged Passage dim:  torch.Size([40, 1181, 800])
Modeled Passage dim:  torch.Size([40, 1181, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1181, 1000])
Span start logits:  torch.Size([40, 1181])
span start probs dim:  torch.Size([40, 1181])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1181]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 967, 14])
Passage ques attention dim:  torch.Size([40, 967, 14])
Passage question vectors dim:  torch.Size([40, 967, 200])
Question Passage Similarity dim:  torch.Size([40, 967])
Question passage attention dim:  torch.Size([40, 967])
Final Merged Passage dim:  torch.Size([40, 967, 800])
Modeled Passage dim:  torch.Size([40, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 967, 1000])
Span start logits:  torch.Size([40, 967])
span start probs dim:  torch.Size([40, 967])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 967]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 736, 200])
Passage Length:  736
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 736, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 736, 20])
Passage ques attention dim:  torch.Size([40, 736, 20])
Passage question vectors dim:  torch.Size([40, 736, 200])
Question Passage Similarity dim:  torch.Size([40, 736])
Question passage attention dim:  torch.Size([40, 736])
Final Merged Passage dim:  torch.Size([40, 736, 800])
Modeled Passage dim:  torch.Size([40, 736, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 736, 1000])
Span start logits:  torch.Size([40, 736])
span start probs dim:  torch.Size([40, 736])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 736]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 688, 200])
Passage Length:  688
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 688, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 688, 20])
Passage ques attention dim:  torch.Size([40, 688, 20])
Passage question vectors dim:  torch.Size([40, 688, 200])
Question Passage Similarity dim:  torch.Size([40, 688])
Question passage attention dim:  torch.Size([40, 688])
Final Merged Passage dim:  torch.Size([40, 688, 800])
Modeled Passage dim:  torch.Size([40, 688, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 688, 1000])
Span start logits:  torch.Size([40, 688])
span start probs dim:  torch.Size([40, 688])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 688]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 822, 200])
Passage Length:  822
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 822, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 822, 15])
Passage ques attention dim:  torch.Size([40, 822, 15])
Passage question vectors dim:  torch.Size([40, 822, 200])
Question Passage Similarity dim:  torch.Size([40, 822])
Question passage attention dim:  torch.Size([40, 822])
Final Merged Passage dim:  torch.Size([40, 822, 800])
Modeled Passage dim:  torch.Size([40, 822, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 822, 1000])
Span start logits:  torch.Size([40, 822])
span start probs dim:  torch.Size([40, 822])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 822]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1292, 200])
Passage Length:  1292
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1292, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1292, 16])
Passage ques attention dim:  torch.Size([40, 1292, 16])
Passage question vectors dim:  torch.Size([40, 1292, 200])
Question Passage Similarity dim:  torch.Size([40, 1292])
Question passage attention dim:  torch.Size([40, 1292])
Final Merged Passage dim:  torch.Size([40, 1292, 800])
Modeled Passage dim:  torch.Size([40, 1292, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1292, 1000])
Span start logits:  torch.Size([40, 1292])
span start probs dim:  torch.Size([40, 1292])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1292]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 405, 200])
Passage Length:  405
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 405, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 405, 18])
Passage ques attention dim:  torch.Size([40, 405, 18])
Passage question vectors dim:  torch.Size([40, 405, 200])
Question Passage Similarity dim:  torch.Size([40, 405])
Question passage attention dim:  torch.Size([40, 405])
Final Merged Passage dim:  torch.Size([40, 405, 800])
Modeled Passage dim:  torch.Size([40, 405, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 405, 1000])
Span start logits:  torch.Size([40, 405])
span start probs dim:  torch.Size([40, 405])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 405]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1658, 200])
Passage Length:  1658
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1658, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1658, 18])
Passage ques attention dim:  torch.Size([40, 1658, 18])
Passage question vectors dim:  torch.Size([40, 1658, 200])
Question Passage Similarity dim:  torch.Size([40, 1658])
Question passage attention dim:  torch.Size([40, 1658])
Final Merged Passage dim:  torch.Size([40, 1658, 800])
Modeled Passage dim:  torch.Size([40, 1658, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1658, 1000])
Span start logits:  torch.Size([40, 1658])
span start probs dim:  torch.Size([40, 1658])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1658]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 997, 200])
Passage Length:  997
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 997, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 997, 14])
Passage ques attention dim:  torch.Size([40, 997, 14])
Passage question vectors dim:  torch.Size([40, 997, 200])
Question Passage Similarity dim:  torch.Size([40, 997])
Question passage attention dim:  torch.Size([40, 997])
Final Merged Passage dim:  torch.Size([40, 997, 800])
Modeled Passage dim:  torch.Size([40, 997, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 997, 1000])
Span start logits:  torch.Size([40, 997])
span start probs dim:  torch.Size([40, 997])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 997]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 737, 200])
Passage Length:  737
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 737, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 737, 18])
Passage ques attention dim:  torch.Size([40, 737, 18])
Passage question vectors dim:  torch.Size([40, 737, 200])
Question Passage Similarity dim:  torch.Size([40, 737])
Question passage attention dim:  torch.Size([40, 737])
Final Merged Passage dim:  torch.Size([40, 737, 800])
Modeled Passage dim:  torch.Size([40, 737, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 737, 1000])
Span start logits:  torch.Size([40, 737])
span start probs dim:  torch.Size([40, 737])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 737]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1209, 200])
Passage Length:  1209
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1209, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1209, 18])
Passage ques attention dim:  torch.Size([40, 1209, 18])
Passage question vectors dim:  torch.Size([40, 1209, 200])
Question Passage Similarity dim:  torch.Size([40, 1209])
Question passage attention dim:  torch.Size([40, 1209])
Final Merged Passage dim:  torch.Size([40, 1209, 800])
Modeled Passage dim:  torch.Size([40, 1209, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1209, 1000])
Span start logits:  torch.Size([40, 1209])
span start probs dim:  torch.Size([40, 1209])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1209]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 257, 200])
Passage Length:  257
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 257, 14])
Passage ques attention dim:  torch.Size([40, 257, 14])
Passage question vectors dim:  torch.Size([40, 257, 200])
Question Passage Similarity dim:  torch.Size([40, 257])
Question passage attention dim:  torch.Size([40, 257])
Final Merged Passage dim:  torch.Size([40, 257, 800])
Modeled Passage dim:  torch.Size([40, 257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 257, 1000])
Span start logits:  torch.Size([40, 257])
span start probs dim:  torch.Size([40, 257])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 257]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 311, 11])
Passage ques attention dim:  torch.Size([40, 311, 11])
Passage question vectors dim:  torch.Size([40, 311, 200])
Question Passage Similarity dim:  torch.Size([40, 311])
Question passage attention dim:  torch.Size([40, 311])
Final Merged Passage dim:  torch.Size([40, 311, 800])
Modeled Passage dim:  torch.Size([40, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 311, 1000])
Span start logits:  torch.Size([40, 311])
span start probs dim:  torch.Size([40, 311])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 311]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 751, 200])
Passage Length:  751
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 751, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 751, 15])
Passage ques attention dim:  torch.Size([40, 751, 15])
Passage question vectors dim:  torch.Size([40, 751, 200])
Question Passage Similarity dim:  torch.Size([40, 751])
Question passage attention dim:  torch.Size([40, 751])
Final Merged Passage dim:  torch.Size([40, 751, 800])
Modeled Passage dim:  torch.Size([40, 751, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 751, 1000])
Span start logits:  torch.Size([40, 751])
span start probs dim:  torch.Size([40, 751])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 751]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 705, 200])
Passage Length:  705
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 705, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 705, 13])
Passage ques attention dim:  torch.Size([40, 705, 13])
Passage question vectors dim:  torch.Size([40, 705, 200])
Question Passage Similarity dim:  torch.Size([40, 705])
Question passage attention dim:  torch.Size([40, 705])
Final Merged Passage dim:  torch.Size([40, 705, 800])
Modeled Passage dim:  torch.Size([40, 705, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 705, 1000])
Span start logits:  torch.Size([40, 705])
span start probs dim:  torch.Size([40, 705])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 705]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 843, 200])
Passage Length:  843
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 843, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 843, 12])
Passage ques attention dim:  torch.Size([40, 843, 12])
Passage question vectors dim:  torch.Size([40, 843, 200])
Question Passage Similarity dim:  torch.Size([40, 843])
Question passage attention dim:  torch.Size([40, 843])
Final Merged Passage dim:  torch.Size([40, 843, 800])
Modeled Passage dim:  torch.Size([40, 843, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 843, 1000])
Span start logits:  torch.Size([40, 843])
span start probs dim:  torch.Size([40, 843])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 843]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 868, 200])
Passage Length:  868
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 868, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 868, 16])
Passage ques attention dim:  torch.Size([40, 868, 16])
Passage question vectors dim:  torch.Size([40, 868, 200])
Question Passage Similarity dim:  torch.Size([40, 868])
Question passage attention dim:  torch.Size([40, 868])
Final Merged Passage dim:  torch.Size([40, 868, 800])
Modeled Passage dim:  torch.Size([40, 868, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 868, 1000])
Span start logits:  torch.Size([40, 868])
span start probs dim:  torch.Size([40, 868])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 868]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 36, 200])
Embedded passage dim:  torch.Size([40, 1374, 200])
Passage Length:  1374
Encoded question dim:  torch.Size([40, 36, 200])
Encoded passage dim:  torch.Size([40, 1374, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1374, 36])
Passage ques attention dim:  torch.Size([40, 1374, 36])
Passage question vectors dim:  torch.Size([40, 1374, 200])
Question Passage Similarity dim:  torch.Size([40, 1374])
Question passage attention dim:  torch.Size([40, 1374])
Final Merged Passage dim:  torch.Size([40, 1374, 800])
Modeled Passage dim:  torch.Size([40, 1374, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1374, 1000])
Span start logits:  torch.Size([40, 1374])
span start probs dim:  torch.Size([40, 1374])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1374]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 773, 200])
Passage Length:  773
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 773, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 773, 16])
Passage ques attention dim:  torch.Size([40, 773, 16])
Passage question vectors dim:  torch.Size([40, 773, 200])
Question Passage Similarity dim:  torch.Size([40, 773])
Question passage attention dim:  torch.Size([40, 773])
Final Merged Passage dim:  torch.Size([40, 773, 800])
Modeled Passage dim:  torch.Size([40, 773, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 773, 1000])
Span start logits:  torch.Size([40, 773])
span start probs dim:  torch.Size([40, 773])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 773]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 138, 200])
Passage Length:  138
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 138, 11])
Passage ques attention dim:  torch.Size([40, 138, 11])
Passage question vectors dim:  torch.Size([40, 138, 200])
Question Passage Similarity dim:  torch.Size([40, 138])
Question passage attention dim:  torch.Size([40, 138])
Final Merged Passage dim:  torch.Size([40, 138, 800])
Modeled Passage dim:  torch.Size([40, 138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 138, 1000])
Span start logits:  torch.Size([40, 138])
span start probs dim:  torch.Size([40, 138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1672, 200])
Passage Length:  1672
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1672, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1672, 13])
Passage ques attention dim:  torch.Size([40, 1672, 13])
Passage question vectors dim:  torch.Size([40, 1672, 200])
Question Passage Similarity dim:  torch.Size([40, 1672])
Question passage attention dim:  torch.Size([40, 1672])
Final Merged Passage dim:  torch.Size([40, 1672, 800])
Modeled Passage dim:  torch.Size([40, 1672, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1672, 1000])
Span start logits:  torch.Size([40, 1672])
span start probs dim:  torch.Size([40, 1672])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1672]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 761, 200])
Passage Length:  761
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 761, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 761, 12])
Passage ques attention dim:  torch.Size([40, 761, 12])
Passage question vectors dim:  torch.Size([40, 761, 200])
Question Passage Similarity dim:  torch.Size([40, 761])
Question passage attention dim:  torch.Size([40, 761])
Final Merged Passage dim:  torch.Size([40, 761, 800])
Modeled Passage dim:  torch.Size([40, 761, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 761, 1000])
Span start logits:  torch.Size([40, 761])
span start probs dim:  torch.Size([40, 761])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 761]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 553, 200])
Passage Length:  553
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 553, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 553, 12])
Passage ques attention dim:  torch.Size([40, 553, 12])
Passage question vectors dim:  torch.Size([40, 553, 200])
Question Passage Similarity dim:  torch.Size([40, 553])
Question passage attention dim:  torch.Size([40, 553])
Final Merged Passage dim:  torch.Size([40, 553, 800])
Modeled Passage dim:  torch.Size([40, 553, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 553, 1000])
Span start logits:  torch.Size([40, 553])
span start probs dim:  torch.Size([40, 553])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 553]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1389, 200])
Passage Length:  1389
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1389, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1389, 11])
Passage ques attention dim:  torch.Size([40, 1389, 11])
Passage question vectors dim:  torch.Size([40, 1389, 200])
Question Passage Similarity dim:  torch.Size([40, 1389])
Question passage attention dim:  torch.Size([40, 1389])
Final Merged Passage dim:  torch.Size([40, 1389, 800])
Modeled Passage dim:  torch.Size([40, 1389, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1389, 1000])
Span start logits:  torch.Size([40, 1389])
span start probs dim:  torch.Size([40, 1389])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1389]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 629, 200])
Passage Length:  629
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 629, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 629, 18])
Passage ques attention dim:  torch.Size([40, 629, 18])
Passage question vectors dim:  torch.Size([40, 629, 200])
Question Passage Similarity dim:  torch.Size([40, 629])
Question passage attention dim:  torch.Size([40, 629])
Final Merged Passage dim:  torch.Size([40, 629, 800])
Modeled Passage dim:  torch.Size([40, 629, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 629, 1000])
Span start logits:  torch.Size([40, 629])
span start probs dim:  torch.Size([40, 629])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 629]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 36, 200])
Embedded passage dim:  torch.Size([40, 1429, 200])
Passage Length:  1429
Encoded question dim:  torch.Size([40, 36, 200])
Encoded passage dim:  torch.Size([40, 1429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1429, 36])
Passage ques attention dim:  torch.Size([40, 1429, 36])
Passage question vectors dim:  torch.Size([40, 1429, 200])
Question Passage Similarity dim:  torch.Size([40, 1429])
Question passage attention dim:  torch.Size([40, 1429])
Final Merged Passage dim:  torch.Size([40, 1429, 800])
Modeled Passage dim:  torch.Size([40, 1429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1429, 1000])
Span start logits:  torch.Size([40, 1429])
span start probs dim:  torch.Size([40, 1429])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1429]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 578, 200])
Passage Length:  578
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 578, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 578, 13])
Passage ques attention dim:  torch.Size([40, 578, 13])
Passage question vectors dim:  torch.Size([40, 578, 200])
Question Passage Similarity dim:  torch.Size([40, 578])
Question passage attention dim:  torch.Size([40, 578])
Final Merged Passage dim:  torch.Size([40, 578, 800])
Modeled Passage dim:  torch.Size([40, 578, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 578, 1000])
Span start logits:  torch.Size([40, 578])
span start probs dim:  torch.Size([40, 578])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 578]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1003, 200])
Passage Length:  1003
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1003, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1003, 14])
Passage ques attention dim:  torch.Size([40, 1003, 14])
Passage question vectors dim:  torch.Size([40, 1003, 200])
Question Passage Similarity dim:  torch.Size([40, 1003])
Question passage attention dim:  torch.Size([40, 1003])
Final Merged Passage dim:  torch.Size([40, 1003, 800])
Modeled Passage dim:  torch.Size([40, 1003, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1003, 1000])
Span start logits:  torch.Size([40, 1003])
span start probs dim:  torch.Size([40, 1003])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1003]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 811, 200])
Passage Length:  811
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 811, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 811, 17])
Passage ques attention dim:  torch.Size([40, 811, 17])
Passage question vectors dim:  torch.Size([40, 811, 200])
Question Passage Similarity dim:  torch.Size([40, 811])
Question passage attention dim:  torch.Size([40, 811])
Final Merged Passage dim:  torch.Size([40, 811, 800])
Modeled Passage dim:  torch.Size([40, 811, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 811, 1000])
Span start logits:  torch.Size([40, 811])
span start probs dim:  torch.Size([40, 811])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 811]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 329, 200])
Passage Length:  329
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 329, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 329, 15])
Passage ques attention dim:  torch.Size([40, 329, 15])
Passage question vectors dim:  torch.Size([40, 329, 200])
Question Passage Similarity dim:  torch.Size([40, 329])
Question passage attention dim:  torch.Size([40, 329])
Final Merged Passage dim:  torch.Size([40, 329, 800])
Modeled Passage dim:  torch.Size([40, 329, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 329, 1000])
Span start logits:  torch.Size([40, 329])
span start probs dim:  torch.Size([40, 329])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 329]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 857, 200])
Passage Length:  857
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 857, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 857, 14])
Passage ques attention dim:  torch.Size([40, 857, 14])
Passage question vectors dim:  torch.Size([40, 857, 200])
Question Passage Similarity dim:  torch.Size([40, 857])
Question passage attention dim:  torch.Size([40, 857])
Final Merged Passage dim:  torch.Size([40, 857, 800])
Modeled Passage dim:  torch.Size([40, 857, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 857, 1000])
Span start logits:  torch.Size([40, 857])
span start probs dim:  torch.Size([40, 857])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 857]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 849, 200])
Passage Length:  849
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 849, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 849, 22])
Passage ques attention dim:  torch.Size([40, 849, 22])
Passage question vectors dim:  torch.Size([40, 849, 200])
Question Passage Similarity dim:  torch.Size([40, 849])
Question passage attention dim:  torch.Size([40, 849])
Final Merged Passage dim:  torch.Size([40, 849, 800])
Modeled Passage dim:  torch.Size([40, 849, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 849, 1000])
Span start logits:  torch.Size([40, 849])
span start probs dim:  torch.Size([40, 849])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 849]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1161, 200])
Passage Length:  1161
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1161, 14])
Passage ques attention dim:  torch.Size([40, 1161, 14])
Passage question vectors dim:  torch.Size([40, 1161, 200])
Question Passage Similarity dim:  torch.Size([40, 1161])
Question passage attention dim:  torch.Size([40, 1161])
Final Merged Passage dim:  torch.Size([40, 1161, 800])
Modeled Passage dim:  torch.Size([40, 1161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1161, 1000])
Span start logits:  torch.Size([40, 1161])
span start probs dim:  torch.Size([40, 1161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1212, 200])
Passage Length:  1212
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1212, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1212, 12])
Passage ques attention dim:  torch.Size([40, 1212, 12])
Passage question vectors dim:  torch.Size([40, 1212, 200])
Question Passage Similarity dim:  torch.Size([40, 1212])
Question passage attention dim:  torch.Size([40, 1212])
Final Merged Passage dim:  torch.Size([40, 1212, 800])
Modeled Passage dim:  torch.Size([40, 1212, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1212, 1000])
Span start logits:  torch.Size([40, 1212])
span start probs dim:  torch.Size([40, 1212])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1212]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 906, 16])
Passage ques attention dim:  torch.Size([40, 906, 16])
Passage question vectors dim:  torch.Size([40, 906, 200])
Question Passage Similarity dim:  torch.Size([40, 906])
Question passage attention dim:  torch.Size([40, 906])
Final Merged Passage dim:  torch.Size([40, 906, 800])
Modeled Passage dim:  torch.Size([40, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 906, 1000])
Span start logits:  torch.Size([40, 906])
span start probs dim:  torch.Size([40, 906])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 906]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 269, 200])
Passage Length:  269
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 269, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 269, 13])
Passage ques attention dim:  torch.Size([40, 269, 13])
Passage question vectors dim:  torch.Size([40, 269, 200])
Question Passage Similarity dim:  torch.Size([40, 269])
Question passage attention dim:  torch.Size([40, 269])
Final Merged Passage dim:  torch.Size([40, 269, 800])
Modeled Passage dim:  torch.Size([40, 269, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 269, 1000])
Span start logits:  torch.Size([40, 269])
span start probs dim:  torch.Size([40, 269])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 269]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 399, 200])
Passage Length:  399
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 399, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 399, 12])
Passage ques attention dim:  torch.Size([40, 399, 12])
Passage question vectors dim:  torch.Size([40, 399, 200])
Question Passage Similarity dim:  torch.Size([40, 399])
Question passage attention dim:  torch.Size([40, 399])
Final Merged Passage dim:  torch.Size([40, 399, 800])
Modeled Passage dim:  torch.Size([40, 399, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 399, 1000])
Span start logits:  torch.Size([40, 399])
span start probs dim:  torch.Size([40, 399])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 399]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 263, 200])
Passage Length:  263
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 263, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 263, 12])
Passage ques attention dim:  torch.Size([40, 263, 12])
Passage question vectors dim:  torch.Size([40, 263, 200])
Question Passage Similarity dim:  torch.Size([40, 263])
Question passage attention dim:  torch.Size([40, 263])
Final Merged Passage dim:  torch.Size([40, 263, 800])
Modeled Passage dim:  torch.Size([40, 263, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 263, 1000])
Span start logits:  torch.Size([40, 263])
span start probs dim:  torch.Size([40, 263])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 263]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 761, 200])
Passage Length:  761
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 761, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 761, 15])
Passage ques attention dim:  torch.Size([40, 761, 15])
Passage question vectors dim:  torch.Size([40, 761, 200])
Question Passage Similarity dim:  torch.Size([40, 761])
Question passage attention dim:  torch.Size([40, 761])
Final Merged Passage dim:  torch.Size([40, 761, 800])
Modeled Passage dim:  torch.Size([40, 761, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 761, 1000])
Span start logits:  torch.Size([40, 761])
span start probs dim:  torch.Size([40, 761])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 761]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 900, 200])
Passage Length:  900
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 900, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 900, 17])
Passage ques attention dim:  torch.Size([40, 900, 17])
Passage question vectors dim:  torch.Size([40, 900, 200])
Question Passage Similarity dim:  torch.Size([40, 900])
Question passage attention dim:  torch.Size([40, 900])
Final Merged Passage dim:  torch.Size([40, 900, 800])
Modeled Passage dim:  torch.Size([40, 900, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 900, 1000])
Span start logits:  torch.Size([40, 900])
span start probs dim:  torch.Size([40, 900])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 900]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 766, 200])
Passage Length:  766
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 766, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 766, 16])
Passage ques attention dim:  torch.Size([40, 766, 16])
Passage question vectors dim:  torch.Size([40, 766, 200])
Question Passage Similarity dim:  torch.Size([40, 766])
Question passage attention dim:  torch.Size([40, 766])
Final Merged Passage dim:  torch.Size([40, 766, 800])
Modeled Passage dim:  torch.Size([40, 766, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 766, 1000])
Span start logits:  torch.Size([40, 766])
span start probs dim:  torch.Size([40, 766])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 766]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 314, 200])
Passage Length:  314
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 314, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 314, 13])
Passage ques attention dim:  torch.Size([40, 314, 13])
Passage question vectors dim:  torch.Size([40, 314, 200])
Question Passage Similarity dim:  torch.Size([40, 314])
Question passage attention dim:  torch.Size([40, 314])
Final Merged Passage dim:  torch.Size([40, 314, 800])
Modeled Passage dim:  torch.Size([40, 314, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 314, 1000])
Span start logits:  torch.Size([40, 314])
span start probs dim:  torch.Size([40, 314])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 314]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1059, 200])
Passage Length:  1059
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1059, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1059, 12])
Passage ques attention dim:  torch.Size([40, 1059, 12])
Passage question vectors dim:  torch.Size([40, 1059, 200])
Question Passage Similarity dim:  torch.Size([40, 1059])
Question passage attention dim:  torch.Size([40, 1059])
Final Merged Passage dim:  torch.Size([40, 1059, 800])
Modeled Passage dim:  torch.Size([40, 1059, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1059, 1000])
Span start logits:  torch.Size([40, 1059])
span start probs dim:  torch.Size([40, 1059])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1059]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 505, 200])
Passage Length:  505
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 505, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 505, 13])
Passage ques attention dim:  torch.Size([40, 505, 13])
Passage question vectors dim:  torch.Size([40, 505, 200])
Question Passage Similarity dim:  torch.Size([40, 505])
Question passage attention dim:  torch.Size([40, 505])
Final Merged Passage dim:  torch.Size([40, 505, 800])
Modeled Passage dim:  torch.Size([40, 505, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 505, 1000])
Span start logits:  torch.Size([40, 505])
span start probs dim:  torch.Size([40, 505])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 505]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1279, 200])
Passage Length:  1279
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1279, 20])
Passage ques attention dim:  torch.Size([40, 1279, 20])
Passage question vectors dim:  torch.Size([40, 1279, 200])
Question Passage Similarity dim:  torch.Size([40, 1279])
Question passage attention dim:  torch.Size([40, 1279])
Final Merged Passage dim:  torch.Size([40, 1279, 800])
Modeled Passage dim:  torch.Size([40, 1279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1279, 1000])
Span start logits:  torch.Size([40, 1279])
span start probs dim:  torch.Size([40, 1279])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1279]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 797, 200])
Passage Length:  797
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 797, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 797, 15])
Passage ques attention dim:  torch.Size([40, 797, 15])
Passage question vectors dim:  torch.Size([40, 797, 200])
Question Passage Similarity dim:  torch.Size([40, 797])
Question passage attention dim:  torch.Size([40, 797])
Final Merged Passage dim:  torch.Size([40, 797, 800])
Modeled Passage dim:  torch.Size([40, 797, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 797, 1000])
Span start logits:  torch.Size([40, 797])
span start probs dim:  torch.Size([40, 797])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 797]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 996, 200])
Passage Length:  996
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 996, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 996, 16])
Passage ques attention dim:  torch.Size([40, 996, 16])
Passage question vectors dim:  torch.Size([40, 996, 200])
Question Passage Similarity dim:  torch.Size([40, 996])
Question passage attention dim:  torch.Size([40, 996])
Final Merged Passage dim:  torch.Size([40, 996, 800])
Modeled Passage dim:  torch.Size([40, 996, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 996, 1000])
Span start logits:  torch.Size([40, 996])
span start probs dim:  torch.Size([40, 996])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 996]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1712, 200])
Passage Length:  1712
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1712, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1712, 17])
Passage ques attention dim:  torch.Size([40, 1712, 17])
Passage question vectors dim:  torch.Size([40, 1712, 200])
Question Passage Similarity dim:  torch.Size([40, 1712])
Question passage attention dim:  torch.Size([40, 1712])
Final Merged Passage dim:  torch.Size([40, 1712, 800])
Modeled Passage dim:  torch.Size([40, 1712, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1712, 1000])
Span start logits:  torch.Size([40, 1712])
span start probs dim:  torch.Size([40, 1712])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1712]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 655, 200])
Passage Length:  655
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 655, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 655, 16])
Passage ques attention dim:  torch.Size([40, 655, 16])
Passage question vectors dim:  torch.Size([40, 655, 200])
Question Passage Similarity dim:  torch.Size([40, 655])
Question passage attention dim:  torch.Size([40, 655])
Final Merged Passage dim:  torch.Size([40, 655, 800])
Modeled Passage dim:  torch.Size([40, 655, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 655, 1000])
Span start logits:  torch.Size([40, 655])
span start probs dim:  torch.Size([40, 655])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 655]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1140, 200])
Passage Length:  1140
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1140, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1140, 17])
Passage ques attention dim:  torch.Size([40, 1140, 17])
Passage question vectors dim:  torch.Size([40, 1140, 200])
Question Passage Similarity dim:  torch.Size([40, 1140])
Question passage attention dim:  torch.Size([40, 1140])
Final Merged Passage dim:  torch.Size([40, 1140, 800])
Modeled Passage dim:  torch.Size([40, 1140, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1140, 1000])
Span start logits:  torch.Size([40, 1140])
span start probs dim:  torch.Size([40, 1140])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1140]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 486, 200])
Passage Length:  486
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 486, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 486, 12])
Passage ques attention dim:  torch.Size([40, 486, 12])
Passage question vectors dim:  torch.Size([40, 486, 200])
Question Passage Similarity dim:  torch.Size([40, 486])
Question passage attention dim:  torch.Size([40, 486])
Final Merged Passage dim:  torch.Size([40, 486, 800])
Modeled Passage dim:  torch.Size([40, 486, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 486, 1000])
Span start logits:  torch.Size([40, 486])
span start probs dim:  torch.Size([40, 486])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 486]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 218, 200])
Passage Length:  218
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 218, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 218, 13])
Passage ques attention dim:  torch.Size([40, 218, 13])
Passage question vectors dim:  torch.Size([40, 218, 200])
Question Passage Similarity dim:  torch.Size([40, 218])
Question passage attention dim:  torch.Size([40, 218])
Final Merged Passage dim:  torch.Size([40, 218, 800])
Modeled Passage dim:  torch.Size([40, 218, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 218, 1000])
Span start logits:  torch.Size([40, 218])
span start probs dim:  torch.Size([40, 218])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 218]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 660, 200])
Passage Length:  660
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 660, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 660, 16])
Passage ques attention dim:  torch.Size([40, 660, 16])
Passage question vectors dim:  torch.Size([40, 660, 200])
Question Passage Similarity dim:  torch.Size([40, 660])
Question passage attention dim:  torch.Size([40, 660])
Final Merged Passage dim:  torch.Size([40, 660, 800])
Modeled Passage dim:  torch.Size([40, 660, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 660, 1000])
Span start logits:  torch.Size([40, 660])
span start probs dim:  torch.Size([40, 660])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 660]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 626, 200])
Passage Length:  626
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 626, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 626, 12])
Passage ques attention dim:  torch.Size([40, 626, 12])
Passage question vectors dim:  torch.Size([40, 626, 200])
Question Passage Similarity dim:  torch.Size([40, 626])
Question passage attention dim:  torch.Size([40, 626])
Final Merged Passage dim:  torch.Size([40, 626, 800])
Modeled Passage dim:  torch.Size([40, 626, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 626, 1000])
Span start logits:  torch.Size([40, 626])
span start probs dim:  torch.Size([40, 626])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 626]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1476, 200])
Passage Length:  1476
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1476, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1476, 14])
Passage ques attention dim:  torch.Size([40, 1476, 14])
Passage question vectors dim:  torch.Size([40, 1476, 200])
Question Passage Similarity dim:  torch.Size([40, 1476])
Question passage attention dim:  torch.Size([40, 1476])
Final Merged Passage dim:  torch.Size([40, 1476, 800])
Modeled Passage dim:  torch.Size([40, 1476, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1476, 1000])
Span start logits:  torch.Size([40, 1476])
span start probs dim:  torch.Size([40, 1476])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1476]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 954, 200])
Passage Length:  954
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 954, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 954, 14])
Passage ques attention dim:  torch.Size([40, 954, 14])
Passage question vectors dim:  torch.Size([40, 954, 200])
Question Passage Similarity dim:  torch.Size([40, 954])
Question passage attention dim:  torch.Size([40, 954])
Final Merged Passage dim:  torch.Size([40, 954, 800])
Modeled Passage dim:  torch.Size([40, 954, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 954, 1000])
Span start logits:  torch.Size([40, 954])
span start probs dim:  torch.Size([40, 954])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 954]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 384, 200])
Passage Length:  384
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 384, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 384, 13])
Passage ques attention dim:  torch.Size([40, 384, 13])
Passage question vectors dim:  torch.Size([40, 384, 200])
Question Passage Similarity dim:  torch.Size([40, 384])
Question passage attention dim:  torch.Size([40, 384])
Final Merged Passage dim:  torch.Size([40, 384, 800])
Modeled Passage dim:  torch.Size([40, 384, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 384, 1000])
Span start logits:  torch.Size([40, 384])
span start probs dim:  torch.Size([40, 384])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 384]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 773, 200])
Passage Length:  773
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 773, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 773, 14])
Passage ques attention dim:  torch.Size([40, 773, 14])
Passage question vectors dim:  torch.Size([40, 773, 200])
Question Passage Similarity dim:  torch.Size([40, 773])
Question passage attention dim:  torch.Size([40, 773])
Final Merged Passage dim:  torch.Size([40, 773, 800])
Modeled Passage dim:  torch.Size([40, 773, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 773, 1000])
Span start logits:  torch.Size([40, 773])
span start probs dim:  torch.Size([40, 773])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 773]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1162, 200])
Passage Length:  1162
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1162, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1162, 12])
Passage ques attention dim:  torch.Size([40, 1162, 12])
Passage question vectors dim:  torch.Size([40, 1162, 200])
Question Passage Similarity dim:  torch.Size([40, 1162])
Question passage attention dim:  torch.Size([40, 1162])
Final Merged Passage dim:  torch.Size([40, 1162, 800])
Modeled Passage dim:  torch.Size([40, 1162, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1162, 1000])
Span start logits:  torch.Size([40, 1162])
span start probs dim:  torch.Size([40, 1162])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1162]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 469, 200])
Passage Length:  469
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 469, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 469, 13])
Passage ques attention dim:  torch.Size([40, 469, 13])
Passage question vectors dim:  torch.Size([40, 469, 200])
Question Passage Similarity dim:  torch.Size([40, 469])
Question passage attention dim:  torch.Size([40, 469])
Final Merged Passage dim:  torch.Size([40, 469, 800])
Modeled Passage dim:  torch.Size([40, 469, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 469, 1000])
Span start logits:  torch.Size([40, 469])
span start probs dim:  torch.Size([40, 469])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 469]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1597, 200])
Passage Length:  1597
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1597, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1597, 15])
Passage ques attention dim:  torch.Size([40, 1597, 15])
Passage question vectors dim:  torch.Size([40, 1597, 200])
Question Passage Similarity dim:  torch.Size([40, 1597])
Question passage attention dim:  torch.Size([40, 1597])
Final Merged Passage dim:  torch.Size([40, 1597, 800])
Modeled Passage dim:  torch.Size([40, 1597, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1597, 1000])
Span start logits:  torch.Size([40, 1597])
span start probs dim:  torch.Size([40, 1597])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1597]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 286, 200])
Passage Length:  286
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 286, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 286, 13])
Passage ques attention dim:  torch.Size([40, 286, 13])
Passage question vectors dim:  torch.Size([40, 286, 200])
Question Passage Similarity dim:  torch.Size([40, 286])
Question passage attention dim:  torch.Size([40, 286])
Final Merged Passage dim:  torch.Size([40, 286, 800])
Modeled Passage dim:  torch.Size([40, 286, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 286, 1000])
Span start logits:  torch.Size([40, 286])
span start probs dim:  torch.Size([40, 286])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 286]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 574, 200])
Passage Length:  574
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 574, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 574, 21])
Passage ques attention dim:  torch.Size([40, 574, 21])
Passage question vectors dim:  torch.Size([40, 574, 200])
Question Passage Similarity dim:  torch.Size([40, 574])
Question passage attention dim:  torch.Size([40, 574])
Final Merged Passage dim:  torch.Size([40, 574, 800])
Modeled Passage dim:  torch.Size([40, 574, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 574, 1000])
Span start logits:  torch.Size([40, 574])
span start probs dim:  torch.Size([40, 574])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 574]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 383, 200])
Passage Length:  383
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 383, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 383, 14])
Passage ques attention dim:  torch.Size([40, 383, 14])
Passage question vectors dim:  torch.Size([40, 383, 200])
Question Passage Similarity dim:  torch.Size([40, 383])
Question passage attention dim:  torch.Size([40, 383])
Final Merged Passage dim:  torch.Size([40, 383, 800])
Modeled Passage dim:  torch.Size([40, 383, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 383, 1000])
Span start logits:  torch.Size([40, 383])
span start probs dim:  torch.Size([40, 383])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 383]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1280, 200])
Passage Length:  1280
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1280, 14])
Passage ques attention dim:  torch.Size([40, 1280, 14])
Passage question vectors dim:  torch.Size([40, 1280, 200])
Question Passage Similarity dim:  torch.Size([40, 1280])
Question passage attention dim:  torch.Size([40, 1280])
Final Merged Passage dim:  torch.Size([40, 1280, 800])
Modeled Passage dim:  torch.Size([40, 1280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1280, 1000])
Span start logits:  torch.Size([40, 1280])
span start probs dim:  torch.Size([40, 1280])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1280]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 464, 200])
Passage Length:  464
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 464, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 464, 12])
Passage ques attention dim:  torch.Size([40, 464, 12])
Passage question vectors dim:  torch.Size([40, 464, 200])
Question Passage Similarity dim:  torch.Size([40, 464])
Question passage attention dim:  torch.Size([40, 464])
Final Merged Passage dim:  torch.Size([40, 464, 800])
Modeled Passage dim:  torch.Size([40, 464, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 464, 1000])
Span start logits:  torch.Size([40, 464])
span start probs dim:  torch.Size([40, 464])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 464]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 786, 200])
Passage Length:  786
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 786, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 786, 14])
Passage ques attention dim:  torch.Size([40, 786, 14])
Passage question vectors dim:  torch.Size([40, 786, 200])
Question Passage Similarity dim:  torch.Size([40, 786])
Question passage attention dim:  torch.Size([40, 786])
Final Merged Passage dim:  torch.Size([40, 786, 800])
Modeled Passage dim:  torch.Size([40, 786, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 786, 1000])
Span start logits:  torch.Size([40, 786])
span start probs dim:  torch.Size([40, 786])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 786]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 2096, 200])
Passage Length:  2096
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 2096, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2096, 10])
Passage ques attention dim:  torch.Size([40, 2096, 10])
Passage question vectors dim:  torch.Size([40, 2096, 200])
Question Passage Similarity dim:  torch.Size([40, 2096])
Question passage attention dim:  torch.Size([40, 2096])
Final Merged Passage dim:  torch.Size([40, 2096, 800])
Modeled Passage dim:  torch.Size([40, 2096, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2096, 1000])
Span start logits:  torch.Size([40, 2096])
span start probs dim:  torch.Size([40, 2096])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2096]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 567, 200])
Passage Length:  567
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 567, 17])
Passage ques attention dim:  torch.Size([40, 567, 17])
Passage question vectors dim:  torch.Size([40, 567, 200])
Question Passage Similarity dim:  torch.Size([40, 567])
Question passage attention dim:  torch.Size([40, 567])
Final Merged Passage dim:  torch.Size([40, 567, 800])
Modeled Passage dim:  torch.Size([40, 567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 567, 1000])
Span start logits:  torch.Size([40, 567])
span start probs dim:  torch.Size([40, 567])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 567]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1114, 200])
Passage Length:  1114
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1114, 14])
Passage ques attention dim:  torch.Size([40, 1114, 14])
Passage question vectors dim:  torch.Size([40, 1114, 200])
Question Passage Similarity dim:  torch.Size([40, 1114])
Question passage attention dim:  torch.Size([40, 1114])
Final Merged Passage dim:  torch.Size([40, 1114, 800])
Modeled Passage dim:  torch.Size([40, 1114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1114, 1000])
Span start logits:  torch.Size([40, 1114])
span start probs dim:  torch.Size([40, 1114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 648, 200])
Passage Length:  648
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 648, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 648, 12])
Passage ques attention dim:  torch.Size([40, 648, 12])
Passage question vectors dim:  torch.Size([40, 648, 200])
Question Passage Similarity dim:  torch.Size([40, 648])
Question passage attention dim:  torch.Size([40, 648])
Final Merged Passage dim:  torch.Size([40, 648, 800])
Modeled Passage dim:  torch.Size([40, 648, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 648, 1000])
Span start logits:  torch.Size([40, 648])
span start probs dim:  torch.Size([40, 648])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 648]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 858, 200])
Passage Length:  858
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 858, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 858, 13])
Passage ques attention dim:  torch.Size([40, 858, 13])
Passage question vectors dim:  torch.Size([40, 858, 200])
Question Passage Similarity dim:  torch.Size([40, 858])
Question passage attention dim:  torch.Size([40, 858])
Final Merged Passage dim:  torch.Size([40, 858, 800])
Modeled Passage dim:  torch.Size([40, 858, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 858, 1000])
Span start logits:  torch.Size([40, 858])
span start probs dim:  torch.Size([40, 858])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 858]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 393, 200])
Passage Length:  393
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 393, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 393, 13])
Passage ques attention dim:  torch.Size([40, 393, 13])
Passage question vectors dim:  torch.Size([40, 393, 200])
Question Passage Similarity dim:  torch.Size([40, 393])
Question passage attention dim:  torch.Size([40, 393])
Final Merged Passage dim:  torch.Size([40, 393, 800])
Modeled Passage dim:  torch.Size([40, 393, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 393, 1000])
Span start logits:  torch.Size([40, 393])
span start probs dim:  torch.Size([40, 393])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 393]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 541, 200])
Passage Length:  541
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 541, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 541, 15])
Passage ques attention dim:  torch.Size([40, 541, 15])
Passage question vectors dim:  torch.Size([40, 541, 200])
Question Passage Similarity dim:  torch.Size([40, 541])
Question passage attention dim:  torch.Size([40, 541])
Final Merged Passage dim:  torch.Size([40, 541, 800])
Modeled Passage dim:  torch.Size([40, 541, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 541, 1000])
Span start logits:  torch.Size([40, 541])
span start probs dim:  torch.Size([40, 541])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 541]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 41, 200])
Embedded passage dim:  torch.Size([40, 1058, 200])
Passage Length:  1058
Encoded question dim:  torch.Size([40, 41, 200])
Encoded passage dim:  torch.Size([40, 1058, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1058, 41])
Passage ques attention dim:  torch.Size([40, 1058, 41])
Passage question vectors dim:  torch.Size([40, 1058, 200])
Question Passage Similarity dim:  torch.Size([40, 1058])
Question passage attention dim:  torch.Size([40, 1058])
Final Merged Passage dim:  torch.Size([40, 1058, 800])
Modeled Passage dim:  torch.Size([40, 1058, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1058, 1000])
Span start logits:  torch.Size([40, 1058])
span start probs dim:  torch.Size([40, 1058])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1058]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 465, 200])
Passage Length:  465
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 465, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 465, 14])
Passage ques attention dim:  torch.Size([40, 465, 14])
Passage question vectors dim:  torch.Size([40, 465, 200])
Question Passage Similarity dim:  torch.Size([40, 465])
Question passage attention dim:  torch.Size([40, 465])
Final Merged Passage dim:  torch.Size([40, 465, 800])
Modeled Passage dim:  torch.Size([40, 465, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 465, 1000])
Span start logits:  torch.Size([40, 465])
span start probs dim:  torch.Size([40, 465])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 465]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 389, 200])
Passage Length:  389
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 389, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 389, 17])
Passage ques attention dim:  torch.Size([40, 389, 17])
Passage question vectors dim:  torch.Size([40, 389, 200])
Question Passage Similarity dim:  torch.Size([40, 389])
Question passage attention dim:  torch.Size([40, 389])
Final Merged Passage dim:  torch.Size([40, 389, 800])
Modeled Passage dim:  torch.Size([40, 389, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 389, 1000])
Span start logits:  torch.Size([40, 389])
span start probs dim:  torch.Size([40, 389])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 389]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 408, 200])
Passage Length:  408
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 408, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 408, 17])
Passage ques attention dim:  torch.Size([40, 408, 17])
Passage question vectors dim:  torch.Size([40, 408, 200])
Question Passage Similarity dim:  torch.Size([40, 408])
Question passage attention dim:  torch.Size([40, 408])
Final Merged Passage dim:  torch.Size([40, 408, 800])
Modeled Passage dim:  torch.Size([40, 408, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 408, 1000])
Span start logits:  torch.Size([40, 408])
span start probs dim:  torch.Size([40, 408])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 408]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1780, 200])
Passage Length:  1780
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1780, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1780, 15])
Passage ques attention dim:  torch.Size([40, 1780, 15])
Passage question vectors dim:  torch.Size([40, 1780, 200])
Question Passage Similarity dim:  torch.Size([40, 1780])
Question passage attention dim:  torch.Size([40, 1780])
Final Merged Passage dim:  torch.Size([40, 1780, 800])
Modeled Passage dim:  torch.Size([40, 1780, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1780, 1000])
Span start logits:  torch.Size([40, 1780])
span start probs dim:  torch.Size([40, 1780])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1780]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1614, 200])
Passage Length:  1614
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1614, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1614, 12])
Passage ques attention dim:  torch.Size([40, 1614, 12])
Passage question vectors dim:  torch.Size([40, 1614, 200])
Question Passage Similarity dim:  torch.Size([40, 1614])
Question passage attention dim:  torch.Size([40, 1614])
Final Merged Passage dim:  torch.Size([40, 1614, 800])
Modeled Passage dim:  torch.Size([40, 1614, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1614, 1000])
Span start logits:  torch.Size([40, 1614])
span start probs dim:  torch.Size([40, 1614])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1614]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1158, 200])
Passage Length:  1158
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1158, 12])
Passage ques attention dim:  torch.Size([40, 1158, 12])
Passage question vectors dim:  torch.Size([40, 1158, 200])
Question Passage Similarity dim:  torch.Size([40, 1158])
Question passage attention dim:  torch.Size([40, 1158])
Final Merged Passage dim:  torch.Size([40, 1158, 800])
Modeled Passage dim:  torch.Size([40, 1158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1158, 1000])
Span start logits:  torch.Size([40, 1158])
span start probs dim:  torch.Size([40, 1158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 838, 200])
Passage Length:  838
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 838, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 838, 16])
Passage ques attention dim:  torch.Size([40, 838, 16])
Passage question vectors dim:  torch.Size([40, 838, 200])
Question Passage Similarity dim:  torch.Size([40, 838])
Question passage attention dim:  torch.Size([40, 838])
Final Merged Passage dim:  torch.Size([40, 838, 800])
Modeled Passage dim:  torch.Size([40, 838, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 838, 1000])
Span start logits:  torch.Size([40, 838])
span start probs dim:  torch.Size([40, 838])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 838]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1028, 200])
Passage Length:  1028
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1028, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1028, 15])
Passage ques attention dim:  torch.Size([40, 1028, 15])
Passage question vectors dim:  torch.Size([40, 1028, 200])
Question Passage Similarity dim:  torch.Size([40, 1028])
Question passage attention dim:  torch.Size([40, 1028])
Final Merged Passage dim:  torch.Size([40, 1028, 800])
Modeled Passage dim:  torch.Size([40, 1028, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1028, 1000])
Span start logits:  torch.Size([40, 1028])
span start probs dim:  torch.Size([40, 1028])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1028]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 872, 200])
Passage Length:  872
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 872, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 872, 13])
Passage ques attention dim:  torch.Size([40, 872, 13])
Passage question vectors dim:  torch.Size([40, 872, 200])
Question Passage Similarity dim:  torch.Size([40, 872])
Question passage attention dim:  torch.Size([40, 872])
Final Merged Passage dim:  torch.Size([40, 872, 800])
Modeled Passage dim:  torch.Size([40, 872, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 872, 1000])
Span start logits:  torch.Size([40, 872])
span start probs dim:  torch.Size([40, 872])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 872]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1077, 200])
Passage Length:  1077
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1077, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1077, 11])
Passage ques attention dim:  torch.Size([40, 1077, 11])
Passage question vectors dim:  torch.Size([40, 1077, 200])
Question Passage Similarity dim:  torch.Size([40, 1077])
Question passage attention dim:  torch.Size([40, 1077])
Final Merged Passage dim:  torch.Size([40, 1077, 800])
Modeled Passage dim:  torch.Size([40, 1077, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1077, 1000])
Span start logits:  torch.Size([40, 1077])
span start probs dim:  torch.Size([40, 1077])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1077]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 936, 200])
Passage Length:  936
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 936, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 936, 19])
Passage ques attention dim:  torch.Size([40, 936, 19])
Passage question vectors dim:  torch.Size([40, 936, 200])
Question Passage Similarity dim:  torch.Size([40, 936])
Question passage attention dim:  torch.Size([40, 936])
Final Merged Passage dim:  torch.Size([40, 936, 800])
Modeled Passage dim:  torch.Size([40, 936, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 936, 1000])
Span start logits:  torch.Size([40, 936])
span start probs dim:  torch.Size([40, 936])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 936]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1550, 200])
Passage Length:  1550
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1550, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1550, 15])
Passage ques attention dim:  torch.Size([40, 1550, 15])
Passage question vectors dim:  torch.Size([40, 1550, 200])
Question Passage Similarity dim:  torch.Size([40, 1550])
Question passage attention dim:  torch.Size([40, 1550])
Final Merged Passage dim:  torch.Size([40, 1550, 800])
Modeled Passage dim:  torch.Size([40, 1550, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1550, 1000])
Span start logits:  torch.Size([40, 1550])
span start probs dim:  torch.Size([40, 1550])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1550]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 579, 200])
Passage Length:  579
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 579, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 579, 15])
Passage ques attention dim:  torch.Size([40, 579, 15])
Passage question vectors dim:  torch.Size([40, 579, 200])
Question Passage Similarity dim:  torch.Size([40, 579])
Question passage attention dim:  torch.Size([40, 579])
Final Merged Passage dim:  torch.Size([40, 579, 800])
Modeled Passage dim:  torch.Size([40, 579, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 579, 1000])
Span start logits:  torch.Size([40, 579])
span start probs dim:  torch.Size([40, 579])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 579]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 322, 200])
Passage Length:  322
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 322, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 322, 14])
Passage ques attention dim:  torch.Size([40, 322, 14])
Passage question vectors dim:  torch.Size([40, 322, 200])
Question Passage Similarity dim:  torch.Size([40, 322])
Question passage attention dim:  torch.Size([40, 322])
Final Merged Passage dim:  torch.Size([40, 322, 800])
Modeled Passage dim:  torch.Size([40, 322, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 322, 1000])
Span start logits:  torch.Size([40, 322])
span start probs dim:  torch.Size([40, 322])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 322]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1622, 200])
Passage Length:  1622
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1622, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1622, 18])
Passage ques attention dim:  torch.Size([40, 1622, 18])
Passage question vectors dim:  torch.Size([40, 1622, 200])
Question Passage Similarity dim:  torch.Size([40, 1622])
Question passage attention dim:  torch.Size([40, 1622])
Final Merged Passage dim:  torch.Size([40, 1622, 800])
Modeled Passage dim:  torch.Size([40, 1622, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1622, 1000])
Span start logits:  torch.Size([40, 1622])
span start probs dim:  torch.Size([40, 1622])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1622]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1302, 200])
Passage Length:  1302
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1302, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1302, 12])
Passage ques attention dim:  torch.Size([40, 1302, 12])
Passage question vectors dim:  torch.Size([40, 1302, 200])
Question Passage Similarity dim:  torch.Size([40, 1302])
Question passage attention dim:  torch.Size([40, 1302])
Final Merged Passage dim:  torch.Size([40, 1302, 800])
Modeled Passage dim:  torch.Size([40, 1302, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1302, 1000])
Span start logits:  torch.Size([40, 1302])
span start probs dim:  torch.Size([40, 1302])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1302]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1102, 200])
Passage Length:  1102
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1102, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1102, 13])
Passage ques attention dim:  torch.Size([40, 1102, 13])
Passage question vectors dim:  torch.Size([40, 1102, 200])
Question Passage Similarity dim:  torch.Size([40, 1102])
Question passage attention dim:  torch.Size([40, 1102])
Final Merged Passage dim:  torch.Size([40, 1102, 800])
Modeled Passage dim:  torch.Size([40, 1102, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1102, 1000])
Span start logits:  torch.Size([40, 1102])
span start probs dim:  torch.Size([40, 1102])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1102]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 656, 200])
Passage Length:  656
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 656, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 656, 17])
Passage ques attention dim:  torch.Size([40, 656, 17])
Passage question vectors dim:  torch.Size([40, 656, 200])
Question Passage Similarity dim:  torch.Size([40, 656])
Question passage attention dim:  torch.Size([40, 656])
Final Merged Passage dim:  torch.Size([40, 656, 800])
Modeled Passage dim:  torch.Size([40, 656, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 656, 1000])
Span start logits:  torch.Size([40, 656])
span start probs dim:  torch.Size([40, 656])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 656]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 314, 200])
Passage Length:  314
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 314, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 314, 13])
Passage ques attention dim:  torch.Size([40, 314, 13])
Passage question vectors dim:  torch.Size([40, 314, 200])
Question Passage Similarity dim:  torch.Size([40, 314])
Question passage attention dim:  torch.Size([40, 314])
Final Merged Passage dim:  torch.Size([40, 314, 800])
Modeled Passage dim:  torch.Size([40, 314, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 314, 1000])
Span start logits:  torch.Size([40, 314])
span start probs dim:  torch.Size([40, 314])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 314]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 616, 200])
Passage Length:  616
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 616, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 616, 12])
Passage ques attention dim:  torch.Size([40, 616, 12])
Passage question vectors dim:  torch.Size([40, 616, 200])
Question Passage Similarity dim:  torch.Size([40, 616])
Question passage attention dim:  torch.Size([40, 616])
Final Merged Passage dim:  torch.Size([40, 616, 800])
Modeled Passage dim:  torch.Size([40, 616, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 616, 1000])
Span start logits:  torch.Size([40, 616])
span start probs dim:  torch.Size([40, 616])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 616]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 369, 200])
Passage Length:  369
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 369, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 369, 11])
Passage ques attention dim:  torch.Size([40, 369, 11])
Passage question vectors dim:  torch.Size([40, 369, 200])
Question Passage Similarity dim:  torch.Size([40, 369])
Question passage attention dim:  torch.Size([40, 369])
Final Merged Passage dim:  torch.Size([40, 369, 800])
Modeled Passage dim:  torch.Size([40, 369, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 369, 1000])
Span start logits:  torch.Size([40, 369])
span start probs dim:  torch.Size([40, 369])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 369]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 923, 200])
Passage Length:  923
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 923, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 923, 14])
Passage ques attention dim:  torch.Size([40, 923, 14])
Passage question vectors dim:  torch.Size([40, 923, 200])
Question Passage Similarity dim:  torch.Size([40, 923])
Question passage attention dim:  torch.Size([40, 923])
Final Merged Passage dim:  torch.Size([40, 923, 800])
Modeled Passage dim:  torch.Size([40, 923, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 923, 1000])
Span start logits:  torch.Size([40, 923])
span start probs dim:  torch.Size([40, 923])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 923]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 727, 200])
Passage Length:  727
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 727, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 727, 15])
Passage ques attention dim:  torch.Size([40, 727, 15])
Passage question vectors dim:  torch.Size([40, 727, 200])
Question Passage Similarity dim:  torch.Size([40, 727])
Question passage attention dim:  torch.Size([40, 727])
Final Merged Passage dim:  torch.Size([40, 727, 800])
Modeled Passage dim:  torch.Size([40, 727, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 727, 1000])
Span start logits:  torch.Size([40, 727])
span start probs dim:  torch.Size([40, 727])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 727]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 980, 200])
Passage Length:  980
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 980, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 980, 12])
Passage ques attention dim:  torch.Size([40, 980, 12])
Passage question vectors dim:  torch.Size([40, 980, 200])
Question Passage Similarity dim:  torch.Size([40, 980])
Question passage attention dim:  torch.Size([40, 980])
Final Merged Passage dim:  torch.Size([40, 980, 800])
Modeled Passage dim:  torch.Size([40, 980, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 980, 1000])
Span start logits:  torch.Size([40, 980])
span start probs dim:  torch.Size([40, 980])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 980]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1889, 200])
Passage Length:  1889
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1889, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1889, 12])
Passage ques attention dim:  torch.Size([40, 1889, 12])
Passage question vectors dim:  torch.Size([40, 1889, 200])
Question Passage Similarity dim:  torch.Size([40, 1889])
Question passage attention dim:  torch.Size([40, 1889])
Final Merged Passage dim:  torch.Size([40, 1889, 800])
Modeled Passage dim:  torch.Size([40, 1889, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1889, 1000])
Span start logits:  torch.Size([40, 1889])
span start probs dim:  torch.Size([40, 1889])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1889]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 600, 200])
Passage Length:  600
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 600, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 600, 15])
Passage ques attention dim:  torch.Size([40, 600, 15])
Passage question vectors dim:  torch.Size([40, 600, 200])
Question Passage Similarity dim:  torch.Size([40, 600])
Question passage attention dim:  torch.Size([40, 600])
Final Merged Passage dim:  torch.Size([40, 600, 800])
Modeled Passage dim:  torch.Size([40, 600, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 600, 1000])
Span start logits:  torch.Size([40, 600])
span start probs dim:  torch.Size([40, 600])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 600]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 144, 200])
Embedded passage dim:  torch.Size([40, 363, 200])
Passage Length:  363
Encoded question dim:  torch.Size([40, 144, 200])
Encoded passage dim:  torch.Size([40, 363, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 363, 144])
Passage ques attention dim:  torch.Size([40, 363, 144])
Passage question vectors dim:  torch.Size([40, 363, 200])
Question Passage Similarity dim:  torch.Size([40, 363])
Question passage attention dim:  torch.Size([40, 363])
Final Merged Passage dim:  torch.Size([40, 363, 800])
Modeled Passage dim:  torch.Size([40, 363, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 363, 1000])
Span start logits:  torch.Size([40, 363])
span start probs dim:  torch.Size([40, 363])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 363]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 607, 200])
Passage Length:  607
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 607, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 607, 16])
Passage ques attention dim:  torch.Size([40, 607, 16])
Passage question vectors dim:  torch.Size([40, 607, 200])
Question Passage Similarity dim:  torch.Size([40, 607])
Question passage attention dim:  torch.Size([40, 607])
Final Merged Passage dim:  torch.Size([40, 607, 800])
Modeled Passage dim:  torch.Size([40, 607, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 607, 1000])
Span start logits:  torch.Size([40, 607])
span start probs dim:  torch.Size([40, 607])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 607]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1267, 200])
Passage Length:  1267
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1267, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1267, 16])
Passage ques attention dim:  torch.Size([40, 1267, 16])
Passage question vectors dim:  torch.Size([40, 1267, 200])
Question Passage Similarity dim:  torch.Size([40, 1267])
Question passage attention dim:  torch.Size([40, 1267])
Final Merged Passage dim:  torch.Size([40, 1267, 800])
Modeled Passage dim:  torch.Size([40, 1267, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1267, 1000])
Span start logits:  torch.Size([40, 1267])
span start probs dim:  torch.Size([40, 1267])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1267]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 708, 200])
Passage Length:  708
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 708, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 708, 15])
Passage ques attention dim:  torch.Size([40, 708, 15])
Passage question vectors dim:  torch.Size([40, 708, 200])
Question Passage Similarity dim:  torch.Size([40, 708])
Question passage attention dim:  torch.Size([40, 708])
Final Merged Passage dim:  torch.Size([40, 708, 800])
Modeled Passage dim:  torch.Size([40, 708, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 708, 1000])
Span start logits:  torch.Size([40, 708])
span start probs dim:  torch.Size([40, 708])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 708]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 845, 200])
Passage Length:  845
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 845, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 845, 13])
Passage ques attention dim:  torch.Size([40, 845, 13])
Passage question vectors dim:  torch.Size([40, 845, 200])
Question Passage Similarity dim:  torch.Size([40, 845])
Question passage attention dim:  torch.Size([40, 845])
Final Merged Passage dim:  torch.Size([40, 845, 800])
Modeled Passage dim:  torch.Size([40, 845, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 845, 1000])
Span start logits:  torch.Size([40, 845])
span start probs dim:  torch.Size([40, 845])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 845]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1587, 200])
Passage Length:  1587
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1587, 20])
Passage ques attention dim:  torch.Size([40, 1587, 20])
Passage question vectors dim:  torch.Size([40, 1587, 200])
Question Passage Similarity dim:  torch.Size([40, 1587])
Question passage attention dim:  torch.Size([40, 1587])
Final Merged Passage dim:  torch.Size([40, 1587, 800])
Modeled Passage dim:  torch.Size([40, 1587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1587, 1000])
Span start logits:  torch.Size([40, 1587])
span start probs dim:  torch.Size([40, 1587])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1587]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 381, 14])
Passage ques attention dim:  torch.Size([40, 381, 14])
Passage question vectors dim:  torch.Size([40, 381, 200])
Question Passage Similarity dim:  torch.Size([40, 381])
Question passage attention dim:  torch.Size([40, 381])
Final Merged Passage dim:  torch.Size([40, 381, 800])
Modeled Passage dim:  torch.Size([40, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 381, 1000])
Span start logits:  torch.Size([40, 381])
span start probs dim:  torch.Size([40, 381])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 381]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 768, 200])
Passage Length:  768
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 768, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 768, 14])
Passage ques attention dim:  torch.Size([40, 768, 14])
Passage question vectors dim:  torch.Size([40, 768, 200])
Question Passage Similarity dim:  torch.Size([40, 768])
Question passage attention dim:  torch.Size([40, 768])
Final Merged Passage dim:  torch.Size([40, 768, 800])
Modeled Passage dim:  torch.Size([40, 768, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 768, 1000])
Span start logits:  torch.Size([40, 768])
span start probs dim:  torch.Size([40, 768])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 768]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 294, 200])
Passage Length:  294
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 294, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 294, 24])
Passage ques attention dim:  torch.Size([40, 294, 24])
Passage question vectors dim:  torch.Size([40, 294, 200])
Question Passage Similarity dim:  torch.Size([40, 294])
Question passage attention dim:  torch.Size([40, 294])
Final Merged Passage dim:  torch.Size([40, 294, 800])
Modeled Passage dim:  torch.Size([40, 294, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 294, 1000])
Span start logits:  torch.Size([40, 294])
span start probs dim:  torch.Size([40, 294])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 294]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 396, 200])
Passage Length:  396
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 396, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 396, 14])
Passage ques attention dim:  torch.Size([40, 396, 14])
Passage question vectors dim:  torch.Size([40, 396, 200])
Question Passage Similarity dim:  torch.Size([40, 396])
Question passage attention dim:  torch.Size([40, 396])
Final Merged Passage dim:  torch.Size([40, 396, 800])
Modeled Passage dim:  torch.Size([40, 396, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 396, 1000])
Span start logits:  torch.Size([40, 396])
span start probs dim:  torch.Size([40, 396])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 396]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 264, 200])
Passage Length:  264
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 264, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 264, 18])
Passage ques attention dim:  torch.Size([40, 264, 18])
Passage question vectors dim:  torch.Size([40, 264, 200])
Question Passage Similarity dim:  torch.Size([40, 264])
Question passage attention dim:  torch.Size([40, 264])
Final Merged Passage dim:  torch.Size([40, 264, 800])
Modeled Passage dim:  torch.Size([40, 264, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 264, 1000])
Span start logits:  torch.Size([40, 264])
span start probs dim:  torch.Size([40, 264])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 264]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 313, 200])
Passage Length:  313
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 313, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 313, 13])
Passage ques attention dim:  torch.Size([40, 313, 13])
Passage question vectors dim:  torch.Size([40, 313, 200])
Question Passage Similarity dim:  torch.Size([40, 313])
Question passage attention dim:  torch.Size([40, 313])
Final Merged Passage dim:  torch.Size([40, 313, 800])
Modeled Passage dim:  torch.Size([40, 313, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 313, 1000])
Span start logits:  torch.Size([40, 313])
span start probs dim:  torch.Size([40, 313])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 313]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 598, 200])
Passage Length:  598
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 598, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 598, 14])
Passage ques attention dim:  torch.Size([40, 598, 14])
Passage question vectors dim:  torch.Size([40, 598, 200])
Question Passage Similarity dim:  torch.Size([40, 598])
Question passage attention dim:  torch.Size([40, 598])
Final Merged Passage dim:  torch.Size([40, 598, 800])
Modeled Passage dim:  torch.Size([40, 598, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 598, 1000])
Span start logits:  torch.Size([40, 598])
span start probs dim:  torch.Size([40, 598])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 598]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 775, 200])
Passage Length:  775
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 775, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 775, 18])
Passage ques attention dim:  torch.Size([40, 775, 18])
Passage question vectors dim:  torch.Size([40, 775, 200])
Question Passage Similarity dim:  torch.Size([40, 775])
Question passage attention dim:  torch.Size([40, 775])
Final Merged Passage dim:  torch.Size([40, 775, 800])
Modeled Passage dim:  torch.Size([40, 775, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 775, 1000])
Span start logits:  torch.Size([40, 775])
span start probs dim:  torch.Size([40, 775])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 775]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 453, 200])
Passage Length:  453
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 453, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 453, 17])
Passage ques attention dim:  torch.Size([40, 453, 17])
Passage question vectors dim:  torch.Size([40, 453, 200])
Question Passage Similarity dim:  torch.Size([40, 453])
Question passage attention dim:  torch.Size([40, 453])
Final Merged Passage dim:  torch.Size([40, 453, 800])
Modeled Passage dim:  torch.Size([40, 453, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 453, 1000])
Span start logits:  torch.Size([40, 453])
span start probs dim:  torch.Size([40, 453])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 453]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1192, 200])
Passage Length:  1192
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1192, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1192, 15])
Passage ques attention dim:  torch.Size([40, 1192, 15])
Passage question vectors dim:  torch.Size([40, 1192, 200])
Question Passage Similarity dim:  torch.Size([40, 1192])
Question passage attention dim:  torch.Size([40, 1192])
Final Merged Passage dim:  torch.Size([40, 1192, 800])
Modeled Passage dim:  torch.Size([40, 1192, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1192, 1000])
Span start logits:  torch.Size([40, 1192])
span start probs dim:  torch.Size([40, 1192])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1192]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 539, 200])
Passage Length:  539
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 539, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 539, 16])
Passage ques attention dim:  torch.Size([40, 539, 16])
Passage question vectors dim:  torch.Size([40, 539, 200])
Question Passage Similarity dim:  torch.Size([40, 539])
Question passage attention dim:  torch.Size([40, 539])
Final Merged Passage dim:  torch.Size([40, 539, 800])
Modeled Passage dim:  torch.Size([40, 539, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 539, 1000])
Span start logits:  torch.Size([40, 539])
span start probs dim:  torch.Size([40, 539])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 539]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1460, 200])
Passage Length:  1460
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1460, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1460, 18])
Passage ques attention dim:  torch.Size([40, 1460, 18])
Passage question vectors dim:  torch.Size([40, 1460, 200])
Question Passage Similarity dim:  torch.Size([40, 1460])
Question passage attention dim:  torch.Size([40, 1460])
Final Merged Passage dim:  torch.Size([40, 1460, 800])
Modeled Passage dim:  torch.Size([40, 1460, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1460, 1000])
Span start logits:  torch.Size([40, 1460])
span start probs dim:  torch.Size([40, 1460])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1460]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 461, 200])
Passage Length:  461
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 461, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 461, 12])
Passage ques attention dim:  torch.Size([40, 461, 12])
Passage question vectors dim:  torch.Size([40, 461, 200])
Question Passage Similarity dim:  torch.Size([40, 461])
Question passage attention dim:  torch.Size([40, 461])
Final Merged Passage dim:  torch.Size([40, 461, 800])
Modeled Passage dim:  torch.Size([40, 461, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 461, 1000])
Span start logits:  torch.Size([40, 461])
span start probs dim:  torch.Size([40, 461])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 461]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 786, 200])
Passage Length:  786
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 786, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 786, 15])
Passage ques attention dim:  torch.Size([40, 786, 15])
Passage question vectors dim:  torch.Size([40, 786, 200])
Question Passage Similarity dim:  torch.Size([40, 786])
Question passage attention dim:  torch.Size([40, 786])
Final Merged Passage dim:  torch.Size([40, 786, 800])
Modeled Passage dim:  torch.Size([40, 786, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 786, 1000])
Span start logits:  torch.Size([40, 786])
span start probs dim:  torch.Size([40, 786])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 786]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 656, 200])
Passage Length:  656
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 656, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 656, 14])
Passage ques attention dim:  torch.Size([40, 656, 14])
Passage question vectors dim:  torch.Size([40, 656, 200])
Question Passage Similarity dim:  torch.Size([40, 656])
Question passage attention dim:  torch.Size([40, 656])
Final Merged Passage dim:  torch.Size([40, 656, 800])
Modeled Passage dim:  torch.Size([40, 656, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 656, 1000])
Span start logits:  torch.Size([40, 656])
span start probs dim:  torch.Size([40, 656])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 656]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1043, 200])
Passage Length:  1043
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1043, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1043, 13])
Passage ques attention dim:  torch.Size([40, 1043, 13])
Passage question vectors dim:  torch.Size([40, 1043, 200])
Question Passage Similarity dim:  torch.Size([40, 1043])
Question passage attention dim:  torch.Size([40, 1043])
Final Merged Passage dim:  torch.Size([40, 1043, 800])
Modeled Passage dim:  torch.Size([40, 1043, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1043, 1000])
Span start logits:  torch.Size([40, 1043])
span start probs dim:  torch.Size([40, 1043])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1043]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 889, 200])
Passage Length:  889
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 889, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 889, 17])
Passage ques attention dim:  torch.Size([40, 889, 17])
Passage question vectors dim:  torch.Size([40, 889, 200])
Question Passage Similarity dim:  torch.Size([40, 889])
Question passage attention dim:  torch.Size([40, 889])
Final Merged Passage dim:  torch.Size([40, 889, 800])
Modeled Passage dim:  torch.Size([40, 889, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 889, 1000])
Span start logits:  torch.Size([40, 889])
span start probs dim:  torch.Size([40, 889])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 889]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1105, 200])
Passage Length:  1105
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1105, 19])
Passage ques attention dim:  torch.Size([40, 1105, 19])
Passage question vectors dim:  torch.Size([40, 1105, 200])
Question Passage Similarity dim:  torch.Size([40, 1105])
Question passage attention dim:  torch.Size([40, 1105])
Final Merged Passage dim:  torch.Size([40, 1105, 800])
Modeled Passage dim:  torch.Size([40, 1105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1105, 1000])
Span start logits:  torch.Size([40, 1105])
span start probs dim:  torch.Size([40, 1105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 871, 200])
Passage Length:  871
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 871, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 871, 11])
Passage ques attention dim:  torch.Size([40, 871, 11])
Passage question vectors dim:  torch.Size([40, 871, 200])
Question Passage Similarity dim:  torch.Size([40, 871])
Question passage attention dim:  torch.Size([40, 871])
Final Merged Passage dim:  torch.Size([40, 871, 800])
Modeled Passage dim:  torch.Size([40, 871, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 871, 1000])
Span start logits:  torch.Size([40, 871])
span start probs dim:  torch.Size([40, 871])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 871]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 712, 200])
Passage Length:  712
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 712, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 712, 14])
Passage ques attention dim:  torch.Size([40, 712, 14])
Passage question vectors dim:  torch.Size([40, 712, 200])
Question Passage Similarity dim:  torch.Size([40, 712])
Question passage attention dim:  torch.Size([40, 712])
Final Merged Passage dim:  torch.Size([40, 712, 800])
Modeled Passage dim:  torch.Size([40, 712, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 712, 1000])
Span start logits:  torch.Size([40, 712])
span start probs dim:  torch.Size([40, 712])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 712]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1243, 200])
Passage Length:  1243
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1243, 16])
Passage ques attention dim:  torch.Size([40, 1243, 16])
Passage question vectors dim:  torch.Size([40, 1243, 200])
Question Passage Similarity dim:  torch.Size([40, 1243])
Question passage attention dim:  torch.Size([40, 1243])
Final Merged Passage dim:  torch.Size([40, 1243, 800])
Modeled Passage dim:  torch.Size([40, 1243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1243, 1000])
Span start logits:  torch.Size([40, 1243])
span start probs dim:  torch.Size([40, 1243])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1243]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 599, 200])
Passage Length:  599
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 599, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 599, 14])
Passage ques attention dim:  torch.Size([40, 599, 14])
Passage question vectors dim:  torch.Size([40, 599, 200])
Question Passage Similarity dim:  torch.Size([40, 599])
Question passage attention dim:  torch.Size([40, 599])
Final Merged Passage dim:  torch.Size([40, 599, 800])
Modeled Passage dim:  torch.Size([40, 599, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 599, 1000])
Span start logits:  torch.Size([40, 599])
span start probs dim:  torch.Size([40, 599])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 599]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1291, 200])
Passage Length:  1291
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1291, 19])
Passage ques attention dim:  torch.Size([40, 1291, 19])
Passage question vectors dim:  torch.Size([40, 1291, 200])
Question Passage Similarity dim:  torch.Size([40, 1291])
Question passage attention dim:  torch.Size([40, 1291])
Final Merged Passage dim:  torch.Size([40, 1291, 800])
Modeled Passage dim:  torch.Size([40, 1291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1291, 1000])
Span start logits:  torch.Size([40, 1291])
span start probs dim:  torch.Size([40, 1291])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1291]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1762, 200])
Passage Length:  1762
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1762, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1762, 14])
Passage ques attention dim:  torch.Size([40, 1762, 14])
Passage question vectors dim:  torch.Size([40, 1762, 200])
Question Passage Similarity dim:  torch.Size([40, 1762])
Question passage attention dim:  torch.Size([40, 1762])
Final Merged Passage dim:  torch.Size([40, 1762, 800])
Modeled Passage dim:  torch.Size([40, 1762, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1762, 1000])
Span start logits:  torch.Size([40, 1762])
span start probs dim:  torch.Size([40, 1762])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1762]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1451, 200])
Passage Length:  1451
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1451, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1451, 12])
Passage ques attention dim:  torch.Size([40, 1451, 12])
Passage question vectors dim:  torch.Size([40, 1451, 200])
Question Passage Similarity dim:  torch.Size([40, 1451])
Question passage attention dim:  torch.Size([40, 1451])
Final Merged Passage dim:  torch.Size([40, 1451, 800])
Modeled Passage dim:  torch.Size([40, 1451, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1451, 1000])
Span start logits:  torch.Size([40, 1451])
span start probs dim:  torch.Size([40, 1451])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1451]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 821, 200])
Passage Length:  821
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 821, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 821, 14])
Passage ques attention dim:  torch.Size([40, 821, 14])
Passage question vectors dim:  torch.Size([40, 821, 200])
Question Passage Similarity dim:  torch.Size([40, 821])
Question passage attention dim:  torch.Size([40, 821])
Final Merged Passage dim:  torch.Size([40, 821, 800])
Modeled Passage dim:  torch.Size([40, 821, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 821, 1000])
Span start logits:  torch.Size([40, 821])
span start probs dim:  torch.Size([40, 821])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 821]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 339, 200])
Passage Length:  339
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 339, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 339, 14])
Passage ques attention dim:  torch.Size([40, 339, 14])
Passage question vectors dim:  torch.Size([40, 339, 200])
Question Passage Similarity dim:  torch.Size([40, 339])
Question passage attention dim:  torch.Size([40, 339])
Final Merged Passage dim:  torch.Size([40, 339, 800])
Modeled Passage dim:  torch.Size([40, 339, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 339, 1000])
Span start logits:  torch.Size([40, 339])
span start probs dim:  torch.Size([40, 339])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 339]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1450, 200])
Passage Length:  1450
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1450, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1450, 14])
Passage ques attention dim:  torch.Size([40, 1450, 14])
Passage question vectors dim:  torch.Size([40, 1450, 200])
Question Passage Similarity dim:  torch.Size([40, 1450])
Question passage attention dim:  torch.Size([40, 1450])
Final Merged Passage dim:  torch.Size([40, 1450, 800])
Modeled Passage dim:  torch.Size([40, 1450, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1450, 1000])
Span start logits:  torch.Size([40, 1450])
span start probs dim:  torch.Size([40, 1450])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1450]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 443, 200])
Passage Length:  443
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 443, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 443, 16])
Passage ques attention dim:  torch.Size([40, 443, 16])
Passage question vectors dim:  torch.Size([40, 443, 200])
Question Passage Similarity dim:  torch.Size([40, 443])
Question passage attention dim:  torch.Size([40, 443])
Final Merged Passage dim:  torch.Size([40, 443, 800])
Modeled Passage dim:  torch.Size([40, 443, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 443, 1000])
Span start logits:  torch.Size([40, 443])
span start probs dim:  torch.Size([40, 443])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 443]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 229, 200])
Passage Length:  229
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 229, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 229, 14])
Passage ques attention dim:  torch.Size([40, 229, 14])
Passage question vectors dim:  torch.Size([40, 229, 200])
Question Passage Similarity dim:  torch.Size([40, 229])
Question passage attention dim:  torch.Size([40, 229])
Final Merged Passage dim:  torch.Size([40, 229, 800])
Modeled Passage dim:  torch.Size([40, 229, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 229, 1000])
Span start logits:  torch.Size([40, 229])
span start probs dim:  torch.Size([40, 229])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 229]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 802, 200])
Passage Length:  802
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 802, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 802, 14])
Passage ques attention dim:  torch.Size([40, 802, 14])
Passage question vectors dim:  torch.Size([40, 802, 200])
Question Passage Similarity dim:  torch.Size([40, 802])
Question passage attention dim:  torch.Size([40, 802])
Final Merged Passage dim:  torch.Size([40, 802, 800])
Modeled Passage dim:  torch.Size([40, 802, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 802, 1000])
Span start logits:  torch.Size([40, 802])
span start probs dim:  torch.Size([40, 802])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 802]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 920, 200])
Passage Length:  920
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 920, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 920, 15])
Passage ques attention dim:  torch.Size([40, 920, 15])
Passage question vectors dim:  torch.Size([40, 920, 200])
Question Passage Similarity dim:  torch.Size([40, 920])
Question passage attention dim:  torch.Size([40, 920])
Final Merged Passage dim:  torch.Size([40, 920, 800])
Modeled Passage dim:  torch.Size([40, 920, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 920, 1000])
Span start logits:  torch.Size([40, 920])
span start probs dim:  torch.Size([40, 920])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 920]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 301, 22])
Passage ques attention dim:  torch.Size([40, 301, 22])
Passage question vectors dim:  torch.Size([40, 301, 200])
Question Passage Similarity dim:  torch.Size([40, 301])
Question passage attention dim:  torch.Size([40, 301])
Final Merged Passage dim:  torch.Size([40, 301, 800])
Modeled Passage dim:  torch.Size([40, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 301, 1000])
Span start logits:  torch.Size([40, 301])
span start probs dim:  torch.Size([40, 301])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 301]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 237, 200])
Passage Length:  237
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 237, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 237, 14])
Passage ques attention dim:  torch.Size([40, 237, 14])
Passage question vectors dim:  torch.Size([40, 237, 200])
Question Passage Similarity dim:  torch.Size([40, 237])
Question passage attention dim:  torch.Size([40, 237])
Final Merged Passage dim:  torch.Size([40, 237, 800])
Modeled Passage dim:  torch.Size([40, 237, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 237, 1000])
Span start logits:  torch.Size([40, 237])
span start probs dim:  torch.Size([40, 237])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 237]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 273, 12])
Passage ques attention dim:  torch.Size([40, 273, 12])
Passage question vectors dim:  torch.Size([40, 273, 200])
Question Passage Similarity dim:  torch.Size([40, 273])
Question passage attention dim:  torch.Size([40, 273])
Final Merged Passage dim:  torch.Size([40, 273, 800])
Modeled Passage dim:  torch.Size([40, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 273, 1000])
Span start logits:  torch.Size([40, 273])
span start probs dim:  torch.Size([40, 273])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 273]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 754, 200])
Passage Length:  754
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 754, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 754, 13])
Passage ques attention dim:  torch.Size([40, 754, 13])
Passage question vectors dim:  torch.Size([40, 754, 200])
Question Passage Similarity dim:  torch.Size([40, 754])
Question passage attention dim:  torch.Size([40, 754])
Final Merged Passage dim:  torch.Size([40, 754, 800])
Modeled Passage dim:  torch.Size([40, 754, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 754, 1000])
Span start logits:  torch.Size([40, 754])
span start probs dim:  torch.Size([40, 754])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 754]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 41, 200])
Embedded passage dim:  torch.Size([40, 410, 200])
Passage Length:  410
Encoded question dim:  torch.Size([40, 41, 200])
Encoded passage dim:  torch.Size([40, 410, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 410, 41])
Passage ques attention dim:  torch.Size([40, 410, 41])
Passage question vectors dim:  torch.Size([40, 410, 200])
Question Passage Similarity dim:  torch.Size([40, 410])
Question passage attention dim:  torch.Size([40, 410])
Final Merged Passage dim:  torch.Size([40, 410, 800])
Modeled Passage dim:  torch.Size([40, 410, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 410, 1000])
Span start logits:  torch.Size([40, 410])
span start probs dim:  torch.Size([40, 410])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 410]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 527, 200])
Passage Length:  527
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 527, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 527, 16])
Passage ques attention dim:  torch.Size([40, 527, 16])
Passage question vectors dim:  torch.Size([40, 527, 200])
Question Passage Similarity dim:  torch.Size([40, 527])
Question passage attention dim:  torch.Size([40, 527])
Final Merged Passage dim:  torch.Size([40, 527, 800])
Modeled Passage dim:  torch.Size([40, 527, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 527, 1000])
Span start logits:  torch.Size([40, 527])
span start probs dim:  torch.Size([40, 527])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 527]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 910, 200])
Passage Length:  910
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 910, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 910, 15])
Passage ques attention dim:  torch.Size([40, 910, 15])
Passage question vectors dim:  torch.Size([40, 910, 200])
Question Passage Similarity dim:  torch.Size([40, 910])
Question passage attention dim:  torch.Size([40, 910])
Final Merged Passage dim:  torch.Size([40, 910, 800])
Modeled Passage dim:  torch.Size([40, 910, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 910, 1000])
Span start logits:  torch.Size([40, 910])
span start probs dim:  torch.Size([40, 910])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 910]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 287, 200])
Passage Length:  287
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 287, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 287, 13])
Passage ques attention dim:  torch.Size([40, 287, 13])
Passage question vectors dim:  torch.Size([40, 287, 200])
Question Passage Similarity dim:  torch.Size([40, 287])
Question passage attention dim:  torch.Size([40, 287])
Final Merged Passage dim:  torch.Size([40, 287, 800])
Modeled Passage dim:  torch.Size([40, 287, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 287, 1000])
Span start logits:  torch.Size([40, 287])
span start probs dim:  torch.Size([40, 287])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 287]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1104, 200])
Passage Length:  1104
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1104, 19])
Passage ques attention dim:  torch.Size([40, 1104, 19])
Passage question vectors dim:  torch.Size([40, 1104, 200])
Question Passage Similarity dim:  torch.Size([40, 1104])
Question passage attention dim:  torch.Size([40, 1104])
Final Merged Passage dim:  torch.Size([40, 1104, 800])
Modeled Passage dim:  torch.Size([40, 1104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1104, 1000])
Span start logits:  torch.Size([40, 1104])
span start probs dim:  torch.Size([40, 1104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1043, 200])
Passage Length:  1043
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1043, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1043, 13])
Passage ques attention dim:  torch.Size([40, 1043, 13])
Passage question vectors dim:  torch.Size([40, 1043, 200])
Question Passage Similarity dim:  torch.Size([40, 1043])
Question passage attention dim:  torch.Size([40, 1043])
Final Merged Passage dim:  torch.Size([40, 1043, 800])
Modeled Passage dim:  torch.Size([40, 1043, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1043, 1000])
Span start logits:  torch.Size([40, 1043])
span start probs dim:  torch.Size([40, 1043])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1043]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1610, 200])
Passage Length:  1610
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1610, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1610, 15])
Passage ques attention dim:  torch.Size([40, 1610, 15])
Passage question vectors dim:  torch.Size([40, 1610, 200])
Question Passage Similarity dim:  torch.Size([40, 1610])
Question passage attention dim:  torch.Size([40, 1610])
Final Merged Passage dim:  torch.Size([40, 1610, 800])
Modeled Passage dim:  torch.Size([40, 1610, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1610, 1000])
Span start logits:  torch.Size([40, 1610])
span start probs dim:  torch.Size([40, 1610])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1610]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 618, 200])
Passage Length:  618
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 618, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 618, 15])
Passage ques attention dim:  torch.Size([40, 618, 15])
Passage question vectors dim:  torch.Size([40, 618, 200])
Question Passage Similarity dim:  torch.Size([40, 618])
Question passage attention dim:  torch.Size([40, 618])
Final Merged Passage dim:  torch.Size([40, 618, 800])
Modeled Passage dim:  torch.Size([40, 618, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 618, 1000])
Span start logits:  torch.Size([40, 618])
span start probs dim:  torch.Size([40, 618])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 618]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1074, 200])
Passage Length:  1074
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1074, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1074, 13])
Passage ques attention dim:  torch.Size([40, 1074, 13])
Passage question vectors dim:  torch.Size([40, 1074, 200])
Question Passage Similarity dim:  torch.Size([40, 1074])
Question passage attention dim:  torch.Size([40, 1074])
Final Merged Passage dim:  torch.Size([40, 1074, 800])
Modeled Passage dim:  torch.Size([40, 1074, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1074, 1000])
Span start logits:  torch.Size([40, 1074])
span start probs dim:  torch.Size([40, 1074])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1074]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 56, 200])
Embedded passage dim:  torch.Size([40, 1251, 200])
Passage Length:  1251
Encoded question dim:  torch.Size([40, 56, 200])
Encoded passage dim:  torch.Size([40, 1251, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1251, 56])
Passage ques attention dim:  torch.Size([40, 1251, 56])
Passage question vectors dim:  torch.Size([40, 1251, 200])
Question Passage Similarity dim:  torch.Size([40, 1251])
Question passage attention dim:  torch.Size([40, 1251])
Final Merged Passage dim:  torch.Size([40, 1251, 800])
Modeled Passage dim:  torch.Size([40, 1251, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1251, 1000])
Span start logits:  torch.Size([40, 1251])
span start probs dim:  torch.Size([40, 1251])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1251]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 886, 200])
Passage Length:  886
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 886, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 886, 12])
Passage ques attention dim:  torch.Size([40, 886, 12])
Passage question vectors dim:  torch.Size([40, 886, 200])
Question Passage Similarity dim:  torch.Size([40, 886])
Question passage attention dim:  torch.Size([40, 886])
Final Merged Passage dim:  torch.Size([40, 886, 800])
Modeled Passage dim:  torch.Size([40, 886, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 886, 1000])
Span start logits:  torch.Size([40, 886])
span start probs dim:  torch.Size([40, 886])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 886]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 513, 200])
Passage Length:  513
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 513, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 513, 14])
Passage ques attention dim:  torch.Size([40, 513, 14])
Passage question vectors dim:  torch.Size([40, 513, 200])
Question Passage Similarity dim:  torch.Size([40, 513])
Question passage attention dim:  torch.Size([40, 513])
Final Merged Passage dim:  torch.Size([40, 513, 800])
Modeled Passage dim:  torch.Size([40, 513, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 513, 1000])
Span start logits:  torch.Size([40, 513])
span start probs dim:  torch.Size([40, 513])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 513]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1184, 200])
Passage Length:  1184
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1184, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1184, 13])
Passage ques attention dim:  torch.Size([40, 1184, 13])
Passage question vectors dim:  torch.Size([40, 1184, 200])
Question Passage Similarity dim:  torch.Size([40, 1184])
Question passage attention dim:  torch.Size([40, 1184])
Final Merged Passage dim:  torch.Size([40, 1184, 800])
Modeled Passage dim:  torch.Size([40, 1184, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1184, 1000])
Span start logits:  torch.Size([40, 1184])
span start probs dim:  torch.Size([40, 1184])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1184]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 706, 200])
Passage Length:  706
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 706, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 706, 13])
Passage ques attention dim:  torch.Size([40, 706, 13])
Passage question vectors dim:  torch.Size([40, 706, 200])
Question Passage Similarity dim:  torch.Size([40, 706])
Question passage attention dim:  torch.Size([40, 706])
Final Merged Passage dim:  torch.Size([40, 706, 800])
Modeled Passage dim:  torch.Size([40, 706, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 706, 1000])
Span start logits:  torch.Size([40, 706])
span start probs dim:  torch.Size([40, 706])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 706]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 529, 200])
Passage Length:  529
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 529, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 529, 17])
Passage ques attention dim:  torch.Size([40, 529, 17])
Passage question vectors dim:  torch.Size([40, 529, 200])
Question Passage Similarity dim:  torch.Size([40, 529])
Question passage attention dim:  torch.Size([40, 529])
Final Merged Passage dim:  torch.Size([40, 529, 800])
Modeled Passage dim:  torch.Size([40, 529, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 529, 1000])
Span start logits:  torch.Size([40, 529])
span start probs dim:  torch.Size([40, 529])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 529]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 962, 200])
Passage Length:  962
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 962, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 962, 15])
Passage ques attention dim:  torch.Size([40, 962, 15])
Passage question vectors dim:  torch.Size([40, 962, 200])
Question Passage Similarity dim:  torch.Size([40, 962])
Question passage attention dim:  torch.Size([40, 962])
Final Merged Passage dim:  torch.Size([40, 962, 800])
Modeled Passage dim:  torch.Size([40, 962, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 962, 1000])
Span start logits:  torch.Size([40, 962])
span start probs dim:  torch.Size([40, 962])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 962]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 509, 200])
Passage Length:  509
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 509, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 509, 12])
Passage ques attention dim:  torch.Size([40, 509, 12])
Passage question vectors dim:  torch.Size([40, 509, 200])
Question Passage Similarity dim:  torch.Size([40, 509])
Question passage attention dim:  torch.Size([40, 509])
Final Merged Passage dim:  torch.Size([40, 509, 800])
Modeled Passage dim:  torch.Size([40, 509, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 509, 1000])
Span start logits:  torch.Size([40, 509])
span start probs dim:  torch.Size([40, 509])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 509]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 258, 200])
Passage Length:  258
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 258, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 258, 14])
Passage ques attention dim:  torch.Size([40, 258, 14])
Passage question vectors dim:  torch.Size([40, 258, 200])
Question Passage Similarity dim:  torch.Size([40, 258])
Question passage attention dim:  torch.Size([40, 258])
Final Merged Passage dim:  torch.Size([40, 258, 800])
Modeled Passage dim:  torch.Size([40, 258, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 258, 1000])
Span start logits:  torch.Size([40, 258])
span start probs dim:  torch.Size([40, 258])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 258]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 864, 200])
Passage Length:  864
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 864, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 864, 12])
Passage ques attention dim:  torch.Size([40, 864, 12])
Passage question vectors dim:  torch.Size([40, 864, 200])
Question Passage Similarity dim:  torch.Size([40, 864])
Question passage attention dim:  torch.Size([40, 864])
Final Merged Passage dim:  torch.Size([40, 864, 800])
Modeled Passage dim:  torch.Size([40, 864, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 864, 1000])
Span start logits:  torch.Size([40, 864])
span start probs dim:  torch.Size([40, 864])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 864]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 233, 200])
Passage Length:  233
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 233, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 233, 20])
Passage ques attention dim:  torch.Size([40, 233, 20])
Passage question vectors dim:  torch.Size([40, 233, 200])
Question Passage Similarity dim:  torch.Size([40, 233])
Question passage attention dim:  torch.Size([40, 233])
Final Merged Passage dim:  torch.Size([40, 233, 800])
Modeled Passage dim:  torch.Size([40, 233, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 233, 1000])
Span start logits:  torch.Size([40, 233])
span start probs dim:  torch.Size([40, 233])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 233]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 697, 200])
Passage Length:  697
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 697, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 697, 16])
Passage ques attention dim:  torch.Size([40, 697, 16])
Passage question vectors dim:  torch.Size([40, 697, 200])
Question Passage Similarity dim:  torch.Size([40, 697])
Question passage attention dim:  torch.Size([40, 697])
Final Merged Passage dim:  torch.Size([40, 697, 800])
Modeled Passage dim:  torch.Size([40, 697, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 697, 1000])
Span start logits:  torch.Size([40, 697])
span start probs dim:  torch.Size([40, 697])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 697]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 260, 200])
Passage Length:  260
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 260, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 260, 16])
Passage ques attention dim:  torch.Size([40, 260, 16])
Passage question vectors dim:  torch.Size([40, 260, 200])
Question Passage Similarity dim:  torch.Size([40, 260])
Question passage attention dim:  torch.Size([40, 260])
Final Merged Passage dim:  torch.Size([40, 260, 800])
Modeled Passage dim:  torch.Size([40, 260, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 260, 1000])
Span start logits:  torch.Size([40, 260])
span start probs dim:  torch.Size([40, 260])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 260]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 696, 200])
Passage Length:  696
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 696, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 696, 17])
Passage ques attention dim:  torch.Size([40, 696, 17])
Passage question vectors dim:  torch.Size([40, 696, 200])
Question Passage Similarity dim:  torch.Size([40, 696])
Question passage attention dim:  torch.Size([40, 696])
Final Merged Passage dim:  torch.Size([40, 696, 800])
Modeled Passage dim:  torch.Size([40, 696, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 696, 1000])
Span start logits:  torch.Size([40, 696])
span start probs dim:  torch.Size([40, 696])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 696]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 456, 18])
Passage ques attention dim:  torch.Size([40, 456, 18])
Passage question vectors dim:  torch.Size([40, 456, 200])
Question Passage Similarity dim:  torch.Size([40, 456])
Question passage attention dim:  torch.Size([40, 456])
Final Merged Passage dim:  torch.Size([40, 456, 800])
Modeled Passage dim:  torch.Size([40, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 456, 1000])
Span start logits:  torch.Size([40, 456])
span start probs dim:  torch.Size([40, 456])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 456]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 272, 200])
Passage Length:  272
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 272, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 272, 13])
Passage ques attention dim:  torch.Size([40, 272, 13])
Passage question vectors dim:  torch.Size([40, 272, 200])
Question Passage Similarity dim:  torch.Size([40, 272])
Question passage attention dim:  torch.Size([40, 272])
Final Merged Passage dim:  torch.Size([40, 272, 800])
Modeled Passage dim:  torch.Size([40, 272, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 272, 1000])
Span start logits:  torch.Size([40, 272])
span start probs dim:  torch.Size([40, 272])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 272]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 337, 200])
Passage Length:  337
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 337, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 337, 16])
Passage ques attention dim:  torch.Size([40, 337, 16])
Passage question vectors dim:  torch.Size([40, 337, 200])
Question Passage Similarity dim:  torch.Size([40, 337])
Question passage attention dim:  torch.Size([40, 337])
Final Merged Passage dim:  torch.Size([40, 337, 800])
Modeled Passage dim:  torch.Size([40, 337, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 337, 1000])
Span start logits:  torch.Size([40, 337])
span start probs dim:  torch.Size([40, 337])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 337]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 748, 200])
Passage Length:  748
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 748, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 748, 13])
Passage ques attention dim:  torch.Size([40, 748, 13])
Passage question vectors dim:  torch.Size([40, 748, 200])
Question Passage Similarity dim:  torch.Size([40, 748])
Question passage attention dim:  torch.Size([40, 748])
Final Merged Passage dim:  torch.Size([40, 748, 800])
Modeled Passage dim:  torch.Size([40, 748, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 748, 1000])
Span start logits:  torch.Size([40, 748])
span start probs dim:  torch.Size([40, 748])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 748]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 428, 200])
Passage Length:  428
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 428, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 428, 15])
Passage ques attention dim:  torch.Size([40, 428, 15])
Passage question vectors dim:  torch.Size([40, 428, 200])
Question Passage Similarity dim:  torch.Size([40, 428])
Question passage attention dim:  torch.Size([40, 428])
Final Merged Passage dim:  torch.Size([40, 428, 800])
Modeled Passage dim:  torch.Size([40, 428, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 428, 1000])
Span start logits:  torch.Size([40, 428])
span start probs dim:  torch.Size([40, 428])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 428]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1090, 200])
Passage Length:  1090
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1090, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1090, 14])
Passage ques attention dim:  torch.Size([40, 1090, 14])
Passage question vectors dim:  torch.Size([40, 1090, 200])
Question Passage Similarity dim:  torch.Size([40, 1090])
Question passage attention dim:  torch.Size([40, 1090])
Final Merged Passage dim:  torch.Size([40, 1090, 800])
Modeled Passage dim:  torch.Size([40, 1090, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1090, 1000])
Span start logits:  torch.Size([40, 1090])
span start probs dim:  torch.Size([40, 1090])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1090]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 703, 200])
Passage Length:  703
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 703, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 703, 33])
Passage ques attention dim:  torch.Size([40, 703, 33])
Passage question vectors dim:  torch.Size([40, 703, 200])
Question Passage Similarity dim:  torch.Size([40, 703])
Question passage attention dim:  torch.Size([40, 703])
Final Merged Passage dim:  torch.Size([40, 703, 800])
Modeled Passage dim:  torch.Size([40, 703, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 703, 1000])
Span start logits:  torch.Size([40, 703])
span start probs dim:  torch.Size([40, 703])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 703]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 967, 14])
Passage ques attention dim:  torch.Size([40, 967, 14])
Passage question vectors dim:  torch.Size([40, 967, 200])
Question Passage Similarity dim:  torch.Size([40, 967])
Question passage attention dim:  torch.Size([40, 967])
Final Merged Passage dim:  torch.Size([40, 967, 800])
Modeled Passage dim:  torch.Size([40, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 967, 1000])
Span start logits:  torch.Size([40, 967])
span start probs dim:  torch.Size([40, 967])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 967]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1179, 200])
Passage Length:  1179
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1179, 15])
Passage ques attention dim:  torch.Size([40, 1179, 15])
Passage question vectors dim:  torch.Size([40, 1179, 200])
Question Passage Similarity dim:  torch.Size([40, 1179])
Question passage attention dim:  torch.Size([40, 1179])
Final Merged Passage dim:  torch.Size([40, 1179, 800])
Modeled Passage dim:  torch.Size([40, 1179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1179, 1000])
Span start logits:  torch.Size([40, 1179])
span start probs dim:  torch.Size([40, 1179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 791, 200])
Passage Length:  791
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 791, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 791, 14])
Passage ques attention dim:  torch.Size([40, 791, 14])
Passage question vectors dim:  torch.Size([40, 791, 200])
Question Passage Similarity dim:  torch.Size([40, 791])
Question passage attention dim:  torch.Size([40, 791])
Final Merged Passage dim:  torch.Size([40, 791, 800])
Modeled Passage dim:  torch.Size([40, 791, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 791, 1000])
Span start logits:  torch.Size([40, 791])
span start probs dim:  torch.Size([40, 791])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 791]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1249, 200])
Passage Length:  1249
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1249, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1249, 13])
Passage ques attention dim:  torch.Size([40, 1249, 13])
Passage question vectors dim:  torch.Size([40, 1249, 200])
Question Passage Similarity dim:  torch.Size([40, 1249])
Question passage attention dim:  torch.Size([40, 1249])
Final Merged Passage dim:  torch.Size([40, 1249, 800])
Modeled Passage dim:  torch.Size([40, 1249, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1249, 1000])
Span start logits:  torch.Size([40, 1249])
span start probs dim:  torch.Size([40, 1249])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1249]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1042, 200])
Passage Length:  1042
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1042, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1042, 19])
Passage ques attention dim:  torch.Size([40, 1042, 19])
Passage question vectors dim:  torch.Size([40, 1042, 200])
Question Passage Similarity dim:  torch.Size([40, 1042])
Question passage attention dim:  torch.Size([40, 1042])
Final Merged Passage dim:  torch.Size([40, 1042, 800])
Modeled Passage dim:  torch.Size([40, 1042, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1042, 1000])
Span start logits:  torch.Size([40, 1042])
span start probs dim:  torch.Size([40, 1042])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1042]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 703, 200])
Passage Length:  703
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 703, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 703, 15])
Passage ques attention dim:  torch.Size([40, 703, 15])
Passage question vectors dim:  torch.Size([40, 703, 200])
Question Passage Similarity dim:  torch.Size([40, 703])
Question passage attention dim:  torch.Size([40, 703])
Final Merged Passage dim:  torch.Size([40, 703, 800])
Modeled Passage dim:  torch.Size([40, 703, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 703, 1000])
Span start logits:  torch.Size([40, 703])
span start probs dim:  torch.Size([40, 703])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 703]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 466, 200])
Passage Length:  466
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 466, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 466, 17])
Passage ques attention dim:  torch.Size([40, 466, 17])
Passage question vectors dim:  torch.Size([40, 466, 200])
Question Passage Similarity dim:  torch.Size([40, 466])
Question passage attention dim:  torch.Size([40, 466])
Final Merged Passage dim:  torch.Size([40, 466, 800])
Modeled Passage dim:  torch.Size([40, 466, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 466, 1000])
Span start logits:  torch.Size([40, 466])
span start probs dim:  torch.Size([40, 466])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 466]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 661, 200])
Passage Length:  661
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 661, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 661, 16])
Passage ques attention dim:  torch.Size([40, 661, 16])
Passage question vectors dim:  torch.Size([40, 661, 200])
Question Passage Similarity dim:  torch.Size([40, 661])
Question passage attention dim:  torch.Size([40, 661])
Final Merged Passage dim:  torch.Size([40, 661, 800])
Modeled Passage dim:  torch.Size([40, 661, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 661, 1000])
Span start logits:  torch.Size([40, 661])
span start probs dim:  torch.Size([40, 661])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 661]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 261, 200])
Passage Length:  261
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 261, 12])
Passage ques attention dim:  torch.Size([40, 261, 12])
Passage question vectors dim:  torch.Size([40, 261, 200])
Question Passage Similarity dim:  torch.Size([40, 261])
Question passage attention dim:  torch.Size([40, 261])
Final Merged Passage dim:  torch.Size([40, 261, 800])
Modeled Passage dim:  torch.Size([40, 261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 261, 1000])
Span start logits:  torch.Size([40, 261])
span start probs dim:  torch.Size([40, 261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 261]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 456, 18])
Passage ques attention dim:  torch.Size([40, 456, 18])
Passage question vectors dim:  torch.Size([40, 456, 200])
Question Passage Similarity dim:  torch.Size([40, 456])
Question passage attention dim:  torch.Size([40, 456])
Final Merged Passage dim:  torch.Size([40, 456, 800])
Modeled Passage dim:  torch.Size([40, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 456, 1000])
Span start logits:  torch.Size([40, 456])
span start probs dim:  torch.Size([40, 456])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 456]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 665, 200])
Passage Length:  665
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 665, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 665, 11])
Passage ques attention dim:  torch.Size([40, 665, 11])
Passage question vectors dim:  torch.Size([40, 665, 200])
Question Passage Similarity dim:  torch.Size([40, 665])
Question passage attention dim:  torch.Size([40, 665])
Final Merged Passage dim:  torch.Size([40, 665, 800])
Modeled Passage dim:  torch.Size([40, 665, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 665, 1000])
Span start logits:  torch.Size([40, 665])
span start probs dim:  torch.Size([40, 665])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 665]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 429, 200])
Passage Length:  429
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 429, 14])
Passage ques attention dim:  torch.Size([40, 429, 14])
Passage question vectors dim:  torch.Size([40, 429, 200])
Question Passage Similarity dim:  torch.Size([40, 429])
Question passage attention dim:  torch.Size([40, 429])
Final Merged Passage dim:  torch.Size([40, 429, 800])
Modeled Passage dim:  torch.Size([40, 429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 429, 1000])
Span start logits:  torch.Size([40, 429])
span start probs dim:  torch.Size([40, 429])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 429]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 664, 200])
Passage Length:  664
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 664, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 664, 17])
Passage ques attention dim:  torch.Size([40, 664, 17])
Passage question vectors dim:  torch.Size([40, 664, 200])
Question Passage Similarity dim:  torch.Size([40, 664])
Question passage attention dim:  torch.Size([40, 664])
Final Merged Passage dim:  torch.Size([40, 664, 800])
Modeled Passage dim:  torch.Size([40, 664, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 664, 1000])
Span start logits:  torch.Size([40, 664])
span start probs dim:  torch.Size([40, 664])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 664]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 828, 200])
Passage Length:  828
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 828, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 828, 13])
Passage ques attention dim:  torch.Size([40, 828, 13])
Passage question vectors dim:  torch.Size([40, 828, 200])
Question Passage Similarity dim:  torch.Size([40, 828])
Question passage attention dim:  torch.Size([40, 828])
Final Merged Passage dim:  torch.Size([40, 828, 800])
Modeled Passage dim:  torch.Size([40, 828, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 828, 1000])
Span start logits:  torch.Size([40, 828])
span start probs dim:  torch.Size([40, 828])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 828]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 373, 200])
Passage Length:  373
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 373, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 373, 16])
Passage ques attention dim:  torch.Size([40, 373, 16])
Passage question vectors dim:  torch.Size([40, 373, 200])
Question Passage Similarity dim:  torch.Size([40, 373])
Question passage attention dim:  torch.Size([40, 373])
Final Merged Passage dim:  torch.Size([40, 373, 800])
Modeled Passage dim:  torch.Size([40, 373, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 373, 1000])
Span start logits:  torch.Size([40, 373])
span start probs dim:  torch.Size([40, 373])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 373]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1614, 200])
Passage Length:  1614
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1614, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1614, 17])
Passage ques attention dim:  torch.Size([40, 1614, 17])
Passage question vectors dim:  torch.Size([40, 1614, 200])
Question Passage Similarity dim:  torch.Size([40, 1614])
Question passage attention dim:  torch.Size([40, 1614])
Final Merged Passage dim:  torch.Size([40, 1614, 800])
Modeled Passage dim:  torch.Size([40, 1614, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1614, 1000])
Span start logits:  torch.Size([40, 1614])
span start probs dim:  torch.Size([40, 1614])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1614]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1074, 200])
Passage Length:  1074
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1074, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1074, 15])
Passage ques attention dim:  torch.Size([40, 1074, 15])
Passage question vectors dim:  torch.Size([40, 1074, 200])
Question Passage Similarity dim:  torch.Size([40, 1074])
Question passage attention dim:  torch.Size([40, 1074])
Final Merged Passage dim:  torch.Size([40, 1074, 800])
Modeled Passage dim:  torch.Size([40, 1074, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1074, 1000])
Span start logits:  torch.Size([40, 1074])
span start probs dim:  torch.Size([40, 1074])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1074]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 464, 200])
Passage Length:  464
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 464, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 464, 18])
Passage ques attention dim:  torch.Size([40, 464, 18])
Passage question vectors dim:  torch.Size([40, 464, 200])
Question Passage Similarity dim:  torch.Size([40, 464])
Question passage attention dim:  torch.Size([40, 464])
Final Merged Passage dim:  torch.Size([40, 464, 800])
Modeled Passage dim:  torch.Size([40, 464, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 464, 1000])
Span start logits:  torch.Size([40, 464])
span start probs dim:  torch.Size([40, 464])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 464]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 686, 200])
Passage Length:  686
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 686, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 686, 19])
Passage ques attention dim:  torch.Size([40, 686, 19])
Passage question vectors dim:  torch.Size([40, 686, 200])
Question Passage Similarity dim:  torch.Size([40, 686])
Question passage attention dim:  torch.Size([40, 686])
Final Merged Passage dim:  torch.Size([40, 686, 800])
Modeled Passage dim:  torch.Size([40, 686, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 686, 1000])
Span start logits:  torch.Size([40, 686])
span start probs dim:  torch.Size([40, 686])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 686]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 376, 200])
Passage Length:  376
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 376, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 376, 14])
Passage ques attention dim:  torch.Size([40, 376, 14])
Passage question vectors dim:  torch.Size([40, 376, 200])
Question Passage Similarity dim:  torch.Size([40, 376])
Question passage attention dim:  torch.Size([40, 376])
Final Merged Passage dim:  torch.Size([40, 376, 800])
Modeled Passage dim:  torch.Size([40, 376, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 376, 1000])
Span start logits:  torch.Size([40, 376])
span start probs dim:  torch.Size([40, 376])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 376]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 512, 200])
Passage Length:  512
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 512, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 512, 13])
Passage ques attention dim:  torch.Size([40, 512, 13])
Passage question vectors dim:  torch.Size([40, 512, 200])
Question Passage Similarity dim:  torch.Size([40, 512])
Question passage attention dim:  torch.Size([40, 512])
Final Merged Passage dim:  torch.Size([40, 512, 800])
Modeled Passage dim:  torch.Size([40, 512, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 512, 1000])
Span start logits:  torch.Size([40, 512])
span start probs dim:  torch.Size([40, 512])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 512]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 590, 200])
Passage Length:  590
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 590, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 590, 13])
Passage ques attention dim:  torch.Size([40, 590, 13])
Passage question vectors dim:  torch.Size([40, 590, 200])
Question Passage Similarity dim:  torch.Size([40, 590])
Question passage attention dim:  torch.Size([40, 590])
Final Merged Passage dim:  torch.Size([40, 590, 800])
Modeled Passage dim:  torch.Size([40, 590, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 590, 1000])
Span start logits:  torch.Size([40, 590])
span start probs dim:  torch.Size([40, 590])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 590]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 968, 200])
Passage Length:  968
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 968, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 968, 14])
Passage ques attention dim:  torch.Size([40, 968, 14])
Passage question vectors dim:  torch.Size([40, 968, 200])
Question Passage Similarity dim:  torch.Size([40, 968])
Question passage attention dim:  torch.Size([40, 968])
Final Merged Passage dim:  torch.Size([40, 968, 800])
Modeled Passage dim:  torch.Size([40, 968, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 968, 1000])
Span start logits:  torch.Size([40, 968])
span start probs dim:  torch.Size([40, 968])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 968]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 709, 200])
Passage Length:  709
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 709, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 709, 15])
Passage ques attention dim:  torch.Size([40, 709, 15])
Passage question vectors dim:  torch.Size([40, 709, 200])
Question Passage Similarity dim:  torch.Size([40, 709])
Question passage attention dim:  torch.Size([40, 709])
Final Merged Passage dim:  torch.Size([40, 709, 800])
Modeled Passage dim:  torch.Size([40, 709, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 709, 1000])
Span start logits:  torch.Size([40, 709])
span start probs dim:  torch.Size([40, 709])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 709]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 956, 200])
Passage Length:  956
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 956, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 956, 13])
Passage ques attention dim:  torch.Size([40, 956, 13])
Passage question vectors dim:  torch.Size([40, 956, 200])
Question Passage Similarity dim:  torch.Size([40, 956])
Question passage attention dim:  torch.Size([40, 956])
Final Merged Passage dim:  torch.Size([40, 956, 800])
Modeled Passage dim:  torch.Size([40, 956, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 956, 1000])
Span start logits:  torch.Size([40, 956])
span start probs dim:  torch.Size([40, 956])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 956]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 391, 200])
Passage Length:  391
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 391, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 391, 16])
Passage ques attention dim:  torch.Size([40, 391, 16])
Passage question vectors dim:  torch.Size([40, 391, 200])
Question Passage Similarity dim:  torch.Size([40, 391])
Question passage attention dim:  torch.Size([40, 391])
Final Merged Passage dim:  torch.Size([40, 391, 800])
Modeled Passage dim:  torch.Size([40, 391, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 391, 1000])
Span start logits:  torch.Size([40, 391])
span start probs dim:  torch.Size([40, 391])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 391]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1175, 200])
Passage Length:  1175
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1175, 12])
Passage ques attention dim:  torch.Size([40, 1175, 12])
Passage question vectors dim:  torch.Size([40, 1175, 200])
Question Passage Similarity dim:  torch.Size([40, 1175])
Question passage attention dim:  torch.Size([40, 1175])
Final Merged Passage dim:  torch.Size([40, 1175, 800])
Modeled Passage dim:  torch.Size([40, 1175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1175, 1000])
Span start logits:  torch.Size([40, 1175])
span start probs dim:  torch.Size([40, 1175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1322, 200])
Passage Length:  1322
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1322, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1322, 15])
Passage ques attention dim:  torch.Size([40, 1322, 15])
Passage question vectors dim:  torch.Size([40, 1322, 200])
Question Passage Similarity dim:  torch.Size([40, 1322])
Question passage attention dim:  torch.Size([40, 1322])
Final Merged Passage dim:  torch.Size([40, 1322, 800])
Modeled Passage dim:  torch.Size([40, 1322, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1322, 1000])
Span start logits:  torch.Size([40, 1322])
span start probs dim:  torch.Size([40, 1322])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1322]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 376, 200])
Passage Length:  376
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 376, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 376, 15])
Passage ques attention dim:  torch.Size([40, 376, 15])
Passage question vectors dim:  torch.Size([40, 376, 200])
Question Passage Similarity dim:  torch.Size([40, 376])
Question passage attention dim:  torch.Size([40, 376])
Final Merged Passage dim:  torch.Size([40, 376, 800])
Modeled Passage dim:  torch.Size([40, 376, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 376, 1000])
Span start logits:  torch.Size([40, 376])
span start probs dim:  torch.Size([40, 376])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 376]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 537, 200])
Passage Length:  537
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 537, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 537, 14])
Passage ques attention dim:  torch.Size([40, 537, 14])
Passage question vectors dim:  torch.Size([40, 537, 200])
Question Passage Similarity dim:  torch.Size([40, 537])
Question passage attention dim:  torch.Size([40, 537])
Final Merged Passage dim:  torch.Size([40, 537, 800])
Modeled Passage dim:  torch.Size([40, 537, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 537, 1000])
Span start logits:  torch.Size([40, 537])
span start probs dim:  torch.Size([40, 537])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 537]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 302, 200])
Passage Length:  302
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 302, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 302, 14])
Passage ques attention dim:  torch.Size([40, 302, 14])
Passage question vectors dim:  torch.Size([40, 302, 200])
Question Passage Similarity dim:  torch.Size([40, 302])
Question passage attention dim:  torch.Size([40, 302])
Final Merged Passage dim:  torch.Size([40, 302, 800])
Modeled Passage dim:  torch.Size([40, 302, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 302, 1000])
Span start logits:  torch.Size([40, 302])
span start probs dim:  torch.Size([40, 302])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 302]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 593, 200])
Passage Length:  593
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 593, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 593, 18])
Passage ques attention dim:  torch.Size([40, 593, 18])
Passage question vectors dim:  torch.Size([40, 593, 200])
Question Passage Similarity dim:  torch.Size([40, 593])
Question passage attention dim:  torch.Size([40, 593])
Final Merged Passage dim:  torch.Size([40, 593, 800])
Modeled Passage dim:  torch.Size([40, 593, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 593, 1000])
Span start logits:  torch.Size([40, 593])
span start probs dim:  torch.Size([40, 593])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 593]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 743, 200])
Passage Length:  743
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 743, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 743, 16])
Passage ques attention dim:  torch.Size([40, 743, 16])
Passage question vectors dim:  torch.Size([40, 743, 200])
Question Passage Similarity dim:  torch.Size([40, 743])
Question passage attention dim:  torch.Size([40, 743])
Final Merged Passage dim:  torch.Size([40, 743, 800])
Modeled Passage dim:  torch.Size([40, 743, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 743, 1000])
Span start logits:  torch.Size([40, 743])
span start probs dim:  torch.Size([40, 743])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 743]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 422, 200])
Passage Length:  422
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 422, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 422, 13])
Passage ques attention dim:  torch.Size([40, 422, 13])
Passage question vectors dim:  torch.Size([40, 422, 200])
Question Passage Similarity dim:  torch.Size([40, 422])
Question passage attention dim:  torch.Size([40, 422])
Final Merged Passage dim:  torch.Size([40, 422, 800])
Modeled Passage dim:  torch.Size([40, 422, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 422, 1000])
Span start logits:  torch.Size([40, 422])
span start probs dim:  torch.Size([40, 422])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 422]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 511, 200])
Passage Length:  511
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 511, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 511, 15])
Passage ques attention dim:  torch.Size([40, 511, 15])
Passage question vectors dim:  torch.Size([40, 511, 200])
Question Passage Similarity dim:  torch.Size([40, 511])
Question passage attention dim:  torch.Size([40, 511])
Final Merged Passage dim:  torch.Size([40, 511, 800])
Modeled Passage dim:  torch.Size([40, 511, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 511, 1000])
Span start logits:  torch.Size([40, 511])
span start probs dim:  torch.Size([40, 511])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 511]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 728, 200])
Passage Length:  728
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 728, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 728, 15])
Passage ques attention dim:  torch.Size([40, 728, 15])
Passage question vectors dim:  torch.Size([40, 728, 200])
Question Passage Similarity dim:  torch.Size([40, 728])
Question passage attention dim:  torch.Size([40, 728])
Final Merged Passage dim:  torch.Size([40, 728, 800])
Modeled Passage dim:  torch.Size([40, 728, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 728, 1000])
Span start logits:  torch.Size([40, 728])
span start probs dim:  torch.Size([40, 728])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 728]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 827, 200])
Passage Length:  827
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 827, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 827, 13])
Passage ques attention dim:  torch.Size([40, 827, 13])
Passage question vectors dim:  torch.Size([40, 827, 200])
Question Passage Similarity dim:  torch.Size([40, 827])
Question passage attention dim:  torch.Size([40, 827])
Final Merged Passage dim:  torch.Size([40, 827, 800])
Modeled Passage dim:  torch.Size([40, 827, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 827, 1000])
Span start logits:  torch.Size([40, 827])
span start probs dim:  torch.Size([40, 827])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 827]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 700, 200])
Passage Length:  700
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 700, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 700, 13])
Passage ques attention dim:  torch.Size([40, 700, 13])
Passage question vectors dim:  torch.Size([40, 700, 200])
Question Passage Similarity dim:  torch.Size([40, 700])
Question passage attention dim:  torch.Size([40, 700])
Final Merged Passage dim:  torch.Size([40, 700, 800])
Modeled Passage dim:  torch.Size([40, 700, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 700, 1000])
Span start logits:  torch.Size([40, 700])
span start probs dim:  torch.Size([40, 700])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 700]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1876, 200])
Passage Length:  1876
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1876, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1876, 17])
Passage ques attention dim:  torch.Size([40, 1876, 17])
Passage question vectors dim:  torch.Size([40, 1876, 200])
Question Passage Similarity dim:  torch.Size([40, 1876])
Question passage attention dim:  torch.Size([40, 1876])
Final Merged Passage dim:  torch.Size([40, 1876, 800])
Modeled Passage dim:  torch.Size([40, 1876, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1876, 1000])
Span start logits:  torch.Size([40, 1876])
span start probs dim:  torch.Size([40, 1876])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1876]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 824, 200])
Passage Length:  824
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 824, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 824, 14])
Passage ques attention dim:  torch.Size([40, 824, 14])
Passage question vectors dim:  torch.Size([40, 824, 200])
Question Passage Similarity dim:  torch.Size([40, 824])
Question passage attention dim:  torch.Size([40, 824])
Final Merged Passage dim:  torch.Size([40, 824, 800])
Modeled Passage dim:  torch.Size([40, 824, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 824, 1000])
Span start logits:  torch.Size([40, 824])
span start probs dim:  torch.Size([40, 824])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 824]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 458, 200])
Passage Length:  458
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 458, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 458, 16])
Passage ques attention dim:  torch.Size([40, 458, 16])
Passage question vectors dim:  torch.Size([40, 458, 200])
Question Passage Similarity dim:  torch.Size([40, 458])
Question passage attention dim:  torch.Size([40, 458])
Final Merged Passage dim:  torch.Size([40, 458, 800])
Modeled Passage dim:  torch.Size([40, 458, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 458, 1000])
Span start logits:  torch.Size([40, 458])
span start probs dim:  torch.Size([40, 458])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 458]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1729, 200])
Passage Length:  1729
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1729, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1729, 15])
Passage ques attention dim:  torch.Size([40, 1729, 15])
Passage question vectors dim:  torch.Size([40, 1729, 200])
Question Passage Similarity dim:  torch.Size([40, 1729])
Question passage attention dim:  torch.Size([40, 1729])
Final Merged Passage dim:  torch.Size([40, 1729, 800])
Modeled Passage dim:  torch.Size([40, 1729, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1729, 1000])
Span start logits:  torch.Size([40, 1729])
span start probs dim:  torch.Size([40, 1729])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1729]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 981, 200])
Passage Length:  981
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 981, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 981, 14])
Passage ques attention dim:  torch.Size([40, 981, 14])
Passage question vectors dim:  torch.Size([40, 981, 200])
Question Passage Similarity dim:  torch.Size([40, 981])
Question passage attention dim:  torch.Size([40, 981])
Final Merged Passage dim:  torch.Size([40, 981, 800])
Modeled Passage dim:  torch.Size([40, 981, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 981, 1000])
Span start logits:  torch.Size([40, 981])
span start probs dim:  torch.Size([40, 981])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 981]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1441, 200])
Passage Length:  1441
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1441, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1441, 14])
Passage ques attention dim:  torch.Size([40, 1441, 14])
Passage question vectors dim:  torch.Size([40, 1441, 200])
Question Passage Similarity dim:  torch.Size([40, 1441])
Question passage attention dim:  torch.Size([40, 1441])
Final Merged Passage dim:  torch.Size([40, 1441, 800])
Modeled Passage dim:  torch.Size([40, 1441, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1441, 1000])
Span start logits:  torch.Size([40, 1441])
span start probs dim:  torch.Size([40, 1441])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1441]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 683, 200])
Passage Length:  683
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 683, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 683, 16])
Passage ques attention dim:  torch.Size([40, 683, 16])
Passage question vectors dim:  torch.Size([40, 683, 200])
Question Passage Similarity dim:  torch.Size([40, 683])
Question passage attention dim:  torch.Size([40, 683])
Final Merged Passage dim:  torch.Size([40, 683, 800])
Modeled Passage dim:  torch.Size([40, 683, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 683, 1000])
Span start logits:  torch.Size([40, 683])
span start probs dim:  torch.Size([40, 683])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 683]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 529, 200])
Passage Length:  529
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 529, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 529, 17])
Passage ques attention dim:  torch.Size([40, 529, 17])
Passage question vectors dim:  torch.Size([40, 529, 200])
Question Passage Similarity dim:  torch.Size([40, 529])
Question passage attention dim:  torch.Size([40, 529])
Final Merged Passage dim:  torch.Size([40, 529, 800])
Modeled Passage dim:  torch.Size([40, 529, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 529, 1000])
Span start logits:  torch.Size([40, 529])
span start probs dim:  torch.Size([40, 529])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 529]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 475, 200])
Passage Length:  475
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 475, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 475, 15])
Passage ques attention dim:  torch.Size([40, 475, 15])
Passage question vectors dim:  torch.Size([40, 475, 200])
Question Passage Similarity dim:  torch.Size([40, 475])
Question passage attention dim:  torch.Size([40, 475])
Final Merged Passage dim:  torch.Size([40, 475, 800])
Modeled Passage dim:  torch.Size([40, 475, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 475, 1000])
Span start logits:  torch.Size([40, 475])
span start probs dim:  torch.Size([40, 475])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 475]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 339, 200])
Passage Length:  339
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 339, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 339, 13])
Passage ques attention dim:  torch.Size([40, 339, 13])
Passage question vectors dim:  torch.Size([40, 339, 200])
Question Passage Similarity dim:  torch.Size([40, 339])
Question passage attention dim:  torch.Size([40, 339])
Final Merged Passage dim:  torch.Size([40, 339, 800])
Modeled Passage dim:  torch.Size([40, 339, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 339, 1000])
Span start logits:  torch.Size([40, 339])
span start probs dim:  torch.Size([40, 339])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 339]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 372, 200])
Passage Length:  372
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 372, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 372, 13])
Passage ques attention dim:  torch.Size([40, 372, 13])
Passage question vectors dim:  torch.Size([40, 372, 200])
Question Passage Similarity dim:  torch.Size([40, 372])
Question passage attention dim:  torch.Size([40, 372])
Final Merged Passage dim:  torch.Size([40, 372, 800])
Modeled Passage dim:  torch.Size([40, 372, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 372, 1000])
Span start logits:  torch.Size([40, 372])
span start probs dim:  torch.Size([40, 372])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 372]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 503, 200])
Passage Length:  503
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 503, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 503, 14])
Passage ques attention dim:  torch.Size([40, 503, 14])
Passage question vectors dim:  torch.Size([40, 503, 200])
Question Passage Similarity dim:  torch.Size([40, 503])
Question passage attention dim:  torch.Size([40, 503])
Final Merged Passage dim:  torch.Size([40, 503, 800])
Modeled Passage dim:  torch.Size([40, 503, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 503, 1000])
Span start logits:  torch.Size([40, 503])
span start probs dim:  torch.Size([40, 503])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 503]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 724, 19])
Passage ques attention dim:  torch.Size([40, 724, 19])
Passage question vectors dim:  torch.Size([40, 724, 200])
Question Passage Similarity dim:  torch.Size([40, 724])
Question passage attention dim:  torch.Size([40, 724])
Final Merged Passage dim:  torch.Size([40, 724, 800])
Modeled Passage dim:  torch.Size([40, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 724, 1000])
Span start logits:  torch.Size([40, 724])
span start probs dim:  torch.Size([40, 724])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 724]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 567, 200])
Passage Length:  567
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 567, 14])
Passage ques attention dim:  torch.Size([40, 567, 14])
Passage question vectors dim:  torch.Size([40, 567, 200])
Question Passage Similarity dim:  torch.Size([40, 567])
Question passage attention dim:  torch.Size([40, 567])
Final Merged Passage dim:  torch.Size([40, 567, 800])
Modeled Passage dim:  torch.Size([40, 567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 567, 1000])
Span start logits:  torch.Size([40, 567])
span start probs dim:  torch.Size([40, 567])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 567]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 109, 200])
Passage Length:  109
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 109, 10])
Passage ques attention dim:  torch.Size([40, 109, 10])
Passage question vectors dim:  torch.Size([40, 109, 200])
Question Passage Similarity dim:  torch.Size([40, 109])
Question passage attention dim:  torch.Size([40, 109])
Final Merged Passage dim:  torch.Size([40, 109, 800])
Modeled Passage dim:  torch.Size([40, 109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 109, 1000])
Span start logits:  torch.Size([40, 109])
span start probs dim:  torch.Size([40, 109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 472, 200])
Passage Length:  472
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 472, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 472, 14])
Passage ques attention dim:  torch.Size([40, 472, 14])
Passage question vectors dim:  torch.Size([40, 472, 200])
Question Passage Similarity dim:  torch.Size([40, 472])
Question passage attention dim:  torch.Size([40, 472])
Final Merged Passage dim:  torch.Size([40, 472, 800])
Modeled Passage dim:  torch.Size([40, 472, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 472, 1000])
Span start logits:  torch.Size([40, 472])
span start probs dim:  torch.Size([40, 472])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 472]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 510, 200])
Passage Length:  510
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 510, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 510, 14])
Passage ques attention dim:  torch.Size([40, 510, 14])
Passage question vectors dim:  torch.Size([40, 510, 200])
Question Passage Similarity dim:  torch.Size([40, 510])
Question passage attention dim:  torch.Size([40, 510])
Final Merged Passage dim:  torch.Size([40, 510, 800])
Modeled Passage dim:  torch.Size([40, 510, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 510, 1000])
Span start logits:  torch.Size([40, 510])
span start probs dim:  torch.Size([40, 510])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 510]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1728, 200])
Passage Length:  1728
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1728, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1728, 14])
Passage ques attention dim:  torch.Size([40, 1728, 14])
Passage question vectors dim:  torch.Size([40, 1728, 200])
Question Passage Similarity dim:  torch.Size([40, 1728])
Question passage attention dim:  torch.Size([40, 1728])
Final Merged Passage dim:  torch.Size([40, 1728, 800])
Modeled Passage dim:  torch.Size([40, 1728, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1728, 1000])
Span start logits:  torch.Size([40, 1728])
span start probs dim:  torch.Size([40, 1728])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1728]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 685, 200])
Passage Length:  685
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 685, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 685, 26])
Passage ques attention dim:  torch.Size([40, 685, 26])
Passage question vectors dim:  torch.Size([40, 685, 200])
Question Passage Similarity dim:  torch.Size([40, 685])
Question passage attention dim:  torch.Size([40, 685])
Final Merged Passage dim:  torch.Size([40, 685, 800])
Modeled Passage dim:  torch.Size([40, 685, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 685, 1000])
Span start logits:  torch.Size([40, 685])
span start probs dim:  torch.Size([40, 685])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 685]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 695, 200])
Passage Length:  695
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 695, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 695, 16])
Passage ques attention dim:  torch.Size([40, 695, 16])
Passage question vectors dim:  torch.Size([40, 695, 200])
Question Passage Similarity dim:  torch.Size([40, 695])
Question passage attention dim:  torch.Size([40, 695])
Final Merged Passage dim:  torch.Size([40, 695, 800])
Modeled Passage dim:  torch.Size([40, 695, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 695, 1000])
Span start logits:  torch.Size([40, 695])
span start probs dim:  torch.Size([40, 695])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 695]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 354, 200])
Passage Length:  354
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 354, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 354, 11])
Passage ques attention dim:  torch.Size([40, 354, 11])
Passage question vectors dim:  torch.Size([40, 354, 200])
Question Passage Similarity dim:  torch.Size([40, 354])
Question passage attention dim:  torch.Size([40, 354])
Final Merged Passage dim:  torch.Size([40, 354, 800])
Modeled Passage dim:  torch.Size([40, 354, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 354, 1000])
Span start logits:  torch.Size([40, 354])
span start probs dim:  torch.Size([40, 354])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 354]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 951, 200])
Passage Length:  951
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 951, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 951, 14])
Passage ques attention dim:  torch.Size([40, 951, 14])
Passage question vectors dim:  torch.Size([40, 951, 200])
Question Passage Similarity dim:  torch.Size([40, 951])
Question passage attention dim:  torch.Size([40, 951])
Final Merged Passage dim:  torch.Size([40, 951, 800])
Modeled Passage dim:  torch.Size([40, 951, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 951, 1000])
Span start logits:  torch.Size([40, 951])
span start probs dim:  torch.Size([40, 951])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 951]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 802, 200])
Passage Length:  802
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 802, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 802, 13])
Passage ques attention dim:  torch.Size([40, 802, 13])
Passage question vectors dim:  torch.Size([40, 802, 200])
Question Passage Similarity dim:  torch.Size([40, 802])
Question passage attention dim:  torch.Size([40, 802])
Final Merged Passage dim:  torch.Size([40, 802, 800])
Modeled Passage dim:  torch.Size([40, 802, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 802, 1000])
Span start logits:  torch.Size([40, 802])
span start probs dim:  torch.Size([40, 802])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 802]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 534, 200])
Passage Length:  534
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 534, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 534, 15])
Passage ques attention dim:  torch.Size([40, 534, 15])
Passage question vectors dim:  torch.Size([40, 534, 200])
Question Passage Similarity dim:  torch.Size([40, 534])
Question passage attention dim:  torch.Size([40, 534])
Final Merged Passage dim:  torch.Size([40, 534, 800])
Modeled Passage dim:  torch.Size([40, 534, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 534, 1000])
Span start logits:  torch.Size([40, 534])
span start probs dim:  torch.Size([40, 534])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 534]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 576, 14])
Passage ques attention dim:  torch.Size([40, 576, 14])
Passage question vectors dim:  torch.Size([40, 576, 200])
Question Passage Similarity dim:  torch.Size([40, 576])
Question passage attention dim:  torch.Size([40, 576])
Final Merged Passage dim:  torch.Size([40, 576, 800])
Modeled Passage dim:  torch.Size([40, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 576, 1000])
Span start logits:  torch.Size([40, 576])
span start probs dim:  torch.Size([40, 576])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 576]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 526, 200])
Passage Length:  526
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 526, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 526, 13])
Passage ques attention dim:  torch.Size([40, 526, 13])
Passage question vectors dim:  torch.Size([40, 526, 200])
Question Passage Similarity dim:  torch.Size([40, 526])
Question passage attention dim:  torch.Size([40, 526])
Final Merged Passage dim:  torch.Size([40, 526, 800])
Modeled Passage dim:  torch.Size([40, 526, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 526, 1000])
Span start logits:  torch.Size([40, 526])
span start probs dim:  torch.Size([40, 526])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 526]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 343, 16])
Passage ques attention dim:  torch.Size([40, 343, 16])
Passage question vectors dim:  torch.Size([40, 343, 200])
Question Passage Similarity dim:  torch.Size([40, 343])
Question passage attention dim:  torch.Size([40, 343])
Final Merged Passage dim:  torch.Size([40, 343, 800])
Modeled Passage dim:  torch.Size([40, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 343, 1000])
Span start logits:  torch.Size([40, 343])
span start probs dim:  torch.Size([40, 343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 533, 200])
Passage Length:  533
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 533, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 533, 17])
Passage ques attention dim:  torch.Size([40, 533, 17])
Passage question vectors dim:  torch.Size([40, 533, 200])
Question Passage Similarity dim:  torch.Size([40, 533])
Question passage attention dim:  torch.Size([40, 533])
Final Merged Passage dim:  torch.Size([40, 533, 800])
Modeled Passage dim:  torch.Size([40, 533, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 533, 1000])
Span start logits:  torch.Size([40, 533])
span start probs dim:  torch.Size([40, 533])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 533]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 709, 200])
Passage Length:  709
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 709, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 709, 16])
Passage ques attention dim:  torch.Size([40, 709, 16])
Passage question vectors dim:  torch.Size([40, 709, 200])
Question Passage Similarity dim:  torch.Size([40, 709])
Question passage attention dim:  torch.Size([40, 709])
Final Merged Passage dim:  torch.Size([40, 709, 800])
Modeled Passage dim:  torch.Size([40, 709, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 709, 1000])
Span start logits:  torch.Size([40, 709])
span start probs dim:  torch.Size([40, 709])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 709]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1646, 200])
Passage Length:  1646
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1646, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1646, 13])
Passage ques attention dim:  torch.Size([40, 1646, 13])
Passage question vectors dim:  torch.Size([40, 1646, 200])
Question Passage Similarity dim:  torch.Size([40, 1646])
Question passage attention dim:  torch.Size([40, 1646])
Final Merged Passage dim:  torch.Size([40, 1646, 800])
Modeled Passage dim:  torch.Size([40, 1646, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1646, 1000])
Span start logits:  torch.Size([40, 1646])
span start probs dim:  torch.Size([40, 1646])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1646]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 972, 200])
Passage Length:  972
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 972, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 972, 14])
Passage ques attention dim:  torch.Size([40, 972, 14])
Passage question vectors dim:  torch.Size([40, 972, 200])
Question Passage Similarity dim:  torch.Size([40, 972])
Question passage attention dim:  torch.Size([40, 972])
Final Merged Passage dim:  torch.Size([40, 972, 800])
Modeled Passage dim:  torch.Size([40, 972, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 972, 1000])
Span start logits:  torch.Size([40, 972])
span start probs dim:  torch.Size([40, 972])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 972]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1067, 200])
Passage Length:  1067
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1067, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1067, 17])
Passage ques attention dim:  torch.Size([40, 1067, 17])
Passage question vectors dim:  torch.Size([40, 1067, 200])
Question Passage Similarity dim:  torch.Size([40, 1067])
Question passage attention dim:  torch.Size([40, 1067])
Final Merged Passage dim:  torch.Size([40, 1067, 800])
Modeled Passage dim:  torch.Size([40, 1067, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1067, 1000])
Span start logits:  torch.Size([40, 1067])
span start probs dim:  torch.Size([40, 1067])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1067]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 778, 200])
Passage Length:  778
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 778, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 778, 19])
Passage ques attention dim:  torch.Size([40, 778, 19])
Passage question vectors dim:  torch.Size([40, 778, 200])
Question Passage Similarity dim:  torch.Size([40, 778])
Question passage attention dim:  torch.Size([40, 778])
Final Merged Passage dim:  torch.Size([40, 778, 800])
Modeled Passage dim:  torch.Size([40, 778, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 778, 1000])
Span start logits:  torch.Size([40, 778])
span start probs dim:  torch.Size([40, 778])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 778]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 520, 200])
Passage Length:  520
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 520, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 520, 15])
Passage ques attention dim:  torch.Size([40, 520, 15])
Passage question vectors dim:  torch.Size([40, 520, 200])
Question Passage Similarity dim:  torch.Size([40, 520])
Question passage attention dim:  torch.Size([40, 520])
Final Merged Passage dim:  torch.Size([40, 520, 800])
Modeled Passage dim:  torch.Size([40, 520, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 520, 1000])
Span start logits:  torch.Size([40, 520])
span start probs dim:  torch.Size([40, 520])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 520]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 284, 200])
Passage Length:  284
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 284, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 284, 16])
Passage ques attention dim:  torch.Size([40, 284, 16])
Passage question vectors dim:  torch.Size([40, 284, 200])
Question Passage Similarity dim:  torch.Size([40, 284])
Question passage attention dim:  torch.Size([40, 284])
Final Merged Passage dim:  torch.Size([40, 284, 800])
Modeled Passage dim:  torch.Size([40, 284, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 284, 1000])
Span start logits:  torch.Size([40, 284])
span start probs dim:  torch.Size([40, 284])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 284]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 625, 200])
Passage Length:  625
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 625, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 625, 17])
Passage ques attention dim:  torch.Size([40, 625, 17])
Passage question vectors dim:  torch.Size([40, 625, 200])
Question Passage Similarity dim:  torch.Size([40, 625])
Question passage attention dim:  torch.Size([40, 625])
Final Merged Passage dim:  torch.Size([40, 625, 800])
Modeled Passage dim:  torch.Size([40, 625, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 625, 1000])
Span start logits:  torch.Size([40, 625])
span start probs dim:  torch.Size([40, 625])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 625]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 973, 200])
Passage Length:  973
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 973, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 973, 13])
Passage ques attention dim:  torch.Size([40, 973, 13])
Passage question vectors dim:  torch.Size([40, 973, 200])
Question Passage Similarity dim:  torch.Size([40, 973])
Question passage attention dim:  torch.Size([40, 973])
Final Merged Passage dim:  torch.Size([40, 973, 800])
Modeled Passage dim:  torch.Size([40, 973, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 973, 1000])
Span start logits:  torch.Size([40, 973])
span start probs dim:  torch.Size([40, 973])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 973]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 898, 200])
Passage Length:  898
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 898, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 898, 12])
Passage ques attention dim:  torch.Size([40, 898, 12])
Passage question vectors dim:  torch.Size([40, 898, 200])
Question Passage Similarity dim:  torch.Size([40, 898])
Question passage attention dim:  torch.Size([40, 898])
Final Merged Passage dim:  torch.Size([40, 898, 800])
Modeled Passage dim:  torch.Size([40, 898, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 898, 1000])
Span start logits:  torch.Size([40, 898])
span start probs dim:  torch.Size([40, 898])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 898]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 351, 200])
Passage Length:  351
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 351, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 351, 11])
Passage ques attention dim:  torch.Size([40, 351, 11])
Passage question vectors dim:  torch.Size([40, 351, 200])
Question Passage Similarity dim:  torch.Size([40, 351])
Question passage attention dim:  torch.Size([40, 351])
Final Merged Passage dim:  torch.Size([40, 351, 800])
Modeled Passage dim:  torch.Size([40, 351, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 351, 1000])
Span start logits:  torch.Size([40, 351])
span start probs dim:  torch.Size([40, 351])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 351]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 424, 200])
Passage Length:  424
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 424, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 424, 12])
Passage ques attention dim:  torch.Size([40, 424, 12])
Passage question vectors dim:  torch.Size([40, 424, 200])
Question Passage Similarity dim:  torch.Size([40, 424])
Question passage attention dim:  torch.Size([40, 424])
Final Merged Passage dim:  torch.Size([40, 424, 800])
Modeled Passage dim:  torch.Size([40, 424, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 424, 1000])
Span start logits:  torch.Size([40, 424])
span start probs dim:  torch.Size([40, 424])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 424]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1113, 200])
Passage Length:  1113
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1113, 17])
Passage ques attention dim:  torch.Size([40, 1113, 17])
Passage question vectors dim:  torch.Size([40, 1113, 200])
Question Passage Similarity dim:  torch.Size([40, 1113])
Question passage attention dim:  torch.Size([40, 1113])
Final Merged Passage dim:  torch.Size([40, 1113, 800])
Modeled Passage dim:  torch.Size([40, 1113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1113, 1000])
Span start logits:  torch.Size([40, 1113])
span start probs dim:  torch.Size([40, 1113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 738, 200])
Passage Length:  738
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 738, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 738, 16])
Passage ques attention dim:  torch.Size([40, 738, 16])
Passage question vectors dim:  torch.Size([40, 738, 200])
Question Passage Similarity dim:  torch.Size([40, 738])
Question passage attention dim:  torch.Size([40, 738])
Final Merged Passage dim:  torch.Size([40, 738, 800])
Modeled Passage dim:  torch.Size([40, 738, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 738, 1000])
Span start logits:  torch.Size([40, 738])
span start probs dim:  torch.Size([40, 738])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 738]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 989, 200])
Passage Length:  989
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 989, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 989, 18])
Passage ques attention dim:  torch.Size([40, 989, 18])
Passage question vectors dim:  torch.Size([40, 989, 200])
Question Passage Similarity dim:  torch.Size([40, 989])
Question passage attention dim:  torch.Size([40, 989])
Final Merged Passage dim:  torch.Size([40, 989, 800])
Modeled Passage dim:  torch.Size([40, 989, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 989, 1000])
Span start logits:  torch.Size([40, 989])
span start probs dim:  torch.Size([40, 989])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 989]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 957, 200])
Passage Length:  957
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 957, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 957, 15])
Passage ques attention dim:  torch.Size([40, 957, 15])
Passage question vectors dim:  torch.Size([40, 957, 200])
Question Passage Similarity dim:  torch.Size([40, 957])
Question passage attention dim:  torch.Size([40, 957])
Final Merged Passage dim:  torch.Size([40, 957, 800])
Modeled Passage dim:  torch.Size([40, 957, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 957, 1000])
Span start logits:  torch.Size([40, 957])
span start probs dim:  torch.Size([40, 957])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 957]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 290, 200])
Passage Length:  290
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 290, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 290, 18])
Passage ques attention dim:  torch.Size([40, 290, 18])
Passage question vectors dim:  torch.Size([40, 290, 200])
Question Passage Similarity dim:  torch.Size([40, 290])
Question passage attention dim:  torch.Size([40, 290])
Final Merged Passage dim:  torch.Size([40, 290, 800])
Modeled Passage dim:  torch.Size([40, 290, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 290, 1000])
Span start logits:  torch.Size([40, 290])
span start probs dim:  torch.Size([40, 290])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 290]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 400, 200])
Passage Length:  400
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 400, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 400, 15])
Passage ques attention dim:  torch.Size([40, 400, 15])
Passage question vectors dim:  torch.Size([40, 400, 200])
Question Passage Similarity dim:  torch.Size([40, 400])
Question passage attention dim:  torch.Size([40, 400])
Final Merged Passage dim:  torch.Size([40, 400, 800])
Modeled Passage dim:  torch.Size([40, 400, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 400, 1000])
Span start logits:  torch.Size([40, 400])
span start probs dim:  torch.Size([40, 400])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 400]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 598, 200])
Passage Length:  598
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 598, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 598, 14])
Passage ques attention dim:  torch.Size([40, 598, 14])
Passage question vectors dim:  torch.Size([40, 598, 200])
Question Passage Similarity dim:  torch.Size([40, 598])
Question passage attention dim:  torch.Size([40, 598])
Final Merged Passage dim:  torch.Size([40, 598, 800])
Modeled Passage dim:  torch.Size([40, 598, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 598, 1000])
Span start logits:  torch.Size([40, 598])
span start probs dim:  torch.Size([40, 598])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 598]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 629, 200])
Passage Length:  629
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 629, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 629, 18])
Passage ques attention dim:  torch.Size([40, 629, 18])
Passage question vectors dim:  torch.Size([40, 629, 200])
Question Passage Similarity dim:  torch.Size([40, 629])
Question passage attention dim:  torch.Size([40, 629])
Final Merged Passage dim:  torch.Size([40, 629, 800])
Modeled Passage dim:  torch.Size([40, 629, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 629, 1000])
Span start logits:  torch.Size([40, 629])
span start probs dim:  torch.Size([40, 629])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 629]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 129, 200])
Passage Length:  129
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 129, 13])
Passage ques attention dim:  torch.Size([40, 129, 13])
Passage question vectors dim:  torch.Size([40, 129, 200])
Question Passage Similarity dim:  torch.Size([40, 129])
Question passage attention dim:  torch.Size([40, 129])
Final Merged Passage dim:  torch.Size([40, 129, 800])
Modeled Passage dim:  torch.Size([40, 129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 129, 1000])
Span start logits:  torch.Size([40, 129])
span start probs dim:  torch.Size([40, 129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 223, 200])
Passage Length:  223
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 223, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 223, 12])
Passage ques attention dim:  torch.Size([40, 223, 12])
Passage question vectors dim:  torch.Size([40, 223, 200])
Question Passage Similarity dim:  torch.Size([40, 223])
Question passage attention dim:  torch.Size([40, 223])
Final Merged Passage dim:  torch.Size([40, 223, 800])
Modeled Passage dim:  torch.Size([40, 223, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 223, 1000])
Span start logits:  torch.Size([40, 223])
span start probs dim:  torch.Size([40, 223])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 223]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 797, 200])
Passage Length:  797
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 797, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 797, 20])
Passage ques attention dim:  torch.Size([40, 797, 20])
Passage question vectors dim:  torch.Size([40, 797, 200])
Question Passage Similarity dim:  torch.Size([40, 797])
Question passage attention dim:  torch.Size([40, 797])
Final Merged Passage dim:  torch.Size([40, 797, 800])
Modeled Passage dim:  torch.Size([40, 797, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 797, 1000])
Span start logits:  torch.Size([40, 797])
span start probs dim:  torch.Size([40, 797])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 797]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1498, 200])
Passage Length:  1498
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1498, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1498, 12])
Passage ques attention dim:  torch.Size([40, 1498, 12])
Passage question vectors dim:  torch.Size([40, 1498, 200])
Question Passage Similarity dim:  torch.Size([40, 1498])
Question passage attention dim:  torch.Size([40, 1498])
Final Merged Passage dim:  torch.Size([40, 1498, 800])
Modeled Passage dim:  torch.Size([40, 1498, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1498, 1000])
Span start logits:  torch.Size([40, 1498])
span start probs dim:  torch.Size([40, 1498])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1498]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 765, 200])
Passage Length:  765
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 765, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 765, 13])
Passage ques attention dim:  torch.Size([40, 765, 13])
Passage question vectors dim:  torch.Size([40, 765, 200])
Question Passage Similarity dim:  torch.Size([40, 765])
Question passage attention dim:  torch.Size([40, 765])
Final Merged Passage dim:  torch.Size([40, 765, 800])
Modeled Passage dim:  torch.Size([40, 765, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 765, 1000])
Span start logits:  torch.Size([40, 765])
span start probs dim:  torch.Size([40, 765])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 765]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 414, 200])
Passage Length:  414
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 414, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 414, 14])
Passage ques attention dim:  torch.Size([40, 414, 14])
Passage question vectors dim:  torch.Size([40, 414, 200])
Question Passage Similarity dim:  torch.Size([40, 414])
Question passage attention dim:  torch.Size([40, 414])
Final Merged Passage dim:  torch.Size([40, 414, 800])
Modeled Passage dim:  torch.Size([40, 414, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 414, 1000])
Span start logits:  torch.Size([40, 414])
span start probs dim:  torch.Size([40, 414])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 414]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 530, 200])
Passage Length:  530
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 530, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 530, 14])
Passage ques attention dim:  torch.Size([40, 530, 14])
Passage question vectors dim:  torch.Size([40, 530, 200])
Question Passage Similarity dim:  torch.Size([40, 530])
Question passage attention dim:  torch.Size([40, 530])
Final Merged Passage dim:  torch.Size([40, 530, 800])
Modeled Passage dim:  torch.Size([40, 530, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 530, 1000])
Span start logits:  torch.Size([40, 530])
span start probs dim:  torch.Size([40, 530])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 530]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1595, 200])
Passage Length:  1595
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1595, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1595, 12])
Passage ques attention dim:  torch.Size([40, 1595, 12])
Passage question vectors dim:  torch.Size([40, 1595, 200])
Question Passage Similarity dim:  torch.Size([40, 1595])
Question passage attention dim:  torch.Size([40, 1595])
Final Merged Passage dim:  torch.Size([40, 1595, 800])
Modeled Passage dim:  torch.Size([40, 1595, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1595, 1000])
Span start logits:  torch.Size([40, 1595])
span start probs dim:  torch.Size([40, 1595])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1595]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 561, 200])
Passage Length:  561
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 561, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 561, 21])
Passage ques attention dim:  torch.Size([40, 561, 21])
Passage question vectors dim:  torch.Size([40, 561, 200])
Question Passage Similarity dim:  torch.Size([40, 561])
Question passage attention dim:  torch.Size([40, 561])
Final Merged Passage dim:  torch.Size([40, 561, 800])
Modeled Passage dim:  torch.Size([40, 561, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 561, 1000])
Span start logits:  torch.Size([40, 561])
span start probs dim:  torch.Size([40, 561])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 561]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1182, 200])
Passage Length:  1182
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1182, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1182, 13])
Passage ques attention dim:  torch.Size([40, 1182, 13])
Passage question vectors dim:  torch.Size([40, 1182, 200])
Question Passage Similarity dim:  torch.Size([40, 1182])
Question passage attention dim:  torch.Size([40, 1182])
Final Merged Passage dim:  torch.Size([40, 1182, 800])
Modeled Passage dim:  torch.Size([40, 1182, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1182, 1000])
Span start logits:  torch.Size([40, 1182])
span start probs dim:  torch.Size([40, 1182])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1182]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1346, 200])
Passage Length:  1346
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1346, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1346, 15])
Passage ques attention dim:  torch.Size([40, 1346, 15])
Passage question vectors dim:  torch.Size([40, 1346, 200])
Question Passage Similarity dim:  torch.Size([40, 1346])
Question passage attention dim:  torch.Size([40, 1346])
Final Merged Passage dim:  torch.Size([40, 1346, 800])
Modeled Passage dim:  torch.Size([40, 1346, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1346, 1000])
Span start logits:  torch.Size([40, 1346])
span start probs dim:  torch.Size([40, 1346])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1346]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1048, 200])
Passage Length:  1048
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1048, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1048, 15])
Passage ques attention dim:  torch.Size([40, 1048, 15])
Passage question vectors dim:  torch.Size([40, 1048, 200])
Question Passage Similarity dim:  torch.Size([40, 1048])
Question passage attention dim:  torch.Size([40, 1048])
Final Merged Passage dim:  torch.Size([40, 1048, 800])
Modeled Passage dim:  torch.Size([40, 1048, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1048, 1000])
Span start logits:  torch.Size([40, 1048])
span start probs dim:  torch.Size([40, 1048])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1048]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 852, 200])
Passage Length:  852
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 852, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 852, 12])
Passage ques attention dim:  torch.Size([40, 852, 12])
Passage question vectors dim:  torch.Size([40, 852, 200])
Question Passage Similarity dim:  torch.Size([40, 852])
Question passage attention dim:  torch.Size([40, 852])
Final Merged Passage dim:  torch.Size([40, 852, 800])
Modeled Passage dim:  torch.Size([40, 852, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 852, 1000])
Span start logits:  torch.Size([40, 852])
span start probs dim:  torch.Size([40, 852])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 852]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1501, 200])
Passage Length:  1501
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1501, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1501, 12])
Passage ques attention dim:  torch.Size([40, 1501, 12])
Passage question vectors dim:  torch.Size([40, 1501, 200])
Question Passage Similarity dim:  torch.Size([40, 1501])
Question passage attention dim:  torch.Size([40, 1501])
Final Merged Passage dim:  torch.Size([40, 1501, 800])
Modeled Passage dim:  torch.Size([40, 1501, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1501, 1000])
Span start logits:  torch.Size([40, 1501])
span start probs dim:  torch.Size([40, 1501])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1501]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 364, 200])
Passage Length:  364
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 364, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 364, 11])
Passage ques attention dim:  torch.Size([40, 364, 11])
Passage question vectors dim:  torch.Size([40, 364, 200])
Question Passage Similarity dim:  torch.Size([40, 364])
Question passage attention dim:  torch.Size([40, 364])
Final Merged Passage dim:  torch.Size([40, 364, 800])
Modeled Passage dim:  torch.Size([40, 364, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 364, 1000])
Span start logits:  torch.Size([40, 364])
span start probs dim:  torch.Size([40, 364])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 364]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1100, 200])
Passage Length:  1100
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1100, 16])
Passage ques attention dim:  torch.Size([40, 1100, 16])
Passage question vectors dim:  torch.Size([40, 1100, 200])
Question Passage Similarity dim:  torch.Size([40, 1100])
Question passage attention dim:  torch.Size([40, 1100])
Final Merged Passage dim:  torch.Size([40, 1100, 800])
Modeled Passage dim:  torch.Size([40, 1100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1100, 1000])
Span start logits:  torch.Size([40, 1100])
span start probs dim:  torch.Size([40, 1100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 612, 200])
Passage Length:  612
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 612, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 612, 16])
Passage ques attention dim:  torch.Size([40, 612, 16])
Passage question vectors dim:  torch.Size([40, 612, 200])
Question Passage Similarity dim:  torch.Size([40, 612])
Question passage attention dim:  torch.Size([40, 612])
Final Merged Passage dim:  torch.Size([40, 612, 800])
Modeled Passage dim:  torch.Size([40, 612, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 612, 1000])
Span start logits:  torch.Size([40, 612])
span start probs dim:  torch.Size([40, 612])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 612]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 806, 200])
Passage Length:  806
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 806, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 806, 13])
Passage ques attention dim:  torch.Size([40, 806, 13])
Passage question vectors dim:  torch.Size([40, 806, 200])
Question Passage Similarity dim:  torch.Size([40, 806])
Question passage attention dim:  torch.Size([40, 806])
Final Merged Passage dim:  torch.Size([40, 806, 800])
Modeled Passage dim:  torch.Size([40, 806, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 806, 1000])
Span start logits:  torch.Size([40, 806])
span start probs dim:  torch.Size([40, 806])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 806]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 2039, 200])
Passage Length:  2039
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 2039, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2039, 15])
Passage ques attention dim:  torch.Size([40, 2039, 15])
Passage question vectors dim:  torch.Size([40, 2039, 200])
Question Passage Similarity dim:  torch.Size([40, 2039])
Question passage attention dim:  torch.Size([40, 2039])
Final Merged Passage dim:  torch.Size([40, 2039, 800])
Modeled Passage dim:  torch.Size([40, 2039, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2039, 1000])
Span start logits:  torch.Size([40, 2039])
span start probs dim:  torch.Size([40, 2039])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2039]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 868, 200])
Passage Length:  868
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 868, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 868, 15])
Passage ques attention dim:  torch.Size([40, 868, 15])
Passage question vectors dim:  torch.Size([40, 868, 200])
Question Passage Similarity dim:  torch.Size([40, 868])
Question passage attention dim:  torch.Size([40, 868])
Final Merged Passage dim:  torch.Size([40, 868, 800])
Modeled Passage dim:  torch.Size([40, 868, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 868, 1000])
Span start logits:  torch.Size([40, 868])
span start probs dim:  torch.Size([40, 868])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 868]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 534, 200])
Passage Length:  534
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 534, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 534, 12])
Passage ques attention dim:  torch.Size([40, 534, 12])
Passage question vectors dim:  torch.Size([40, 534, 200])
Question Passage Similarity dim:  torch.Size([40, 534])
Question passage attention dim:  torch.Size([40, 534])
Final Merged Passage dim:  torch.Size([40, 534, 800])
Modeled Passage dim:  torch.Size([40, 534, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 534, 1000])
Span start logits:  torch.Size([40, 534])
span start probs dim:  torch.Size([40, 534])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 534]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1254, 200])
Passage Length:  1254
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1254, 14])
Passage ques attention dim:  torch.Size([40, 1254, 14])
Passage question vectors dim:  torch.Size([40, 1254, 200])
Question Passage Similarity dim:  torch.Size([40, 1254])
Question passage attention dim:  torch.Size([40, 1254])
Final Merged Passage dim:  torch.Size([40, 1254, 800])
Modeled Passage dim:  torch.Size([40, 1254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1254, 1000])
Span start logits:  torch.Size([40, 1254])
span start probs dim:  torch.Size([40, 1254])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1254]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1004, 200])
Passage Length:  1004
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1004, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1004, 16])
Passage ques attention dim:  torch.Size([40, 1004, 16])
Passage question vectors dim:  torch.Size([40, 1004, 200])
Question Passage Similarity dim:  torch.Size([40, 1004])
Question passage attention dim:  torch.Size([40, 1004])
Final Merged Passage dim:  torch.Size([40, 1004, 800])
Modeled Passage dim:  torch.Size([40, 1004, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1004, 1000])
Span start logits:  torch.Size([40, 1004])
span start probs dim:  torch.Size([40, 1004])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1004]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 302, 200])
Passage Length:  302
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 302, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 302, 17])
Passage ques attention dim:  torch.Size([40, 302, 17])
Passage question vectors dim:  torch.Size([40, 302, 200])
Question Passage Similarity dim:  torch.Size([40, 302])
Question passage attention dim:  torch.Size([40, 302])
Final Merged Passage dim:  torch.Size([40, 302, 800])
Modeled Passage dim:  torch.Size([40, 302, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 302, 1000])
Span start logits:  torch.Size([40, 302])
span start probs dim:  torch.Size([40, 302])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 302]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 851, 200])
Passage Length:  851
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 851, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 851, 15])
Passage ques attention dim:  torch.Size([40, 851, 15])
Passage question vectors dim:  torch.Size([40, 851, 200])
Question Passage Similarity dim:  torch.Size([40, 851])
Question passage attention dim:  torch.Size([40, 851])
Final Merged Passage dim:  torch.Size([40, 851, 800])
Modeled Passage dim:  torch.Size([40, 851, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 851, 1000])
Span start logits:  torch.Size([40, 851])
span start probs dim:  torch.Size([40, 851])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 851]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 458, 200])
Passage Length:  458
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 458, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 458, 17])
Passage ques attention dim:  torch.Size([40, 458, 17])
Passage question vectors dim:  torch.Size([40, 458, 200])
Question Passage Similarity dim:  torch.Size([40, 458])
Question passage attention dim:  torch.Size([40, 458])
Final Merged Passage dim:  torch.Size([40, 458, 800])
Modeled Passage dim:  torch.Size([40, 458, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 458, 1000])
Span start logits:  torch.Size([40, 458])
span start probs dim:  torch.Size([40, 458])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 458]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 773, 200])
Passage Length:  773
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 773, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 773, 17])
Passage ques attention dim:  torch.Size([40, 773, 17])
Passage question vectors dim:  torch.Size([40, 773, 200])
Question Passage Similarity dim:  torch.Size([40, 773])
Question passage attention dim:  torch.Size([40, 773])
Final Merged Passage dim:  torch.Size([40, 773, 800])
Modeled Passage dim:  torch.Size([40, 773, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 773, 1000])
Span start logits:  torch.Size([40, 773])
span start probs dim:  torch.Size([40, 773])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 773]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1018, 200])
Passage Length:  1018
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1018, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1018, 14])
Passage ques attention dim:  torch.Size([40, 1018, 14])
Passage question vectors dim:  torch.Size([40, 1018, 200])
Question Passage Similarity dim:  torch.Size([40, 1018])
Question passage attention dim:  torch.Size([40, 1018])
Final Merged Passage dim:  torch.Size([40, 1018, 800])
Modeled Passage dim:  torch.Size([40, 1018, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1018, 1000])
Span start logits:  torch.Size([40, 1018])
span start probs dim:  torch.Size([40, 1018])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1018]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1545, 200])
Passage Length:  1545
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1545, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1545, 14])
Passage ques attention dim:  torch.Size([40, 1545, 14])
Passage question vectors dim:  torch.Size([40, 1545, 200])
Question Passage Similarity dim:  torch.Size([40, 1545])
Question passage attention dim:  torch.Size([40, 1545])
Final Merged Passage dim:  torch.Size([40, 1545, 800])
Modeled Passage dim:  torch.Size([40, 1545, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1545, 1000])
Span start logits:  torch.Size([40, 1545])
span start probs dim:  torch.Size([40, 1545])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1545]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1078, 200])
Passage Length:  1078
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1078, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1078, 16])
Passage ques attention dim:  torch.Size([40, 1078, 16])
Passage question vectors dim:  torch.Size([40, 1078, 200])
Question Passage Similarity dim:  torch.Size([40, 1078])
Question passage attention dim:  torch.Size([40, 1078])
Final Merged Passage dim:  torch.Size([40, 1078, 800])
Modeled Passage dim:  torch.Size([40, 1078, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1078, 1000])
Span start logits:  torch.Size([40, 1078])
span start probs dim:  torch.Size([40, 1078])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1078]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 748, 200])
Passage Length:  748
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 748, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 748, 20])
Passage ques attention dim:  torch.Size([40, 748, 20])
Passage question vectors dim:  torch.Size([40, 748, 200])
Question Passage Similarity dim:  torch.Size([40, 748])
Question passage attention dim:  torch.Size([40, 748])
Final Merged Passage dim:  torch.Size([40, 748, 800])
Modeled Passage dim:  torch.Size([40, 748, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 748, 1000])
Span start logits:  torch.Size([40, 748])
span start probs dim:  torch.Size([40, 748])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 748]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 478, 200])
Passage Length:  478
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 478, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 478, 14])
Passage ques attention dim:  torch.Size([40, 478, 14])
Passage question vectors dim:  torch.Size([40, 478, 200])
Question Passage Similarity dim:  torch.Size([40, 478])
Question passage attention dim:  torch.Size([40, 478])
Final Merged Passage dim:  torch.Size([40, 478, 800])
Modeled Passage dim:  torch.Size([40, 478, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 478, 1000])
Span start logits:  torch.Size([40, 478])
span start probs dim:  torch.Size([40, 478])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 478]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 799, 200])
Passage Length:  799
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 799, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 799, 15])
Passage ques attention dim:  torch.Size([40, 799, 15])
Passage question vectors dim:  torch.Size([40, 799, 200])
Question Passage Similarity dim:  torch.Size([40, 799])
Question passage attention dim:  torch.Size([40, 799])
Final Merged Passage dim:  torch.Size([40, 799, 800])
Modeled Passage dim:  torch.Size([40, 799, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 799, 1000])
Span start logits:  torch.Size([40, 799])
span start probs dim:  torch.Size([40, 799])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 799]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 503, 200])
Passage Length:  503
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 503, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 503, 13])
Passage ques attention dim:  torch.Size([40, 503, 13])
Passage question vectors dim:  torch.Size([40, 503, 200])
Question Passage Similarity dim:  torch.Size([40, 503])
Question passage attention dim:  torch.Size([40, 503])
Final Merged Passage dim:  torch.Size([40, 503, 800])
Modeled Passage dim:  torch.Size([40, 503, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 503, 1000])
Span start logits:  torch.Size([40, 503])
span start probs dim:  torch.Size([40, 503])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 503]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 969, 200])
Passage Length:  969
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 969, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 969, 14])
Passage ques attention dim:  torch.Size([40, 969, 14])
Passage question vectors dim:  torch.Size([40, 969, 200])
Question Passage Similarity dim:  torch.Size([40, 969])
Question passage attention dim:  torch.Size([40, 969])
Final Merged Passage dim:  torch.Size([40, 969, 800])
Modeled Passage dim:  torch.Size([40, 969, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 969, 1000])
Span start logits:  torch.Size([40, 969])
span start probs dim:  torch.Size([40, 969])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 969]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 379, 14])
Passage ques attention dim:  torch.Size([40, 379, 14])
Passage question vectors dim:  torch.Size([40, 379, 200])
Question Passage Similarity dim:  torch.Size([40, 379])
Question passage attention dim:  torch.Size([40, 379])
Final Merged Passage dim:  torch.Size([40, 379, 800])
Modeled Passage dim:  torch.Size([40, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 379, 1000])
Span start logits:  torch.Size([40, 379])
span start probs dim:  torch.Size([40, 379])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 379]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 214, 200])
Passage Length:  214
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 214, 15])
Passage ques attention dim:  torch.Size([40, 214, 15])
Passage question vectors dim:  torch.Size([40, 214, 200])
Question Passage Similarity dim:  torch.Size([40, 214])
Question passage attention dim:  torch.Size([40, 214])
Final Merged Passage dim:  torch.Size([40, 214, 800])
Modeled Passage dim:  torch.Size([40, 214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 214, 1000])
Span start logits:  torch.Size([40, 214])
span start probs dim:  torch.Size([40, 214])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 214]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 334, 200])
Passage Length:  334
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 334, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 334, 12])
Passage ques attention dim:  torch.Size([40, 334, 12])
Passage question vectors dim:  torch.Size([40, 334, 200])
Question Passage Similarity dim:  torch.Size([40, 334])
Question passage attention dim:  torch.Size([40, 334])
Final Merged Passage dim:  torch.Size([40, 334, 800])
Modeled Passage dim:  torch.Size([40, 334, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 334, 1000])
Span start logits:  torch.Size([40, 334])
span start probs dim:  torch.Size([40, 334])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 334]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 782, 200])
Passage Length:  782
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 782, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 782, 11])
Passage ques attention dim:  torch.Size([40, 782, 11])
Passage question vectors dim:  torch.Size([40, 782, 200])
Question Passage Similarity dim:  torch.Size([40, 782])
Question passage attention dim:  torch.Size([40, 782])
Final Merged Passage dim:  torch.Size([40, 782, 800])
Modeled Passage dim:  torch.Size([40, 782, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 782, 1000])
Span start logits:  torch.Size([40, 782])
span start probs dim:  torch.Size([40, 782])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 782]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 590, 200])
Passage Length:  590
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 590, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 590, 15])
Passage ques attention dim:  torch.Size([40, 590, 15])
Passage question vectors dim:  torch.Size([40, 590, 200])
Question Passage Similarity dim:  torch.Size([40, 590])
Question passage attention dim:  torch.Size([40, 590])
Final Merged Passage dim:  torch.Size([40, 590, 800])
Modeled Passage dim:  torch.Size([40, 590, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 590, 1000])
Span start logits:  torch.Size([40, 590])
span start probs dim:  torch.Size([40, 590])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 590]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 266, 200])
Passage Length:  266
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 266, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 266, 16])
Passage ques attention dim:  torch.Size([40, 266, 16])
Passage question vectors dim:  torch.Size([40, 266, 200])
Question Passage Similarity dim:  torch.Size([40, 266])
Question passage attention dim:  torch.Size([40, 266])
Final Merged Passage dim:  torch.Size([40, 266, 800])
Modeled Passage dim:  torch.Size([40, 266, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 266, 1000])
Span start logits:  torch.Size([40, 266])
span start probs dim:  torch.Size([40, 266])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 266]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1778, 200])
Passage Length:  1778
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1778, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1778, 12])
Passage ques attention dim:  torch.Size([40, 1778, 12])
Passage question vectors dim:  torch.Size([40, 1778, 200])
Question Passage Similarity dim:  torch.Size([40, 1778])
Question passage attention dim:  torch.Size([40, 1778])
Final Merged Passage dim:  torch.Size([40, 1778, 800])
Modeled Passage dim:  torch.Size([40, 1778, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1778, 1000])
Span start logits:  torch.Size([40, 1778])
span start probs dim:  torch.Size([40, 1778])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1778]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 656, 200])
Passage Length:  656
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 656, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 656, 13])
Passage ques attention dim:  torch.Size([40, 656, 13])
Passage question vectors dim:  torch.Size([40, 656, 200])
Question Passage Similarity dim:  torch.Size([40, 656])
Question passage attention dim:  torch.Size([40, 656])
Final Merged Passage dim:  torch.Size([40, 656, 800])
Modeled Passage dim:  torch.Size([40, 656, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 656, 1000])
Span start logits:  torch.Size([40, 656])
span start probs dim:  torch.Size([40, 656])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 656]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 442, 200])
Passage Length:  442
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 442, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 442, 12])
Passage ques attention dim:  torch.Size([40, 442, 12])
Passage question vectors dim:  torch.Size([40, 442, 200])
Question Passage Similarity dim:  torch.Size([40, 442])
Question passage attention dim:  torch.Size([40, 442])
Final Merged Passage dim:  torch.Size([40, 442, 800])
Modeled Passage dim:  torch.Size([40, 442, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 442, 1000])
Span start logits:  torch.Size([40, 442])
span start probs dim:  torch.Size([40, 442])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 442]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 446, 200])
Passage Length:  446
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 446, 13])
Passage ques attention dim:  torch.Size([40, 446, 13])
Passage question vectors dim:  torch.Size([40, 446, 200])
Question Passage Similarity dim:  torch.Size([40, 446])
Question passage attention dim:  torch.Size([40, 446])
Final Merged Passage dim:  torch.Size([40, 446, 800])
Modeled Passage dim:  torch.Size([40, 446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 446, 1000])
Span start logits:  torch.Size([40, 446])
span start probs dim:  torch.Size([40, 446])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 446]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 829, 200])
Passage Length:  829
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 829, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 829, 15])
Passage ques attention dim:  torch.Size([40, 829, 15])
Passage question vectors dim:  torch.Size([40, 829, 200])
Question Passage Similarity dim:  torch.Size([40, 829])
Question passage attention dim:  torch.Size([40, 829])
Final Merged Passage dim:  torch.Size([40, 829, 800])
Modeled Passage dim:  torch.Size([40, 829, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 829, 1000])
Span start logits:  torch.Size([40, 829])
span start probs dim:  torch.Size([40, 829])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 829]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 584, 200])
Passage Length:  584
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 584, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 584, 14])
Passage ques attention dim:  torch.Size([40, 584, 14])
Passage question vectors dim:  torch.Size([40, 584, 200])
Question Passage Similarity dim:  torch.Size([40, 584])
Question passage attention dim:  torch.Size([40, 584])
Final Merged Passage dim:  torch.Size([40, 584, 800])
Modeled Passage dim:  torch.Size([40, 584, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 584, 1000])
Span start logits:  torch.Size([40, 584])
span start probs dim:  torch.Size([40, 584])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 584]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 364, 200])
Passage Length:  364
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 364, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 364, 15])
Passage ques attention dim:  torch.Size([40, 364, 15])
Passage question vectors dim:  torch.Size([40, 364, 200])
Question Passage Similarity dim:  torch.Size([40, 364])
Question passage attention dim:  torch.Size([40, 364])
Final Merged Passage dim:  torch.Size([40, 364, 800])
Modeled Passage dim:  torch.Size([40, 364, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 364, 1000])
Span start logits:  torch.Size([40, 364])
span start probs dim:  torch.Size([40, 364])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 364]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1583, 200])
Passage Length:  1583
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1583, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1583, 14])
Passage ques attention dim:  torch.Size([40, 1583, 14])
Passage question vectors dim:  torch.Size([40, 1583, 200])
Question Passage Similarity dim:  torch.Size([40, 1583])
Question passage attention dim:  torch.Size([40, 1583])
Final Merged Passage dim:  torch.Size([40, 1583, 800])
Modeled Passage dim:  torch.Size([40, 1583, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1583, 1000])
Span start logits:  torch.Size([40, 1583])
span start probs dim:  torch.Size([40, 1583])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1583]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1216, 200])
Passage Length:  1216
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1216, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1216, 11])
Passage ques attention dim:  torch.Size([40, 1216, 11])
Passage question vectors dim:  torch.Size([40, 1216, 200])
Question Passage Similarity dim:  torch.Size([40, 1216])
Question passage attention dim:  torch.Size([40, 1216])
Final Merged Passage dim:  torch.Size([40, 1216, 800])
Modeled Passage dim:  torch.Size([40, 1216, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1216, 1000])
Span start logits:  torch.Size([40, 1216])
span start probs dim:  torch.Size([40, 1216])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1216]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 511, 200])
Passage Length:  511
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 511, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 511, 10])
Passage ques attention dim:  torch.Size([40, 511, 10])
Passage question vectors dim:  torch.Size([40, 511, 200])
Question Passage Similarity dim:  torch.Size([40, 511])
Question passage attention dim:  torch.Size([40, 511])
Final Merged Passage dim:  torch.Size([40, 511, 800])
Modeled Passage dim:  torch.Size([40, 511, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 511, 1000])
Span start logits:  torch.Size([40, 511])
span start probs dim:  torch.Size([40, 511])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 511]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 385, 200])
Passage Length:  385
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 385, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 385, 14])
Passage ques attention dim:  torch.Size([40, 385, 14])
Passage question vectors dim:  torch.Size([40, 385, 200])
Question Passage Similarity dim:  torch.Size([40, 385])
Question passage attention dim:  torch.Size([40, 385])
Final Merged Passage dim:  torch.Size([40, 385, 800])
Modeled Passage dim:  torch.Size([40, 385, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 385, 1000])
Span start logits:  torch.Size([40, 385])
span start probs dim:  torch.Size([40, 385])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 385]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1371, 200])
Passage Length:  1371
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1371, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1371, 14])
Passage ques attention dim:  torch.Size([40, 1371, 14])
Passage question vectors dim:  torch.Size([40, 1371, 200])
Question Passage Similarity dim:  torch.Size([40, 1371])
Question passage attention dim:  torch.Size([40, 1371])
Final Merged Passage dim:  torch.Size([40, 1371, 800])
Modeled Passage dim:  torch.Size([40, 1371, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1371, 1000])
Span start logits:  torch.Size([40, 1371])
span start probs dim:  torch.Size([40, 1371])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1371]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1061, 200])
Passage Length:  1061
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1061, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1061, 15])
Passage ques attention dim:  torch.Size([40, 1061, 15])
Passage question vectors dim:  torch.Size([40, 1061, 200])
Question Passage Similarity dim:  torch.Size([40, 1061])
Question passage attention dim:  torch.Size([40, 1061])
Final Merged Passage dim:  torch.Size([40, 1061, 800])
Modeled Passage dim:  torch.Size([40, 1061, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1061, 1000])
Span start logits:  torch.Size([40, 1061])
span start probs dim:  torch.Size([40, 1061])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1061]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 772, 200])
Passage Length:  772
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 772, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 772, 18])
Passage ques attention dim:  torch.Size([40, 772, 18])
Passage question vectors dim:  torch.Size([40, 772, 200])
Question Passage Similarity dim:  torch.Size([40, 772])
Question passage attention dim:  torch.Size([40, 772])
Final Merged Passage dim:  torch.Size([40, 772, 800])
Modeled Passage dim:  torch.Size([40, 772, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 772, 1000])
Span start logits:  torch.Size([40, 772])
span start probs dim:  torch.Size([40, 772])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 772]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1254, 200])
Passage Length:  1254
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1254, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1254, 15])
Passage ques attention dim:  torch.Size([40, 1254, 15])
Passage question vectors dim:  torch.Size([40, 1254, 200])
Question Passage Similarity dim:  torch.Size([40, 1254])
Question passage attention dim:  torch.Size([40, 1254])
Final Merged Passage dim:  torch.Size([40, 1254, 800])
Modeled Passage dim:  torch.Size([40, 1254, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1254, 1000])
Span start logits:  torch.Size([40, 1254])
span start probs dim:  torch.Size([40, 1254])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1254]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 909, 200])
Passage Length:  909
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 909, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 909, 14])
Passage ques attention dim:  torch.Size([40, 909, 14])
Passage question vectors dim:  torch.Size([40, 909, 200])
Question Passage Similarity dim:  torch.Size([40, 909])
Question passage attention dim:  torch.Size([40, 909])
Final Merged Passage dim:  torch.Size([40, 909, 800])
Modeled Passage dim:  torch.Size([40, 909, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 909, 1000])
Span start logits:  torch.Size([40, 909])
span start probs dim:  torch.Size([40, 909])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 909]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 815, 200])
Passage Length:  815
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 815, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 815, 18])
Passage ques attention dim:  torch.Size([40, 815, 18])
Passage question vectors dim:  torch.Size([40, 815, 200])
Question Passage Similarity dim:  torch.Size([40, 815])
Question passage attention dim:  torch.Size([40, 815])
Final Merged Passage dim:  torch.Size([40, 815, 800])
Modeled Passage dim:  torch.Size([40, 815, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 815, 1000])
Span start logits:  torch.Size([40, 815])
span start probs dim:  torch.Size([40, 815])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 815]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 251, 200])
Passage Length:  251
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 251, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 251, 14])
Passage ques attention dim:  torch.Size([40, 251, 14])
Passage question vectors dim:  torch.Size([40, 251, 200])
Question Passage Similarity dim:  torch.Size([40, 251])
Question passage attention dim:  torch.Size([40, 251])
Final Merged Passage dim:  torch.Size([40, 251, 800])
Modeled Passage dim:  torch.Size([40, 251, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 251, 1000])
Span start logits:  torch.Size([40, 251])
span start probs dim:  torch.Size([40, 251])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 251]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1358, 200])
Passage Length:  1358
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1358, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1358, 20])
Passage ques attention dim:  torch.Size([40, 1358, 20])
Passage question vectors dim:  torch.Size([40, 1358, 200])
Question Passage Similarity dim:  torch.Size([40, 1358])
Question passage attention dim:  torch.Size([40, 1358])
Final Merged Passage dim:  torch.Size([40, 1358, 800])
Modeled Passage dim:  torch.Size([40, 1358, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1358, 1000])
Span start logits:  torch.Size([40, 1358])
span start probs dim:  torch.Size([40, 1358])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1358]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 253, 200])
Passage Length:  253
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 253, 13])
Passage ques attention dim:  torch.Size([40, 253, 13])
Passage question vectors dim:  torch.Size([40, 253, 200])
Question Passage Similarity dim:  torch.Size([40, 253])
Question passage attention dim:  torch.Size([40, 253])
Final Merged Passage dim:  torch.Size([40, 253, 800])
Modeled Passage dim:  torch.Size([40, 253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 253, 1000])
Span start logits:  torch.Size([40, 253])
span start probs dim:  torch.Size([40, 253])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 253]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 457, 200])
Passage Length:  457
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 457, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 457, 16])
Passage ques attention dim:  torch.Size([40, 457, 16])
Passage question vectors dim:  torch.Size([40, 457, 200])
Question Passage Similarity dim:  torch.Size([40, 457])
Question passage attention dim:  torch.Size([40, 457])
Final Merged Passage dim:  torch.Size([40, 457, 800])
Modeled Passage dim:  torch.Size([40, 457, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 457, 1000])
Span start logits:  torch.Size([40, 457])
span start probs dim:  torch.Size([40, 457])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 457]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 925, 200])
Passage Length:  925
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 925, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 925, 11])
Passage ques attention dim:  torch.Size([40, 925, 11])
Passage question vectors dim:  torch.Size([40, 925, 200])
Question Passage Similarity dim:  torch.Size([40, 925])
Question passage attention dim:  torch.Size([40, 925])
Final Merged Passage dim:  torch.Size([40, 925, 800])
Modeled Passage dim:  torch.Size([40, 925, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 925, 1000])
Span start logits:  torch.Size([40, 925])
span start probs dim:  torch.Size([40, 925])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 925]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 986, 200])
Passage Length:  986
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 986, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 986, 13])
Passage ques attention dim:  torch.Size([40, 986, 13])
Passage question vectors dim:  torch.Size([40, 986, 200])
Question Passage Similarity dim:  torch.Size([40, 986])
Question passage attention dim:  torch.Size([40, 986])
Final Merged Passage dim:  torch.Size([40, 986, 800])
Modeled Passage dim:  torch.Size([40, 986, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 986, 1000])
Span start logits:  torch.Size([40, 986])
span start probs dim:  torch.Size([40, 986])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 986]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 628, 200])
Passage Length:  628
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 628, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 628, 15])
Passage ques attention dim:  torch.Size([40, 628, 15])
Passage question vectors dim:  torch.Size([40, 628, 200])
Question Passage Similarity dim:  torch.Size([40, 628])
Question passage attention dim:  torch.Size([40, 628])
Final Merged Passage dim:  torch.Size([40, 628, 800])
Modeled Passage dim:  torch.Size([40, 628, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 628, 1000])
Span start logits:  torch.Size([40, 628])
span start probs dim:  torch.Size([40, 628])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 628]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 710, 200])
Passage Length:  710
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 710, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 710, 18])
Passage ques attention dim:  torch.Size([40, 710, 18])
Passage question vectors dim:  torch.Size([40, 710, 200])
Question Passage Similarity dim:  torch.Size([40, 710])
Question passage attention dim:  torch.Size([40, 710])
Final Merged Passage dim:  torch.Size([40, 710, 800])
Modeled Passage dim:  torch.Size([40, 710, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 710, 1000])
Span start logits:  torch.Size([40, 710])
span start probs dim:  torch.Size([40, 710])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 710]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1031, 200])
Passage Length:  1031
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1031, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1031, 14])
Passage ques attention dim:  torch.Size([40, 1031, 14])
Passage question vectors dim:  torch.Size([40, 1031, 200])
Question Passage Similarity dim:  torch.Size([40, 1031])
Question passage attention dim:  torch.Size([40, 1031])
Final Merged Passage dim:  torch.Size([40, 1031, 800])
Modeled Passage dim:  torch.Size([40, 1031, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1031, 1000])
Span start logits:  torch.Size([40, 1031])
span start probs dim:  torch.Size([40, 1031])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1031]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 495, 200])
Passage Length:  495
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 495, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 495, 16])
Passage ques attention dim:  torch.Size([40, 495, 16])
Passage question vectors dim:  torch.Size([40, 495, 200])
Question Passage Similarity dim:  torch.Size([40, 495])
Question passage attention dim:  torch.Size([40, 495])
Final Merged Passage dim:  torch.Size([40, 495, 800])
Modeled Passage dim:  torch.Size([40, 495, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 495, 1000])
Span start logits:  torch.Size([40, 495])
span start probs dim:  torch.Size([40, 495])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 495]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1060, 200])
Passage Length:  1060
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1060, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1060, 17])
Passage ques attention dim:  torch.Size([40, 1060, 17])
Passage question vectors dim:  torch.Size([40, 1060, 200])
Question Passage Similarity dim:  torch.Size([40, 1060])
Question passage attention dim:  torch.Size([40, 1060])
Final Merged Passage dim:  torch.Size([40, 1060, 800])
Modeled Passage dim:  torch.Size([40, 1060, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1060, 1000])
Span start logits:  torch.Size([40, 1060])
span start probs dim:  torch.Size([40, 1060])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1060]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1159, 200])
Passage Length:  1159
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1159, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1159, 14])
Passage ques attention dim:  torch.Size([40, 1159, 14])
Passage question vectors dim:  torch.Size([40, 1159, 200])
Question Passage Similarity dim:  torch.Size([40, 1159])
Question passage attention dim:  torch.Size([40, 1159])
Final Merged Passage dim:  torch.Size([40, 1159, 800])
Modeled Passage dim:  torch.Size([40, 1159, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1159, 1000])
Span start logits:  torch.Size([40, 1159])
span start probs dim:  torch.Size([40, 1159])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1159]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1151, 200])
Passage Length:  1151
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1151, 13])
Passage ques attention dim:  torch.Size([40, 1151, 13])
Passage question vectors dim:  torch.Size([40, 1151, 200])
Question Passage Similarity dim:  torch.Size([40, 1151])
Question passage attention dim:  torch.Size([40, 1151])
Final Merged Passage dim:  torch.Size([40, 1151, 800])
Modeled Passage dim:  torch.Size([40, 1151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1151, 1000])
Span start logits:  torch.Size([40, 1151])
span start probs dim:  torch.Size([40, 1151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 948, 200])
Passage Length:  948
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 948, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 948, 14])
Passage ques attention dim:  torch.Size([40, 948, 14])
Passage question vectors dim:  torch.Size([40, 948, 200])
Question Passage Similarity dim:  torch.Size([40, 948])
Question passage attention dim:  torch.Size([40, 948])
Final Merged Passage dim:  torch.Size([40, 948, 800])
Modeled Passage dim:  torch.Size([40, 948, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 948, 1000])
Span start logits:  torch.Size([40, 948])
span start probs dim:  torch.Size([40, 948])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 948]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 446, 200])
Passage Length:  446
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 446, 12])
Passage ques attention dim:  torch.Size([40, 446, 12])
Passage question vectors dim:  torch.Size([40, 446, 200])
Question Passage Similarity dim:  torch.Size([40, 446])
Question passage attention dim:  torch.Size([40, 446])
Final Merged Passage dim:  torch.Size([40, 446, 800])
Modeled Passage dim:  torch.Size([40, 446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 446, 1000])
Span start logits:  torch.Size([40, 446])
span start probs dim:  torch.Size([40, 446])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 446]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 596, 200])
Passage Length:  596
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 596, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 596, 13])
Passage ques attention dim:  torch.Size([40, 596, 13])
Passage question vectors dim:  torch.Size([40, 596, 200])
Question Passage Similarity dim:  torch.Size([40, 596])
Question passage attention dim:  torch.Size([40, 596])
Final Merged Passage dim:  torch.Size([40, 596, 800])
Modeled Passage dim:  torch.Size([40, 596, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 596, 1000])
Span start logits:  torch.Size([40, 596])
span start probs dim:  torch.Size([40, 596])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 596]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 481, 200])
Passage Length:  481
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 481, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 481, 14])
Passage ques attention dim:  torch.Size([40, 481, 14])
Passage question vectors dim:  torch.Size([40, 481, 200])
Question Passage Similarity dim:  torch.Size([40, 481])
Question passage attention dim:  torch.Size([40, 481])
Final Merged Passage dim:  torch.Size([40, 481, 800])
Modeled Passage dim:  torch.Size([40, 481, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 481, 1000])
Span start logits:  torch.Size([40, 481])
span start probs dim:  torch.Size([40, 481])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 481]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1134, 200])
Passage Length:  1134
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1134, 13])
Passage ques attention dim:  torch.Size([40, 1134, 13])
Passage question vectors dim:  torch.Size([40, 1134, 200])
Question Passage Similarity dim:  torch.Size([40, 1134])
Question passage attention dim:  torch.Size([40, 1134])
Final Merged Passage dim:  torch.Size([40, 1134, 800])
Modeled Passage dim:  torch.Size([40, 1134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1134, 1000])
Span start logits:  torch.Size([40, 1134])
span start probs dim:  torch.Size([40, 1134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 575, 200])
Passage Length:  575
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 575, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 575, 15])
Passage ques attention dim:  torch.Size([40, 575, 15])
Passage question vectors dim:  torch.Size([40, 575, 200])
Question Passage Similarity dim:  torch.Size([40, 575])
Question passage attention dim:  torch.Size([40, 575])
Final Merged Passage dim:  torch.Size([40, 575, 800])
Modeled Passage dim:  torch.Size([40, 575, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 575, 1000])
Span start logits:  torch.Size([40, 575])
span start probs dim:  torch.Size([40, 575])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 575]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1274, 200])
Passage Length:  1274
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1274, 15])
Passage ques attention dim:  torch.Size([40, 1274, 15])
Passage question vectors dim:  torch.Size([40, 1274, 200])
Question Passage Similarity dim:  torch.Size([40, 1274])
Question passage attention dim:  torch.Size([40, 1274])
Final Merged Passage dim:  torch.Size([40, 1274, 800])
Modeled Passage dim:  torch.Size([40, 1274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1274, 1000])
Span start logits:  torch.Size([40, 1274])
span start probs dim:  torch.Size([40, 1274])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1274]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 818, 200])
Passage Length:  818
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 818, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 818, 17])
Passage ques attention dim:  torch.Size([40, 818, 17])
Passage question vectors dim:  torch.Size([40, 818, 200])
Question Passage Similarity dim:  torch.Size([40, 818])
Question passage attention dim:  torch.Size([40, 818])
Final Merged Passage dim:  torch.Size([40, 818, 800])
Modeled Passage dim:  torch.Size([40, 818, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 818, 1000])
Span start logits:  torch.Size([40, 818])
span start probs dim:  torch.Size([40, 818])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 818]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 515, 200])
Passage Length:  515
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 515, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 515, 13])
Passage ques attention dim:  torch.Size([40, 515, 13])
Passage question vectors dim:  torch.Size([40, 515, 200])
Question Passage Similarity dim:  torch.Size([40, 515])
Question passage attention dim:  torch.Size([40, 515])
Final Merged Passage dim:  torch.Size([40, 515, 800])
Modeled Passage dim:  torch.Size([40, 515, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 515, 1000])
Span start logits:  torch.Size([40, 515])
span start probs dim:  torch.Size([40, 515])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 515]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 556, 200])
Passage Length:  556
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 556, 20])
Passage ques attention dim:  torch.Size([40, 556, 20])
Passage question vectors dim:  torch.Size([40, 556, 200])
Question Passage Similarity dim:  torch.Size([40, 556])
Question passage attention dim:  torch.Size([40, 556])
Final Merged Passage dim:  torch.Size([40, 556, 800])
Modeled Passage dim:  torch.Size([40, 556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 556, 1000])
Span start logits:  torch.Size([40, 556])
span start probs dim:  torch.Size([40, 556])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 556]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 325, 200])
Passage Length:  325
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 325, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 325, 16])
Passage ques attention dim:  torch.Size([40, 325, 16])
Passage question vectors dim:  torch.Size([40, 325, 200])
Question Passage Similarity dim:  torch.Size([40, 325])
Question passage attention dim:  torch.Size([40, 325])
Final Merged Passage dim:  torch.Size([40, 325, 800])
Modeled Passage dim:  torch.Size([40, 325, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 325, 1000])
Span start logits:  torch.Size([40, 325])
span start probs dim:  torch.Size([40, 325])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 325]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 532, 200])
Passage Length:  532
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 532, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 532, 15])
Passage ques attention dim:  torch.Size([40, 532, 15])
Passage question vectors dim:  torch.Size([40, 532, 200])
Question Passage Similarity dim:  torch.Size([40, 532])
Question passage attention dim:  torch.Size([40, 532])
Final Merged Passage dim:  torch.Size([40, 532, 800])
Modeled Passage dim:  torch.Size([40, 532, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 532, 1000])
Span start logits:  torch.Size([40, 532])
span start probs dim:  torch.Size([40, 532])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 532]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 649, 200])
Passage Length:  649
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 649, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 649, 13])
Passage ques attention dim:  torch.Size([40, 649, 13])
Passage question vectors dim:  torch.Size([40, 649, 200])
Question Passage Similarity dim:  torch.Size([40, 649])
Question passage attention dim:  torch.Size([40, 649])
Final Merged Passage dim:  torch.Size([40, 649, 800])
Modeled Passage dim:  torch.Size([40, 649, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 649, 1000])
Span start logits:  torch.Size([40, 649])
span start probs dim:  torch.Size([40, 649])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 649]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 332, 200])
Passage Length:  332
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 332, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 332, 15])
Passage ques attention dim:  torch.Size([40, 332, 15])
Passage question vectors dim:  torch.Size([40, 332, 200])
Question Passage Similarity dim:  torch.Size([40, 332])
Question passage attention dim:  torch.Size([40, 332])
Final Merged Passage dim:  torch.Size([40, 332, 800])
Modeled Passage dim:  torch.Size([40, 332, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 332, 1000])
Span start logits:  torch.Size([40, 332])
span start probs dim:  torch.Size([40, 332])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 332]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1763, 200])
Passage Length:  1763
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1763, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1763, 14])
Passage ques attention dim:  torch.Size([40, 1763, 14])
Passage question vectors dim:  torch.Size([40, 1763, 200])
Question Passage Similarity dim:  torch.Size([40, 1763])
Question passage attention dim:  torch.Size([40, 1763])
Final Merged Passage dim:  torch.Size([40, 1763, 800])
Modeled Passage dim:  torch.Size([40, 1763, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1763, 1000])
Span start logits:  torch.Size([40, 1763])
span start probs dim:  torch.Size([40, 1763])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1763]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 566, 200])
Passage Length:  566
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 566, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 566, 14])
Passage ques attention dim:  torch.Size([40, 566, 14])
Passage question vectors dim:  torch.Size([40, 566, 200])
Question Passage Similarity dim:  torch.Size([40, 566])
Question passage attention dim:  torch.Size([40, 566])
Final Merged Passage dim:  torch.Size([40, 566, 800])
Modeled Passage dim:  torch.Size([40, 566, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 566, 1000])
Span start logits:  torch.Size([40, 566])
span start probs dim:  torch.Size([40, 566])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 566]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 343, 15])
Passage ques attention dim:  torch.Size([40, 343, 15])
Passage question vectors dim:  torch.Size([40, 343, 200])
Question Passage Similarity dim:  torch.Size([40, 343])
Question passage attention dim:  torch.Size([40, 343])
Final Merged Passage dim:  torch.Size([40, 343, 800])
Modeled Passage dim:  torch.Size([40, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 343, 1000])
Span start logits:  torch.Size([40, 343])
span start probs dim:  torch.Size([40, 343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 499, 200])
Passage Length:  499
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 499, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 499, 14])
Passage ques attention dim:  torch.Size([40, 499, 14])
Passage question vectors dim:  torch.Size([40, 499, 200])
Question Passage Similarity dim:  torch.Size([40, 499])
Question passage attention dim:  torch.Size([40, 499])
Final Merged Passage dim:  torch.Size([40, 499, 800])
Modeled Passage dim:  torch.Size([40, 499, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 499, 1000])
Span start logits:  torch.Size([40, 499])
span start probs dim:  torch.Size([40, 499])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 499]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 450, 200])
Passage Length:  450
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 450, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 450, 14])
Passage ques attention dim:  torch.Size([40, 450, 14])
Passage question vectors dim:  torch.Size([40, 450, 200])
Question Passage Similarity dim:  torch.Size([40, 450])
Question passage attention dim:  torch.Size([40, 450])
Final Merged Passage dim:  torch.Size([40, 450, 800])
Modeled Passage dim:  torch.Size([40, 450, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 450, 1000])
Span start logits:  torch.Size([40, 450])
span start probs dim:  torch.Size([40, 450])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 450]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 877, 200])
Passage Length:  877
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 877, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 877, 17])
Passage ques attention dim:  torch.Size([40, 877, 17])
Passage question vectors dim:  torch.Size([40, 877, 200])
Question Passage Similarity dim:  torch.Size([40, 877])
Question passage attention dim:  torch.Size([40, 877])
Final Merged Passage dim:  torch.Size([40, 877, 800])
Modeled Passage dim:  torch.Size([40, 877, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 877, 1000])
Span start logits:  torch.Size([40, 877])
span start probs dim:  torch.Size([40, 877])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 877]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 808, 200])
Passage Length:  808
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 808, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 808, 13])
Passage ques attention dim:  torch.Size([40, 808, 13])
Passage question vectors dim:  torch.Size([40, 808, 200])
Question Passage Similarity dim:  torch.Size([40, 808])
Question passage attention dim:  torch.Size([40, 808])
Final Merged Passage dim:  torch.Size([40, 808, 800])
Modeled Passage dim:  torch.Size([40, 808, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 808, 1000])
Span start logits:  torch.Size([40, 808])
span start probs dim:  torch.Size([40, 808])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 808]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1465, 200])
Passage Length:  1465
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1465, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1465, 14])
Passage ques attention dim:  torch.Size([40, 1465, 14])
Passage question vectors dim:  torch.Size([40, 1465, 200])
Question Passage Similarity dim:  torch.Size([40, 1465])
Question passage attention dim:  torch.Size([40, 1465])
Final Merged Passage dim:  torch.Size([40, 1465, 800])
Modeled Passage dim:  torch.Size([40, 1465, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1465, 1000])
Span start logits:  torch.Size([40, 1465])
span start probs dim:  torch.Size([40, 1465])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1465]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 439, 200])
Passage Length:  439
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 439, 13])
Passage ques attention dim:  torch.Size([40, 439, 13])
Passage question vectors dim:  torch.Size([40, 439, 200])
Question Passage Similarity dim:  torch.Size([40, 439])
Question passage attention dim:  torch.Size([40, 439])
Final Merged Passage dim:  torch.Size([40, 439, 800])
Modeled Passage dim:  torch.Size([40, 439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 439, 1000])
Span start logits:  torch.Size([40, 439])
span start probs dim:  torch.Size([40, 439])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 439]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 279, 200])
Passage Length:  279
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 279, 13])
Passage ques attention dim:  torch.Size([40, 279, 13])
Passage question vectors dim:  torch.Size([40, 279, 200])
Question Passage Similarity dim:  torch.Size([40, 279])
Question passage attention dim:  torch.Size([40, 279])
Final Merged Passage dim:  torch.Size([40, 279, 800])
Modeled Passage dim:  torch.Size([40, 279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 279, 1000])
Span start logits:  torch.Size([40, 279])
span start probs dim:  torch.Size([40, 279])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 279]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1359, 200])
Passage Length:  1359
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1359, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1359, 17])
Passage ques attention dim:  torch.Size([40, 1359, 17])
Passage question vectors dim:  torch.Size([40, 1359, 200])
Question Passage Similarity dim:  torch.Size([40, 1359])
Question passage attention dim:  torch.Size([40, 1359])
Final Merged Passage dim:  torch.Size([40, 1359, 800])
Modeled Passage dim:  torch.Size([40, 1359, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1359, 1000])
Span start logits:  torch.Size([40, 1359])
span start probs dim:  torch.Size([40, 1359])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1359]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1065, 200])
Passage Length:  1065
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1065, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1065, 14])
Passage ques attention dim:  torch.Size([40, 1065, 14])
Passage question vectors dim:  torch.Size([40, 1065, 200])
Question Passage Similarity dim:  torch.Size([40, 1065])
Question passage attention dim:  torch.Size([40, 1065])
Final Merged Passage dim:  torch.Size([40, 1065, 800])
Modeled Passage dim:  torch.Size([40, 1065, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1065, 1000])
Span start logits:  torch.Size([40, 1065])
span start probs dim:  torch.Size([40, 1065])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1065]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 896, 200])
Passage Length:  896
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 896, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 896, 13])
Passage ques attention dim:  torch.Size([40, 896, 13])
Passage question vectors dim:  torch.Size([40, 896, 200])
Question Passage Similarity dim:  torch.Size([40, 896])
Question passage attention dim:  torch.Size([40, 896])
Final Merged Passage dim:  torch.Size([40, 896, 800])
Modeled Passage dim:  torch.Size([40, 896, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 896, 1000])
Span start logits:  torch.Size([40, 896])
span start probs dim:  torch.Size([40, 896])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 896]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 867, 200])
Passage Length:  867
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 867, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 867, 16])
Passage ques attention dim:  torch.Size([40, 867, 16])
Passage question vectors dim:  torch.Size([40, 867, 200])
Question Passage Similarity dim:  torch.Size([40, 867])
Question passage attention dim:  torch.Size([40, 867])
Final Merged Passage dim:  torch.Size([40, 867, 800])
Modeled Passage dim:  torch.Size([40, 867, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 867, 1000])
Span start logits:  torch.Size([40, 867])
span start probs dim:  torch.Size([40, 867])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 867]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 461, 200])
Passage Length:  461
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 461, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 461, 16])
Passage ques attention dim:  torch.Size([40, 461, 16])
Passage question vectors dim:  torch.Size([40, 461, 200])
Question Passage Similarity dim:  torch.Size([40, 461])
Question passage attention dim:  torch.Size([40, 461])
Final Merged Passage dim:  torch.Size([40, 461, 800])
Modeled Passage dim:  torch.Size([40, 461, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 461, 1000])
Span start logits:  torch.Size([40, 461])
span start probs dim:  torch.Size([40, 461])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 461]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1394, 200])
Passage Length:  1394
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1394, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1394, 15])
Passage ques attention dim:  torch.Size([40, 1394, 15])
Passage question vectors dim:  torch.Size([40, 1394, 200])
Question Passage Similarity dim:  torch.Size([40, 1394])
Question passage attention dim:  torch.Size([40, 1394])
Final Merged Passage dim:  torch.Size([40, 1394, 800])
Modeled Passage dim:  torch.Size([40, 1394, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1394, 1000])
Span start logits:  torch.Size([40, 1394])
span start probs dim:  torch.Size([40, 1394])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1394]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 542, 200])
Passage Length:  542
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 542, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 542, 13])
Passage ques attention dim:  torch.Size([40, 542, 13])
Passage question vectors dim:  torch.Size([40, 542, 200])
Question Passage Similarity dim:  torch.Size([40, 542])
Question passage attention dim:  torch.Size([40, 542])
Final Merged Passage dim:  torch.Size([40, 542, 800])
Modeled Passage dim:  torch.Size([40, 542, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 542, 1000])
Span start logits:  torch.Size([40, 542])
span start probs dim:  torch.Size([40, 542])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 542]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 355, 200])
Passage Length:  355
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 355, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 355, 23])
Passage ques attention dim:  torch.Size([40, 355, 23])
Passage question vectors dim:  torch.Size([40, 355, 200])
Question Passage Similarity dim:  torch.Size([40, 355])
Question passage attention dim:  torch.Size([40, 355])
Final Merged Passage dim:  torch.Size([40, 355, 800])
Modeled Passage dim:  torch.Size([40, 355, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 355, 1000])
Span start logits:  torch.Size([40, 355])
span start probs dim:  torch.Size([40, 355])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 355]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 368, 200])
Passage Length:  368
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 368, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 368, 15])
Passage ques attention dim:  torch.Size([40, 368, 15])
Passage question vectors dim:  torch.Size([40, 368, 200])
Question Passage Similarity dim:  torch.Size([40, 368])
Question passage attention dim:  torch.Size([40, 368])
Final Merged Passage dim:  torch.Size([40, 368, 800])
Modeled Passage dim:  torch.Size([40, 368, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 368, 1000])
Span start logits:  torch.Size([40, 368])
span start probs dim:  torch.Size([40, 368])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 368]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 431, 200])
Passage Length:  431
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 431, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 431, 12])
Passage ques attention dim:  torch.Size([40, 431, 12])
Passage question vectors dim:  torch.Size([40, 431, 200])
Question Passage Similarity dim:  torch.Size([40, 431])
Question passage attention dim:  torch.Size([40, 431])
Final Merged Passage dim:  torch.Size([40, 431, 800])
Modeled Passage dim:  torch.Size([40, 431, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 431, 1000])
Span start logits:  torch.Size([40, 431])
span start probs dim:  torch.Size([40, 431])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 431]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 547, 200])
Passage Length:  547
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 547, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 547, 14])
Passage ques attention dim:  torch.Size([40, 547, 14])
Passage question vectors dim:  torch.Size([40, 547, 200])
Question Passage Similarity dim:  torch.Size([40, 547])
Question passage attention dim:  torch.Size([40, 547])
Final Merged Passage dim:  torch.Size([40, 547, 800])
Modeled Passage dim:  torch.Size([40, 547, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 547, 1000])
Span start logits:  torch.Size([40, 547])
span start probs dim:  torch.Size([40, 547])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 547]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 549, 200])
Passage Length:  549
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 549, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 549, 13])
Passage ques attention dim:  torch.Size([40, 549, 13])
Passage question vectors dim:  torch.Size([40, 549, 200])
Question Passage Similarity dim:  torch.Size([40, 549])
Question passage attention dim:  torch.Size([40, 549])
Final Merged Passage dim:  torch.Size([40, 549, 800])
Modeled Passage dim:  torch.Size([40, 549, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 549, 1000])
Span start logits:  torch.Size([40, 549])
span start probs dim:  torch.Size([40, 549])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 549]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 461, 200])
Passage Length:  461
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 461, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 461, 15])
Passage ques attention dim:  torch.Size([40, 461, 15])
Passage question vectors dim:  torch.Size([40, 461, 200])
Question Passage Similarity dim:  torch.Size([40, 461])
Question passage attention dim:  torch.Size([40, 461])
Final Merged Passage dim:  torch.Size([40, 461, 800])
Modeled Passage dim:  torch.Size([40, 461, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 461, 1000])
Span start logits:  torch.Size([40, 461])
span start probs dim:  torch.Size([40, 461])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 461]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 246, 14])
Passage ques attention dim:  torch.Size([40, 246, 14])
Passage question vectors dim:  torch.Size([40, 246, 200])
Question Passage Similarity dim:  torch.Size([40, 246])
Question passage attention dim:  torch.Size([40, 246])
Final Merged Passage dim:  torch.Size([40, 246, 800])
Modeled Passage dim:  torch.Size([40, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 246, 1000])
Span start logits:  torch.Size([40, 246])
span start probs dim:  torch.Size([40, 246])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 246]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 967, 200])
Passage Length:  967
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 967, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 967, 18])
Passage ques attention dim:  torch.Size([40, 967, 18])
Passage question vectors dim:  torch.Size([40, 967, 200])
Question Passage Similarity dim:  torch.Size([40, 967])
Question passage attention dim:  torch.Size([40, 967])
Final Merged Passage dim:  torch.Size([40, 967, 800])
Modeled Passage dim:  torch.Size([40, 967, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 967, 1000])
Span start logits:  torch.Size([40, 967])
span start probs dim:  torch.Size([40, 967])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 967]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 210, 200])
Passage Length:  210
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 210, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 210, 11])
Passage ques attention dim:  torch.Size([40, 210, 11])
Passage question vectors dim:  torch.Size([40, 210, 200])
Question Passage Similarity dim:  torch.Size([40, 210])
Question passage attention dim:  torch.Size([40, 210])
Final Merged Passage dim:  torch.Size([40, 210, 800])
Modeled Passage dim:  torch.Size([40, 210, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 210, 1000])
Span start logits:  torch.Size([40, 210])
span start probs dim:  torch.Size([40, 210])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 210]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 448, 200])
Passage Length:  448
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 448, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 448, 13])
Passage ques attention dim:  torch.Size([40, 448, 13])
Passage question vectors dim:  torch.Size([40, 448, 200])
Question Passage Similarity dim:  torch.Size([40, 448])
Question passage attention dim:  torch.Size([40, 448])
Final Merged Passage dim:  torch.Size([40, 448, 800])
Modeled Passage dim:  torch.Size([40, 448, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 448, 1000])
Span start logits:  torch.Size([40, 448])
span start probs dim:  torch.Size([40, 448])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 448]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 368, 200])
Passage Length:  368
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 368, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 368, 20])
Passage ques attention dim:  torch.Size([40, 368, 20])
Passage question vectors dim:  torch.Size([40, 368, 200])
Question Passage Similarity dim:  torch.Size([40, 368])
Question passage attention dim:  torch.Size([40, 368])
Final Merged Passage dim:  torch.Size([40, 368, 800])
Modeled Passage dim:  torch.Size([40, 368, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 368, 1000])
Span start logits:  torch.Size([40, 368])
span start probs dim:  torch.Size([40, 368])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 368]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 411, 200])
Passage Length:  411
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 411, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 411, 15])
Passage ques attention dim:  torch.Size([40, 411, 15])
Passage question vectors dim:  torch.Size([40, 411, 200])
Question Passage Similarity dim:  torch.Size([40, 411])
Question passage attention dim:  torch.Size([40, 411])
Final Merged Passage dim:  torch.Size([40, 411, 800])
Modeled Passage dim:  torch.Size([40, 411, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 411, 1000])
Span start logits:  torch.Size([40, 411])
span start probs dim:  torch.Size([40, 411])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 411]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 323, 16])
Passage ques attention dim:  torch.Size([40, 323, 16])
Passage question vectors dim:  torch.Size([40, 323, 200])
Question Passage Similarity dim:  torch.Size([40, 323])
Question passage attention dim:  torch.Size([40, 323])
Final Merged Passage dim:  torch.Size([40, 323, 800])
Modeled Passage dim:  torch.Size([40, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 323, 1000])
Span start logits:  torch.Size([40, 323])
span start probs dim:  torch.Size([40, 323])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 323]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 599, 200])
Passage Length:  599
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 599, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 599, 14])
Passage ques attention dim:  torch.Size([40, 599, 14])
Passage question vectors dim:  torch.Size([40, 599, 200])
Question Passage Similarity dim:  torch.Size([40, 599])
Question passage attention dim:  torch.Size([40, 599])
Final Merged Passage dim:  torch.Size([40, 599, 800])
Modeled Passage dim:  torch.Size([40, 599, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 599, 1000])
Span start logits:  torch.Size([40, 599])
span start probs dim:  torch.Size([40, 599])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 599]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 455, 200])
Passage Length:  455
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 455, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 455, 12])
Passage ques attention dim:  torch.Size([40, 455, 12])
Passage question vectors dim:  torch.Size([40, 455, 200])
Question Passage Similarity dim:  torch.Size([40, 455])
Question passage attention dim:  torch.Size([40, 455])
Final Merged Passage dim:  torch.Size([40, 455, 800])
Modeled Passage dim:  torch.Size([40, 455, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 455, 1000])
Span start logits:  torch.Size([40, 455])
span start probs dim:  torch.Size([40, 455])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 455]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 326, 200])
Passage Length:  326
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 326, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 326, 13])
Passage ques attention dim:  torch.Size([40, 326, 13])
Passage question vectors dim:  torch.Size([40, 326, 200])
Question Passage Similarity dim:  torch.Size([40, 326])
Question passage attention dim:  torch.Size([40, 326])
Final Merged Passage dim:  torch.Size([40, 326, 800])
Modeled Passage dim:  torch.Size([40, 326, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 326, 1000])
Span start logits:  torch.Size([40, 326])
span start probs dim:  torch.Size([40, 326])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 326]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 613, 200])
Passage Length:  613
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 613, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 613, 15])
Passage ques attention dim:  torch.Size([40, 613, 15])
Passage question vectors dim:  torch.Size([40, 613, 200])
Question Passage Similarity dim:  torch.Size([40, 613])
Question passage attention dim:  torch.Size([40, 613])
Final Merged Passage dim:  torch.Size([40, 613, 800])
Modeled Passage dim:  torch.Size([40, 613, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 613, 1000])
Span start logits:  torch.Size([40, 613])
span start probs dim:  torch.Size([40, 613])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 613]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 896, 200])
Passage Length:  896
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 896, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 896, 13])
Passage ques attention dim:  torch.Size([40, 896, 13])
Passage question vectors dim:  torch.Size([40, 896, 200])
Question Passage Similarity dim:  torch.Size([40, 896])
Question passage attention dim:  torch.Size([40, 896])
Final Merged Passage dim:  torch.Size([40, 896, 800])
Modeled Passage dim:  torch.Size([40, 896, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 896, 1000])
Span start logits:  torch.Size([40, 896])
span start probs dim:  torch.Size([40, 896])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 896]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 318, 200])
Passage Length:  318
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 318, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 318, 15])
Passage ques attention dim:  torch.Size([40, 318, 15])
Passage question vectors dim:  torch.Size([40, 318, 200])
Question Passage Similarity dim:  torch.Size([40, 318])
Question passage attention dim:  torch.Size([40, 318])
Final Merged Passage dim:  torch.Size([40, 318, 800])
Modeled Passage dim:  torch.Size([40, 318, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 318, 1000])
Span start logits:  torch.Size([40, 318])
span start probs dim:  torch.Size([40, 318])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 318]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1687, 200])
Passage Length:  1687
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1687, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1687, 18])
Passage ques attention dim:  torch.Size([40, 1687, 18])
Passage question vectors dim:  torch.Size([40, 1687, 200])
Question Passage Similarity dim:  torch.Size([40, 1687])
Question passage attention dim:  torch.Size([40, 1687])
Final Merged Passage dim:  torch.Size([40, 1687, 800])
Modeled Passage dim:  torch.Size([40, 1687, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1687, 1000])
Span start logits:  torch.Size([40, 1687])
span start probs dim:  torch.Size([40, 1687])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1687]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 672, 200])
Passage Length:  672
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 672, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 672, 17])
Passage ques attention dim:  torch.Size([40, 672, 17])
Passage question vectors dim:  torch.Size([40, 672, 200])
Question Passage Similarity dim:  torch.Size([40, 672])
Question passage attention dim:  torch.Size([40, 672])
Final Merged Passage dim:  torch.Size([40, 672, 800])
Modeled Passage dim:  torch.Size([40, 672, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 672, 1000])
Span start logits:  torch.Size([40, 672])
span start probs dim:  torch.Size([40, 672])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 672]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 614, 200])
Passage Length:  614
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 614, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 614, 13])
Passage ques attention dim:  torch.Size([40, 614, 13])
Passage question vectors dim:  torch.Size([40, 614, 200])
Question Passage Similarity dim:  torch.Size([40, 614])
Question passage attention dim:  torch.Size([40, 614])
Final Merged Passage dim:  torch.Size([40, 614, 800])
Modeled Passage dim:  torch.Size([40, 614, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 614, 1000])
Span start logits:  torch.Size([40, 614])
span start probs dim:  torch.Size([40, 614])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 614]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1025, 18])
Passage ques attention dim:  torch.Size([40, 1025, 18])
Passage question vectors dim:  torch.Size([40, 1025, 200])
Question Passage Similarity dim:  torch.Size([40, 1025])
Question passage attention dim:  torch.Size([40, 1025])
Final Merged Passage dim:  torch.Size([40, 1025, 800])
Modeled Passage dim:  torch.Size([40, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1025, 1000])
Span start logits:  torch.Size([40, 1025])
span start probs dim:  torch.Size([40, 1025])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1025]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 782, 200])
Passage Length:  782
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 782, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 782, 14])
Passage ques attention dim:  torch.Size([40, 782, 14])
Passage question vectors dim:  torch.Size([40, 782, 200])
Question Passage Similarity dim:  torch.Size([40, 782])
Question passage attention dim:  torch.Size([40, 782])
Final Merged Passage dim:  torch.Size([40, 782, 800])
Modeled Passage dim:  torch.Size([40, 782, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 782, 1000])
Span start logits:  torch.Size([40, 782])
span start probs dim:  torch.Size([40, 782])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 782]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 949, 200])
Passage Length:  949
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 949, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 949, 17])
Passage ques attention dim:  torch.Size([40, 949, 17])
Passage question vectors dim:  torch.Size([40, 949, 200])
Question Passage Similarity dim:  torch.Size([40, 949])
Question passage attention dim:  torch.Size([40, 949])
Final Merged Passage dim:  torch.Size([40, 949, 800])
Modeled Passage dim:  torch.Size([40, 949, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 949, 1000])
Span start logits:  torch.Size([40, 949])
span start probs dim:  torch.Size([40, 949])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 949]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 276, 200])
Passage Length:  276
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 276, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 276, 13])
Passage ques attention dim:  torch.Size([40, 276, 13])
Passage question vectors dim:  torch.Size([40, 276, 200])
Question Passage Similarity dim:  torch.Size([40, 276])
Question passage attention dim:  torch.Size([40, 276])
Final Merged Passage dim:  torch.Size([40, 276, 800])
Modeled Passage dim:  torch.Size([40, 276, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 276, 1000])
Span start logits:  torch.Size([40, 276])
span start probs dim:  torch.Size([40, 276])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 276]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 846, 200])
Passage Length:  846
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 846, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 846, 17])
Passage ques attention dim:  torch.Size([40, 846, 17])
Passage question vectors dim:  torch.Size([40, 846, 200])
Question Passage Similarity dim:  torch.Size([40, 846])
Question passage attention dim:  torch.Size([40, 846])
Final Merged Passage dim:  torch.Size([40, 846, 800])
Modeled Passage dim:  torch.Size([40, 846, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 846, 1000])
Span start logits:  torch.Size([40, 846])
span start probs dim:  torch.Size([40, 846])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 846]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 524, 200])
Passage Length:  524
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 524, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 524, 12])
Passage ques attention dim:  torch.Size([40, 524, 12])
Passage question vectors dim:  torch.Size([40, 524, 200])
Question Passage Similarity dim:  torch.Size([40, 524])
Question passage attention dim:  torch.Size([40, 524])
Final Merged Passage dim:  torch.Size([40, 524, 800])
Modeled Passage dim:  torch.Size([40, 524, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 524, 1000])
Span start logits:  torch.Size([40, 524])
span start probs dim:  torch.Size([40, 524])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 524]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 548, 200])
Passage Length:  548
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 548, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 548, 13])
Passage ques attention dim:  torch.Size([40, 548, 13])
Passage question vectors dim:  torch.Size([40, 548, 200])
Question Passage Similarity dim:  torch.Size([40, 548])
Question passage attention dim:  torch.Size([40, 548])
Final Merged Passage dim:  torch.Size([40, 548, 800])
Modeled Passage dim:  torch.Size([40, 548, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 548, 1000])
Span start logits:  torch.Size([40, 548])
span start probs dim:  torch.Size([40, 548])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 548]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1274, 200])
Passage Length:  1274
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1274, 15])
Passage ques attention dim:  torch.Size([40, 1274, 15])
Passage question vectors dim:  torch.Size([40, 1274, 200])
Question Passage Similarity dim:  torch.Size([40, 1274])
Question passage attention dim:  torch.Size([40, 1274])
Final Merged Passage dim:  torch.Size([40, 1274, 800])
Modeled Passage dim:  torch.Size([40, 1274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1274, 1000])
Span start logits:  torch.Size([40, 1274])
span start probs dim:  torch.Size([40, 1274])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1274]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 452, 200])
Passage Length:  452
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 452, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 452, 17])
Passage ques attention dim:  torch.Size([40, 452, 17])
Passage question vectors dim:  torch.Size([40, 452, 200])
Question Passage Similarity dim:  torch.Size([40, 452])
Question passage attention dim:  torch.Size([40, 452])
Final Merged Passage dim:  torch.Size([40, 452, 800])
Modeled Passage dim:  torch.Size([40, 452, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 452, 1000])
Span start logits:  torch.Size([40, 452])
span start probs dim:  torch.Size([40, 452])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 452]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 338, 200])
Passage Length:  338
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 338, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 338, 13])
Passage ques attention dim:  torch.Size([40, 338, 13])
Passage question vectors dim:  torch.Size([40, 338, 200])
Question Passage Similarity dim:  torch.Size([40, 338])
Question passage attention dim:  torch.Size([40, 338])
Final Merged Passage dim:  torch.Size([40, 338, 800])
Modeled Passage dim:  torch.Size([40, 338, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 338, 1000])
Span start logits:  torch.Size([40, 338])
span start probs dim:  torch.Size([40, 338])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 338]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 757, 200])
Passage Length:  757
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 757, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 757, 13])
Passage ques attention dim:  torch.Size([40, 757, 13])
Passage question vectors dim:  torch.Size([40, 757, 200])
Question Passage Similarity dim:  torch.Size([40, 757])
Question passage attention dim:  torch.Size([40, 757])
Final Merged Passage dim:  torch.Size([40, 757, 800])
Modeled Passage dim:  torch.Size([40, 757, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 757, 1000])
Span start logits:  torch.Size([40, 757])
span start probs dim:  torch.Size([40, 757])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 757]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 596, 200])
Passage Length:  596
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 596, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 596, 14])
Passage ques attention dim:  torch.Size([40, 596, 14])
Passage question vectors dim:  torch.Size([40, 596, 200])
Question Passage Similarity dim:  torch.Size([40, 596])
Question passage attention dim:  torch.Size([40, 596])
Final Merged Passage dim:  torch.Size([40, 596, 800])
Modeled Passage dim:  torch.Size([40, 596, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 596, 1000])
Span start logits:  torch.Size([40, 596])
span start probs dim:  torch.Size([40, 596])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 596]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 420, 200])
Passage Length:  420
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 420, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 420, 17])
Passage ques attention dim:  torch.Size([40, 420, 17])
Passage question vectors dim:  torch.Size([40, 420, 200])
Question Passage Similarity dim:  torch.Size([40, 420])
Question passage attention dim:  torch.Size([40, 420])
Final Merged Passage dim:  torch.Size([40, 420, 800])
Modeled Passage dim:  torch.Size([40, 420, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 420, 1000])
Span start logits:  torch.Size([40, 420])
span start probs dim:  torch.Size([40, 420])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 420]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 153, 200])
Passage Length:  153
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 153, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 153, 12])
Passage ques attention dim:  torch.Size([40, 153, 12])
Passage question vectors dim:  torch.Size([40, 153, 200])
Question Passage Similarity dim:  torch.Size([40, 153])
Question passage attention dim:  torch.Size([40, 153])
Final Merged Passage dim:  torch.Size([40, 153, 800])
Modeled Passage dim:  torch.Size([40, 153, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 153, 1000])
Span start logits:  torch.Size([40, 153])
span start probs dim:  torch.Size([40, 153])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 153]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1031, 200])
Passage Length:  1031
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1031, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1031, 12])
Passage ques attention dim:  torch.Size([40, 1031, 12])
Passage question vectors dim:  torch.Size([40, 1031, 200])
Question Passage Similarity dim:  torch.Size([40, 1031])
Question passage attention dim:  torch.Size([40, 1031])
Final Merged Passage dim:  torch.Size([40, 1031, 800])
Modeled Passage dim:  torch.Size([40, 1031, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1031, 1000])
Span start logits:  torch.Size([40, 1031])
span start probs dim:  torch.Size([40, 1031])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1031]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 933, 200])
Passage Length:  933
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 933, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 933, 14])
Passage ques attention dim:  torch.Size([40, 933, 14])
Passage question vectors dim:  torch.Size([40, 933, 200])
Question Passage Similarity dim:  torch.Size([40, 933])
Question passage attention dim:  torch.Size([40, 933])
Final Merged Passage dim:  torch.Size([40, 933, 800])
Modeled Passage dim:  torch.Size([40, 933, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 933, 1000])
Span start logits:  torch.Size([40, 933])
span start probs dim:  torch.Size([40, 933])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 933]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 788, 200])
Passage Length:  788
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 788, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 788, 11])
Passage ques attention dim:  torch.Size([40, 788, 11])
Passage question vectors dim:  torch.Size([40, 788, 200])
Question Passage Similarity dim:  torch.Size([40, 788])
Question passage attention dim:  torch.Size([40, 788])
Final Merged Passage dim:  torch.Size([40, 788, 800])
Modeled Passage dim:  torch.Size([40, 788, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 788, 1000])
Span start logits:  torch.Size([40, 788])
span start probs dim:  torch.Size([40, 788])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 788]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 435, 200])
Passage Length:  435
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 435, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 435, 15])
Passage ques attention dim:  torch.Size([40, 435, 15])
Passage question vectors dim:  torch.Size([40, 435, 200])
Question Passage Similarity dim:  torch.Size([40, 435])
Question passage attention dim:  torch.Size([40, 435])
Final Merged Passage dim:  torch.Size([40, 435, 800])
Modeled Passage dim:  torch.Size([40, 435, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 435, 1000])
Span start logits:  torch.Size([40, 435])
span start probs dim:  torch.Size([40, 435])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 435]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 156, 200])
Passage Length:  156
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 156, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 156, 13])
Passage ques attention dim:  torch.Size([40, 156, 13])
Passage question vectors dim:  torch.Size([40, 156, 200])
Question Passage Similarity dim:  torch.Size([40, 156])
Question passage attention dim:  torch.Size([40, 156])
Final Merged Passage dim:  torch.Size([40, 156, 800])
Modeled Passage dim:  torch.Size([40, 156, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 156, 1000])
Span start logits:  torch.Size([40, 156])
span start probs dim:  torch.Size([40, 156])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 156]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 305, 200])
Passage Length:  305
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 305, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 305, 16])
Passage ques attention dim:  torch.Size([40, 305, 16])
Passage question vectors dim:  torch.Size([40, 305, 200])
Question Passage Similarity dim:  torch.Size([40, 305])
Question passage attention dim:  torch.Size([40, 305])
Final Merged Passage dim:  torch.Size([40, 305, 800])
Modeled Passage dim:  torch.Size([40, 305, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 305, 1000])
Span start logits:  torch.Size([40, 305])
span start probs dim:  torch.Size([40, 305])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 305]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 907, 200])
Passage Length:  907
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 907, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 907, 17])
Passage ques attention dim:  torch.Size([40, 907, 17])
Passage question vectors dim:  torch.Size([40, 907, 200])
Question Passage Similarity dim:  torch.Size([40, 907])
Question passage attention dim:  torch.Size([40, 907])
Final Merged Passage dim:  torch.Size([40, 907, 800])
Modeled Passage dim:  torch.Size([40, 907, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 907, 1000])
Span start logits:  torch.Size([40, 907])
span start probs dim:  torch.Size([40, 907])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 907]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 690, 200])
Passage Length:  690
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 690, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 690, 13])
Passage ques attention dim:  torch.Size([40, 690, 13])
Passage question vectors dim:  torch.Size([40, 690, 200])
Question Passage Similarity dim:  torch.Size([40, 690])
Question passage attention dim:  torch.Size([40, 690])
Final Merged Passage dim:  torch.Size([40, 690, 800])
Modeled Passage dim:  torch.Size([40, 690, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 690, 1000])
Span start logits:  torch.Size([40, 690])
span start probs dim:  torch.Size([40, 690])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 690]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 846, 200])
Passage Length:  846
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 846, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 846, 13])
Passage ques attention dim:  torch.Size([40, 846, 13])
Passage question vectors dim:  torch.Size([40, 846, 200])
Question Passage Similarity dim:  torch.Size([40, 846])
Question passage attention dim:  torch.Size([40, 846])
Final Merged Passage dim:  torch.Size([40, 846, 800])
Modeled Passage dim:  torch.Size([40, 846, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 846, 1000])
Span start logits:  torch.Size([40, 846])
span start probs dim:  torch.Size([40, 846])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 846]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 806, 200])
Passage Length:  806
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 806, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 806, 13])
Passage ques attention dim:  torch.Size([40, 806, 13])
Passage question vectors dim:  torch.Size([40, 806, 200])
Question Passage Similarity dim:  torch.Size([40, 806])
Question passage attention dim:  torch.Size([40, 806])
Final Merged Passage dim:  torch.Size([40, 806, 800])
Modeled Passage dim:  torch.Size([40, 806, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 806, 1000])
Span start logits:  torch.Size([40, 806])
span start probs dim:  torch.Size([40, 806])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 806]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 816, 200])
Passage Length:  816
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 816, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 816, 15])
Passage ques attention dim:  torch.Size([40, 816, 15])
Passage question vectors dim:  torch.Size([40, 816, 200])
Question Passage Similarity dim:  torch.Size([40, 816])
Question passage attention dim:  torch.Size([40, 816])
Final Merged Passage dim:  torch.Size([40, 816, 800])
Modeled Passage dim:  torch.Size([40, 816, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 816, 1000])
Span start logits:  torch.Size([40, 816])
span start probs dim:  torch.Size([40, 816])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 816]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 929, 200])
Passage Length:  929
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 929, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 929, 13])
Passage ques attention dim:  torch.Size([40, 929, 13])
Passage question vectors dim:  torch.Size([40, 929, 200])
Question Passage Similarity dim:  torch.Size([40, 929])
Question passage attention dim:  torch.Size([40, 929])
Final Merged Passage dim:  torch.Size([40, 929, 800])
Modeled Passage dim:  torch.Size([40, 929, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 929, 1000])
Span start logits:  torch.Size([40, 929])
span start probs dim:  torch.Size([40, 929])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 929]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1145, 200])
Passage Length:  1145
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1145, 20])
Passage ques attention dim:  torch.Size([40, 1145, 20])
Passage question vectors dim:  torch.Size([40, 1145, 200])
Question Passage Similarity dim:  torch.Size([40, 1145])
Question passage attention dim:  torch.Size([40, 1145])
Final Merged Passage dim:  torch.Size([40, 1145, 800])
Modeled Passage dim:  torch.Size([40, 1145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1145, 1000])
Span start logits:  torch.Size([40, 1145])
span start probs dim:  torch.Size([40, 1145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 880, 200])
Passage Length:  880
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 880, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 880, 18])
Passage ques attention dim:  torch.Size([40, 880, 18])
Passage question vectors dim:  torch.Size([40, 880, 200])
Question Passage Similarity dim:  torch.Size([40, 880])
Question passage attention dim:  torch.Size([40, 880])
Final Merged Passage dim:  torch.Size([40, 880, 800])
Modeled Passage dim:  torch.Size([40, 880, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 880, 1000])
Span start logits:  torch.Size([40, 880])
span start probs dim:  torch.Size([40, 880])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 880]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 2073, 200])
Passage Length:  2073
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 2073, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2073, 12])
Passage ques attention dim:  torch.Size([40, 2073, 12])
Passage question vectors dim:  torch.Size([40, 2073, 200])
Question Passage Similarity dim:  torch.Size([40, 2073])
Question passage attention dim:  torch.Size([40, 2073])
Final Merged Passage dim:  torch.Size([40, 2073, 800])
Modeled Passage dim:  torch.Size([40, 2073, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2073, 1000])
Span start logits:  torch.Size([40, 2073])
span start probs dim:  torch.Size([40, 2073])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2073]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 845, 200])
Passage Length:  845
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 845, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 845, 19])
Passage ques attention dim:  torch.Size([40, 845, 19])
Passage question vectors dim:  torch.Size([40, 845, 200])
Question Passage Similarity dim:  torch.Size([40, 845])
Question passage attention dim:  torch.Size([40, 845])
Final Merged Passage dim:  torch.Size([40, 845, 800])
Modeled Passage dim:  torch.Size([40, 845, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 845, 1000])
Span start logits:  torch.Size([40, 845])
span start probs dim:  torch.Size([40, 845])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 845]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 889, 200])
Passage Length:  889
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 889, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 889, 17])
Passage ques attention dim:  torch.Size([40, 889, 17])
Passage question vectors dim:  torch.Size([40, 889, 200])
Question Passage Similarity dim:  torch.Size([40, 889])
Question passage attention dim:  torch.Size([40, 889])
Final Merged Passage dim:  torch.Size([40, 889, 800])
Modeled Passage dim:  torch.Size([40, 889, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 889, 1000])
Span start logits:  torch.Size([40, 889])
span start probs dim:  torch.Size([40, 889])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 889]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 400, 200])
Passage Length:  400
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 400, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 400, 16])
Passage ques attention dim:  torch.Size([40, 400, 16])
Passage question vectors dim:  torch.Size([40, 400, 200])
Question Passage Similarity dim:  torch.Size([40, 400])
Question passage attention dim:  torch.Size([40, 400])
Final Merged Passage dim:  torch.Size([40, 400, 800])
Modeled Passage dim:  torch.Size([40, 400, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 400, 1000])
Span start logits:  torch.Size([40, 400])
span start probs dim:  torch.Size([40, 400])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 400]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1543, 200])
Passage Length:  1543
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1543, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1543, 14])
Passage ques attention dim:  torch.Size([40, 1543, 14])
Passage question vectors dim:  torch.Size([40, 1543, 200])
Question Passage Similarity dim:  torch.Size([40, 1543])
Question passage attention dim:  torch.Size([40, 1543])
Final Merged Passage dim:  torch.Size([40, 1543, 800])
Modeled Passage dim:  torch.Size([40, 1543, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1543, 1000])
Span start logits:  torch.Size([40, 1543])
span start probs dim:  torch.Size([40, 1543])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1543]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1188, 200])
Passage Length:  1188
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1188, 19])
Passage ques attention dim:  torch.Size([40, 1188, 19])
Passage question vectors dim:  torch.Size([40, 1188, 200])
Question Passage Similarity dim:  torch.Size([40, 1188])
Question passage attention dim:  torch.Size([40, 1188])
Final Merged Passage dim:  torch.Size([40, 1188, 800])
Modeled Passage dim:  torch.Size([40, 1188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1188, 1000])
Span start logits:  torch.Size([40, 1188])
span start probs dim:  torch.Size([40, 1188])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1188]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 377, 200])
Passage Length:  377
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 377, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 377, 15])
Passage ques attention dim:  torch.Size([40, 377, 15])
Passage question vectors dim:  torch.Size([40, 377, 200])
Question Passage Similarity dim:  torch.Size([40, 377])
Question passage attention dim:  torch.Size([40, 377])
Final Merged Passage dim:  torch.Size([40, 377, 800])
Modeled Passage dim:  torch.Size([40, 377, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 377, 1000])
Span start logits:  torch.Size([40, 377])
span start probs dim:  torch.Size([40, 377])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 377]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 150, 200])
Passage Length:  150
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 150, 14])
Passage ques attention dim:  torch.Size([40, 150, 14])
Passage question vectors dim:  torch.Size([40, 150, 200])
Question Passage Similarity dim:  torch.Size([40, 150])
Question passage attention dim:  torch.Size([40, 150])
Final Merged Passage dim:  torch.Size([40, 150, 800])
Modeled Passage dim:  torch.Size([40, 150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 150, 1000])
Span start logits:  torch.Size([40, 150])
span start probs dim:  torch.Size([40, 150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1079, 200])
Passage Length:  1079
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1079, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1079, 16])
Passage ques attention dim:  torch.Size([40, 1079, 16])
Passage question vectors dim:  torch.Size([40, 1079, 200])
Question Passage Similarity dim:  torch.Size([40, 1079])
Question passage attention dim:  torch.Size([40, 1079])
Final Merged Passage dim:  torch.Size([40, 1079, 800])
Modeled Passage dim:  torch.Size([40, 1079, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1079, 1000])
Span start logits:  torch.Size([40, 1079])
span start probs dim:  torch.Size([40, 1079])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1079]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 545, 200])
Passage Length:  545
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 545, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 545, 14])
Passage ques attention dim:  torch.Size([40, 545, 14])
Passage question vectors dim:  torch.Size([40, 545, 200])
Question Passage Similarity dim:  torch.Size([40, 545])
Question passage attention dim:  torch.Size([40, 545])
Final Merged Passage dim:  torch.Size([40, 545, 800])
Modeled Passage dim:  torch.Size([40, 545, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 545, 1000])
Span start logits:  torch.Size([40, 545])
span start probs dim:  torch.Size([40, 545])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 545]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 905, 200])
Passage Length:  905
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 905, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 905, 20])
Passage ques attention dim:  torch.Size([40, 905, 20])
Passage question vectors dim:  torch.Size([40, 905, 200])
Question Passage Similarity dim:  torch.Size([40, 905])
Question passage attention dim:  torch.Size([40, 905])
Final Merged Passage dim:  torch.Size([40, 905, 800])
Modeled Passage dim:  torch.Size([40, 905, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 905, 1000])
Span start logits:  torch.Size([40, 905])
span start probs dim:  torch.Size([40, 905])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 905]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 226, 19])
Passage ques attention dim:  torch.Size([40, 226, 19])
Passage question vectors dim:  torch.Size([40, 226, 200])
Question Passage Similarity dim:  torch.Size([40, 226])
Question passage attention dim:  torch.Size([40, 226])
Final Merged Passage dim:  torch.Size([40, 226, 800])
Modeled Passage dim:  torch.Size([40, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 226, 1000])
Span start logits:  torch.Size([40, 226])
span start probs dim:  torch.Size([40, 226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 884, 200])
Passage Length:  884
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 884, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 884, 17])
Passage ques attention dim:  torch.Size([40, 884, 17])
Passage question vectors dim:  torch.Size([40, 884, 200])
Question Passage Similarity dim:  torch.Size([40, 884])
Question passage attention dim:  torch.Size([40, 884])
Final Merged Passage dim:  torch.Size([40, 884, 800])
Modeled Passage dim:  torch.Size([40, 884, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 884, 1000])
Span start logits:  torch.Size([40, 884])
span start probs dim:  torch.Size([40, 884])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 884]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1363, 200])
Passage Length:  1363
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1363, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1363, 12])
Passage ques attention dim:  torch.Size([40, 1363, 12])
Passage question vectors dim:  torch.Size([40, 1363, 200])
Question Passage Similarity dim:  torch.Size([40, 1363])
Question passage attention dim:  torch.Size([40, 1363])
Final Merged Passage dim:  torch.Size([40, 1363, 800])
Modeled Passage dim:  torch.Size([40, 1363, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1363, 1000])
Span start logits:  torch.Size([40, 1363])
span start probs dim:  torch.Size([40, 1363])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1363]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1288, 200])
Passage Length:  1288
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1288, 16])
Passage ques attention dim:  torch.Size([40, 1288, 16])
Passage question vectors dim:  torch.Size([40, 1288, 200])
Question Passage Similarity dim:  torch.Size([40, 1288])
Question passage attention dim:  torch.Size([40, 1288])
Final Merged Passage dim:  torch.Size([40, 1288, 800])
Modeled Passage dim:  torch.Size([40, 1288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1288, 1000])
Span start logits:  torch.Size([40, 1288])
span start probs dim:  torch.Size([40, 1288])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1288]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1011, 200])
Passage Length:  1011
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1011, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1011, 13])
Passage ques attention dim:  torch.Size([40, 1011, 13])
Passage question vectors dim:  torch.Size([40, 1011, 200])
Question Passage Similarity dim:  torch.Size([40, 1011])
Question passage attention dim:  torch.Size([40, 1011])
Final Merged Passage dim:  torch.Size([40, 1011, 800])
Modeled Passage dim:  torch.Size([40, 1011, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1011, 1000])
Span start logits:  torch.Size([40, 1011])
span start probs dim:  torch.Size([40, 1011])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1011]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 843, 200])
Passage Length:  843
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 843, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 843, 14])
Passage ques attention dim:  torch.Size([40, 843, 14])
Passage question vectors dim:  torch.Size([40, 843, 200])
Question Passage Similarity dim:  torch.Size([40, 843])
Question passage attention dim:  torch.Size([40, 843])
Final Merged Passage dim:  torch.Size([40, 843, 800])
Modeled Passage dim:  torch.Size([40, 843, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 843, 1000])
Span start logits:  torch.Size([40, 843])
span start probs dim:  torch.Size([40, 843])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 843]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 526, 200])
Passage Length:  526
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 526, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 526, 12])
Passage ques attention dim:  torch.Size([40, 526, 12])
Passage question vectors dim:  torch.Size([40, 526, 200])
Question Passage Similarity dim:  torch.Size([40, 526])
Question passage attention dim:  torch.Size([40, 526])
Final Merged Passage dim:  torch.Size([40, 526, 800])
Modeled Passage dim:  torch.Size([40, 526, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 526, 1000])
Span start logits:  torch.Size([40, 526])
span start probs dim:  torch.Size([40, 526])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 526]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 831, 200])
Passage Length:  831
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 831, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 831, 18])
Passage ques attention dim:  torch.Size([40, 831, 18])
Passage question vectors dim:  torch.Size([40, 831, 200])
Question Passage Similarity dim:  torch.Size([40, 831])
Question passage attention dim:  torch.Size([40, 831])
Final Merged Passage dim:  torch.Size([40, 831, 800])
Modeled Passage dim:  torch.Size([40, 831, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 831, 1000])
Span start logits:  torch.Size([40, 831])
span start probs dim:  torch.Size([40, 831])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 831]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1035, 200])
Passage Length:  1035
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1035, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1035, 15])
Passage ques attention dim:  torch.Size([40, 1035, 15])
Passage question vectors dim:  torch.Size([40, 1035, 200])
Question Passage Similarity dim:  torch.Size([40, 1035])
Question passage attention dim:  torch.Size([40, 1035])
Final Merged Passage dim:  torch.Size([40, 1035, 800])
Modeled Passage dim:  torch.Size([40, 1035, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1035, 1000])
Span start logits:  torch.Size([40, 1035])
span start probs dim:  torch.Size([40, 1035])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1035]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 908, 200])
Passage Length:  908
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 908, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 908, 21])
Passage ques attention dim:  torch.Size([40, 908, 21])
Passage question vectors dim:  torch.Size([40, 908, 200])
Question Passage Similarity dim:  torch.Size([40, 908])
Question passage attention dim:  torch.Size([40, 908])
Final Merged Passage dim:  torch.Size([40, 908, 800])
Modeled Passage dim:  torch.Size([40, 908, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 908, 1000])
Span start logits:  torch.Size([40, 908])
span start probs dim:  torch.Size([40, 908])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 908]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1489, 200])
Passage Length:  1489
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1489, 17])
Passage ques attention dim:  torch.Size([40, 1489, 17])
Passage question vectors dim:  torch.Size([40, 1489, 200])
Question Passage Similarity dim:  torch.Size([40, 1489])
Question passage attention dim:  torch.Size([40, 1489])
Final Merged Passage dim:  torch.Size([40, 1489, 800])
Modeled Passage dim:  torch.Size([40, 1489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1489, 1000])
Span start logits:  torch.Size([40, 1489])
span start probs dim:  torch.Size([40, 1489])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1489]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 475, 200])
Passage Length:  475
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 475, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 475, 14])
Passage ques attention dim:  torch.Size([40, 475, 14])
Passage question vectors dim:  torch.Size([40, 475, 200])
Question Passage Similarity dim:  torch.Size([40, 475])
Question passage attention dim:  torch.Size([40, 475])
Final Merged Passage dim:  torch.Size([40, 475, 800])
Modeled Passage dim:  torch.Size([40, 475, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 475, 1000])
Span start logits:  torch.Size([40, 475])
span start probs dim:  torch.Size([40, 475])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 475]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 476, 200])
Passage Length:  476
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 476, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 476, 20])
Passage ques attention dim:  torch.Size([40, 476, 20])
Passage question vectors dim:  torch.Size([40, 476, 200])
Question Passage Similarity dim:  torch.Size([40, 476])
Question passage attention dim:  torch.Size([40, 476])
Final Merged Passage dim:  torch.Size([40, 476, 800])
Modeled Passage dim:  torch.Size([40, 476, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 476, 1000])
Span start logits:  torch.Size([40, 476])
span start probs dim:  torch.Size([40, 476])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 476]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 828, 200])
Passage Length:  828
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 828, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 828, 14])
Passage ques attention dim:  torch.Size([40, 828, 14])
Passage question vectors dim:  torch.Size([40, 828, 200])
Question Passage Similarity dim:  torch.Size([40, 828])
Question passage attention dim:  torch.Size([40, 828])
Final Merged Passage dim:  torch.Size([40, 828, 800])
Modeled Passage dim:  torch.Size([40, 828, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 828, 1000])
Span start logits:  torch.Size([40, 828])
span start probs dim:  torch.Size([40, 828])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 828]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 878, 200])
Passage Length:  878
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 878, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 878, 15])
Passage ques attention dim:  torch.Size([40, 878, 15])
Passage question vectors dim:  torch.Size([40, 878, 200])
Question Passage Similarity dim:  torch.Size([40, 878])
Question passage attention dim:  torch.Size([40, 878])
Final Merged Passage dim:  torch.Size([40, 878, 800])
Modeled Passage dim:  torch.Size([40, 878, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 878, 1000])
Span start logits:  torch.Size([40, 878])
span start probs dim:  torch.Size([40, 878])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 878]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1597, 200])
Passage Length:  1597
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1597, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1597, 16])
Passage ques attention dim:  torch.Size([40, 1597, 16])
Passage question vectors dim:  torch.Size([40, 1597, 200])
Question Passage Similarity dim:  torch.Size([40, 1597])
Question passage attention dim:  torch.Size([40, 1597])
Final Merged Passage dim:  torch.Size([40, 1597, 800])
Modeled Passage dim:  torch.Size([40, 1597, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1597, 1000])
Span start logits:  torch.Size([40, 1597])
span start probs dim:  torch.Size([40, 1597])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1597]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 190, 200])
Passage Length:  190
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 190, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 190, 10])
Passage ques attention dim:  torch.Size([40, 190, 10])
Passage question vectors dim:  torch.Size([40, 190, 200])
Question Passage Similarity dim:  torch.Size([40, 190])
Question passage attention dim:  torch.Size([40, 190])
Final Merged Passage dim:  torch.Size([40, 190, 800])
Modeled Passage dim:  torch.Size([40, 190, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 190, 1000])
Span start logits:  torch.Size([40, 190])
span start probs dim:  torch.Size([40, 190])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 190]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 616, 200])
Passage Length:  616
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 616, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 616, 14])
Passage ques attention dim:  torch.Size([40, 616, 14])
Passage question vectors dim:  torch.Size([40, 616, 200])
Question Passage Similarity dim:  torch.Size([40, 616])
Question passage attention dim:  torch.Size([40, 616])
Final Merged Passage dim:  torch.Size([40, 616, 800])
Modeled Passage dim:  torch.Size([40, 616, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 616, 1000])
Span start logits:  torch.Size([40, 616])
span start probs dim:  torch.Size([40, 616])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 616]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 669, 200])
Passage Length:  669
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 669, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 669, 19])
Passage ques attention dim:  torch.Size([40, 669, 19])
Passage question vectors dim:  torch.Size([40, 669, 200])
Question Passage Similarity dim:  torch.Size([40, 669])
Question passage attention dim:  torch.Size([40, 669])
Final Merged Passage dim:  torch.Size([40, 669, 800])
Modeled Passage dim:  torch.Size([40, 669, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 669, 1000])
Span start logits:  torch.Size([40, 669])
span start probs dim:  torch.Size([40, 669])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 669]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1279, 200])
Passage Length:  1279
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1279, 14])
Passage ques attention dim:  torch.Size([40, 1279, 14])
Passage question vectors dim:  torch.Size([40, 1279, 200])
Question Passage Similarity dim:  torch.Size([40, 1279])
Question passage attention dim:  torch.Size([40, 1279])
Final Merged Passage dim:  torch.Size([40, 1279, 800])
Modeled Passage dim:  torch.Size([40, 1279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1279, 1000])
Span start logits:  torch.Size([40, 1279])
span start probs dim:  torch.Size([40, 1279])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1279]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 633, 200])
Passage Length:  633
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 633, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 633, 12])
Passage ques attention dim:  torch.Size([40, 633, 12])
Passage question vectors dim:  torch.Size([40, 633, 200])
Question Passage Similarity dim:  torch.Size([40, 633])
Question passage attention dim:  torch.Size([40, 633])
Final Merged Passage dim:  torch.Size([40, 633, 800])
Modeled Passage dim:  torch.Size([40, 633, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 633, 1000])
Span start logits:  torch.Size([40, 633])
span start probs dim:  torch.Size([40, 633])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 633]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1505, 200])
Passage Length:  1505
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1505, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1505, 17])
Passage ques attention dim:  torch.Size([40, 1505, 17])
Passage question vectors dim:  torch.Size([40, 1505, 200])
Question Passage Similarity dim:  torch.Size([40, 1505])
Question passage attention dim:  torch.Size([40, 1505])
Final Merged Passage dim:  torch.Size([40, 1505, 800])
Modeled Passage dim:  torch.Size([40, 1505, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1505, 1000])
Span start logits:  torch.Size([40, 1505])
span start probs dim:  torch.Size([40, 1505])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1505]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 603, 200])
Passage Length:  603
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 603, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 603, 14])
Passage ques attention dim:  torch.Size([40, 603, 14])
Passage question vectors dim:  torch.Size([40, 603, 200])
Question Passage Similarity dim:  torch.Size([40, 603])
Question passage attention dim:  torch.Size([40, 603])
Final Merged Passage dim:  torch.Size([40, 603, 800])
Modeled Passage dim:  torch.Size([40, 603, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 603, 1000])
Span start logits:  torch.Size([40, 603])
span start probs dim:  torch.Size([40, 603])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 603]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 479, 200])
Passage Length:  479
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 479, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 479, 16])
Passage ques attention dim:  torch.Size([40, 479, 16])
Passage question vectors dim:  torch.Size([40, 479, 200])
Question Passage Similarity dim:  torch.Size([40, 479])
Question passage attention dim:  torch.Size([40, 479])
Final Merged Passage dim:  torch.Size([40, 479, 800])
Modeled Passage dim:  torch.Size([40, 479, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 479, 1000])
Span start logits:  torch.Size([40, 479])
span start probs dim:  torch.Size([40, 479])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 479]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 318, 200])
Passage Length:  318
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 318, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 318, 14])
Passage ques attention dim:  torch.Size([40, 318, 14])
Passage question vectors dim:  torch.Size([40, 318, 200])
Question Passage Similarity dim:  torch.Size([40, 318])
Question passage attention dim:  torch.Size([40, 318])
Final Merged Passage dim:  torch.Size([40, 318, 800])
Modeled Passage dim:  torch.Size([40, 318, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 318, 1000])
Span start logits:  torch.Size([40, 318])
span start probs dim:  torch.Size([40, 318])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 318]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 537, 200])
Passage Length:  537
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 537, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 537, 17])
Passage ques attention dim:  torch.Size([40, 537, 17])
Passage question vectors dim:  torch.Size([40, 537, 200])
Question Passage Similarity dim:  torch.Size([40, 537])
Question passage attention dim:  torch.Size([40, 537])
Final Merged Passage dim:  torch.Size([40, 537, 800])
Modeled Passage dim:  torch.Size([40, 537, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 537, 1000])
Span start logits:  torch.Size([40, 537])
span start probs dim:  torch.Size([40, 537])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 537]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 585, 200])
Passage Length:  585
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 585, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 585, 13])
Passage ques attention dim:  torch.Size([40, 585, 13])
Passage question vectors dim:  torch.Size([40, 585, 200])
Question Passage Similarity dim:  torch.Size([40, 585])
Question passage attention dim:  torch.Size([40, 585])
Final Merged Passage dim:  torch.Size([40, 585, 800])
Modeled Passage dim:  torch.Size([40, 585, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 585, 1000])
Span start logits:  torch.Size([40, 585])
span start probs dim:  torch.Size([40, 585])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 585]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 210, 200])
Passage Length:  210
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 210, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 210, 14])
Passage ques attention dim:  torch.Size([40, 210, 14])
Passage question vectors dim:  torch.Size([40, 210, 200])
Question Passage Similarity dim:  torch.Size([40, 210])
Question passage attention dim:  torch.Size([40, 210])
Final Merged Passage dim:  torch.Size([40, 210, 800])
Modeled Passage dim:  torch.Size([40, 210, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 210, 1000])
Span start logits:  torch.Size([40, 210])
span start probs dim:  torch.Size([40, 210])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 210]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 867, 200])
Passage Length:  867
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 867, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 867, 17])
Passage ques attention dim:  torch.Size([40, 867, 17])
Passage question vectors dim:  torch.Size([40, 867, 200])
Question Passage Similarity dim:  torch.Size([40, 867])
Question passage attention dim:  torch.Size([40, 867])
Final Merged Passage dim:  torch.Size([40, 867, 800])
Modeled Passage dim:  torch.Size([40, 867, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 867, 1000])
Span start logits:  torch.Size([40, 867])
span start probs dim:  torch.Size([40, 867])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 867]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 468, 200])
Passage Length:  468
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 468, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 468, 11])
Passage ques attention dim:  torch.Size([40, 468, 11])
Passage question vectors dim:  torch.Size([40, 468, 200])
Question Passage Similarity dim:  torch.Size([40, 468])
Question passage attention dim:  torch.Size([40, 468])
Final Merged Passage dim:  torch.Size([40, 468, 800])
Modeled Passage dim:  torch.Size([40, 468, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 468, 1000])
Span start logits:  torch.Size([40, 468])
span start probs dim:  torch.Size([40, 468])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 468]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1342, 200])
Passage Length:  1342
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1342, 13])
Passage ques attention dim:  torch.Size([40, 1342, 13])
Passage question vectors dim:  torch.Size([40, 1342, 200])
Question Passage Similarity dim:  torch.Size([40, 1342])
Question passage attention dim:  torch.Size([40, 1342])
Final Merged Passage dim:  torch.Size([40, 1342, 800])
Modeled Passage dim:  torch.Size([40, 1342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1342, 1000])
Span start logits:  torch.Size([40, 1342])
span start probs dim:  torch.Size([40, 1342])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1342]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 857, 200])
Passage Length:  857
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 857, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 857, 15])
Passage ques attention dim:  torch.Size([40, 857, 15])
Passage question vectors dim:  torch.Size([40, 857, 200])
Question Passage Similarity dim:  torch.Size([40, 857])
Question passage attention dim:  torch.Size([40, 857])
Final Merged Passage dim:  torch.Size([40, 857, 800])
Modeled Passage dim:  torch.Size([40, 857, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 857, 1000])
Span start logits:  torch.Size([40, 857])
span start probs dim:  torch.Size([40, 857])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 857]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 792, 200])
Passage Length:  792
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 792, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 792, 16])
Passage ques attention dim:  torch.Size([40, 792, 16])
Passage question vectors dim:  torch.Size([40, 792, 200])
Question Passage Similarity dim:  torch.Size([40, 792])
Question passage attention dim:  torch.Size([40, 792])
Final Merged Passage dim:  torch.Size([40, 792, 800])
Modeled Passage dim:  torch.Size([40, 792, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 792, 1000])
Span start logits:  torch.Size([40, 792])
span start probs dim:  torch.Size([40, 792])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 792]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 267, 200])
Passage Length:  267
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 267, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 267, 18])
Passage ques attention dim:  torch.Size([40, 267, 18])
Passage question vectors dim:  torch.Size([40, 267, 200])
Question Passage Similarity dim:  torch.Size([40, 267])
Question passage attention dim:  torch.Size([40, 267])
Final Merged Passage dim:  torch.Size([40, 267, 800])
Modeled Passage dim:  torch.Size([40, 267, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 267, 1000])
Span start logits:  torch.Size([40, 267])
span start probs dim:  torch.Size([40, 267])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 267]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1249, 200])
Passage Length:  1249
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1249, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1249, 17])
Passage ques attention dim:  torch.Size([40, 1249, 17])
Passage question vectors dim:  torch.Size([40, 1249, 200])
Question Passage Similarity dim:  torch.Size([40, 1249])
Question passage attention dim:  torch.Size([40, 1249])
Final Merged Passage dim:  torch.Size([40, 1249, 800])
Modeled Passage dim:  torch.Size([40, 1249, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1249, 1000])
Span start logits:  torch.Size([40, 1249])
span start probs dim:  torch.Size([40, 1249])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1249]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 775, 200])
Passage Length:  775
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 775, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 775, 12])
Passage ques attention dim:  torch.Size([40, 775, 12])
Passage question vectors dim:  torch.Size([40, 775, 200])
Question Passage Similarity dim:  torch.Size([40, 775])
Question passage attention dim:  torch.Size([40, 775])
Final Merged Passage dim:  torch.Size([40, 775, 800])
Modeled Passage dim:  torch.Size([40, 775, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 775, 1000])
Span start logits:  torch.Size([40, 775])
span start probs dim:  torch.Size([40, 775])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 775]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 695, 200])
Passage Length:  695
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 695, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 695, 14])
Passage ques attention dim:  torch.Size([40, 695, 14])
Passage question vectors dim:  torch.Size([40, 695, 200])
Question Passage Similarity dim:  torch.Size([40, 695])
Question passage attention dim:  torch.Size([40, 695])
Final Merged Passage dim:  torch.Size([40, 695, 800])
Modeled Passage dim:  torch.Size([40, 695, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 695, 1000])
Span start logits:  torch.Size([40, 695])
span start probs dim:  torch.Size([40, 695])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 695]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 298, 200])
Passage Length:  298
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 298, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 298, 14])
Passage ques attention dim:  torch.Size([40, 298, 14])
Passage question vectors dim:  torch.Size([40, 298, 200])
Question Passage Similarity dim:  torch.Size([40, 298])
Question passage attention dim:  torch.Size([40, 298])
Final Merged Passage dim:  torch.Size([40, 298, 800])
Modeled Passage dim:  torch.Size([40, 298, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 298, 1000])
Span start logits:  torch.Size([40, 298])
span start probs dim:  torch.Size([40, 298])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 298]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1203, 200])
Passage Length:  1203
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1203, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1203, 14])
Passage ques attention dim:  torch.Size([40, 1203, 14])
Passage question vectors dim:  torch.Size([40, 1203, 200])
Question Passage Similarity dim:  torch.Size([40, 1203])
Question passage attention dim:  torch.Size([40, 1203])
Final Merged Passage dim:  torch.Size([40, 1203, 800])
Modeled Passage dim:  torch.Size([40, 1203, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1203, 1000])
Span start logits:  torch.Size([40, 1203])
span start probs dim:  torch.Size([40, 1203])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1203]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 714, 14])
Passage ques attention dim:  torch.Size([40, 714, 14])
Passage question vectors dim:  torch.Size([40, 714, 200])
Question Passage Similarity dim:  torch.Size([40, 714])
Question passage attention dim:  torch.Size([40, 714])
Final Merged Passage dim:  torch.Size([40, 714, 800])
Modeled Passage dim:  torch.Size([40, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 714, 1000])
Span start logits:  torch.Size([40, 714])
span start probs dim:  torch.Size([40, 714])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 714]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 901, 200])
Passage Length:  901
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 901, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 901, 16])
Passage ques attention dim:  torch.Size([40, 901, 16])
Passage question vectors dim:  torch.Size([40, 901, 200])
Question Passage Similarity dim:  torch.Size([40, 901])
Question passage attention dim:  torch.Size([40, 901])
Final Merged Passage dim:  torch.Size([40, 901, 800])
Modeled Passage dim:  torch.Size([40, 901, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 901, 1000])
Span start logits:  torch.Size([40, 901])
span start probs dim:  torch.Size([40, 901])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 901]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 749, 200])
Passage Length:  749
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 749, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 749, 11])
Passage ques attention dim:  torch.Size([40, 749, 11])
Passage question vectors dim:  torch.Size([40, 749, 200])
Question Passage Similarity dim:  torch.Size([40, 749])
Question passage attention dim:  torch.Size([40, 749])
Final Merged Passage dim:  torch.Size([40, 749, 800])
Modeled Passage dim:  torch.Size([40, 749, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 749, 1000])
Span start logits:  torch.Size([40, 749])
span start probs dim:  torch.Size([40, 749])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 749]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 621, 200])
Passage Length:  621
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 621, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 621, 15])
Passage ques attention dim:  torch.Size([40, 621, 15])
Passage question vectors dim:  torch.Size([40, 621, 200])
Question Passage Similarity dim:  torch.Size([40, 621])
Question passage attention dim:  torch.Size([40, 621])
Final Merged Passage dim:  torch.Size([40, 621, 800])
Modeled Passage dim:  torch.Size([40, 621, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 621, 1000])
Span start logits:  torch.Size([40, 621])
span start probs dim:  torch.Size([40, 621])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 621]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 650, 200])
Passage Length:  650
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 650, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 650, 16])
Passage ques attention dim:  torch.Size([40, 650, 16])
Passage question vectors dim:  torch.Size([40, 650, 200])
Question Passage Similarity dim:  torch.Size([40, 650])
Question passage attention dim:  torch.Size([40, 650])
Final Merged Passage dim:  torch.Size([40, 650, 800])
Modeled Passage dim:  torch.Size([40, 650, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 650, 1000])
Span start logits:  torch.Size([40, 650])
span start probs dim:  torch.Size([40, 650])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 650]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1078, 200])
Passage Length:  1078
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1078, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1078, 15])
Passage ques attention dim:  torch.Size([40, 1078, 15])
Passage question vectors dim:  torch.Size([40, 1078, 200])
Question Passage Similarity dim:  torch.Size([40, 1078])
Question passage attention dim:  torch.Size([40, 1078])
Final Merged Passage dim:  torch.Size([40, 1078, 800])
Modeled Passage dim:  torch.Size([40, 1078, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1078, 1000])
Span start logits:  torch.Size([40, 1078])
span start probs dim:  torch.Size([40, 1078])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1078]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1433, 200])
Passage Length:  1433
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1433, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1433, 14])
Passage ques attention dim:  torch.Size([40, 1433, 14])
Passage question vectors dim:  torch.Size([40, 1433, 200])
Question Passage Similarity dim:  torch.Size([40, 1433])
Question passage attention dim:  torch.Size([40, 1433])
Final Merged Passage dim:  torch.Size([40, 1433, 800])
Modeled Passage dim:  torch.Size([40, 1433, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1433, 1000])
Span start logits:  torch.Size([40, 1433])
span start probs dim:  torch.Size([40, 1433])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1433]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 459, 200])
Passage Length:  459
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 459, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 459, 12])
Passage ques attention dim:  torch.Size([40, 459, 12])
Passage question vectors dim:  torch.Size([40, 459, 200])
Question Passage Similarity dim:  torch.Size([40, 459])
Question passage attention dim:  torch.Size([40, 459])
Final Merged Passage dim:  torch.Size([40, 459, 800])
Modeled Passage dim:  torch.Size([40, 459, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 459, 1000])
Span start logits:  torch.Size([40, 459])
span start probs dim:  torch.Size([40, 459])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 459]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 341, 200])
Passage Length:  341
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 341, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 341, 14])
Passage ques attention dim:  torch.Size([40, 341, 14])
Passage question vectors dim:  torch.Size([40, 341, 200])
Question Passage Similarity dim:  torch.Size([40, 341])
Question passage attention dim:  torch.Size([40, 341])
Final Merged Passage dim:  torch.Size([40, 341, 800])
Modeled Passage dim:  torch.Size([40, 341, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 341, 1000])
Span start logits:  torch.Size([40, 341])
span start probs dim:  torch.Size([40, 341])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 341]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 32, 200])
Embedded passage dim:  torch.Size([40, 405, 200])
Passage Length:  405
Encoded question dim:  torch.Size([40, 32, 200])
Encoded passage dim:  torch.Size([40, 405, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 405, 32])
Passage ques attention dim:  torch.Size([40, 405, 32])
Passage question vectors dim:  torch.Size([40, 405, 200])
Question Passage Similarity dim:  torch.Size([40, 405])
Question passage attention dim:  torch.Size([40, 405])
Final Merged Passage dim:  torch.Size([40, 405, 800])
Modeled Passage dim:  torch.Size([40, 405, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 405, 1000])
Span start logits:  torch.Size([40, 405])
span start probs dim:  torch.Size([40, 405])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 405]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 796, 200])
Passage Length:  796
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 796, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 796, 12])
Passage ques attention dim:  torch.Size([40, 796, 12])
Passage question vectors dim:  torch.Size([40, 796, 200])
Question Passage Similarity dim:  torch.Size([40, 796])
Question passage attention dim:  torch.Size([40, 796])
Final Merged Passage dim:  torch.Size([40, 796, 800])
Modeled Passage dim:  torch.Size([40, 796, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 796, 1000])
Span start logits:  torch.Size([40, 796])
span start probs dim:  torch.Size([40, 796])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 796]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 457, 200])
Passage Length:  457
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 457, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 457, 13])
Passage ques attention dim:  torch.Size([40, 457, 13])
Passage question vectors dim:  torch.Size([40, 457, 200])
Question Passage Similarity dim:  torch.Size([40, 457])
Question passage attention dim:  torch.Size([40, 457])
Final Merged Passage dim:  torch.Size([40, 457, 800])
Modeled Passage dim:  torch.Size([40, 457, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 457, 1000])
Span start logits:  torch.Size([40, 457])
span start probs dim:  torch.Size([40, 457])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 457]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 361, 14])
Passage ques attention dim:  torch.Size([40, 361, 14])
Passage question vectors dim:  torch.Size([40, 361, 200])
Question Passage Similarity dim:  torch.Size([40, 361])
Question passage attention dim:  torch.Size([40, 361])
Final Merged Passage dim:  torch.Size([40, 361, 800])
Modeled Passage dim:  torch.Size([40, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 361, 1000])
Span start logits:  torch.Size([40, 361])
span start probs dim:  torch.Size([40, 361])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 361]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 183, 15])
Passage ques attention dim:  torch.Size([40, 183, 15])
Passage question vectors dim:  torch.Size([40, 183, 200])
Question Passage Similarity dim:  torch.Size([40, 183])
Question passage attention dim:  torch.Size([40, 183])
Final Merged Passage dim:  torch.Size([40, 183, 800])
Modeled Passage dim:  torch.Size([40, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 183, 1000])
Span start logits:  torch.Size([40, 183])
span start probs dim:  torch.Size([40, 183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 579, 200])
Passage Length:  579
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 579, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 579, 15])
Passage ques attention dim:  torch.Size([40, 579, 15])
Passage question vectors dim:  torch.Size([40, 579, 200])
Question Passage Similarity dim:  torch.Size([40, 579])
Question passage attention dim:  torch.Size([40, 579])
Final Merged Passage dim:  torch.Size([40, 579, 800])
Modeled Passage dim:  torch.Size([40, 579, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 579, 1000])
Span start logits:  torch.Size([40, 579])
span start probs dim:  torch.Size([40, 579])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 579]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 807, 200])
Passage Length:  807
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 807, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 807, 15])
Passage ques attention dim:  torch.Size([40, 807, 15])
Passage question vectors dim:  torch.Size([40, 807, 200])
Question Passage Similarity dim:  torch.Size([40, 807])
Question passage attention dim:  torch.Size([40, 807])
Final Merged Passage dim:  torch.Size([40, 807, 800])
Modeled Passage dim:  torch.Size([40, 807, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 807, 1000])
Span start logits:  torch.Size([40, 807])
span start probs dim:  torch.Size([40, 807])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 807]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 803, 200])
Passage Length:  803
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 803, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 803, 15])
Passage ques attention dim:  torch.Size([40, 803, 15])
Passage question vectors dim:  torch.Size([40, 803, 200])
Question Passage Similarity dim:  torch.Size([40, 803])
Question passage attention dim:  torch.Size([40, 803])
Final Merged Passage dim:  torch.Size([40, 803, 800])
Modeled Passage dim:  torch.Size([40, 803, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 803, 1000])
Span start logits:  torch.Size([40, 803])
span start probs dim:  torch.Size([40, 803])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 803]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 390, 200])
Passage Length:  390
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 390, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 390, 16])
Passage ques attention dim:  torch.Size([40, 390, 16])
Passage question vectors dim:  torch.Size([40, 390, 200])
Question Passage Similarity dim:  torch.Size([40, 390])
Question passage attention dim:  torch.Size([40, 390])
Final Merged Passage dim:  torch.Size([40, 390, 800])
Modeled Passage dim:  torch.Size([40, 390, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 390, 1000])
Span start logits:  torch.Size([40, 390])
span start probs dim:  torch.Size([40, 390])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 390]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1746, 200])
Passage Length:  1746
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1746, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1746, 15])
Passage ques attention dim:  torch.Size([40, 1746, 15])
Passage question vectors dim:  torch.Size([40, 1746, 200])
Question Passage Similarity dim:  torch.Size([40, 1746])
Question passage attention dim:  torch.Size([40, 1746])
Final Merged Passage dim:  torch.Size([40, 1746, 800])
Modeled Passage dim:  torch.Size([40, 1746, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1746, 1000])
Span start logits:  torch.Size([40, 1746])
span start probs dim:  torch.Size([40, 1746])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1746]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 718, 200])
Passage Length:  718
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 718, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 718, 19])
Passage ques attention dim:  torch.Size([40, 718, 19])
Passage question vectors dim:  torch.Size([40, 718, 200])
Question Passage Similarity dim:  torch.Size([40, 718])
Question passage attention dim:  torch.Size([40, 718])
Final Merged Passage dim:  torch.Size([40, 718, 800])
Modeled Passage dim:  torch.Size([40, 718, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 718, 1000])
Span start logits:  torch.Size([40, 718])
span start probs dim:  torch.Size([40, 718])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 718]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1447, 200])
Passage Length:  1447
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1447, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1447, 13])
Passage ques attention dim:  torch.Size([40, 1447, 13])
Passage question vectors dim:  torch.Size([40, 1447, 200])
Question Passage Similarity dim:  torch.Size([40, 1447])
Question passage attention dim:  torch.Size([40, 1447])
Final Merged Passage dim:  torch.Size([40, 1447, 800])
Modeled Passage dim:  torch.Size([40, 1447, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1447, 1000])
Span start logits:  torch.Size([40, 1447])
span start probs dim:  torch.Size([40, 1447])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1447]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 979, 200])
Passage Length:  979
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 979, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 979, 17])
Passage ques attention dim:  torch.Size([40, 979, 17])
Passage question vectors dim:  torch.Size([40, 979, 200])
Question Passage Similarity dim:  torch.Size([40, 979])
Question passage attention dim:  torch.Size([40, 979])
Final Merged Passage dim:  torch.Size([40, 979, 800])
Modeled Passage dim:  torch.Size([40, 979, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 979, 1000])
Span start logits:  torch.Size([40, 979])
span start probs dim:  torch.Size([40, 979])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 979]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 371, 200])
Passage Length:  371
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 371, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 371, 16])
Passage ques attention dim:  torch.Size([40, 371, 16])
Passage question vectors dim:  torch.Size([40, 371, 200])
Question Passage Similarity dim:  torch.Size([40, 371])
Question passage attention dim:  torch.Size([40, 371])
Final Merged Passage dim:  torch.Size([40, 371, 800])
Modeled Passage dim:  torch.Size([40, 371, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 371, 1000])
Span start logits:  torch.Size([40, 371])
span start probs dim:  torch.Size([40, 371])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 371]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 518, 200])
Passage Length:  518
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 518, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 518, 16])
Passage ques attention dim:  torch.Size([40, 518, 16])
Passage question vectors dim:  torch.Size([40, 518, 200])
Question Passage Similarity dim:  torch.Size([40, 518])
Question passage attention dim:  torch.Size([40, 518])
Final Merged Passage dim:  torch.Size([40, 518, 800])
Modeled Passage dim:  torch.Size([40, 518, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 518, 1000])
Span start logits:  torch.Size([40, 518])
span start probs dim:  torch.Size([40, 518])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 518]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 44, 200])
Embedded passage dim:  torch.Size([40, 386, 200])
Passage Length:  386
Encoded question dim:  torch.Size([40, 44, 200])
Encoded passage dim:  torch.Size([40, 386, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 386, 44])
Passage ques attention dim:  torch.Size([40, 386, 44])
Passage question vectors dim:  torch.Size([40, 386, 200])
Question Passage Similarity dim:  torch.Size([40, 386])
Question passage attention dim:  torch.Size([40, 386])
Final Merged Passage dim:  torch.Size([40, 386, 800])
Modeled Passage dim:  torch.Size([40, 386, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 386, 1000])
Span start logits:  torch.Size([40, 386])
span start probs dim:  torch.Size([40, 386])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 386]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 503, 200])
Passage Length:  503
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 503, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 503, 13])
Passage ques attention dim:  torch.Size([40, 503, 13])
Passage question vectors dim:  torch.Size([40, 503, 200])
Question Passage Similarity dim:  torch.Size([40, 503])
Question passage attention dim:  torch.Size([40, 503])
Final Merged Passage dim:  torch.Size([40, 503, 800])
Modeled Passage dim:  torch.Size([40, 503, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 503, 1000])
Span start logits:  torch.Size([40, 503])
span start probs dim:  torch.Size([40, 503])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 503]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 477, 200])
Passage Length:  477
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 477, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 477, 16])
Passage ques attention dim:  torch.Size([40, 477, 16])
Passage question vectors dim:  torch.Size([40, 477, 200])
Question Passage Similarity dim:  torch.Size([40, 477])
Question passage attention dim:  torch.Size([40, 477])
Final Merged Passage dim:  torch.Size([40, 477, 800])
Modeled Passage dim:  torch.Size([40, 477, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 477, 1000])
Span start logits:  torch.Size([40, 477])
span start probs dim:  torch.Size([40, 477])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 477]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 771, 200])
Passage Length:  771
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 771, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 771, 13])
Passage ques attention dim:  torch.Size([40, 771, 13])
Passage question vectors dim:  torch.Size([40, 771, 200])
Question Passage Similarity dim:  torch.Size([40, 771])
Question passage attention dim:  torch.Size([40, 771])
Final Merged Passage dim:  torch.Size([40, 771, 800])
Modeled Passage dim:  torch.Size([40, 771, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 771, 1000])
Span start logits:  torch.Size([40, 771])
span start probs dim:  torch.Size([40, 771])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 771]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 396, 200])
Passage Length:  396
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 396, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 396, 13])
Passage ques attention dim:  torch.Size([40, 396, 13])
Passage question vectors dim:  torch.Size([40, 396, 200])
Question Passage Similarity dim:  torch.Size([40, 396])
Question passage attention dim:  torch.Size([40, 396])
Final Merged Passage dim:  torch.Size([40, 396, 800])
Modeled Passage dim:  torch.Size([40, 396, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 396, 1000])
Span start logits:  torch.Size([40, 396])
span start probs dim:  torch.Size([40, 396])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 396]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 736, 200])
Passage Length:  736
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 736, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 736, 16])
Passage ques attention dim:  torch.Size([40, 736, 16])
Passage question vectors dim:  torch.Size([40, 736, 200])
Question Passage Similarity dim:  torch.Size([40, 736])
Question passage attention dim:  torch.Size([40, 736])
Final Merged Passage dim:  torch.Size([40, 736, 800])
Modeled Passage dim:  torch.Size([40, 736, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 736, 1000])
Span start logits:  torch.Size([40, 736])
span start probs dim:  torch.Size([40, 736])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 736]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 636, 200])
Passage Length:  636
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 636, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 636, 14])
Passage ques attention dim:  torch.Size([40, 636, 14])
Passage question vectors dim:  torch.Size([40, 636, 200])
Question Passage Similarity dim:  torch.Size([40, 636])
Question passage attention dim:  torch.Size([40, 636])
Final Merged Passage dim:  torch.Size([40, 636, 800])
Modeled Passage dim:  torch.Size([40, 636, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 636, 1000])
Span start logits:  torch.Size([40, 636])
span start probs dim:  torch.Size([40, 636])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 636]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 791, 200])
Passage Length:  791
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 791, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 791, 13])
Passage ques attention dim:  torch.Size([40, 791, 13])
Passage question vectors dim:  torch.Size([40, 791, 200])
Question Passage Similarity dim:  torch.Size([40, 791])
Question passage attention dim:  torch.Size([40, 791])
Final Merged Passage dim:  torch.Size([40, 791, 800])
Modeled Passage dim:  torch.Size([40, 791, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 791, 1000])
Span start logits:  torch.Size([40, 791])
span start probs dim:  torch.Size([40, 791])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 791]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1261, 200])
Passage Length:  1261
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1261, 13])
Passage ques attention dim:  torch.Size([40, 1261, 13])
Passage question vectors dim:  torch.Size([40, 1261, 200])
Question Passage Similarity dim:  torch.Size([40, 1261])
Question passage attention dim:  torch.Size([40, 1261])
Final Merged Passage dim:  torch.Size([40, 1261, 800])
Modeled Passage dim:  torch.Size([40, 1261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1261, 1000])
Span start logits:  torch.Size([40, 1261])
span start probs dim:  torch.Size([40, 1261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1261]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1007, 200])
Passage Length:  1007
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1007, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1007, 14])
Passage ques attention dim:  torch.Size([40, 1007, 14])
Passage question vectors dim:  torch.Size([40, 1007, 200])
Question Passage Similarity dim:  torch.Size([40, 1007])
Question passage attention dim:  torch.Size([40, 1007])
Final Merged Passage dim:  torch.Size([40, 1007, 800])
Modeled Passage dim:  torch.Size([40, 1007, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1007, 1000])
Span start logits:  torch.Size([40, 1007])
span start probs dim:  torch.Size([40, 1007])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1007]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 848, 200])
Passage Length:  848
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 848, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 848, 20])
Passage ques attention dim:  torch.Size([40, 848, 20])
Passage question vectors dim:  torch.Size([40, 848, 200])
Question Passage Similarity dim:  torch.Size([40, 848])
Question passage attention dim:  torch.Size([40, 848])
Final Merged Passage dim:  torch.Size([40, 848, 800])
Modeled Passage dim:  torch.Size([40, 848, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 848, 1000])
Span start logits:  torch.Size([40, 848])
span start probs dim:  torch.Size([40, 848])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 848]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1223, 200])
Passage Length:  1223
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1223, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1223, 16])
Passage ques attention dim:  torch.Size([40, 1223, 16])
Passage question vectors dim:  torch.Size([40, 1223, 200])
Question Passage Similarity dim:  torch.Size([40, 1223])
Question passage attention dim:  torch.Size([40, 1223])
Final Merged Passage dim:  torch.Size([40, 1223, 800])
Modeled Passage dim:  torch.Size([40, 1223, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1223, 1000])
Span start logits:  torch.Size([40, 1223])
span start probs dim:  torch.Size([40, 1223])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1223]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 730, 200])
Passage Length:  730
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 730, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 730, 15])
Passage ques attention dim:  torch.Size([40, 730, 15])
Passage question vectors dim:  torch.Size([40, 730, 200])
Question Passage Similarity dim:  torch.Size([40, 730])
Question passage attention dim:  torch.Size([40, 730])
Final Merged Passage dim:  torch.Size([40, 730, 800])
Modeled Passage dim:  torch.Size([40, 730, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 730, 1000])
Span start logits:  torch.Size([40, 730])
span start probs dim:  torch.Size([40, 730])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 730]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 337, 200])
Passage Length:  337
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 337, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 337, 22])
Passage ques attention dim:  torch.Size([40, 337, 22])
Passage question vectors dim:  torch.Size([40, 337, 200])
Question Passage Similarity dim:  torch.Size([40, 337])
Question passage attention dim:  torch.Size([40, 337])
Final Merged Passage dim:  torch.Size([40, 337, 800])
Modeled Passage dim:  torch.Size([40, 337, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 337, 1000])
Span start logits:  torch.Size([40, 337])
span start probs dim:  torch.Size([40, 337])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 337]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 823, 200])
Passage Length:  823
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 823, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 823, 20])
Passage ques attention dim:  torch.Size([40, 823, 20])
Passage question vectors dim:  torch.Size([40, 823, 200])
Question Passage Similarity dim:  torch.Size([40, 823])
Question passage attention dim:  torch.Size([40, 823])
Final Merged Passage dim:  torch.Size([40, 823, 800])
Modeled Passage dim:  torch.Size([40, 823, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 823, 1000])
Span start logits:  torch.Size([40, 823])
span start probs dim:  torch.Size([40, 823])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 823]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1185, 200])
Passage Length:  1185
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1185, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1185, 12])
Passage ques attention dim:  torch.Size([40, 1185, 12])
Passage question vectors dim:  torch.Size([40, 1185, 200])
Question Passage Similarity dim:  torch.Size([40, 1185])
Question passage attention dim:  torch.Size([40, 1185])
Final Merged Passage dim:  torch.Size([40, 1185, 800])
Modeled Passage dim:  torch.Size([40, 1185, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1185, 1000])
Span start logits:  torch.Size([40, 1185])
span start probs dim:  torch.Size([40, 1185])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1185]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 987, 200])
Passage Length:  987
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 987, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 987, 14])
Passage ques attention dim:  torch.Size([40, 987, 14])
Passage question vectors dim:  torch.Size([40, 987, 200])
Question Passage Similarity dim:  torch.Size([40, 987])
Question passage attention dim:  torch.Size([40, 987])
Final Merged Passage dim:  torch.Size([40, 987, 800])
Modeled Passage dim:  torch.Size([40, 987, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 987, 1000])
Span start logits:  torch.Size([40, 987])
span start probs dim:  torch.Size([40, 987])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 987]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 599, 200])
Passage Length:  599
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 599, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 599, 15])
Passage ques attention dim:  torch.Size([40, 599, 15])
Passage question vectors dim:  torch.Size([40, 599, 200])
Question Passage Similarity dim:  torch.Size([40, 599])
Question passage attention dim:  torch.Size([40, 599])
Final Merged Passage dim:  torch.Size([40, 599, 800])
Modeled Passage dim:  torch.Size([40, 599, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 599, 1000])
Span start logits:  torch.Size([40, 599])
span start probs dim:  torch.Size([40, 599])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 599]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 568, 200])
Passage Length:  568
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 568, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 568, 15])
Passage ques attention dim:  torch.Size([40, 568, 15])
Passage question vectors dim:  torch.Size([40, 568, 200])
Question Passage Similarity dim:  torch.Size([40, 568])
Question passage attention dim:  torch.Size([40, 568])
Final Merged Passage dim:  torch.Size([40, 568, 800])
Modeled Passage dim:  torch.Size([40, 568, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 568, 1000])
Span start logits:  torch.Size([40, 568])
span start probs dim:  torch.Size([40, 568])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 568]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1086, 200])
Passage Length:  1086
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1086, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1086, 15])
Passage ques attention dim:  torch.Size([40, 1086, 15])
Passage question vectors dim:  torch.Size([40, 1086, 200])
Question Passage Similarity dim:  torch.Size([40, 1086])
Question passage attention dim:  torch.Size([40, 1086])
Final Merged Passage dim:  torch.Size([40, 1086, 800])
Modeled Passage dim:  torch.Size([40, 1086, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1086, 1000])
Span start logits:  torch.Size([40, 1086])
span start probs dim:  torch.Size([40, 1086])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1086]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 673, 200])
Passage Length:  673
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 673, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 673, 12])
Passage ques attention dim:  torch.Size([40, 673, 12])
Passage question vectors dim:  torch.Size([40, 673, 200])
Question Passage Similarity dim:  torch.Size([40, 673])
Question passage attention dim:  torch.Size([40, 673])
Final Merged Passage dim:  torch.Size([40, 673, 800])
Modeled Passage dim:  torch.Size([40, 673, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 673, 1000])
Span start logits:  torch.Size([40, 673])
span start probs dim:  torch.Size([40, 673])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 673]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 357, 200])
Passage Length:  357
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 357, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 357, 14])
Passage ques attention dim:  torch.Size([40, 357, 14])
Passage question vectors dim:  torch.Size([40, 357, 200])
Question Passage Similarity dim:  torch.Size([40, 357])
Question passage attention dim:  torch.Size([40, 357])
Final Merged Passage dim:  torch.Size([40, 357, 800])
Modeled Passage dim:  torch.Size([40, 357, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 357, 1000])
Span start logits:  torch.Size([40, 357])
span start probs dim:  torch.Size([40, 357])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 357]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1669, 200])
Passage Length:  1669
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1669, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1669, 11])
Passage ques attention dim:  torch.Size([40, 1669, 11])
Passage question vectors dim:  torch.Size([40, 1669, 200])
Question Passage Similarity dim:  torch.Size([40, 1669])
Question passage attention dim:  torch.Size([40, 1669])
Final Merged Passage dim:  torch.Size([40, 1669, 800])
Modeled Passage dim:  torch.Size([40, 1669, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1669, 1000])
Span start logits:  torch.Size([40, 1669])
span start probs dim:  torch.Size([40, 1669])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1669]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 890, 200])
Passage Length:  890
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 890, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 890, 19])
Passage ques attention dim:  torch.Size([40, 890, 19])
Passage question vectors dim:  torch.Size([40, 890, 200])
Question Passage Similarity dim:  torch.Size([40, 890])
Question passage attention dim:  torch.Size([40, 890])
Final Merged Passage dim:  torch.Size([40, 890, 800])
Modeled Passage dim:  torch.Size([40, 890, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 890, 1000])
Span start logits:  torch.Size([40, 890])
span start probs dim:  torch.Size([40, 890])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 890]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 937, 200])
Passage Length:  937
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 937, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 937, 14])
Passage ques attention dim:  torch.Size([40, 937, 14])
Passage question vectors dim:  torch.Size([40, 937, 200])
Question Passage Similarity dim:  torch.Size([40, 937])
Question passage attention dim:  torch.Size([40, 937])
Final Merged Passage dim:  torch.Size([40, 937, 800])
Modeled Passage dim:  torch.Size([40, 937, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 937, 1000])
Span start logits:  torch.Size([40, 937])
span start probs dim:  torch.Size([40, 937])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 937]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 221, 200])
Passage Length:  221
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 221, 14])
Passage ques attention dim:  torch.Size([40, 221, 14])
Passage question vectors dim:  torch.Size([40, 221, 200])
Question Passage Similarity dim:  torch.Size([40, 221])
Question passage attention dim:  torch.Size([40, 221])
Final Merged Passage dim:  torch.Size([40, 221, 800])
Modeled Passage dim:  torch.Size([40, 221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 221, 1000])
Span start logits:  torch.Size([40, 221])
span start probs dim:  torch.Size([40, 221])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 221]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 890, 200])
Passage Length:  890
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 890, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 890, 16])
Passage ques attention dim:  torch.Size([40, 890, 16])
Passage question vectors dim:  torch.Size([40, 890, 200])
Question Passage Similarity dim:  torch.Size([40, 890])
Question passage attention dim:  torch.Size([40, 890])
Final Merged Passage dim:  torch.Size([40, 890, 800])
Modeled Passage dim:  torch.Size([40, 890, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 890, 1000])
Span start logits:  torch.Size([40, 890])
span start probs dim:  torch.Size([40, 890])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 890]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1245, 200])
Passage Length:  1245
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1245, 14])
Passage ques attention dim:  torch.Size([40, 1245, 14])
Passage question vectors dim:  torch.Size([40, 1245, 200])
Question Passage Similarity dim:  torch.Size([40, 1245])
Question passage attention dim:  torch.Size([40, 1245])
Final Merged Passage dim:  torch.Size([40, 1245, 800])
Modeled Passage dim:  torch.Size([40, 1245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1245, 1000])
Span start logits:  torch.Size([40, 1245])
span start probs dim:  torch.Size([40, 1245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 914, 200])
Passage Length:  914
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 914, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 914, 13])
Passage ques attention dim:  torch.Size([40, 914, 13])
Passage question vectors dim:  torch.Size([40, 914, 200])
Question Passage Similarity dim:  torch.Size([40, 914])
Question passage attention dim:  torch.Size([40, 914])
Final Merged Passage dim:  torch.Size([40, 914, 800])
Modeled Passage dim:  torch.Size([40, 914, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 914, 1000])
Span start logits:  torch.Size([40, 914])
span start probs dim:  torch.Size([40, 914])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 914]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 1270, 200])
Passage Length:  1270
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 1270, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1270, 23])
Passage ques attention dim:  torch.Size([40, 1270, 23])
Passage question vectors dim:  torch.Size([40, 1270, 200])
Question Passage Similarity dim:  torch.Size([40, 1270])
Question passage attention dim:  torch.Size([40, 1270])
Final Merged Passage dim:  torch.Size([40, 1270, 800])
Modeled Passage dim:  torch.Size([40, 1270, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1270, 1000])
Span start logits:  torch.Size([40, 1270])
span start probs dim:  torch.Size([40, 1270])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1270]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 624, 200])
Passage Length:  624
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 624, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 624, 14])
Passage ques attention dim:  torch.Size([40, 624, 14])
Passage question vectors dim:  torch.Size([40, 624, 200])
Question Passage Similarity dim:  torch.Size([40, 624])
Question passage attention dim:  torch.Size([40, 624])
Final Merged Passage dim:  torch.Size([40, 624, 800])
Modeled Passage dim:  torch.Size([40, 624, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 624, 1000])
Span start logits:  torch.Size([40, 624])
span start probs dim:  torch.Size([40, 624])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 624]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 708, 200])
Passage Length:  708
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 708, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 708, 11])
Passage ques attention dim:  torch.Size([40, 708, 11])
Passage question vectors dim:  torch.Size([40, 708, 200])
Question Passage Similarity dim:  torch.Size([40, 708])
Question passage attention dim:  torch.Size([40, 708])
Final Merged Passage dim:  torch.Size([40, 708, 800])
Modeled Passage dim:  torch.Size([40, 708, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 708, 1000])
Span start logits:  torch.Size([40, 708])
span start probs dim:  torch.Size([40, 708])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 708]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 553, 200])
Passage Length:  553
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 553, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 553, 15])
Passage ques attention dim:  torch.Size([40, 553, 15])
Passage question vectors dim:  torch.Size([40, 553, 200])
Question Passage Similarity dim:  torch.Size([40, 553])
Question passage attention dim:  torch.Size([40, 553])
Final Merged Passage dim:  torch.Size([40, 553, 800])
Modeled Passage dim:  torch.Size([40, 553, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 553, 1000])
Span start logits:  torch.Size([40, 553])
span start probs dim:  torch.Size([40, 553])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 553]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 937, 200])
Passage Length:  937
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 937, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 937, 16])
Passage ques attention dim:  torch.Size([40, 937, 16])
Passage question vectors dim:  torch.Size([40, 937, 200])
Question Passage Similarity dim:  torch.Size([40, 937])
Question passage attention dim:  torch.Size([40, 937])
Final Merged Passage dim:  torch.Size([40, 937, 800])
Modeled Passage dim:  torch.Size([40, 937, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 937, 1000])
Span start logits:  torch.Size([40, 937])
span start probs dim:  torch.Size([40, 937])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 937]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 810, 200])
Passage Length:  810
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 810, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 810, 19])
Passage ques attention dim:  torch.Size([40, 810, 19])
Passage question vectors dim:  torch.Size([40, 810, 200])
Question Passage Similarity dim:  torch.Size([40, 810])
Question passage attention dim:  torch.Size([40, 810])
Final Merged Passage dim:  torch.Size([40, 810, 800])
Modeled Passage dim:  torch.Size([40, 810, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 810, 1000])
Span start logits:  torch.Size([40, 810])
span start probs dim:  torch.Size([40, 810])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 810]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 398, 200])
Passage Length:  398
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 398, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 398, 17])
Passage ques attention dim:  torch.Size([40, 398, 17])
Passage question vectors dim:  torch.Size([40, 398, 200])
Question Passage Similarity dim:  torch.Size([40, 398])
Question passage attention dim:  torch.Size([40, 398])
Final Merged Passage dim:  torch.Size([40, 398, 800])
Modeled Passage dim:  torch.Size([40, 398, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 398, 1000])
Span start logits:  torch.Size([40, 398])
span start probs dim:  torch.Size([40, 398])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 398]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 821, 200])
Passage Length:  821
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 821, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 821, 16])
Passage ques attention dim:  torch.Size([40, 821, 16])
Passage question vectors dim:  torch.Size([40, 821, 200])
Question Passage Similarity dim:  torch.Size([40, 821])
Question passage attention dim:  torch.Size([40, 821])
Final Merged Passage dim:  torch.Size([40, 821, 800])
Modeled Passage dim:  torch.Size([40, 821, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 821, 1000])
Span start logits:  torch.Size([40, 821])
span start probs dim:  torch.Size([40, 821])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 821]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 629, 200])
Passage Length:  629
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 629, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 629, 14])
Passage ques attention dim:  torch.Size([40, 629, 14])
Passage question vectors dim:  torch.Size([40, 629, 200])
Question Passage Similarity dim:  torch.Size([40, 629])
Question passage attention dim:  torch.Size([40, 629])
Final Merged Passage dim:  torch.Size([40, 629, 800])
Modeled Passage dim:  torch.Size([40, 629, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 629, 1000])
Span start logits:  torch.Size([40, 629])
span start probs dim:  torch.Size([40, 629])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 629]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 838, 200])
Passage Length:  838
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 838, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 838, 24])
Passage ques attention dim:  torch.Size([40, 838, 24])
Passage question vectors dim:  torch.Size([40, 838, 200])
Question Passage Similarity dim:  torch.Size([40, 838])
Question passage attention dim:  torch.Size([40, 838])
Final Merged Passage dim:  torch.Size([40, 838, 800])
Modeled Passage dim:  torch.Size([40, 838, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 838, 1000])
Span start logits:  torch.Size([40, 838])
span start probs dim:  torch.Size([40, 838])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 838]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 548, 200])
Passage Length:  548
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 548, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 548, 16])
Passage ques attention dim:  torch.Size([40, 548, 16])
Passage question vectors dim:  torch.Size([40, 548, 200])
Question Passage Similarity dim:  torch.Size([40, 548])
Question passage attention dim:  torch.Size([40, 548])
Final Merged Passage dim:  torch.Size([40, 548, 800])
Modeled Passage dim:  torch.Size([40, 548, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 548, 1000])
Span start logits:  torch.Size([40, 548])
span start probs dim:  torch.Size([40, 548])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 548]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 670, 200])
Passage Length:  670
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 670, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 670, 13])
Passage ques attention dim:  torch.Size([40, 670, 13])
Passage question vectors dim:  torch.Size([40, 670, 200])
Question Passage Similarity dim:  torch.Size([40, 670])
Question passage attention dim:  torch.Size([40, 670])
Final Merged Passage dim:  torch.Size([40, 670, 800])
Modeled Passage dim:  torch.Size([40, 670, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 670, 1000])
Span start logits:  torch.Size([40, 670])
span start probs dim:  torch.Size([40, 670])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 670]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 632, 200])
Passage Length:  632
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 632, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 632, 16])
Passage ques attention dim:  torch.Size([40, 632, 16])
Passage question vectors dim:  torch.Size([40, 632, 200])
Question Passage Similarity dim:  torch.Size([40, 632])
Question passage attention dim:  torch.Size([40, 632])
Final Merged Passage dim:  torch.Size([40, 632, 800])
Modeled Passage dim:  torch.Size([40, 632, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 632, 1000])
Span start logits:  torch.Size([40, 632])
span start probs dim:  torch.Size([40, 632])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 632]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 762, 200])
Passage Length:  762
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 762, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 762, 11])
Passage ques attention dim:  torch.Size([40, 762, 11])
Passage question vectors dim:  torch.Size([40, 762, 200])
Question Passage Similarity dim:  torch.Size([40, 762])
Question passage attention dim:  torch.Size([40, 762])
Final Merged Passage dim:  torch.Size([40, 762, 800])
Modeled Passage dim:  torch.Size([40, 762, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 762, 1000])
Span start logits:  torch.Size([40, 762])
span start probs dim:  torch.Size([40, 762])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 762]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 696, 200])
Passage Length:  696
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 696, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 696, 15])
Passage ques attention dim:  torch.Size([40, 696, 15])
Passage question vectors dim:  torch.Size([40, 696, 200])
Question Passage Similarity dim:  torch.Size([40, 696])
Question passage attention dim:  torch.Size([40, 696])
Final Merged Passage dim:  torch.Size([40, 696, 800])
Modeled Passage dim:  torch.Size([40, 696, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 696, 1000])
Span start logits:  torch.Size([40, 696])
span start probs dim:  torch.Size([40, 696])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 696]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 902, 200])
Passage Length:  902
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 902, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 902, 13])
Passage ques attention dim:  torch.Size([40, 902, 13])
Passage question vectors dim:  torch.Size([40, 902, 200])
Question Passage Similarity dim:  torch.Size([40, 902])
Question passage attention dim:  torch.Size([40, 902])
Final Merged Passage dim:  torch.Size([40, 902, 800])
Modeled Passage dim:  torch.Size([40, 902, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 902, 1000])
Span start logits:  torch.Size([40, 902])
span start probs dim:  torch.Size([40, 902])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 902]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 198, 200])
Passage Length:  198
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 198, 14])
Passage ques attention dim:  torch.Size([40, 198, 14])
Passage question vectors dim:  torch.Size([40, 198, 200])
Question Passage Similarity dim:  torch.Size([40, 198])
Question passage attention dim:  torch.Size([40, 198])
Final Merged Passage dim:  torch.Size([40, 198, 800])
Modeled Passage dim:  torch.Size([40, 198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 198, 1000])
Span start logits:  torch.Size([40, 198])
span start probs dim:  torch.Size([40, 198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 468, 200])
Passage Length:  468
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 468, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 468, 16])
Passage ques attention dim:  torch.Size([40, 468, 16])
Passage question vectors dim:  torch.Size([40, 468, 200])
Question Passage Similarity dim:  torch.Size([40, 468])
Question passage attention dim:  torch.Size([40, 468])
Final Merged Passage dim:  torch.Size([40, 468, 800])
Modeled Passage dim:  torch.Size([40, 468, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 468, 1000])
Span start logits:  torch.Size([40, 468])
span start probs dim:  torch.Size([40, 468])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 468]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1509, 200])
Passage Length:  1509
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1509, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1509, 13])
Passage ques attention dim:  torch.Size([40, 1509, 13])
Passage question vectors dim:  torch.Size([40, 1509, 200])
Question Passage Similarity dim:  torch.Size([40, 1509])
Question passage attention dim:  torch.Size([40, 1509])
Final Merged Passage dim:  torch.Size([40, 1509, 800])
Modeled Passage dim:  torch.Size([40, 1509, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1509, 1000])
Span start logits:  torch.Size([40, 1509])
span start probs dim:  torch.Size([40, 1509])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1509]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 479, 200])
Passage Length:  479
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 479, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 479, 13])
Passage ques attention dim:  torch.Size([40, 479, 13])
Passage question vectors dim:  torch.Size([40, 479, 200])
Question Passage Similarity dim:  torch.Size([40, 479])
Question passage attention dim:  torch.Size([40, 479])
Final Merged Passage dim:  torch.Size([40, 479, 800])
Modeled Passage dim:  torch.Size([40, 479, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 479, 1000])
Span start logits:  torch.Size([40, 479])
span start probs dim:  torch.Size([40, 479])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 479]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 286, 200])
Passage Length:  286
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 286, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 286, 12])
Passage ques attention dim:  torch.Size([40, 286, 12])
Passage question vectors dim:  torch.Size([40, 286, 200])
Question Passage Similarity dim:  torch.Size([40, 286])
Question passage attention dim:  torch.Size([40, 286])
Final Merged Passage dim:  torch.Size([40, 286, 800])
Modeled Passage dim:  torch.Size([40, 286, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 286, 1000])
Span start logits:  torch.Size([40, 286])
span start probs dim:  torch.Size([40, 286])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 286]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 607, 200])
Passage Length:  607
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 607, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 607, 14])
Passage ques attention dim:  torch.Size([40, 607, 14])
Passage question vectors dim:  torch.Size([40, 607, 200])
Question Passage Similarity dim:  torch.Size([40, 607])
Question passage attention dim:  torch.Size([40, 607])
Final Merged Passage dim:  torch.Size([40, 607, 800])
Modeled Passage dim:  torch.Size([40, 607, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 607, 1000])
Span start logits:  torch.Size([40, 607])
span start probs dim:  torch.Size([40, 607])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 607]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 571, 200])
Passage Length:  571
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 571, 17])
Passage ques attention dim:  torch.Size([40, 571, 17])
Passage question vectors dim:  torch.Size([40, 571, 200])
Question Passage Similarity dim:  torch.Size([40, 571])
Question passage attention dim:  torch.Size([40, 571])
Final Merged Passage dim:  torch.Size([40, 571, 800])
Modeled Passage dim:  torch.Size([40, 571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 571, 1000])
Span start logits:  torch.Size([40, 571])
span start probs dim:  torch.Size([40, 571])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 571]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 861, 200])
Passage Length:  861
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 861, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 861, 14])
Passage ques attention dim:  torch.Size([40, 861, 14])
Passage question vectors dim:  torch.Size([40, 861, 200])
Question Passage Similarity dim:  torch.Size([40, 861])
Question passage attention dim:  torch.Size([40, 861])
Final Merged Passage dim:  torch.Size([40, 861, 800])
Modeled Passage dim:  torch.Size([40, 861, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 861, 1000])
Span start logits:  torch.Size([40, 861])
span start probs dim:  torch.Size([40, 861])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 861]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 638, 200])
Passage Length:  638
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 638, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 638, 14])
Passage ques attention dim:  torch.Size([40, 638, 14])
Passage question vectors dim:  torch.Size([40, 638, 200])
Question Passage Similarity dim:  torch.Size([40, 638])
Question passage attention dim:  torch.Size([40, 638])
Final Merged Passage dim:  torch.Size([40, 638, 800])
Modeled Passage dim:  torch.Size([40, 638, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 638, 1000])
Span start logits:  torch.Size([40, 638])
span start probs dim:  torch.Size([40, 638])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 638]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1211, 200])
Passage Length:  1211
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1211, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1211, 13])
Passage ques attention dim:  torch.Size([40, 1211, 13])
Passage question vectors dim:  torch.Size([40, 1211, 200])
Question Passage Similarity dim:  torch.Size([40, 1211])
Question passage attention dim:  torch.Size([40, 1211])
Final Merged Passage dim:  torch.Size([40, 1211, 800])
Modeled Passage dim:  torch.Size([40, 1211, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1211, 1000])
Span start logits:  torch.Size([40, 1211])
span start probs dim:  torch.Size([40, 1211])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1211]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 593, 200])
Passage Length:  593
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 593, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 593, 16])
Passage ques attention dim:  torch.Size([40, 593, 16])
Passage question vectors dim:  torch.Size([40, 593, 200])
Question Passage Similarity dim:  torch.Size([40, 593])
Question passage attention dim:  torch.Size([40, 593])
Final Merged Passage dim:  torch.Size([40, 593, 800])
Modeled Passage dim:  torch.Size([40, 593, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 593, 1000])
Span start logits:  torch.Size([40, 593])
span start probs dim:  torch.Size([40, 593])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 593]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1147, 200])
Passage Length:  1147
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1147, 20])
Passage ques attention dim:  torch.Size([40, 1147, 20])
Passage question vectors dim:  torch.Size([40, 1147, 200])
Question Passage Similarity dim:  torch.Size([40, 1147])
Question passage attention dim:  torch.Size([40, 1147])
Final Merged Passage dim:  torch.Size([40, 1147, 800])
Modeled Passage dim:  torch.Size([40, 1147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1147, 1000])
Span start logits:  torch.Size([40, 1147])
span start probs dim:  torch.Size([40, 1147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1389, 200])
Passage Length:  1389
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1389, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1389, 15])
Passage ques attention dim:  torch.Size([40, 1389, 15])
Passage question vectors dim:  torch.Size([40, 1389, 200])
Question Passage Similarity dim:  torch.Size([40, 1389])
Question passage attention dim:  torch.Size([40, 1389])
Final Merged Passage dim:  torch.Size([40, 1389, 800])
Modeled Passage dim:  torch.Size([40, 1389, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1389, 1000])
Span start logits:  torch.Size([40, 1389])
span start probs dim:  torch.Size([40, 1389])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1389]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1263, 200])
Passage Length:  1263
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1263, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1263, 14])
Passage ques attention dim:  torch.Size([40, 1263, 14])
Passage question vectors dim:  torch.Size([40, 1263, 200])
Question Passage Similarity dim:  torch.Size([40, 1263])
Question passage attention dim:  torch.Size([40, 1263])
Final Merged Passage dim:  torch.Size([40, 1263, 800])
Modeled Passage dim:  torch.Size([40, 1263, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1263, 1000])
Span start logits:  torch.Size([40, 1263])
span start probs dim:  torch.Size([40, 1263])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1263]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 1008, 200])
Passage Length:  1008
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 1008, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1008, 25])
Passage ques attention dim:  torch.Size([40, 1008, 25])
Passage question vectors dim:  torch.Size([40, 1008, 200])
Question Passage Similarity dim:  torch.Size([40, 1008])
Question passage attention dim:  torch.Size([40, 1008])
Final Merged Passage dim:  torch.Size([40, 1008, 800])
Modeled Passage dim:  torch.Size([40, 1008, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1008, 1000])
Span start logits:  torch.Size([40, 1008])
span start probs dim:  torch.Size([40, 1008])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1008]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 514, 200])
Passage Length:  514
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 514, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 514, 16])
Passage ques attention dim:  torch.Size([40, 514, 16])
Passage question vectors dim:  torch.Size([40, 514, 200])
Question Passage Similarity dim:  torch.Size([40, 514])
Question passage attention dim:  torch.Size([40, 514])
Final Merged Passage dim:  torch.Size([40, 514, 800])
Modeled Passage dim:  torch.Size([40, 514, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 514, 1000])
Span start logits:  torch.Size([40, 514])
span start probs dim:  torch.Size([40, 514])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 514]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 420, 200])
Passage Length:  420
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 420, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 420, 13])
Passage ques attention dim:  torch.Size([40, 420, 13])
Passage question vectors dim:  torch.Size([40, 420, 200])
Question Passage Similarity dim:  torch.Size([40, 420])
Question passage attention dim:  torch.Size([40, 420])
Final Merged Passage dim:  torch.Size([40, 420, 800])
Modeled Passage dim:  torch.Size([40, 420, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 420, 1000])
Span start logits:  torch.Size([40, 420])
span start probs dim:  torch.Size([40, 420])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 420]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 134, 200])
Passage Length:  134
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 134, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 134, 13])
Passage ques attention dim:  torch.Size([40, 134, 13])
Passage question vectors dim:  torch.Size([40, 134, 200])
Question Passage Similarity dim:  torch.Size([40, 134])
Question passage attention dim:  torch.Size([40, 134])
Final Merged Passage dim:  torch.Size([40, 134, 800])
Modeled Passage dim:  torch.Size([40, 134, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 134, 1000])
Span start logits:  torch.Size([40, 134])
span start probs dim:  torch.Size([40, 134])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 134]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 917, 200])
Passage Length:  917
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 917, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 917, 15])
Passage ques attention dim:  torch.Size([40, 917, 15])
Passage question vectors dim:  torch.Size([40, 917, 200])
Question Passage Similarity dim:  torch.Size([40, 917])
Question passage attention dim:  torch.Size([40, 917])
Final Merged Passage dim:  torch.Size([40, 917, 800])
Modeled Passage dim:  torch.Size([40, 917, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 917, 1000])
Span start logits:  torch.Size([40, 917])
span start probs dim:  torch.Size([40, 917])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 917]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 686, 200])
Passage Length:  686
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 686, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 686, 18])
Passage ques attention dim:  torch.Size([40, 686, 18])
Passage question vectors dim:  torch.Size([40, 686, 200])
Question Passage Similarity dim:  torch.Size([40, 686])
Question passage attention dim:  torch.Size([40, 686])
Final Merged Passage dim:  torch.Size([40, 686, 800])
Modeled Passage dim:  torch.Size([40, 686, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 686, 1000])
Span start logits:  torch.Size([40, 686])
span start probs dim:  torch.Size([40, 686])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 686]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 607, 200])
Passage Length:  607
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 607, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 607, 20])
Passage ques attention dim:  torch.Size([40, 607, 20])
Passage question vectors dim:  torch.Size([40, 607, 200])
Question Passage Similarity dim:  torch.Size([40, 607])
Question passage attention dim:  torch.Size([40, 607])
Final Merged Passage dim:  torch.Size([40, 607, 800])
Modeled Passage dim:  torch.Size([40, 607, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 607, 1000])
Span start logits:  torch.Size([40, 607])
span start probs dim:  torch.Size([40, 607])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 607]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1109, 200])
Passage Length:  1109
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1109, 11])
Passage ques attention dim:  torch.Size([40, 1109, 11])
Passage question vectors dim:  torch.Size([40, 1109, 200])
Question Passage Similarity dim:  torch.Size([40, 1109])
Question passage attention dim:  torch.Size([40, 1109])
Final Merged Passage dim:  torch.Size([40, 1109, 800])
Modeled Passage dim:  torch.Size([40, 1109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1109, 1000])
Span start logits:  torch.Size([40, 1109])
span start probs dim:  torch.Size([40, 1109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 416, 200])
Passage Length:  416
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 416, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 416, 17])
Passage ques attention dim:  torch.Size([40, 416, 17])
Passage question vectors dim:  torch.Size([40, 416, 200])
Question Passage Similarity dim:  torch.Size([40, 416])
Question passage attention dim:  torch.Size([40, 416])
Final Merged Passage dim:  torch.Size([40, 416, 800])
Modeled Passage dim:  torch.Size([40, 416, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 416, 1000])
Span start logits:  torch.Size([40, 416])
span start probs dim:  torch.Size([40, 416])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 416]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 308, 200])
Passage Length:  308
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 308, 12])
Passage ques attention dim:  torch.Size([40, 308, 12])
Passage question vectors dim:  torch.Size([40, 308, 200])
Question Passage Similarity dim:  torch.Size([40, 308])
Question passage attention dim:  torch.Size([40, 308])
Final Merged Passage dim:  torch.Size([40, 308, 800])
Modeled Passage dim:  torch.Size([40, 308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 308, 1000])
Span start logits:  torch.Size([40, 308])
span start probs dim:  torch.Size([40, 308])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 308]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 607, 200])
Passage Length:  607
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 607, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 607, 13])
Passage ques attention dim:  torch.Size([40, 607, 13])
Passage question vectors dim:  torch.Size([40, 607, 200])
Question Passage Similarity dim:  torch.Size([40, 607])
Question passage attention dim:  torch.Size([40, 607])
Final Merged Passage dim:  torch.Size([40, 607, 800])
Modeled Passage dim:  torch.Size([40, 607, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 607, 1000])
Span start logits:  torch.Size([40, 607])
span start probs dim:  torch.Size([40, 607])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 607]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 325, 200])
Passage Length:  325
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 325, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 325, 15])
Passage ques attention dim:  torch.Size([40, 325, 15])
Passage question vectors dim:  torch.Size([40, 325, 200])
Question Passage Similarity dim:  torch.Size([40, 325])
Question passage attention dim:  torch.Size([40, 325])
Final Merged Passage dim:  torch.Size([40, 325, 800])
Modeled Passage dim:  torch.Size([40, 325, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 325, 1000])
Span start logits:  torch.Size([40, 325])
span start probs dim:  torch.Size([40, 325])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 325]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 509, 200])
Passage Length:  509
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 509, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 509, 16])
Passage ques attention dim:  torch.Size([40, 509, 16])
Passage question vectors dim:  torch.Size([40, 509, 200])
Question Passage Similarity dim:  torch.Size([40, 509])
Question passage attention dim:  torch.Size([40, 509])
Final Merged Passage dim:  torch.Size([40, 509, 800])
Modeled Passage dim:  torch.Size([40, 509, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 509, 1000])
Span start logits:  torch.Size([40, 509])
span start probs dim:  torch.Size([40, 509])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 509]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1035, 200])
Passage Length:  1035
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1035, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1035, 14])
Passage ques attention dim:  torch.Size([40, 1035, 14])
Passage question vectors dim:  torch.Size([40, 1035, 200])
Question Passage Similarity dim:  torch.Size([40, 1035])
Question passage attention dim:  torch.Size([40, 1035])
Final Merged Passage dim:  torch.Size([40, 1035, 800])
Modeled Passage dim:  torch.Size([40, 1035, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1035, 1000])
Span start logits:  torch.Size([40, 1035])
span start probs dim:  torch.Size([40, 1035])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1035]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1272, 200])
Passage Length:  1272
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1272, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1272, 13])
Passage ques attention dim:  torch.Size([40, 1272, 13])
Passage question vectors dim:  torch.Size([40, 1272, 200])
Question Passage Similarity dim:  torch.Size([40, 1272])
Question passage attention dim:  torch.Size([40, 1272])
Final Merged Passage dim:  torch.Size([40, 1272, 800])
Modeled Passage dim:  torch.Size([40, 1272, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1272, 1000])
Span start logits:  torch.Size([40, 1272])
span start probs dim:  torch.Size([40, 1272])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1272]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 613, 200])
Passage Length:  613
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 613, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 613, 17])
Passage ques attention dim:  torch.Size([40, 613, 17])
Passage question vectors dim:  torch.Size([40, 613, 200])
Question Passage Similarity dim:  torch.Size([40, 613])
Question passage attention dim:  torch.Size([40, 613])
Final Merged Passage dim:  torch.Size([40, 613, 800])
Modeled Passage dim:  torch.Size([40, 613, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 613, 1000])
Span start logits:  torch.Size([40, 613])
span start probs dim:  torch.Size([40, 613])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 613]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 625, 200])
Passage Length:  625
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 625, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 625, 16])
Passage ques attention dim:  torch.Size([40, 625, 16])
Passage question vectors dim:  torch.Size([40, 625, 200])
Question Passage Similarity dim:  torch.Size([40, 625])
Question passage attention dim:  torch.Size([40, 625])
Final Merged Passage dim:  torch.Size([40, 625, 800])
Modeled Passage dim:  torch.Size([40, 625, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 625, 1000])
Span start logits:  torch.Size([40, 625])
span start probs dim:  torch.Size([40, 625])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 625]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 331, 200])
Passage Length:  331
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 331, 14])
Passage ques attention dim:  torch.Size([40, 331, 14])
Passage question vectors dim:  torch.Size([40, 331, 200])
Question Passage Similarity dim:  torch.Size([40, 331])
Question passage attention dim:  torch.Size([40, 331])
Final Merged Passage dim:  torch.Size([40, 331, 800])
Modeled Passage dim:  torch.Size([40, 331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 331, 1000])
Span start logits:  torch.Size([40, 331])
span start probs dim:  torch.Size([40, 331])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 331]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 562, 200])
Passage Length:  562
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 562, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 562, 14])
Passage ques attention dim:  torch.Size([40, 562, 14])
Passage question vectors dim:  torch.Size([40, 562, 200])
Question Passage Similarity dim:  torch.Size([40, 562])
Question passage attention dim:  torch.Size([40, 562])
Final Merged Passage dim:  torch.Size([40, 562, 800])
Modeled Passage dim:  torch.Size([40, 562, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 562, 1000])
Span start logits:  torch.Size([40, 562])
span start probs dim:  torch.Size([40, 562])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 562]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 657, 200])
Passage Length:  657
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 657, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 657, 13])
Passage ques attention dim:  torch.Size([40, 657, 13])
Passage question vectors dim:  torch.Size([40, 657, 200])
Question Passage Similarity dim:  torch.Size([40, 657])
Question passage attention dim:  torch.Size([40, 657])
Final Merged Passage dim:  torch.Size([40, 657, 800])
Modeled Passage dim:  torch.Size([40, 657, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 657, 1000])
Span start logits:  torch.Size([40, 657])
span start probs dim:  torch.Size([40, 657])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 657]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 2006, 200])
Passage Length:  2006
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 2006, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2006, 15])
Passage ques attention dim:  torch.Size([40, 2006, 15])
Passage question vectors dim:  torch.Size([40, 2006, 200])
Question Passage Similarity dim:  torch.Size([40, 2006])
Question passage attention dim:  torch.Size([40, 2006])
Final Merged Passage dim:  torch.Size([40, 2006, 800])
Modeled Passage dim:  torch.Size([40, 2006, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2006, 1000])
Span start logits:  torch.Size([40, 2006])
span start probs dim:  torch.Size([40, 2006])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2006]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 588, 18])
Passage ques attention dim:  torch.Size([40, 588, 18])
Passage question vectors dim:  torch.Size([40, 588, 200])
Question Passage Similarity dim:  torch.Size([40, 588])
Question passage attention dim:  torch.Size([40, 588])
Final Merged Passage dim:  torch.Size([40, 588, 800])
Modeled Passage dim:  torch.Size([40, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 588, 1000])
Span start logits:  torch.Size([40, 588])
span start probs dim:  torch.Size([40, 588])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 588]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1044, 200])
Passage Length:  1044
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1044, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1044, 15])
Passage ques attention dim:  torch.Size([40, 1044, 15])
Passage question vectors dim:  torch.Size([40, 1044, 200])
Question Passage Similarity dim:  torch.Size([40, 1044])
Question passage attention dim:  torch.Size([40, 1044])
Final Merged Passage dim:  torch.Size([40, 1044, 800])
Modeled Passage dim:  torch.Size([40, 1044, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1044, 1000])
Span start logits:  torch.Size([40, 1044])
span start probs dim:  torch.Size([40, 1044])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1044]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 782, 200])
Passage Length:  782
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 782, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 782, 12])
Passage ques attention dim:  torch.Size([40, 782, 12])
Passage question vectors dim:  torch.Size([40, 782, 200])
Question Passage Similarity dim:  torch.Size([40, 782])
Question passage attention dim:  torch.Size([40, 782])
Final Merged Passage dim:  torch.Size([40, 782, 800])
Modeled Passage dim:  torch.Size([40, 782, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 782, 1000])
Span start logits:  torch.Size([40, 782])
span start probs dim:  torch.Size([40, 782])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 782]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 562, 200])
Passage Length:  562
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 562, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 562, 17])
Passage ques attention dim:  torch.Size([40, 562, 17])
Passage question vectors dim:  torch.Size([40, 562, 200])
Question Passage Similarity dim:  torch.Size([40, 562])
Question passage attention dim:  torch.Size([40, 562])
Final Merged Passage dim:  torch.Size([40, 562, 800])
Modeled Passage dim:  torch.Size([40, 562, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 562, 1000])
Span start logits:  torch.Size([40, 562])
span start probs dim:  torch.Size([40, 562])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 562]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 514, 200])
Passage Length:  514
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 514, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 514, 11])
Passage ques attention dim:  torch.Size([40, 514, 11])
Passage question vectors dim:  torch.Size([40, 514, 200])
Question Passage Similarity dim:  torch.Size([40, 514])
Question passage attention dim:  torch.Size([40, 514])
Final Merged Passage dim:  torch.Size([40, 514, 800])
Modeled Passage dim:  torch.Size([40, 514, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 514, 1000])
Span start logits:  torch.Size([40, 514])
span start probs dim:  torch.Size([40, 514])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 514]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 930, 200])
Passage Length:  930
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 930, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 930, 13])
Passage ques attention dim:  torch.Size([40, 930, 13])
Passage question vectors dim:  torch.Size([40, 930, 200])
Question Passage Similarity dim:  torch.Size([40, 930])
Question passage attention dim:  torch.Size([40, 930])
Final Merged Passage dim:  torch.Size([40, 930, 800])
Modeled Passage dim:  torch.Size([40, 930, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 930, 1000])
Span start logits:  torch.Size([40, 930])
span start probs dim:  torch.Size([40, 930])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 930]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 412, 200])
Passage Length:  412
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 412, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 412, 15])
Passage ques attention dim:  torch.Size([40, 412, 15])
Passage question vectors dim:  torch.Size([40, 412, 200])
Question Passage Similarity dim:  torch.Size([40, 412])
Question passage attention dim:  torch.Size([40, 412])
Final Merged Passage dim:  torch.Size([40, 412, 800])
Modeled Passage dim:  torch.Size([40, 412, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 412, 1000])
Span start logits:  torch.Size([40, 412])
span start probs dim:  torch.Size([40, 412])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 412]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 173, 200])
Passage Length:  173
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 173, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 173, 16])
Passage ques attention dim:  torch.Size([40, 173, 16])
Passage question vectors dim:  torch.Size([40, 173, 200])
Question Passage Similarity dim:  torch.Size([40, 173])
Question passage attention dim:  torch.Size([40, 173])
Final Merged Passage dim:  torch.Size([40, 173, 800])
Modeled Passage dim:  torch.Size([40, 173, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 173, 1000])
Span start logits:  torch.Size([40, 173])
span start probs dim:  torch.Size([40, 173])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 173]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 283, 200])
Passage Length:  283
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 283, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 283, 12])
Passage ques attention dim:  torch.Size([40, 283, 12])
Passage question vectors dim:  torch.Size([40, 283, 200])
Question Passage Similarity dim:  torch.Size([40, 283])
Question passage attention dim:  torch.Size([40, 283])
Final Merged Passage dim:  torch.Size([40, 283, 800])
Modeled Passage dim:  torch.Size([40, 283, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 283, 1000])
Span start logits:  torch.Size([40, 283])
span start probs dim:  torch.Size([40, 283])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 283]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 946, 200])
Passage Length:  946
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 946, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 946, 17])
Passage ques attention dim:  torch.Size([40, 946, 17])
Passage question vectors dim:  torch.Size([40, 946, 200])
Question Passage Similarity dim:  torch.Size([40, 946])
Question passage attention dim:  torch.Size([40, 946])
Final Merged Passage dim:  torch.Size([40, 946, 800])
Modeled Passage dim:  torch.Size([40, 946, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 946, 1000])
Span start logits:  torch.Size([40, 946])
span start probs dim:  torch.Size([40, 946])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 946]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 986, 200])
Passage Length:  986
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 986, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 986, 15])
Passage ques attention dim:  torch.Size([40, 986, 15])
Passage question vectors dim:  torch.Size([40, 986, 200])
Question Passage Similarity dim:  torch.Size([40, 986])
Question passage attention dim:  torch.Size([40, 986])
Final Merged Passage dim:  torch.Size([40, 986, 800])
Modeled Passage dim:  torch.Size([40, 986, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 986, 1000])
Span start logits:  torch.Size([40, 986])
span start probs dim:  torch.Size([40, 986])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 986]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1262, 200])
Passage Length:  1262
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1262, 13])
Passage ques attention dim:  torch.Size([40, 1262, 13])
Passage question vectors dim:  torch.Size([40, 1262, 200])
Question Passage Similarity dim:  torch.Size([40, 1262])
Question passage attention dim:  torch.Size([40, 1262])
Final Merged Passage dim:  torch.Size([40, 1262, 800])
Modeled Passage dim:  torch.Size([40, 1262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1262, 1000])
Span start logits:  torch.Size([40, 1262])
span start probs dim:  torch.Size([40, 1262])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1262]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1231, 200])
Passage Length:  1231
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1231, 12])
Passage ques attention dim:  torch.Size([40, 1231, 12])
Passage question vectors dim:  torch.Size([40, 1231, 200])
Question Passage Similarity dim:  torch.Size([40, 1231])
Question passage attention dim:  torch.Size([40, 1231])
Final Merged Passage dim:  torch.Size([40, 1231, 800])
Modeled Passage dim:  torch.Size([40, 1231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1231, 1000])
Span start logits:  torch.Size([40, 1231])
span start probs dim:  torch.Size([40, 1231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1642, 200])
Passage Length:  1642
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1642, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1642, 17])
Passage ques attention dim:  torch.Size([40, 1642, 17])
Passage question vectors dim:  torch.Size([40, 1642, 200])
Question Passage Similarity dim:  torch.Size([40, 1642])
Question passage attention dim:  torch.Size([40, 1642])
Final Merged Passage dim:  torch.Size([40, 1642, 800])
Modeled Passage dim:  torch.Size([40, 1642, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1642, 1000])
Span start logits:  torch.Size([40, 1642])
span start probs dim:  torch.Size([40, 1642])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1642]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 961, 200])
Passage Length:  961
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 961, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 961, 15])
Passage ques attention dim:  torch.Size([40, 961, 15])
Passage question vectors dim:  torch.Size([40, 961, 200])
Question Passage Similarity dim:  torch.Size([40, 961])
Question passage attention dim:  torch.Size([40, 961])
Final Merged Passage dim:  torch.Size([40, 961, 800])
Modeled Passage dim:  torch.Size([40, 961, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 961, 1000])
Span start logits:  torch.Size([40, 961])
span start probs dim:  torch.Size([40, 961])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 961]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 353, 200])
Passage Length:  353
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 353, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 353, 13])
Passage ques attention dim:  torch.Size([40, 353, 13])
Passage question vectors dim:  torch.Size([40, 353, 200])
Question Passage Similarity dim:  torch.Size([40, 353])
Question passage attention dim:  torch.Size([40, 353])
Final Merged Passage dim:  torch.Size([40, 353, 800])
Modeled Passage dim:  torch.Size([40, 353, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 353, 1000])
Span start logits:  torch.Size([40, 353])
span start probs dim:  torch.Size([40, 353])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 353]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 886, 200])
Passage Length:  886
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 886, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 886, 14])
Passage ques attention dim:  torch.Size([40, 886, 14])
Passage question vectors dim:  torch.Size([40, 886, 200])
Question Passage Similarity dim:  torch.Size([40, 886])
Question passage attention dim:  torch.Size([40, 886])
Final Merged Passage dim:  torch.Size([40, 886, 800])
Modeled Passage dim:  torch.Size([40, 886, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 886, 1000])
Span start logits:  torch.Size([40, 886])
span start probs dim:  torch.Size([40, 886])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 886]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 663, 200])
Passage Length:  663
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 663, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 663, 16])
Passage ques attention dim:  torch.Size([40, 663, 16])
Passage question vectors dim:  torch.Size([40, 663, 200])
Question Passage Similarity dim:  torch.Size([40, 663])
Question passage attention dim:  torch.Size([40, 663])
Final Merged Passage dim:  torch.Size([40, 663, 800])
Modeled Passage dim:  torch.Size([40, 663, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 663, 1000])
Span start logits:  torch.Size([40, 663])
span start probs dim:  torch.Size([40, 663])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 663]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 339, 200])
Passage Length:  339
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 339, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 339, 15])
Passage ques attention dim:  torch.Size([40, 339, 15])
Passage question vectors dim:  torch.Size([40, 339, 200])
Question Passage Similarity dim:  torch.Size([40, 339])
Question passage attention dim:  torch.Size([40, 339])
Final Merged Passage dim:  torch.Size([40, 339, 800])
Modeled Passage dim:  torch.Size([40, 339, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 339, 1000])
Span start logits:  torch.Size([40, 339])
span start probs dim:  torch.Size([40, 339])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 339]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 793, 200])
Passage Length:  793
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 793, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 793, 15])
Passage ques attention dim:  torch.Size([40, 793, 15])
Passage question vectors dim:  torch.Size([40, 793, 200])
Question Passage Similarity dim:  torch.Size([40, 793])
Question passage attention dim:  torch.Size([40, 793])
Final Merged Passage dim:  torch.Size([40, 793, 800])
Modeled Passage dim:  torch.Size([40, 793, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 793, 1000])
Span start logits:  torch.Size([40, 793])
span start probs dim:  torch.Size([40, 793])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 793]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1367, 200])
Passage Length:  1367
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1367, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1367, 14])
Passage ques attention dim:  torch.Size([40, 1367, 14])
Passage question vectors dim:  torch.Size([40, 1367, 200])
Question Passage Similarity dim:  torch.Size([40, 1367])
Question passage attention dim:  torch.Size([40, 1367])
Final Merged Passage dim:  torch.Size([40, 1367, 800])
Modeled Passage dim:  torch.Size([40, 1367, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1367, 1000])
Span start logits:  torch.Size([40, 1367])
span start probs dim:  torch.Size([40, 1367])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1367]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1200, 200])
Passage Length:  1200
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1200, 15])
Passage ques attention dim:  torch.Size([40, 1200, 15])
Passage question vectors dim:  torch.Size([40, 1200, 200])
Question Passage Similarity dim:  torch.Size([40, 1200])
Question passage attention dim:  torch.Size([40, 1200])
Final Merged Passage dim:  torch.Size([40, 1200, 800])
Modeled Passage dim:  torch.Size([40, 1200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1200, 1000])
Span start logits:  torch.Size([40, 1200])
span start probs dim:  torch.Size([40, 1200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 856, 200])
Passage Length:  856
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 856, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 856, 19])
Passage ques attention dim:  torch.Size([40, 856, 19])
Passage question vectors dim:  torch.Size([40, 856, 200])
Question Passage Similarity dim:  torch.Size([40, 856])
Question passage attention dim:  torch.Size([40, 856])
Final Merged Passage dim:  torch.Size([40, 856, 800])
Modeled Passage dim:  torch.Size([40, 856, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 856, 1000])
Span start logits:  torch.Size([40, 856])
span start probs dim:  torch.Size([40, 856])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 856]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1496, 200])
Passage Length:  1496
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1496, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1496, 16])
Passage ques attention dim:  torch.Size([40, 1496, 16])
Passage question vectors dim:  torch.Size([40, 1496, 200])
Question Passage Similarity dim:  torch.Size([40, 1496])
Question passage attention dim:  torch.Size([40, 1496])
Final Merged Passage dim:  torch.Size([40, 1496, 800])
Modeled Passage dim:  torch.Size([40, 1496, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1496, 1000])
Span start logits:  torch.Size([40, 1496])
span start probs dim:  torch.Size([40, 1496])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1496]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 698, 200])
Passage Length:  698
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 698, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 698, 18])
Passage ques attention dim:  torch.Size([40, 698, 18])
Passage question vectors dim:  torch.Size([40, 698, 200])
Question Passage Similarity dim:  torch.Size([40, 698])
Question passage attention dim:  torch.Size([40, 698])
Final Merged Passage dim:  torch.Size([40, 698, 800])
Modeled Passage dim:  torch.Size([40, 698, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 698, 1000])
Span start logits:  torch.Size([40, 698])
span start probs dim:  torch.Size([40, 698])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 698]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 243, 13])
Passage ques attention dim:  torch.Size([40, 243, 13])
Passage question vectors dim:  torch.Size([40, 243, 200])
Question Passage Similarity dim:  torch.Size([40, 243])
Question passage attention dim:  torch.Size([40, 243])
Final Merged Passage dim:  torch.Size([40, 243, 800])
Modeled Passage dim:  torch.Size([40, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 243, 1000])
Span start logits:  torch.Size([40, 243])
span start probs dim:  torch.Size([40, 243])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 243]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 608, 200])
Passage Length:  608
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 608, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 608, 13])
Passage ques attention dim:  torch.Size([40, 608, 13])
Passage question vectors dim:  torch.Size([40, 608, 200])
Question Passage Similarity dim:  torch.Size([40, 608])
Question passage attention dim:  torch.Size([40, 608])
Final Merged Passage dim:  torch.Size([40, 608, 800])
Modeled Passage dim:  torch.Size([40, 608, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 608, 1000])
Span start logits:  torch.Size([40, 608])
span start probs dim:  torch.Size([40, 608])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 608]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1045, 200])
Passage Length:  1045
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1045, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1045, 19])
Passage ques attention dim:  torch.Size([40, 1045, 19])
Passage question vectors dim:  torch.Size([40, 1045, 200])
Question Passage Similarity dim:  torch.Size([40, 1045])
Question passage attention dim:  torch.Size([40, 1045])
Final Merged Passage dim:  torch.Size([40, 1045, 800])
Modeled Passage dim:  torch.Size([40, 1045, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1045, 1000])
Span start logits:  torch.Size([40, 1045])
span start probs dim:  torch.Size([40, 1045])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1045]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 724, 16])
Passage ques attention dim:  torch.Size([40, 724, 16])
Passage question vectors dim:  torch.Size([40, 724, 200])
Question Passage Similarity dim:  torch.Size([40, 724])
Question passage attention dim:  torch.Size([40, 724])
Final Merged Passage dim:  torch.Size([40, 724, 800])
Modeled Passage dim:  torch.Size([40, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 724, 1000])
Span start logits:  torch.Size([40, 724])
span start probs dim:  torch.Size([40, 724])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 724]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1028, 200])
Passage Length:  1028
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1028, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1028, 13])
Passage ques attention dim:  torch.Size([40, 1028, 13])
Passage question vectors dim:  torch.Size([40, 1028, 200])
Question Passage Similarity dim:  torch.Size([40, 1028])
Question passage attention dim:  torch.Size([40, 1028])
Final Merged Passage dim:  torch.Size([40, 1028, 800])
Modeled Passage dim:  torch.Size([40, 1028, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1028, 1000])
Span start logits:  torch.Size([40, 1028])
span start probs dim:  torch.Size([40, 1028])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1028]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 908, 200])
Passage Length:  908
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 908, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 908, 12])
Passage ques attention dim:  torch.Size([40, 908, 12])
Passage question vectors dim:  torch.Size([40, 908, 200])
Question Passage Similarity dim:  torch.Size([40, 908])
Question passage attention dim:  torch.Size([40, 908])
Final Merged Passage dim:  torch.Size([40, 908, 800])
Modeled Passage dim:  torch.Size([40, 908, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 908, 1000])
Span start logits:  torch.Size([40, 908])
span start probs dim:  torch.Size([40, 908])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 908]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 323, 200])
Passage Length:  323
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 323, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 323, 11])
Passage ques attention dim:  torch.Size([40, 323, 11])
Passage question vectors dim:  torch.Size([40, 323, 200])
Question Passage Similarity dim:  torch.Size([40, 323])
Question passage attention dim:  torch.Size([40, 323])
Final Merged Passage dim:  torch.Size([40, 323, 800])
Modeled Passage dim:  torch.Size([40, 323, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 323, 1000])
Span start logits:  torch.Size([40, 323])
span start probs dim:  torch.Size([40, 323])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 323]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 2096, 200])
Passage Length:  2096
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 2096, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2096, 15])
Passage ques attention dim:  torch.Size([40, 2096, 15])
Passage question vectors dim:  torch.Size([40, 2096, 200])
Question Passage Similarity dim:  torch.Size([40, 2096])
Question passage attention dim:  torch.Size([40, 2096])
Final Merged Passage dim:  torch.Size([40, 2096, 800])
Modeled Passage dim:  torch.Size([40, 2096, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2096, 1000])
Span start logits:  torch.Size([40, 2096])
span start probs dim:  torch.Size([40, 2096])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2096]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 732, 200])
Passage Length:  732
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 732, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 732, 14])
Passage ques attention dim:  torch.Size([40, 732, 14])
Passage question vectors dim:  torch.Size([40, 732, 200])
Question Passage Similarity dim:  torch.Size([40, 732])
Question passage attention dim:  torch.Size([40, 732])
Final Merged Passage dim:  torch.Size([40, 732, 800])
Modeled Passage dim:  torch.Size([40, 732, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 732, 1000])
Span start logits:  torch.Size([40, 732])
span start probs dim:  torch.Size([40, 732])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 732]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1538, 200])
Passage Length:  1538
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1538, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1538, 13])
Passage ques attention dim:  torch.Size([40, 1538, 13])
Passage question vectors dim:  torch.Size([40, 1538, 200])
Question Passage Similarity dim:  torch.Size([40, 1538])
Question passage attention dim:  torch.Size([40, 1538])
Final Merged Passage dim:  torch.Size([40, 1538, 800])
Modeled Passage dim:  torch.Size([40, 1538, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1538, 1000])
Span start logits:  torch.Size([40, 1538])
span start probs dim:  torch.Size([40, 1538])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1538]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 170, 200])
Passage Length:  170
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 170, 11])
Passage ques attention dim:  torch.Size([40, 170, 11])
Passage question vectors dim:  torch.Size([40, 170, 200])
Question Passage Similarity dim:  torch.Size([40, 170])
Question passage attention dim:  torch.Size([40, 170])
Final Merged Passage dim:  torch.Size([40, 170, 800])
Modeled Passage dim:  torch.Size([40, 170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 170, 1000])
Span start logits:  torch.Size([40, 170])
span start probs dim:  torch.Size([40, 170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 554, 200])
Passage Length:  554
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 554, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 554, 16])
Passage ques attention dim:  torch.Size([40, 554, 16])
Passage question vectors dim:  torch.Size([40, 554, 200])
Question Passage Similarity dim:  torch.Size([40, 554])
Question passage attention dim:  torch.Size([40, 554])
Final Merged Passage dim:  torch.Size([40, 554, 800])
Modeled Passage dim:  torch.Size([40, 554, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 554, 1000])
Span start logits:  torch.Size([40, 554])
span start probs dim:  torch.Size([40, 554])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 554]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 322, 200])
Passage Length:  322
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 322, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 322, 20])
Passage ques attention dim:  torch.Size([40, 322, 20])
Passage question vectors dim:  torch.Size([40, 322, 200])
Question Passage Similarity dim:  torch.Size([40, 322])
Question passage attention dim:  torch.Size([40, 322])
Final Merged Passage dim:  torch.Size([40, 322, 800])
Modeled Passage dim:  torch.Size([40, 322, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 322, 1000])
Span start logits:  torch.Size([40, 322])
span start probs dim:  torch.Size([40, 322])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 322]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1090, 200])
Passage Length:  1090
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1090, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1090, 16])
Passage ques attention dim:  torch.Size([40, 1090, 16])
Passage question vectors dim:  torch.Size([40, 1090, 200])
Question Passage Similarity dim:  torch.Size([40, 1090])
Question passage attention dim:  torch.Size([40, 1090])
Final Merged Passage dim:  torch.Size([40, 1090, 800])
Modeled Passage dim:  torch.Size([40, 1090, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1090, 1000])
Span start logits:  torch.Size([40, 1090])
span start probs dim:  torch.Size([40, 1090])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1090]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 44, 200])
Embedded passage dim:  torch.Size([40, 310, 200])
Passage Length:  310
Encoded question dim:  torch.Size([40, 44, 200])
Encoded passage dim:  torch.Size([40, 310, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 310, 44])
Passage ques attention dim:  torch.Size([40, 310, 44])
Passage question vectors dim:  torch.Size([40, 310, 200])
Question Passage Similarity dim:  torch.Size([40, 310])
Question passage attention dim:  torch.Size([40, 310])
Final Merged Passage dim:  torch.Size([40, 310, 800])
Modeled Passage dim:  torch.Size([40, 310, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 310, 1000])
Span start logits:  torch.Size([40, 310])
span start probs dim:  torch.Size([40, 310])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 310]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 677, 200])
Passage Length:  677
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 677, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 677, 11])
Passage ques attention dim:  torch.Size([40, 677, 11])
Passage question vectors dim:  torch.Size([40, 677, 200])
Question Passage Similarity dim:  torch.Size([40, 677])
Question passage attention dim:  torch.Size([40, 677])
Final Merged Passage dim:  torch.Size([40, 677, 800])
Modeled Passage dim:  torch.Size([40, 677, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 677, 1000])
Span start logits:  torch.Size([40, 677])
span start probs dim:  torch.Size([40, 677])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 677]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1490, 200])
Passage Length:  1490
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1490, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1490, 19])
Passage ques attention dim:  torch.Size([40, 1490, 19])
Passage question vectors dim:  torch.Size([40, 1490, 200])
Question Passage Similarity dim:  torch.Size([40, 1490])
Question passage attention dim:  torch.Size([40, 1490])
Final Merged Passage dim:  torch.Size([40, 1490, 800])
Modeled Passage dim:  torch.Size([40, 1490, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1490, 1000])
Span start logits:  torch.Size([40, 1490])
span start probs dim:  torch.Size([40, 1490])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1490]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 25, 200])
Embedded passage dim:  torch.Size([40, 787, 200])
Passage Length:  787
Encoded question dim:  torch.Size([40, 25, 200])
Encoded passage dim:  torch.Size([40, 787, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 787, 25])
Passage ques attention dim:  torch.Size([40, 787, 25])
Passage question vectors dim:  torch.Size([40, 787, 200])
Question Passage Similarity dim:  torch.Size([40, 787])
Question passage attention dim:  torch.Size([40, 787])
Final Merged Passage dim:  torch.Size([40, 787, 800])
Modeled Passage dim:  torch.Size([40, 787, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 787, 1000])
Span start logits:  torch.Size([40, 787])
span start probs dim:  torch.Size([40, 787])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 787]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 953, 200])
Passage Length:  953
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 953, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 953, 12])
Passage ques attention dim:  torch.Size([40, 953, 12])
Passage question vectors dim:  torch.Size([40, 953, 200])
Question Passage Similarity dim:  torch.Size([40, 953])
Question passage attention dim:  torch.Size([40, 953])
Final Merged Passage dim:  torch.Size([40, 953, 800])
Modeled Passage dim:  torch.Size([40, 953, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 953, 1000])
Span start logits:  torch.Size([40, 953])
span start probs dim:  torch.Size([40, 953])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 953]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 318, 200])
Passage Length:  318
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 318, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 318, 16])
Passage ques attention dim:  torch.Size([40, 318, 16])
Passage question vectors dim:  torch.Size([40, 318, 200])
Question Passage Similarity dim:  torch.Size([40, 318])
Question passage attention dim:  torch.Size([40, 318])
Final Merged Passage dim:  torch.Size([40, 318, 800])
Modeled Passage dim:  torch.Size([40, 318, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 318, 1000])
Span start logits:  torch.Size([40, 318])
span start probs dim:  torch.Size([40, 318])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 318]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1403, 200])
Passage Length:  1403
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1403, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1403, 14])
Passage ques attention dim:  torch.Size([40, 1403, 14])
Passage question vectors dim:  torch.Size([40, 1403, 200])
Question Passage Similarity dim:  torch.Size([40, 1403])
Question passage attention dim:  torch.Size([40, 1403])
Final Merged Passage dim:  torch.Size([40, 1403, 800])
Modeled Passage dim:  torch.Size([40, 1403, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1403, 1000])
Span start logits:  torch.Size([40, 1403])
span start probs dim:  torch.Size([40, 1403])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1403]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 904, 200])
Passage Length:  904
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 904, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 904, 11])
Passage ques attention dim:  torch.Size([40, 904, 11])
Passage question vectors dim:  torch.Size([40, 904, 200])
Question Passage Similarity dim:  torch.Size([40, 904])
Question passage attention dim:  torch.Size([40, 904])
Final Merged Passage dim:  torch.Size([40, 904, 800])
Modeled Passage dim:  torch.Size([40, 904, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 904, 1000])
Span start logits:  torch.Size([40, 904])
span start probs dim:  torch.Size([40, 904])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 904]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 612, 200])
Passage Length:  612
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 612, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 612, 15])
Passage ques attention dim:  torch.Size([40, 612, 15])
Passage question vectors dim:  torch.Size([40, 612, 200])
Question Passage Similarity dim:  torch.Size([40, 612])
Question passage attention dim:  torch.Size([40, 612])
Final Merged Passage dim:  torch.Size([40, 612, 800])
Modeled Passage dim:  torch.Size([40, 612, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 612, 1000])
Span start logits:  torch.Size([40, 612])
span start probs dim:  torch.Size([40, 612])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 612]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 793, 200])
Passage Length:  793
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 793, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 793, 14])
Passage ques attention dim:  torch.Size([40, 793, 14])
Passage question vectors dim:  torch.Size([40, 793, 200])
Question Passage Similarity dim:  torch.Size([40, 793])
Question passage attention dim:  torch.Size([40, 793])
Final Merged Passage dim:  torch.Size([40, 793, 800])
Modeled Passage dim:  torch.Size([40, 793, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 793, 1000])
Span start logits:  torch.Size([40, 793])
span start probs dim:  torch.Size([40, 793])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 793]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 866, 200])
Passage Length:  866
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 866, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 866, 15])
Passage ques attention dim:  torch.Size([40, 866, 15])
Passage question vectors dim:  torch.Size([40, 866, 200])
Question Passage Similarity dim:  torch.Size([40, 866])
Question passage attention dim:  torch.Size([40, 866])
Final Merged Passage dim:  torch.Size([40, 866, 800])
Modeled Passage dim:  torch.Size([40, 866, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 866, 1000])
Span start logits:  torch.Size([40, 866])
span start probs dim:  torch.Size([40, 866])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 866]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1091, 200])
Passage Length:  1091
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1091, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1091, 15])
Passage ques attention dim:  torch.Size([40, 1091, 15])
Passage question vectors dim:  torch.Size([40, 1091, 200])
Question Passage Similarity dim:  torch.Size([40, 1091])
Question passage attention dim:  torch.Size([40, 1091])
Final Merged Passage dim:  torch.Size([40, 1091, 800])
Modeled Passage dim:  torch.Size([40, 1091, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1091, 1000])
Span start logits:  torch.Size([40, 1091])
span start probs dim:  torch.Size([40, 1091])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1091]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 697, 200])
Passage Length:  697
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 697, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 697, 20])
Passage ques attention dim:  torch.Size([40, 697, 20])
Passage question vectors dim:  torch.Size([40, 697, 200])
Question Passage Similarity dim:  torch.Size([40, 697])
Question passage attention dim:  torch.Size([40, 697])
Final Merged Passage dim:  torch.Size([40, 697, 800])
Modeled Passage dim:  torch.Size([40, 697, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 697, 1000])
Span start logits:  torch.Size([40, 697])
span start probs dim:  torch.Size([40, 697])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 697]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 404, 200])
Passage Length:  404
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 404, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 404, 18])
Passage ques attention dim:  torch.Size([40, 404, 18])
Passage question vectors dim:  torch.Size([40, 404, 200])
Question Passage Similarity dim:  torch.Size([40, 404])
Question passage attention dim:  torch.Size([40, 404])
Final Merged Passage dim:  torch.Size([40, 404, 800])
Modeled Passage dim:  torch.Size([40, 404, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 404, 1000])
Span start logits:  torch.Size([40, 404])
span start probs dim:  torch.Size([40, 404])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 404]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 334, 200])
Passage Length:  334
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 334, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 334, 20])
Passage ques attention dim:  torch.Size([40, 334, 20])
Passage question vectors dim:  torch.Size([40, 334, 200])
Question Passage Similarity dim:  torch.Size([40, 334])
Question passage attention dim:  torch.Size([40, 334])
Final Merged Passage dim:  torch.Size([40, 334, 800])
Modeled Passage dim:  torch.Size([40, 334, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 334, 1000])
Span start logits:  torch.Size([40, 334])
span start probs dim:  torch.Size([40, 334])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 334]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 445, 200])
Passage Length:  445
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 445, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 445, 13])
Passage ques attention dim:  torch.Size([40, 445, 13])
Passage question vectors dim:  torch.Size([40, 445, 200])
Question Passage Similarity dim:  torch.Size([40, 445])
Question passage attention dim:  torch.Size([40, 445])
Final Merged Passage dim:  torch.Size([40, 445, 800])
Modeled Passage dim:  torch.Size([40, 445, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 445, 1000])
Span start logits:  torch.Size([40, 445])
span start probs dim:  torch.Size([40, 445])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 445]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 430, 200])
Passage Length:  430
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 430, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 430, 12])
Passage ques attention dim:  torch.Size([40, 430, 12])
Passage question vectors dim:  torch.Size([40, 430, 200])
Question Passage Similarity dim:  torch.Size([40, 430])
Question passage attention dim:  torch.Size([40, 430])
Final Merged Passage dim:  torch.Size([40, 430, 800])
Modeled Passage dim:  torch.Size([40, 430, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 430, 1000])
Span start logits:  torch.Size([40, 430])
span start probs dim:  torch.Size([40, 430])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 430]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1072, 200])
Passage Length:  1072
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1072, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1072, 13])
Passage ques attention dim:  torch.Size([40, 1072, 13])
Passage question vectors dim:  torch.Size([40, 1072, 200])
Question Passage Similarity dim:  torch.Size([40, 1072])
Question passage attention dim:  torch.Size([40, 1072])
Final Merged Passage dim:  torch.Size([40, 1072, 800])
Modeled Passage dim:  torch.Size([40, 1072, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1072, 1000])
Span start logits:  torch.Size([40, 1072])
span start probs dim:  torch.Size([40, 1072])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1072]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 424, 200])
Passage Length:  424
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 424, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 424, 14])
Passage ques attention dim:  torch.Size([40, 424, 14])
Passage question vectors dim:  torch.Size([40, 424, 200])
Question Passage Similarity dim:  torch.Size([40, 424])
Question passage attention dim:  torch.Size([40, 424])
Final Merged Passage dim:  torch.Size([40, 424, 800])
Modeled Passage dim:  torch.Size([40, 424, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 424, 1000])
Span start logits:  torch.Size([40, 424])
span start probs dim:  torch.Size([40, 424])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 424]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1046, 200])
Passage Length:  1046
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1046, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1046, 18])
Passage ques attention dim:  torch.Size([40, 1046, 18])
Passage question vectors dim:  torch.Size([40, 1046, 200])
Question Passage Similarity dim:  torch.Size([40, 1046])
Question passage attention dim:  torch.Size([40, 1046])
Final Merged Passage dim:  torch.Size([40, 1046, 800])
Modeled Passage dim:  torch.Size([40, 1046, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1046, 1000])
Span start logits:  torch.Size([40, 1046])
span start probs dim:  torch.Size([40, 1046])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1046]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 215, 200])
Passage Length:  215
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 215, 15])
Passage ques attention dim:  torch.Size([40, 215, 15])
Passage question vectors dim:  torch.Size([40, 215, 200])
Question Passage Similarity dim:  torch.Size([40, 215])
Question passage attention dim:  torch.Size([40, 215])
Final Merged Passage dim:  torch.Size([40, 215, 800])
Modeled Passage dim:  torch.Size([40, 215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 215, 1000])
Span start logits:  torch.Size([40, 215])
span start probs dim:  torch.Size([40, 215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 711, 200])
Passage Length:  711
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 711, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 711, 15])
Passage ques attention dim:  torch.Size([40, 711, 15])
Passage question vectors dim:  torch.Size([40, 711, 200])
Question Passage Similarity dim:  torch.Size([40, 711])
Question passage attention dim:  torch.Size([40, 711])
Final Merged Passage dim:  torch.Size([40, 711, 800])
Modeled Passage dim:  torch.Size([40, 711, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 711, 1000])
Span start logits:  torch.Size([40, 711])
span start probs dim:  torch.Size([40, 711])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 711]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 303, 200])
Passage Length:  303
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 303, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 303, 22])
Passage ques attention dim:  torch.Size([40, 303, 22])
Passage question vectors dim:  torch.Size([40, 303, 200])
Question Passage Similarity dim:  torch.Size([40, 303])
Question passage attention dim:  torch.Size([40, 303])
Final Merged Passage dim:  torch.Size([40, 303, 800])
Modeled Passage dim:  torch.Size([40, 303, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 303, 1000])
Span start logits:  torch.Size([40, 303])
span start probs dim:  torch.Size([40, 303])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 303]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1113, 200])
Passage Length:  1113
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1113, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1113, 17])
Passage ques attention dim:  torch.Size([40, 1113, 17])
Passage question vectors dim:  torch.Size([40, 1113, 200])
Question Passage Similarity dim:  torch.Size([40, 1113])
Question passage attention dim:  torch.Size([40, 1113])
Final Merged Passage dim:  torch.Size([40, 1113, 800])
Modeled Passage dim:  torch.Size([40, 1113, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1113, 1000])
Span start logits:  torch.Size([40, 1113])
span start probs dim:  torch.Size([40, 1113])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1113]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1648, 200])
Passage Length:  1648
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1648, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1648, 14])
Passage ques attention dim:  torch.Size([40, 1648, 14])
Passage question vectors dim:  torch.Size([40, 1648, 200])
Question Passage Similarity dim:  torch.Size([40, 1648])
Question passage attention dim:  torch.Size([40, 1648])
Final Merged Passage dim:  torch.Size([40, 1648, 800])
Modeled Passage dim:  torch.Size([40, 1648, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1648, 1000])
Span start logits:  torch.Size([40, 1648])
span start probs dim:  torch.Size([40, 1648])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1648]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1133, 200])
Passage Length:  1133
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1133, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1133, 15])
Passage ques attention dim:  torch.Size([40, 1133, 15])
Passage question vectors dim:  torch.Size([40, 1133, 200])
Question Passage Similarity dim:  torch.Size([40, 1133])
Question passage attention dim:  torch.Size([40, 1133])
Final Merged Passage dim:  torch.Size([40, 1133, 800])
Modeled Passage dim:  torch.Size([40, 1133, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1133, 1000])
Span start logits:  torch.Size([40, 1133])
span start probs dim:  torch.Size([40, 1133])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1133]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 701, 200])
Passage Length:  701
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 701, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 701, 13])
Passage ques attention dim:  torch.Size([40, 701, 13])
Passage question vectors dim:  torch.Size([40, 701, 200])
Question Passage Similarity dim:  torch.Size([40, 701])
Question passage attention dim:  torch.Size([40, 701])
Final Merged Passage dim:  torch.Size([40, 701, 800])
Modeled Passage dim:  torch.Size([40, 701, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 701, 1000])
Span start logits:  torch.Size([40, 701])
span start probs dim:  torch.Size([40, 701])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 701]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1149, 200])
Passage Length:  1149
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1149, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1149, 12])
Passage ques attention dim:  torch.Size([40, 1149, 12])
Passage question vectors dim:  torch.Size([40, 1149, 200])
Question Passage Similarity dim:  torch.Size([40, 1149])
Question passage attention dim:  torch.Size([40, 1149])
Final Merged Passage dim:  torch.Size([40, 1149, 800])
Modeled Passage dim:  torch.Size([40, 1149, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1149, 1000])
Span start logits:  torch.Size([40, 1149])
span start probs dim:  torch.Size([40, 1149])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1149]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 955, 200])
Passage Length:  955
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 955, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 955, 15])
Passage ques attention dim:  torch.Size([40, 955, 15])
Passage question vectors dim:  torch.Size([40, 955, 200])
Question Passage Similarity dim:  torch.Size([40, 955])
Question passage attention dim:  torch.Size([40, 955])
Final Merged Passage dim:  torch.Size([40, 955, 800])
Modeled Passage dim:  torch.Size([40, 955, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 955, 1000])
Span start logits:  torch.Size([40, 955])
span start probs dim:  torch.Size([40, 955])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 955]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 778, 200])
Passage Length:  778
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 778, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 778, 13])
Passage ques attention dim:  torch.Size([40, 778, 13])
Passage question vectors dim:  torch.Size([40, 778, 200])
Question Passage Similarity dim:  torch.Size([40, 778])
Question passage attention dim:  torch.Size([40, 778])
Final Merged Passage dim:  torch.Size([40, 778, 800])
Modeled Passage dim:  torch.Size([40, 778, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 778, 1000])
Span start logits:  torch.Size([40, 778])
span start probs dim:  torch.Size([40, 778])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 778]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 725, 200])
Passage Length:  725
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 725, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 725, 15])
Passage ques attention dim:  torch.Size([40, 725, 15])
Passage question vectors dim:  torch.Size([40, 725, 200])
Question Passage Similarity dim:  torch.Size([40, 725])
Question passage attention dim:  torch.Size([40, 725])
Final Merged Passage dim:  torch.Size([40, 725, 800])
Modeled Passage dim:  torch.Size([40, 725, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 725, 1000])
Span start logits:  torch.Size([40, 725])
span start probs dim:  torch.Size([40, 725])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 725]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1132, 200])
Passage Length:  1132
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1132, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1132, 14])
Passage ques attention dim:  torch.Size([40, 1132, 14])
Passage question vectors dim:  torch.Size([40, 1132, 200])
Question Passage Similarity dim:  torch.Size([40, 1132])
Question passage attention dim:  torch.Size([40, 1132])
Final Merged Passage dim:  torch.Size([40, 1132, 800])
Modeled Passage dim:  torch.Size([40, 1132, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1132, 1000])
Span start logits:  torch.Size([40, 1132])
span start probs dim:  torch.Size([40, 1132])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1132]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 342, 200])
Passage Length:  342
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 342, 15])
Passage ques attention dim:  torch.Size([40, 342, 15])
Passage question vectors dim:  torch.Size([40, 342, 200])
Question Passage Similarity dim:  torch.Size([40, 342])
Question passage attention dim:  torch.Size([40, 342])
Final Merged Passage dim:  torch.Size([40, 342, 800])
Modeled Passage dim:  torch.Size([40, 342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 342, 1000])
Span start logits:  torch.Size([40, 342])
span start probs dim:  torch.Size([40, 342])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 342]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 317, 200])
Passage Length:  317
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 317, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 317, 14])
Passage ques attention dim:  torch.Size([40, 317, 14])
Passage question vectors dim:  torch.Size([40, 317, 200])
Question Passage Similarity dim:  torch.Size([40, 317])
Question passage attention dim:  torch.Size([40, 317])
Final Merged Passage dim:  torch.Size([40, 317, 800])
Modeled Passage dim:  torch.Size([40, 317, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 317, 1000])
Span start logits:  torch.Size([40, 317])
span start probs dim:  torch.Size([40, 317])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 317]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 855, 200])
Passage Length:  855
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 855, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 855, 15])
Passage ques attention dim:  torch.Size([40, 855, 15])
Passage question vectors dim:  torch.Size([40, 855, 200])
Question Passage Similarity dim:  torch.Size([40, 855])
Question passage attention dim:  torch.Size([40, 855])
Final Merged Passage dim:  torch.Size([40, 855, 800])
Modeled Passage dim:  torch.Size([40, 855, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 855, 1000])
Span start logits:  torch.Size([40, 855])
span start probs dim:  torch.Size([40, 855])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 855]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 433, 200])
Passage Length:  433
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 433, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 433, 14])
Passage ques attention dim:  torch.Size([40, 433, 14])
Passage question vectors dim:  torch.Size([40, 433, 200])
Question Passage Similarity dim:  torch.Size([40, 433])
Question passage attention dim:  torch.Size([40, 433])
Final Merged Passage dim:  torch.Size([40, 433, 800])
Modeled Passage dim:  torch.Size([40, 433, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 433, 1000])
Span start logits:  torch.Size([40, 433])
span start probs dim:  torch.Size([40, 433])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 433]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 400, 200])
Passage Length:  400
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 400, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 400, 18])
Passage ques attention dim:  torch.Size([40, 400, 18])
Passage question vectors dim:  torch.Size([40, 400, 200])
Question Passage Similarity dim:  torch.Size([40, 400])
Question passage attention dim:  torch.Size([40, 400])
Final Merged Passage dim:  torch.Size([40, 400, 800])
Modeled Passage dim:  torch.Size([40, 400, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 400, 1000])
Span start logits:  torch.Size([40, 400])
span start probs dim:  torch.Size([40, 400])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 400]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 939, 200])
Passage Length:  939
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 939, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 939, 14])
Passage ques attention dim:  torch.Size([40, 939, 14])
Passage question vectors dim:  torch.Size([40, 939, 200])
Question Passage Similarity dim:  torch.Size([40, 939])
Question passage attention dim:  torch.Size([40, 939])
Final Merged Passage dim:  torch.Size([40, 939, 800])
Modeled Passage dim:  torch.Size([40, 939, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 939, 1000])
Span start logits:  torch.Size([40, 939])
span start probs dim:  torch.Size([40, 939])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 939]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 628, 200])
Passage Length:  628
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 628, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 628, 18])
Passage ques attention dim:  torch.Size([40, 628, 18])
Passage question vectors dim:  torch.Size([40, 628, 200])
Question Passage Similarity dim:  torch.Size([40, 628])
Question passage attention dim:  torch.Size([40, 628])
Final Merged Passage dim:  torch.Size([40, 628, 800])
Modeled Passage dim:  torch.Size([40, 628, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 628, 1000])
Span start logits:  torch.Size([40, 628])
span start probs dim:  torch.Size([40, 628])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 628]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 676, 200])
Passage Length:  676
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 676, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 676, 16])
Passage ques attention dim:  torch.Size([40, 676, 16])
Passage question vectors dim:  torch.Size([40, 676, 200])
Question Passage Similarity dim:  torch.Size([40, 676])
Question passage attention dim:  torch.Size([40, 676])
Final Merged Passage dim:  torch.Size([40, 676, 800])
Modeled Passage dim:  torch.Size([40, 676, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 676, 1000])
Span start logits:  torch.Size([40, 676])
span start probs dim:  torch.Size([40, 676])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 676]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1429, 200])
Passage Length:  1429
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1429, 14])
Passage ques attention dim:  torch.Size([40, 1429, 14])
Passage question vectors dim:  torch.Size([40, 1429, 200])
Question Passage Similarity dim:  torch.Size([40, 1429])
Question passage attention dim:  torch.Size([40, 1429])
Final Merged Passage dim:  torch.Size([40, 1429, 800])
Modeled Passage dim:  torch.Size([40, 1429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1429, 1000])
Span start logits:  torch.Size([40, 1429])
span start probs dim:  torch.Size([40, 1429])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1429]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 759, 200])
Passage Length:  759
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 759, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 759, 14])
Passage ques attention dim:  torch.Size([40, 759, 14])
Passage question vectors dim:  torch.Size([40, 759, 200])
Question Passage Similarity dim:  torch.Size([40, 759])
Question passage attention dim:  torch.Size([40, 759])
Final Merged Passage dim:  torch.Size([40, 759, 800])
Modeled Passage dim:  torch.Size([40, 759, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 759, 1000])
Span start logits:  torch.Size([40, 759])
span start probs dim:  torch.Size([40, 759])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 759]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 859, 200])
Passage Length:  859
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 859, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 859, 13])
Passage ques attention dim:  torch.Size([40, 859, 13])
Passage question vectors dim:  torch.Size([40, 859, 200])
Question Passage Similarity dim:  torch.Size([40, 859])
Question passage attention dim:  torch.Size([40, 859])
Final Merged Passage dim:  torch.Size([40, 859, 800])
Modeled Passage dim:  torch.Size([40, 859, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 859, 1000])
Span start logits:  torch.Size([40, 859])
span start probs dim:  torch.Size([40, 859])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 859]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 758, 200])
Passage Length:  758
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 758, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 758, 17])
Passage ques attention dim:  torch.Size([40, 758, 17])
Passage question vectors dim:  torch.Size([40, 758, 200])
Question Passage Similarity dim:  torch.Size([40, 758])
Question passage attention dim:  torch.Size([40, 758])
Final Merged Passage dim:  torch.Size([40, 758, 800])
Modeled Passage dim:  torch.Size([40, 758, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 758, 1000])
Span start logits:  torch.Size([40, 758])
span start probs dim:  torch.Size([40, 758])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 758]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 750, 200])
Passage Length:  750
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 750, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 750, 11])
Passage ques attention dim:  torch.Size([40, 750, 11])
Passage question vectors dim:  torch.Size([40, 750, 200])
Question Passage Similarity dim:  torch.Size([40, 750])
Question passage attention dim:  torch.Size([40, 750])
Final Merged Passage dim:  torch.Size([40, 750, 800])
Modeled Passage dim:  torch.Size([40, 750, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 750, 1000])
Span start logits:  torch.Size([40, 750])
span start probs dim:  torch.Size([40, 750])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 750]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 956, 200])
Passage Length:  956
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 956, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 956, 14])
Passage ques attention dim:  torch.Size([40, 956, 14])
Passage question vectors dim:  torch.Size([40, 956, 200])
Question Passage Similarity dim:  torch.Size([40, 956])
Question passage attention dim:  torch.Size([40, 956])
Final Merged Passage dim:  torch.Size([40, 956, 800])
Modeled Passage dim:  torch.Size([40, 956, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 956, 1000])
Span start logits:  torch.Size([40, 956])
span start probs dim:  torch.Size([40, 956])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 956]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 377, 200])
Passage Length:  377
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 377, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 377, 13])
Passage ques attention dim:  torch.Size([40, 377, 13])
Passage question vectors dim:  torch.Size([40, 377, 200])
Question Passage Similarity dim:  torch.Size([40, 377])
Question passage attention dim:  torch.Size([40, 377])
Final Merged Passage dim:  torch.Size([40, 377, 800])
Modeled Passage dim:  torch.Size([40, 377, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 377, 1000])
Span start logits:  torch.Size([40, 377])
span start probs dim:  torch.Size([40, 377])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 377]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 1253, 200])
Passage Length:  1253
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 1253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1253, 21])
Passage ques attention dim:  torch.Size([40, 1253, 21])
Passage question vectors dim:  torch.Size([40, 1253, 200])
Question Passage Similarity dim:  torch.Size([40, 1253])
Question passage attention dim:  torch.Size([40, 1253])
Final Merged Passage dim:  torch.Size([40, 1253, 800])
Modeled Passage dim:  torch.Size([40, 1253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1253, 1000])
Span start logits:  torch.Size([40, 1253])
span start probs dim:  torch.Size([40, 1253])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1253]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1538, 200])
Passage Length:  1538
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1538, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1538, 17])
Passage ques attention dim:  torch.Size([40, 1538, 17])
Passage question vectors dim:  torch.Size([40, 1538, 200])
Question Passage Similarity dim:  torch.Size([40, 1538])
Question passage attention dim:  torch.Size([40, 1538])
Final Merged Passage dim:  torch.Size([40, 1538, 800])
Modeled Passage dim:  torch.Size([40, 1538, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1538, 1000])
Span start logits:  torch.Size([40, 1538])
span start probs dim:  torch.Size([40, 1538])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1538]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 785, 200])
Passage Length:  785
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 785, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 785, 13])
Passage ques attention dim:  torch.Size([40, 785, 13])
Passage question vectors dim:  torch.Size([40, 785, 200])
Question Passage Similarity dim:  torch.Size([40, 785])
Question passage attention dim:  torch.Size([40, 785])
Final Merged Passage dim:  torch.Size([40, 785, 800])
Modeled Passage dim:  torch.Size([40, 785, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 785, 1000])
Span start logits:  torch.Size([40, 785])
span start probs dim:  torch.Size([40, 785])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 785]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 257, 200])
Passage Length:  257
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 257, 14])
Passage ques attention dim:  torch.Size([40, 257, 14])
Passage question vectors dim:  torch.Size([40, 257, 200])
Question Passage Similarity dim:  torch.Size([40, 257])
Question passage attention dim:  torch.Size([40, 257])
Final Merged Passage dim:  torch.Size([40, 257, 800])
Modeled Passage dim:  torch.Size([40, 257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 257, 1000])
Span start logits:  torch.Size([40, 257])
span start probs dim:  torch.Size([40, 257])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 257]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 894, 200])
Passage Length:  894
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 894, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 894, 13])
Passage ques attention dim:  torch.Size([40, 894, 13])
Passage question vectors dim:  torch.Size([40, 894, 200])
Question Passage Similarity dim:  torch.Size([40, 894])
Question passage attention dim:  torch.Size([40, 894])
Final Merged Passage dim:  torch.Size([40, 894, 800])
Modeled Passage dim:  torch.Size([40, 894, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 894, 1000])
Span start logits:  torch.Size([40, 894])
span start probs dim:  torch.Size([40, 894])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 894]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1595, 200])
Passage Length:  1595
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1595, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1595, 13])
Passage ques attention dim:  torch.Size([40, 1595, 13])
Passage question vectors dim:  torch.Size([40, 1595, 200])
Question Passage Similarity dim:  torch.Size([40, 1595])
Question passage attention dim:  torch.Size([40, 1595])
Final Merged Passage dim:  torch.Size([40, 1595, 800])
Modeled Passage dim:  torch.Size([40, 1595, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1595, 1000])
Span start logits:  torch.Size([40, 1595])
span start probs dim:  torch.Size([40, 1595])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1595]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 632, 200])
Passage Length:  632
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 632, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 632, 13])
Passage ques attention dim:  torch.Size([40, 632, 13])
Passage question vectors dim:  torch.Size([40, 632, 200])
Question Passage Similarity dim:  torch.Size([40, 632])
Question passage attention dim:  torch.Size([40, 632])
Final Merged Passage dim:  torch.Size([40, 632, 800])
Modeled Passage dim:  torch.Size([40, 632, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 632, 1000])
Span start logits:  torch.Size([40, 632])
span start probs dim:  torch.Size([40, 632])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 632]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 765, 200])
Passage Length:  765
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 765, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 765, 12])
Passage ques attention dim:  torch.Size([40, 765, 12])
Passage question vectors dim:  torch.Size([40, 765, 200])
Question Passage Similarity dim:  torch.Size([40, 765])
Question passage attention dim:  torch.Size([40, 765])
Final Merged Passage dim:  torch.Size([40, 765, 800])
Modeled Passage dim:  torch.Size([40, 765, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 765, 1000])
Span start logits:  torch.Size([40, 765])
span start probs dim:  torch.Size([40, 765])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 765]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 619, 15])
Passage ques attention dim:  torch.Size([40, 619, 15])
Passage question vectors dim:  torch.Size([40, 619, 200])
Question Passage Similarity dim:  torch.Size([40, 619])
Question passage attention dim:  torch.Size([40, 619])
Final Merged Passage dim:  torch.Size([40, 619, 800])
Modeled Passage dim:  torch.Size([40, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 619, 1000])
Span start logits:  torch.Size([40, 619])
span start probs dim:  torch.Size([40, 619])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 619]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 772, 200])
Passage Length:  772
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 772, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 772, 15])
Passage ques attention dim:  torch.Size([40, 772, 15])
Passage question vectors dim:  torch.Size([40, 772, 200])
Question Passage Similarity dim:  torch.Size([40, 772])
Question passage attention dim:  torch.Size([40, 772])
Final Merged Passage dim:  torch.Size([40, 772, 800])
Modeled Passage dim:  torch.Size([40, 772, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 772, 1000])
Span start logits:  torch.Size([40, 772])
span start probs dim:  torch.Size([40, 772])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 772]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 612, 200])
Passage Length:  612
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 612, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 612, 14])
Passage ques attention dim:  torch.Size([40, 612, 14])
Passage question vectors dim:  torch.Size([40, 612, 200])
Question Passage Similarity dim:  torch.Size([40, 612])
Question passage attention dim:  torch.Size([40, 612])
Final Merged Passage dim:  torch.Size([40, 612, 800])
Modeled Passage dim:  torch.Size([40, 612, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 612, 1000])
Span start logits:  torch.Size([40, 612])
span start probs dim:  torch.Size([40, 612])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 612]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 995, 200])
Passage Length:  995
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 995, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 995, 13])
Passage ques attention dim:  torch.Size([40, 995, 13])
Passage question vectors dim:  torch.Size([40, 995, 200])
Question Passage Similarity dim:  torch.Size([40, 995])
Question passage attention dim:  torch.Size([40, 995])
Final Merged Passage dim:  torch.Size([40, 995, 800])
Modeled Passage dim:  torch.Size([40, 995, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 995, 1000])
Span start logits:  torch.Size([40, 995])
span start probs dim:  torch.Size([40, 995])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 995]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1237, 200])
Passage Length:  1237
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1237, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1237, 16])
Passage ques attention dim:  torch.Size([40, 1237, 16])
Passage question vectors dim:  torch.Size([40, 1237, 200])
Question Passage Similarity dim:  torch.Size([40, 1237])
Question passage attention dim:  torch.Size([40, 1237])
Final Merged Passage dim:  torch.Size([40, 1237, 800])
Modeled Passage dim:  torch.Size([40, 1237, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1237, 1000])
Span start logits:  torch.Size([40, 1237])
span start probs dim:  torch.Size([40, 1237])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1237]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1348, 200])
Passage Length:  1348
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1348, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1348, 15])
Passage ques attention dim:  torch.Size([40, 1348, 15])
Passage question vectors dim:  torch.Size([40, 1348, 200])
Question Passage Similarity dim:  torch.Size([40, 1348])
Question passage attention dim:  torch.Size([40, 1348])
Final Merged Passage dim:  torch.Size([40, 1348, 800])
Modeled Passage dim:  torch.Size([40, 1348, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1348, 1000])
Span start logits:  torch.Size([40, 1348])
span start probs dim:  torch.Size([40, 1348])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1348]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 392, 200])
Passage Length:  392
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 392, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 392, 16])
Passage ques attention dim:  torch.Size([40, 392, 16])
Passage question vectors dim:  torch.Size([40, 392, 200])
Question Passage Similarity dim:  torch.Size([40, 392])
Question passage attention dim:  torch.Size([40, 392])
Final Merged Passage dim:  torch.Size([40, 392, 800])
Modeled Passage dim:  torch.Size([40, 392, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 392, 1000])
Span start logits:  torch.Size([40, 392])
span start probs dim:  torch.Size([40, 392])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 392]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 279, 200])
Passage Length:  279
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 279, 13])
Passage ques attention dim:  torch.Size([40, 279, 13])
Passage question vectors dim:  torch.Size([40, 279, 200])
Question Passage Similarity dim:  torch.Size([40, 279])
Question passage attention dim:  torch.Size([40, 279])
Final Merged Passage dim:  torch.Size([40, 279, 800])
Modeled Passage dim:  torch.Size([40, 279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 279, 1000])
Span start logits:  torch.Size([40, 279])
span start probs dim:  torch.Size([40, 279])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 279]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1871, 200])
Passage Length:  1871
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1871, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1871, 15])
Passage ques attention dim:  torch.Size([40, 1871, 15])
Passage question vectors dim:  torch.Size([40, 1871, 200])
Question Passage Similarity dim:  torch.Size([40, 1871])
Question passage attention dim:  torch.Size([40, 1871])
Final Merged Passage dim:  torch.Size([40, 1871, 800])
Modeled Passage dim:  torch.Size([40, 1871, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1871, 1000])
Span start logits:  torch.Size([40, 1871])
span start probs dim:  torch.Size([40, 1871])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1871]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 407, 200])
Passage Length:  407
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 407, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 407, 13])
Passage ques attention dim:  torch.Size([40, 407, 13])
Passage question vectors dim:  torch.Size([40, 407, 200])
Question Passage Similarity dim:  torch.Size([40, 407])
Question passage attention dim:  torch.Size([40, 407])
Final Merged Passage dim:  torch.Size([40, 407, 800])
Modeled Passage dim:  torch.Size([40, 407, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 407, 1000])
Span start logits:  torch.Size([40, 407])
span start probs dim:  torch.Size([40, 407])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 407]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 857, 200])
Passage Length:  857
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 857, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 857, 13])
Passage ques attention dim:  torch.Size([40, 857, 13])
Passage question vectors dim:  torch.Size([40, 857, 200])
Question Passage Similarity dim:  torch.Size([40, 857])
Question passage attention dim:  torch.Size([40, 857])
Final Merged Passage dim:  torch.Size([40, 857, 800])
Modeled Passage dim:  torch.Size([40, 857, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 857, 1000])
Span start logits:  torch.Size([40, 857])
span start probs dim:  torch.Size([40, 857])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 857]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 993, 200])
Passage Length:  993
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 993, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 993, 12])
Passage ques attention dim:  torch.Size([40, 993, 12])
Passage question vectors dim:  torch.Size([40, 993, 200])
Question Passage Similarity dim:  torch.Size([40, 993])
Question passage attention dim:  torch.Size([40, 993])
Final Merged Passage dim:  torch.Size([40, 993, 800])
Modeled Passage dim:  torch.Size([40, 993, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 993, 1000])
Span start logits:  torch.Size([40, 993])
span start probs dim:  torch.Size([40, 993])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 993]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1463, 200])
Passage Length:  1463
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1463, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1463, 15])
Passage ques attention dim:  torch.Size([40, 1463, 15])
Passage question vectors dim:  torch.Size([40, 1463, 200])
Question Passage Similarity dim:  torch.Size([40, 1463])
Question passage attention dim:  torch.Size([40, 1463])
Final Merged Passage dim:  torch.Size([40, 1463, 800])
Modeled Passage dim:  torch.Size([40, 1463, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1463, 1000])
Span start logits:  torch.Size([40, 1463])
span start probs dim:  torch.Size([40, 1463])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1463]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1092, 200])
Passage Length:  1092
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1092, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1092, 15])
Passage ques attention dim:  torch.Size([40, 1092, 15])
Passage question vectors dim:  torch.Size([40, 1092, 200])
Question Passage Similarity dim:  torch.Size([40, 1092])
Question passage attention dim:  torch.Size([40, 1092])
Final Merged Passage dim:  torch.Size([40, 1092, 800])
Modeled Passage dim:  torch.Size([40, 1092, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1092, 1000])
Span start logits:  torch.Size([40, 1092])
span start probs dim:  torch.Size([40, 1092])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1092]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 697, 200])
Passage Length:  697
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 697, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 697, 14])
Passage ques attention dim:  torch.Size([40, 697, 14])
Passage question vectors dim:  torch.Size([40, 697, 200])
Question Passage Similarity dim:  torch.Size([40, 697])
Question passage attention dim:  torch.Size([40, 697])
Final Merged Passage dim:  torch.Size([40, 697, 800])
Modeled Passage dim:  torch.Size([40, 697, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 697, 1000])
Span start logits:  torch.Size([40, 697])
span start probs dim:  torch.Size([40, 697])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 697]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 528, 200])
Passage Length:  528
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 528, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 528, 13])
Passage ques attention dim:  torch.Size([40, 528, 13])
Passage question vectors dim:  torch.Size([40, 528, 200])
Question Passage Similarity dim:  torch.Size([40, 528])
Question passage attention dim:  torch.Size([40, 528])
Final Merged Passage dim:  torch.Size([40, 528, 800])
Modeled Passage dim:  torch.Size([40, 528, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 528, 1000])
Span start logits:  torch.Size([40, 528])
span start probs dim:  torch.Size([40, 528])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 528]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 331, 200])
Passage Length:  331
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 331, 14])
Passage ques attention dim:  torch.Size([40, 331, 14])
Passage question vectors dim:  torch.Size([40, 331, 200])
Question Passage Similarity dim:  torch.Size([40, 331])
Question passage attention dim:  torch.Size([40, 331])
Final Merged Passage dim:  torch.Size([40, 331, 800])
Modeled Passage dim:  torch.Size([40, 331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 331, 1000])
Span start logits:  torch.Size([40, 331])
span start probs dim:  torch.Size([40, 331])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 331]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1095, 200])
Passage Length:  1095
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1095, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1095, 16])
Passage ques attention dim:  torch.Size([40, 1095, 16])
Passage question vectors dim:  torch.Size([40, 1095, 200])
Question Passage Similarity dim:  torch.Size([40, 1095])
Question passage attention dim:  torch.Size([40, 1095])
Final Merged Passage dim:  torch.Size([40, 1095, 800])
Modeled Passage dim:  torch.Size([40, 1095, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1095, 1000])
Span start logits:  torch.Size([40, 1095])
span start probs dim:  torch.Size([40, 1095])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1095]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1507, 200])
Passage Length:  1507
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1507, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1507, 14])
Passage ques attention dim:  torch.Size([40, 1507, 14])
Passage question vectors dim:  torch.Size([40, 1507, 200])
Question Passage Similarity dim:  torch.Size([40, 1507])
Question passage attention dim:  torch.Size([40, 1507])
Final Merged Passage dim:  torch.Size([40, 1507, 800])
Modeled Passage dim:  torch.Size([40, 1507, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1507, 1000])
Span start logits:  torch.Size([40, 1507])
span start probs dim:  torch.Size([40, 1507])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1507]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 587, 200])
Passage Length:  587
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 587, 12])
Passage ques attention dim:  torch.Size([40, 587, 12])
Passage question vectors dim:  torch.Size([40, 587, 200])
Question Passage Similarity dim:  torch.Size([40, 587])
Question passage attention dim:  torch.Size([40, 587])
Final Merged Passage dim:  torch.Size([40, 587, 800])
Modeled Passage dim:  torch.Size([40, 587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 587, 1000])
Span start logits:  torch.Size([40, 587])
span start probs dim:  torch.Size([40, 587])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 587]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1324, 200])
Passage Length:  1324
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1324, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1324, 12])
Passage ques attention dim:  torch.Size([40, 1324, 12])
Passage question vectors dim:  torch.Size([40, 1324, 200])
Question Passage Similarity dim:  torch.Size([40, 1324])
Question passage attention dim:  torch.Size([40, 1324])
Final Merged Passage dim:  torch.Size([40, 1324, 800])
Modeled Passage dim:  torch.Size([40, 1324, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1324, 1000])
Span start logits:  torch.Size([40, 1324])
span start probs dim:  torch.Size([40, 1324])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1324]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1086, 200])
Passage Length:  1086
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1086, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1086, 13])
Passage ques attention dim:  torch.Size([40, 1086, 13])
Passage question vectors dim:  torch.Size([40, 1086, 200])
Question Passage Similarity dim:  torch.Size([40, 1086])
Question passage attention dim:  torch.Size([40, 1086])
Final Merged Passage dim:  torch.Size([40, 1086, 800])
Modeled Passage dim:  torch.Size([40, 1086, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1086, 1000])
Span start logits:  torch.Size([40, 1086])
span start probs dim:  torch.Size([40, 1086])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1086]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1262, 200])
Passage Length:  1262
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1262, 14])
Passage ques attention dim:  torch.Size([40, 1262, 14])
Passage question vectors dim:  torch.Size([40, 1262, 200])
Question Passage Similarity dim:  torch.Size([40, 1262])
Question passage attention dim:  torch.Size([40, 1262])
Final Merged Passage dim:  torch.Size([40, 1262, 800])
Modeled Passage dim:  torch.Size([40, 1262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1262, 1000])
Span start logits:  torch.Size([40, 1262])
span start probs dim:  torch.Size([40, 1262])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1262]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 89, 200])
Passage Length:  89
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 89, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 89, 14])
Passage ques attention dim:  torch.Size([40, 89, 14])
Passage question vectors dim:  torch.Size([40, 89, 200])
Question Passage Similarity dim:  torch.Size([40, 89])
Question passage attention dim:  torch.Size([40, 89])
Final Merged Passage dim:  torch.Size([40, 89, 800])
Modeled Passage dim:  torch.Size([40, 89, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 89, 1000])
Span start logits:  torch.Size([40, 89])
span start probs dim:  torch.Size([40, 89])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 89]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 501, 200])
Passage Length:  501
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 501, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 501, 14])
Passage ques attention dim:  torch.Size([40, 501, 14])
Passage question vectors dim:  torch.Size([40, 501, 200])
Question Passage Similarity dim:  torch.Size([40, 501])
Question passage attention dim:  torch.Size([40, 501])
Final Merged Passage dim:  torch.Size([40, 501, 800])
Modeled Passage dim:  torch.Size([40, 501, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 501, 1000])
Span start logits:  torch.Size([40, 501])
span start probs dim:  torch.Size([40, 501])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 501]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 909, 200])
Passage Length:  909
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 909, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 909, 16])
Passage ques attention dim:  torch.Size([40, 909, 16])
Passage question vectors dim:  torch.Size([40, 909, 200])
Question Passage Similarity dim:  torch.Size([40, 909])
Question passage attention dim:  torch.Size([40, 909])
Final Merged Passage dim:  torch.Size([40, 909, 800])
Modeled Passage dim:  torch.Size([40, 909, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 909, 1000])
Span start logits:  torch.Size([40, 909])
span start probs dim:  torch.Size([40, 909])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 909]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 804, 200])
Passage Length:  804
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 804, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 804, 15])
Passage ques attention dim:  torch.Size([40, 804, 15])
Passage question vectors dim:  torch.Size([40, 804, 200])
Question Passage Similarity dim:  torch.Size([40, 804])
Question passage attention dim:  torch.Size([40, 804])
Final Merged Passage dim:  torch.Size([40, 804, 800])
Modeled Passage dim:  torch.Size([40, 804, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 804, 1000])
Span start logits:  torch.Size([40, 804])
span start probs dim:  torch.Size([40, 804])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 804]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1145, 200])
Passage Length:  1145
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1145, 18])
Passage ques attention dim:  torch.Size([40, 1145, 18])
Passage question vectors dim:  torch.Size([40, 1145, 200])
Question Passage Similarity dim:  torch.Size([40, 1145])
Question passage attention dim:  torch.Size([40, 1145])
Final Merged Passage dim:  torch.Size([40, 1145, 800])
Modeled Passage dim:  torch.Size([40, 1145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1145, 1000])
Span start logits:  torch.Size([40, 1145])
span start probs dim:  torch.Size([40, 1145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1505, 200])
Passage Length:  1505
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1505, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1505, 16])
Passage ques attention dim:  torch.Size([40, 1505, 16])
Passage question vectors dim:  torch.Size([40, 1505, 200])
Question Passage Similarity dim:  torch.Size([40, 1505])
Question passage attention dim:  torch.Size([40, 1505])
Final Merged Passage dim:  torch.Size([40, 1505, 800])
Modeled Passage dim:  torch.Size([40, 1505, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1505, 1000])
Span start logits:  torch.Size([40, 1505])
span start probs dim:  torch.Size([40, 1505])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1505]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 583, 200])
Passage Length:  583
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 583, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 583, 15])
Passage ques attention dim:  torch.Size([40, 583, 15])
Passage question vectors dim:  torch.Size([40, 583, 200])
Question Passage Similarity dim:  torch.Size([40, 583])
Question passage attention dim:  torch.Size([40, 583])
Final Merged Passage dim:  torch.Size([40, 583, 800])
Modeled Passage dim:  torch.Size([40, 583, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 583, 1000])
Span start logits:  torch.Size([40, 583])
span start probs dim:  torch.Size([40, 583])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 583]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1524, 200])
Passage Length:  1524
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1524, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1524, 17])
Passage ques attention dim:  torch.Size([40, 1524, 17])
Passage question vectors dim:  torch.Size([40, 1524, 200])
Question Passage Similarity dim:  torch.Size([40, 1524])
Question passage attention dim:  torch.Size([40, 1524])
Final Merged Passage dim:  torch.Size([40, 1524, 800])
Modeled Passage dim:  torch.Size([40, 1524, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1524, 1000])
Span start logits:  torch.Size([40, 1524])
span start probs dim:  torch.Size([40, 1524])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1524]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1681, 200])
Passage Length:  1681
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1681, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1681, 18])
Passage ques attention dim:  torch.Size([40, 1681, 18])
Passage question vectors dim:  torch.Size([40, 1681, 200])
Question Passage Similarity dim:  torch.Size([40, 1681])
Question passage attention dim:  torch.Size([40, 1681])
Final Merged Passage dim:  torch.Size([40, 1681, 800])
Modeled Passage dim:  torch.Size([40, 1681, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1681, 1000])
Span start logits:  torch.Size([40, 1681])
span start probs dim:  torch.Size([40, 1681])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1681]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 337, 200])
Passage Length:  337
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 337, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 337, 17])
Passage ques attention dim:  torch.Size([40, 337, 17])
Passage question vectors dim:  torch.Size([40, 337, 200])
Question Passage Similarity dim:  torch.Size([40, 337])
Question passage attention dim:  torch.Size([40, 337])
Final Merged Passage dim:  torch.Size([40, 337, 800])
Modeled Passage dim:  torch.Size([40, 337, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 337, 1000])
Span start logits:  torch.Size([40, 337])
span start probs dim:  torch.Size([40, 337])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 337]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1068, 200])
Passage Length:  1068
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1068, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1068, 16])
Passage ques attention dim:  torch.Size([40, 1068, 16])
Passage question vectors dim:  torch.Size([40, 1068, 200])
Question Passage Similarity dim:  torch.Size([40, 1068])
Question passage attention dim:  torch.Size([40, 1068])
Final Merged Passage dim:  torch.Size([40, 1068, 800])
Modeled Passage dim:  torch.Size([40, 1068, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1068, 1000])
Span start logits:  torch.Size([40, 1068])
span start probs dim:  torch.Size([40, 1068])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1068]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 821, 200])
Passage Length:  821
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 821, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 821, 13])
Passage ques attention dim:  torch.Size([40, 821, 13])
Passage question vectors dim:  torch.Size([40, 821, 200])
Question Passage Similarity dim:  torch.Size([40, 821])
Question passage attention dim:  torch.Size([40, 821])
Final Merged Passage dim:  torch.Size([40, 821, 800])
Modeled Passage dim:  torch.Size([40, 821, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 821, 1000])
Span start logits:  torch.Size([40, 821])
span start probs dim:  torch.Size([40, 821])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 821]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 872, 200])
Passage Length:  872
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 872, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 872, 17])
Passage ques attention dim:  torch.Size([40, 872, 17])
Passage question vectors dim:  torch.Size([40, 872, 200])
Question Passage Similarity dim:  torch.Size([40, 872])
Question passage attention dim:  torch.Size([40, 872])
Final Merged Passage dim:  torch.Size([40, 872, 800])
Modeled Passage dim:  torch.Size([40, 872, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 872, 1000])
Span start logits:  torch.Size([40, 872])
span start probs dim:  torch.Size([40, 872])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 872]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 563, 200])
Passage Length:  563
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 563, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 563, 12])
Passage ques attention dim:  torch.Size([40, 563, 12])
Passage question vectors dim:  torch.Size([40, 563, 200])
Question Passage Similarity dim:  torch.Size([40, 563])
Question passage attention dim:  torch.Size([40, 563])
Final Merged Passage dim:  torch.Size([40, 563, 800])
Modeled Passage dim:  torch.Size([40, 563, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 563, 1000])
Span start logits:  torch.Size([40, 563])
span start probs dim:  torch.Size([40, 563])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 563]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1495, 200])
Passage Length:  1495
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1495, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1495, 14])
Passage ques attention dim:  torch.Size([40, 1495, 14])
Passage question vectors dim:  torch.Size([40, 1495, 200])
Question Passage Similarity dim:  torch.Size([40, 1495])
Question passage attention dim:  torch.Size([40, 1495])
Final Merged Passage dim:  torch.Size([40, 1495, 800])
Modeled Passage dim:  torch.Size([40, 1495, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1495, 1000])
Span start logits:  torch.Size([40, 1495])
span start probs dim:  torch.Size([40, 1495])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1495]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 611, 200])
Passage Length:  611
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 611, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 611, 11])
Passage ques attention dim:  torch.Size([40, 611, 11])
Passage question vectors dim:  torch.Size([40, 611, 200])
Question Passage Similarity dim:  torch.Size([40, 611])
Question passage attention dim:  torch.Size([40, 611])
Final Merged Passage dim:  torch.Size([40, 611, 800])
Modeled Passage dim:  torch.Size([40, 611, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 611, 1000])
Span start logits:  torch.Size([40, 611])
span start probs dim:  torch.Size([40, 611])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 611]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 922, 200])
Passage Length:  922
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 922, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 922, 16])
Passage ques attention dim:  torch.Size([40, 922, 16])
Passage question vectors dim:  torch.Size([40, 922, 200])
Question Passage Similarity dim:  torch.Size([40, 922])
Question passage attention dim:  torch.Size([40, 922])
Final Merged Passage dim:  torch.Size([40, 922, 800])
Modeled Passage dim:  torch.Size([40, 922, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 922, 1000])
Span start logits:  torch.Size([40, 922])
span start probs dim:  torch.Size([40, 922])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 922]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 226, 200])
Passage Length:  226
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 226, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 226, 16])
Passage ques attention dim:  torch.Size([40, 226, 16])
Passage question vectors dim:  torch.Size([40, 226, 200])
Question Passage Similarity dim:  torch.Size([40, 226])
Question passage attention dim:  torch.Size([40, 226])
Final Merged Passage dim:  torch.Size([40, 226, 800])
Modeled Passage dim:  torch.Size([40, 226, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 226, 1000])
Span start logits:  torch.Size([40, 226])
span start probs dim:  torch.Size([40, 226])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 226]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 510, 200])
Passage Length:  510
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 510, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 510, 13])
Passage ques attention dim:  torch.Size([40, 510, 13])
Passage question vectors dim:  torch.Size([40, 510, 200])
Question Passage Similarity dim:  torch.Size([40, 510])
Question passage attention dim:  torch.Size([40, 510])
Final Merged Passage dim:  torch.Size([40, 510, 800])
Modeled Passage dim:  torch.Size([40, 510, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 510, 1000])
Span start logits:  torch.Size([40, 510])
span start probs dim:  torch.Size([40, 510])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 510]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 391, 200])
Passage Length:  391
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 391, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 391, 13])
Passage ques attention dim:  torch.Size([40, 391, 13])
Passage question vectors dim:  torch.Size([40, 391, 200])
Question Passage Similarity dim:  torch.Size([40, 391])
Question passage attention dim:  torch.Size([40, 391])
Final Merged Passage dim:  torch.Size([40, 391, 800])
Modeled Passage dim:  torch.Size([40, 391, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 391, 1000])
Span start logits:  torch.Size([40, 391])
span start probs dim:  torch.Size([40, 391])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 391]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 875, 200])
Passage Length:  875
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 875, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 875, 15])
Passage ques attention dim:  torch.Size([40, 875, 15])
Passage question vectors dim:  torch.Size([40, 875, 200])
Question Passage Similarity dim:  torch.Size([40, 875])
Question passage attention dim:  torch.Size([40, 875])
Final Merged Passage dim:  torch.Size([40, 875, 800])
Modeled Passage dim:  torch.Size([40, 875, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 875, 1000])
Span start logits:  torch.Size([40, 875])
span start probs dim:  torch.Size([40, 875])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 875]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 634, 200])
Passage Length:  634
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 634, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 634, 15])
Passage ques attention dim:  torch.Size([40, 634, 15])
Passage question vectors dim:  torch.Size([40, 634, 200])
Question Passage Similarity dim:  torch.Size([40, 634])
Question passage attention dim:  torch.Size([40, 634])
Final Merged Passage dim:  torch.Size([40, 634, 800])
Modeled Passage dim:  torch.Size([40, 634, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 634, 1000])
Span start logits:  torch.Size([40, 634])
span start probs dim:  torch.Size([40, 634])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 634]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1225, 200])
Passage Length:  1225
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1225, 12])
Passage ques attention dim:  torch.Size([40, 1225, 12])
Passage question vectors dim:  torch.Size([40, 1225, 200])
Question Passage Similarity dim:  torch.Size([40, 1225])
Question passage attention dim:  torch.Size([40, 1225])
Final Merged Passage dim:  torch.Size([40, 1225, 800])
Modeled Passage dim:  torch.Size([40, 1225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1225, 1000])
Span start logits:  torch.Size([40, 1225])
span start probs dim:  torch.Size([40, 1225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 452, 200])
Passage Length:  452
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 452, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 452, 14])
Passage ques attention dim:  torch.Size([40, 452, 14])
Passage question vectors dim:  torch.Size([40, 452, 200])
Question Passage Similarity dim:  torch.Size([40, 452])
Question passage attention dim:  torch.Size([40, 452])
Final Merged Passage dim:  torch.Size([40, 452, 800])
Modeled Passage dim:  torch.Size([40, 452, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 452, 1000])
Span start logits:  torch.Size([40, 452])
span start probs dim:  torch.Size([40, 452])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 452]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 920, 200])
Passage Length:  920
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 920, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 920, 17])
Passage ques attention dim:  torch.Size([40, 920, 17])
Passage question vectors dim:  torch.Size([40, 920, 200])
Question Passage Similarity dim:  torch.Size([40, 920])
Question passage attention dim:  torch.Size([40, 920])
Final Merged Passage dim:  torch.Size([40, 920, 800])
Modeled Passage dim:  torch.Size([40, 920, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 920, 1000])
Span start logits:  torch.Size([40, 920])
span start probs dim:  torch.Size([40, 920])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 920]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 369, 200])
Passage Length:  369
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 369, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 369, 17])
Passage ques attention dim:  torch.Size([40, 369, 17])
Passage question vectors dim:  torch.Size([40, 369, 200])
Question Passage Similarity dim:  torch.Size([40, 369])
Question passage attention dim:  torch.Size([40, 369])
Final Merged Passage dim:  torch.Size([40, 369, 800])
Modeled Passage dim:  torch.Size([40, 369, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 369, 1000])
Span start logits:  torch.Size([40, 369])
span start probs dim:  torch.Size([40, 369])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 369]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 485, 200])
Passage Length:  485
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 485, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 485, 13])
Passage ques attention dim:  torch.Size([40, 485, 13])
Passage question vectors dim:  torch.Size([40, 485, 200])
Question Passage Similarity dim:  torch.Size([40, 485])
Question passage attention dim:  torch.Size([40, 485])
Final Merged Passage dim:  torch.Size([40, 485, 800])
Modeled Passage dim:  torch.Size([40, 485, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 485, 1000])
Span start logits:  torch.Size([40, 485])
span start probs dim:  torch.Size([40, 485])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 485]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1180, 200])
Passage Length:  1180
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1180, 12])
Passage ques attention dim:  torch.Size([40, 1180, 12])
Passage question vectors dim:  torch.Size([40, 1180, 200])
Question Passage Similarity dim:  torch.Size([40, 1180])
Question passage attention dim:  torch.Size([40, 1180])
Final Merged Passage dim:  torch.Size([40, 1180, 800])
Modeled Passage dim:  torch.Size([40, 1180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1180, 1000])
Span start logits:  torch.Size([40, 1180])
span start probs dim:  torch.Size([40, 1180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1026, 200])
Passage Length:  1026
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1026, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1026, 15])
Passage ques attention dim:  torch.Size([40, 1026, 15])
Passage question vectors dim:  torch.Size([40, 1026, 200])
Question Passage Similarity dim:  torch.Size([40, 1026])
Question passage attention dim:  torch.Size([40, 1026])
Final Merged Passage dim:  torch.Size([40, 1026, 800])
Modeled Passage dim:  torch.Size([40, 1026, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1026, 1000])
Span start logits:  torch.Size([40, 1026])
span start probs dim:  torch.Size([40, 1026])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1026]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 260, 200])
Passage Length:  260
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 260, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 260, 14])
Passage ques attention dim:  torch.Size([40, 260, 14])
Passage question vectors dim:  torch.Size([40, 260, 200])
Question Passage Similarity dim:  torch.Size([40, 260])
Question passage attention dim:  torch.Size([40, 260])
Final Merged Passage dim:  torch.Size([40, 260, 800])
Modeled Passage dim:  torch.Size([40, 260, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 260, 1000])
Span start logits:  torch.Size([40, 260])
span start probs dim:  torch.Size([40, 260])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 260]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1009, 200])
Passage Length:  1009
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1009, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1009, 11])
Passage ques attention dim:  torch.Size([40, 1009, 11])
Passage question vectors dim:  torch.Size([40, 1009, 200])
Question Passage Similarity dim:  torch.Size([40, 1009])
Question passage attention dim:  torch.Size([40, 1009])
Final Merged Passage dim:  torch.Size([40, 1009, 800])
Modeled Passage dim:  torch.Size([40, 1009, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1009, 1000])
Span start logits:  torch.Size([40, 1009])
span start probs dim:  torch.Size([40, 1009])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1009]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 390, 200])
Passage Length:  390
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 390, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 390, 14])
Passage ques attention dim:  torch.Size([40, 390, 14])
Passage question vectors dim:  torch.Size([40, 390, 200])
Question Passage Similarity dim:  torch.Size([40, 390])
Question passage attention dim:  torch.Size([40, 390])
Final Merged Passage dim:  torch.Size([40, 390, 800])
Modeled Passage dim:  torch.Size([40, 390, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 390, 1000])
Span start logits:  torch.Size([40, 390])
span start probs dim:  torch.Size([40, 390])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 390]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 566, 200])
Passage Length:  566
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 566, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 566, 19])
Passage ques attention dim:  torch.Size([40, 566, 19])
Passage question vectors dim:  torch.Size([40, 566, 200])
Question Passage Similarity dim:  torch.Size([40, 566])
Question passage attention dim:  torch.Size([40, 566])
Final Merged Passage dim:  torch.Size([40, 566, 800])
Modeled Passage dim:  torch.Size([40, 566, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 566, 1000])
Span start logits:  torch.Size([40, 566])
span start probs dim:  torch.Size([40, 566])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 566]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1292, 200])
Passage Length:  1292
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1292, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1292, 14])
Passage ques attention dim:  torch.Size([40, 1292, 14])
Passage question vectors dim:  torch.Size([40, 1292, 200])
Question Passage Similarity dim:  torch.Size([40, 1292])
Question passage attention dim:  torch.Size([40, 1292])
Final Merged Passage dim:  torch.Size([40, 1292, 800])
Modeled Passage dim:  torch.Size([40, 1292, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1292, 1000])
Span start logits:  torch.Size([40, 1292])
span start probs dim:  torch.Size([40, 1292])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1292]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 708, 200])
Passage Length:  708
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 708, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 708, 18])
Passage ques attention dim:  torch.Size([40, 708, 18])
Passage question vectors dim:  torch.Size([40, 708, 200])
Question Passage Similarity dim:  torch.Size([40, 708])
Question passage attention dim:  torch.Size([40, 708])
Final Merged Passage dim:  torch.Size([40, 708, 800])
Modeled Passage dim:  torch.Size([40, 708, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 708, 1000])
Span start logits:  torch.Size([40, 708])
span start probs dim:  torch.Size([40, 708])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 708]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1316, 200])
Passage Length:  1316
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1316, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1316, 18])
Passage ques attention dim:  torch.Size([40, 1316, 18])
Passage question vectors dim:  torch.Size([40, 1316, 200])
Question Passage Similarity dim:  torch.Size([40, 1316])
Question passage attention dim:  torch.Size([40, 1316])
Final Merged Passage dim:  torch.Size([40, 1316, 800])
Modeled Passage dim:  torch.Size([40, 1316, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1316, 1000])
Span start logits:  torch.Size([40, 1316])
span start probs dim:  torch.Size([40, 1316])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1316]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 686, 200])
Passage Length:  686
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 686, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 686, 15])
Passage ques attention dim:  torch.Size([40, 686, 15])
Passage question vectors dim:  torch.Size([40, 686, 200])
Question Passage Similarity dim:  torch.Size([40, 686])
Question passage attention dim:  torch.Size([40, 686])
Final Merged Passage dim:  torch.Size([40, 686, 800])
Modeled Passage dim:  torch.Size([40, 686, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 686, 1000])
Span start logits:  torch.Size([40, 686])
span start probs dim:  torch.Size([40, 686])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 686]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 202, 200])
Passage Length:  202
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 202, 18])
Passage ques attention dim:  torch.Size([40, 202, 18])
Passage question vectors dim:  torch.Size([40, 202, 200])
Question Passage Similarity dim:  torch.Size([40, 202])
Question passage attention dim:  torch.Size([40, 202])
Final Merged Passage dim:  torch.Size([40, 202, 800])
Modeled Passage dim:  torch.Size([40, 202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 202, 1000])
Span start logits:  torch.Size([40, 202])
span start probs dim:  torch.Size([40, 202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1128, 200])
Passage Length:  1128
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1128, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1128, 17])
Passage ques attention dim:  torch.Size([40, 1128, 17])
Passage question vectors dim:  torch.Size([40, 1128, 200])
Question Passage Similarity dim:  torch.Size([40, 1128])
Question passage attention dim:  torch.Size([40, 1128])
Final Merged Passage dim:  torch.Size([40, 1128, 800])
Modeled Passage dim:  torch.Size([40, 1128, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1128, 1000])
Span start logits:  torch.Size([40, 1128])
span start probs dim:  torch.Size([40, 1128])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1128]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1711, 200])
Passage Length:  1711
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1711, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1711, 15])
Passage ques attention dim:  torch.Size([40, 1711, 15])
Passage question vectors dim:  torch.Size([40, 1711, 200])
Question Passage Similarity dim:  torch.Size([40, 1711])
Question passage attention dim:  torch.Size([40, 1711])
Final Merged Passage dim:  torch.Size([40, 1711, 800])
Modeled Passage dim:  torch.Size([40, 1711, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1711, 1000])
Span start logits:  torch.Size([40, 1711])
span start probs dim:  torch.Size([40, 1711])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1711]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 810, 200])
Passage Length:  810
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 810, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 810, 13])
Passage ques attention dim:  torch.Size([40, 810, 13])
Passage question vectors dim:  torch.Size([40, 810, 200])
Question Passage Similarity dim:  torch.Size([40, 810])
Question passage attention dim:  torch.Size([40, 810])
Final Merged Passage dim:  torch.Size([40, 810, 800])
Modeled Passage dim:  torch.Size([40, 810, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 810, 1000])
Span start logits:  torch.Size([40, 810])
span start probs dim:  torch.Size([40, 810])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 810]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1320, 200])
Passage Length:  1320
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1320, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1320, 16])
Passage ques attention dim:  torch.Size([40, 1320, 16])
Passage question vectors dim:  torch.Size([40, 1320, 200])
Question Passage Similarity dim:  torch.Size([40, 1320])
Question passage attention dim:  torch.Size([40, 1320])
Final Merged Passage dim:  torch.Size([40, 1320, 800])
Modeled Passage dim:  torch.Size([40, 1320, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1320, 1000])
Span start logits:  torch.Size([40, 1320])
span start probs dim:  torch.Size([40, 1320])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1320]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1051, 200])
Passage Length:  1051
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1051, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1051, 13])
Passage ques attention dim:  torch.Size([40, 1051, 13])
Passage question vectors dim:  torch.Size([40, 1051, 200])
Question Passage Similarity dim:  torch.Size([40, 1051])
Question passage attention dim:  torch.Size([40, 1051])
Final Merged Passage dim:  torch.Size([40, 1051, 800])
Modeled Passage dim:  torch.Size([40, 1051, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1051, 1000])
Span start logits:  torch.Size([40, 1051])
span start probs dim:  torch.Size([40, 1051])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1051]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 414, 200])
Passage Length:  414
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 414, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 414, 15])
Passage ques attention dim:  torch.Size([40, 414, 15])
Passage question vectors dim:  torch.Size([40, 414, 200])
Question Passage Similarity dim:  torch.Size([40, 414])
Question passage attention dim:  torch.Size([40, 414])
Final Merged Passage dim:  torch.Size([40, 414, 800])
Modeled Passage dim:  torch.Size([40, 414, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 414, 1000])
Span start logits:  torch.Size([40, 414])
span start probs dim:  torch.Size([40, 414])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 414]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1354, 200])
Passage Length:  1354
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1354, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1354, 19])
Passage ques attention dim:  torch.Size([40, 1354, 19])
Passage question vectors dim:  torch.Size([40, 1354, 200])
Question Passage Similarity dim:  torch.Size([40, 1354])
Question passage attention dim:  torch.Size([40, 1354])
Final Merged Passage dim:  torch.Size([40, 1354, 800])
Modeled Passage dim:  torch.Size([40, 1354, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1354, 1000])
Span start logits:  torch.Size([40, 1354])
span start probs dim:  torch.Size([40, 1354])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1354]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 442, 200])
Passage Length:  442
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 442, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 442, 15])
Passage ques attention dim:  torch.Size([40, 442, 15])
Passage question vectors dim:  torch.Size([40, 442, 200])
Question Passage Similarity dim:  torch.Size([40, 442])
Question passage attention dim:  torch.Size([40, 442])
Final Merged Passage dim:  torch.Size([40, 442, 800])
Modeled Passage dim:  torch.Size([40, 442, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 442, 1000])
Span start logits:  torch.Size([40, 442])
span start probs dim:  torch.Size([40, 442])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 442]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1001, 200])
Passage Length:  1001
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1001, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1001, 19])
Passage ques attention dim:  torch.Size([40, 1001, 19])
Passage question vectors dim:  torch.Size([40, 1001, 200])
Question Passage Similarity dim:  torch.Size([40, 1001])
Question passage attention dim:  torch.Size([40, 1001])
Final Merged Passage dim:  torch.Size([40, 1001, 800])
Modeled Passage dim:  torch.Size([40, 1001, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1001, 1000])
Span start logits:  torch.Size([40, 1001])
span start probs dim:  torch.Size([40, 1001])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1001]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1141, 200])
Passage Length:  1141
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1141, 16])
Passage ques attention dim:  torch.Size([40, 1141, 16])
Passage question vectors dim:  torch.Size([40, 1141, 200])
Question Passage Similarity dim:  torch.Size([40, 1141])
Question passage attention dim:  torch.Size([40, 1141])
Final Merged Passage dim:  torch.Size([40, 1141, 800])
Modeled Passage dim:  torch.Size([40, 1141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1141, 1000])
Span start logits:  torch.Size([40, 1141])
span start probs dim:  torch.Size([40, 1141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 741, 200])
Passage Length:  741
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 741, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 741, 19])
Passage ques attention dim:  torch.Size([40, 741, 19])
Passage question vectors dim:  torch.Size([40, 741, 200])
Question Passage Similarity dim:  torch.Size([40, 741])
Question passage attention dim:  torch.Size([40, 741])
Final Merged Passage dim:  torch.Size([40, 741, 800])
Modeled Passage dim:  torch.Size([40, 741, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 741, 1000])
Span start logits:  torch.Size([40, 741])
span start probs dim:  torch.Size([40, 741])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 741]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 887, 200])
Passage Length:  887
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 887, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 887, 10])
Passage ques attention dim:  torch.Size([40, 887, 10])
Passage question vectors dim:  torch.Size([40, 887, 200])
Question Passage Similarity dim:  torch.Size([40, 887])
Question passage attention dim:  torch.Size([40, 887])
Final Merged Passage dim:  torch.Size([40, 887, 800])
Modeled Passage dim:  torch.Size([40, 887, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 887, 1000])
Span start logits:  torch.Size([40, 887])
span start probs dim:  torch.Size([40, 887])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 887]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 742, 200])
Passage Length:  742
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 742, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 742, 15])
Passage ques attention dim:  torch.Size([40, 742, 15])
Passage question vectors dim:  torch.Size([40, 742, 200])
Question Passage Similarity dim:  torch.Size([40, 742])
Question passage attention dim:  torch.Size([40, 742])
Final Merged Passage dim:  torch.Size([40, 742, 800])
Modeled Passage dim:  torch.Size([40, 742, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 742, 1000])
Span start logits:  torch.Size([40, 742])
span start probs dim:  torch.Size([40, 742])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 742]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 1668, 200])
Passage Length:  1668
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 1668, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1668, 21])
Passage ques attention dim:  torch.Size([40, 1668, 21])
Passage question vectors dim:  torch.Size([40, 1668, 200])
Question Passage Similarity dim:  torch.Size([40, 1668])
Question passage attention dim:  torch.Size([40, 1668])
Final Merged Passage dim:  torch.Size([40, 1668, 800])
Modeled Passage dim:  torch.Size([40, 1668, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1668, 1000])
Span start logits:  torch.Size([40, 1668])
span start probs dim:  torch.Size([40, 1668])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1668]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 369, 200])
Passage Length:  369
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 369, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 369, 14])
Passage ques attention dim:  torch.Size([40, 369, 14])
Passage question vectors dim:  torch.Size([40, 369, 200])
Question Passage Similarity dim:  torch.Size([40, 369])
Question passage attention dim:  torch.Size([40, 369])
Final Merged Passage dim:  torch.Size([40, 369, 800])
Modeled Passage dim:  torch.Size([40, 369, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 369, 1000])
Span start logits:  torch.Size([40, 369])
span start probs dim:  torch.Size([40, 369])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 369]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 587, 200])
Passage Length:  587
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 587, 12])
Passage ques attention dim:  torch.Size([40, 587, 12])
Passage question vectors dim:  torch.Size([40, 587, 200])
Question Passage Similarity dim:  torch.Size([40, 587])
Question passage attention dim:  torch.Size([40, 587])
Final Merged Passage dim:  torch.Size([40, 587, 800])
Modeled Passage dim:  torch.Size([40, 587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 587, 1000])
Span start logits:  torch.Size([40, 587])
span start probs dim:  torch.Size([40, 587])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 587]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 756, 200])
Passage Length:  756
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 756, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 756, 12])
Passage ques attention dim:  torch.Size([40, 756, 12])
Passage question vectors dim:  torch.Size([40, 756, 200])
Question Passage Similarity dim:  torch.Size([40, 756])
Question passage attention dim:  torch.Size([40, 756])
Final Merged Passage dim:  torch.Size([40, 756, 800])
Modeled Passage dim:  torch.Size([40, 756, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 756, 1000])
Span start logits:  torch.Size([40, 756])
span start probs dim:  torch.Size([40, 756])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 756]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 878, 200])
Passage Length:  878
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 878, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 878, 14])
Passage ques attention dim:  torch.Size([40, 878, 14])
Passage question vectors dim:  torch.Size([40, 878, 200])
Question Passage Similarity dim:  torch.Size([40, 878])
Question passage attention dim:  torch.Size([40, 878])
Final Merged Passage dim:  torch.Size([40, 878, 800])
Modeled Passage dim:  torch.Size([40, 878, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 878, 1000])
Span start logits:  torch.Size([40, 878])
span start probs dim:  torch.Size([40, 878])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 878]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 556, 200])
Passage Length:  556
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 556, 16])
Passage ques attention dim:  torch.Size([40, 556, 16])
Passage question vectors dim:  torch.Size([40, 556, 200])
Question Passage Similarity dim:  torch.Size([40, 556])
Question passage attention dim:  torch.Size([40, 556])
Final Merged Passage dim:  torch.Size([40, 556, 800])
Modeled Passage dim:  torch.Size([40, 556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 556, 1000])
Span start logits:  torch.Size([40, 556])
span start probs dim:  torch.Size([40, 556])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 556]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 395, 200])
Passage Length:  395
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 395, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 395, 16])
Passage ques attention dim:  torch.Size([40, 395, 16])
Passage question vectors dim:  torch.Size([40, 395, 200])
Question Passage Similarity dim:  torch.Size([40, 395])
Question passage attention dim:  torch.Size([40, 395])
Final Merged Passage dim:  torch.Size([40, 395, 800])
Modeled Passage dim:  torch.Size([40, 395, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 395, 1000])
Span start logits:  torch.Size([40, 395])
span start probs dim:  torch.Size([40, 395])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 395]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 325, 200])
Passage Length:  325
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 325, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 325, 15])
Passage ques attention dim:  torch.Size([40, 325, 15])
Passage question vectors dim:  torch.Size([40, 325, 200])
Question Passage Similarity dim:  torch.Size([40, 325])
Question passage attention dim:  torch.Size([40, 325])
Final Merged Passage dim:  torch.Size([40, 325, 800])
Modeled Passage dim:  torch.Size([40, 325, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 325, 1000])
Span start logits:  torch.Size([40, 325])
span start probs dim:  torch.Size([40, 325])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 325]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 59, 200])
Embedded passage dim:  torch.Size([40, 210, 200])
Passage Length:  210
Encoded question dim:  torch.Size([40, 59, 200])
Encoded passage dim:  torch.Size([40, 210, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 210, 59])
Passage ques attention dim:  torch.Size([40, 210, 59])
Passage question vectors dim:  torch.Size([40, 210, 200])
Question Passage Similarity dim:  torch.Size([40, 210])
Question passage attention dim:  torch.Size([40, 210])
Final Merged Passage dim:  torch.Size([40, 210, 800])
Modeled Passage dim:  torch.Size([40, 210, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 210, 1000])
Span start logits:  torch.Size([40, 210])
span start probs dim:  torch.Size([40, 210])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 210]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1727, 200])
Passage Length:  1727
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1727, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1727, 14])
Passage ques attention dim:  torch.Size([40, 1727, 14])
Passage question vectors dim:  torch.Size([40, 1727, 200])
Question Passage Similarity dim:  torch.Size([40, 1727])
Question passage attention dim:  torch.Size([40, 1727])
Final Merged Passage dim:  torch.Size([40, 1727, 800])
Modeled Passage dim:  torch.Size([40, 1727, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1727, 1000])
Span start logits:  torch.Size([40, 1727])
span start probs dim:  torch.Size([40, 1727])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1727]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1578, 200])
Passage Length:  1578
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1578, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1578, 14])
Passage ques attention dim:  torch.Size([40, 1578, 14])
Passage question vectors dim:  torch.Size([40, 1578, 200])
Question Passage Similarity dim:  torch.Size([40, 1578])
Question passage attention dim:  torch.Size([40, 1578])
Final Merged Passage dim:  torch.Size([40, 1578, 800])
Modeled Passage dim:  torch.Size([40, 1578, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1578, 1000])
Span start logits:  torch.Size([40, 1578])
span start probs dim:  torch.Size([40, 1578])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1578]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 832, 200])
Passage Length:  832
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 832, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 832, 12])
Passage ques attention dim:  torch.Size([40, 832, 12])
Passage question vectors dim:  torch.Size([40, 832, 200])
Question Passage Similarity dim:  torch.Size([40, 832])
Question passage attention dim:  torch.Size([40, 832])
Final Merged Passage dim:  torch.Size([40, 832, 800])
Modeled Passage dim:  torch.Size([40, 832, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 832, 1000])
Span start logits:  torch.Size([40, 832])
span start probs dim:  torch.Size([40, 832])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 832]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 854, 200])
Passage Length:  854
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 854, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 854, 15])
Passage ques attention dim:  torch.Size([40, 854, 15])
Passage question vectors dim:  torch.Size([40, 854, 200])
Question Passage Similarity dim:  torch.Size([40, 854])
Question passage attention dim:  torch.Size([40, 854])
Final Merged Passage dim:  torch.Size([40, 854, 800])
Modeled Passage dim:  torch.Size([40, 854, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 854, 1000])
Span start logits:  torch.Size([40, 854])
span start probs dim:  torch.Size([40, 854])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 854]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 432, 200])
Passage Length:  432
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 432, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 432, 17])
Passage ques attention dim:  torch.Size([40, 432, 17])
Passage question vectors dim:  torch.Size([40, 432, 200])
Question Passage Similarity dim:  torch.Size([40, 432])
Question passage attention dim:  torch.Size([40, 432])
Final Merged Passage dim:  torch.Size([40, 432, 800])
Modeled Passage dim:  torch.Size([40, 432, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 432, 1000])
Span start logits:  torch.Size([40, 432])
span start probs dim:  torch.Size([40, 432])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 432]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 549, 200])
Passage Length:  549
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 549, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 549, 12])
Passage ques attention dim:  torch.Size([40, 549, 12])
Passage question vectors dim:  torch.Size([40, 549, 200])
Question Passage Similarity dim:  torch.Size([40, 549])
Question passage attention dim:  torch.Size([40, 549])
Final Merged Passage dim:  torch.Size([40, 549, 800])
Modeled Passage dim:  torch.Size([40, 549, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 549, 1000])
Span start logits:  torch.Size([40, 549])
span start probs dim:  torch.Size([40, 549])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 549]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1312, 200])
Passage Length:  1312
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1312, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1312, 12])
Passage ques attention dim:  torch.Size([40, 1312, 12])
Passage question vectors dim:  torch.Size([40, 1312, 200])
Question Passage Similarity dim:  torch.Size([40, 1312])
Question passage attention dim:  torch.Size([40, 1312])
Final Merged Passage dim:  torch.Size([40, 1312, 800])
Modeled Passage dim:  torch.Size([40, 1312, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1312, 1000])
Span start logits:  torch.Size([40, 1312])
span start probs dim:  torch.Size([40, 1312])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1312]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 640, 200])
Passage Length:  640
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 640, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 640, 13])
Passage ques attention dim:  torch.Size([40, 640, 13])
Passage question vectors dim:  torch.Size([40, 640, 200])
Question Passage Similarity dim:  torch.Size([40, 640])
Question passage attention dim:  torch.Size([40, 640])
Final Merged Passage dim:  torch.Size([40, 640, 800])
Modeled Passage dim:  torch.Size([40, 640, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 640, 1000])
Span start logits:  torch.Size([40, 640])
span start probs dim:  torch.Size([40, 640])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 640]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 596, 200])
Passage Length:  596
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 596, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 596, 16])
Passage ques attention dim:  torch.Size([40, 596, 16])
Passage question vectors dim:  torch.Size([40, 596, 200])
Question Passage Similarity dim:  torch.Size([40, 596])
Question passage attention dim:  torch.Size([40, 596])
Final Merged Passage dim:  torch.Size([40, 596, 800])
Modeled Passage dim:  torch.Size([40, 596, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 596, 1000])
Span start logits:  torch.Size([40, 596])
span start probs dim:  torch.Size([40, 596])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 596]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 605, 200])
Passage Length:  605
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 605, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 605, 16])
Passage ques attention dim:  torch.Size([40, 605, 16])
Passage question vectors dim:  torch.Size([40, 605, 200])
Question Passage Similarity dim:  torch.Size([40, 605])
Question passage attention dim:  torch.Size([40, 605])
Final Merged Passage dim:  torch.Size([40, 605, 800])
Modeled Passage dim:  torch.Size([40, 605, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 605, 1000])
Span start logits:  torch.Size([40, 605])
span start probs dim:  torch.Size([40, 605])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 605]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 391, 200])
Passage Length:  391
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 391, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 391, 15])
Passage ques attention dim:  torch.Size([40, 391, 15])
Passage question vectors dim:  torch.Size([40, 391, 200])
Question Passage Similarity dim:  torch.Size([40, 391])
Question passage attention dim:  torch.Size([40, 391])
Final Merged Passage dim:  torch.Size([40, 391, 800])
Modeled Passage dim:  torch.Size([40, 391, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 391, 1000])
Span start logits:  torch.Size([40, 391])
span start probs dim:  torch.Size([40, 391])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 391]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 684, 200])
Passage Length:  684
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 684, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 684, 15])
Passage ques attention dim:  torch.Size([40, 684, 15])
Passage question vectors dim:  torch.Size([40, 684, 200])
Question Passage Similarity dim:  torch.Size([40, 684])
Question passage attention dim:  torch.Size([40, 684])
Final Merged Passage dim:  torch.Size([40, 684, 800])
Modeled Passage dim:  torch.Size([40, 684, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 684, 1000])
Span start logits:  torch.Size([40, 684])
span start probs dim:  torch.Size([40, 684])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 684]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 335, 200])
Passage Length:  335
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 335, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 335, 31])
Passage ques attention dim:  torch.Size([40, 335, 31])
Passage question vectors dim:  torch.Size([40, 335, 200])
Question Passage Similarity dim:  torch.Size([40, 335])
Question passage attention dim:  torch.Size([40, 335])
Final Merged Passage dim:  torch.Size([40, 335, 800])
Modeled Passage dim:  torch.Size([40, 335, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 335, 1000])
Span start logits:  torch.Size([40, 335])
span start probs dim:  torch.Size([40, 335])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 335]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 396, 200])
Passage Length:  396
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 396, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 396, 16])
Passage ques attention dim:  torch.Size([40, 396, 16])
Passage question vectors dim:  torch.Size([40, 396, 200])
Question Passage Similarity dim:  torch.Size([40, 396])
Question passage attention dim:  torch.Size([40, 396])
Final Merged Passage dim:  torch.Size([40, 396, 800])
Modeled Passage dim:  torch.Size([40, 396, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 396, 1000])
Span start logits:  torch.Size([40, 396])
span start probs dim:  torch.Size([40, 396])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 396]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1314, 200])
Passage Length:  1314
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1314, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1314, 16])
Passage ques attention dim:  torch.Size([40, 1314, 16])
Passage question vectors dim:  torch.Size([40, 1314, 200])
Question Passage Similarity dim:  torch.Size([40, 1314])
Question passage attention dim:  torch.Size([40, 1314])
Final Merged Passage dim:  torch.Size([40, 1314, 800])
Modeled Passage dim:  torch.Size([40, 1314, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1314, 1000])
Span start logits:  torch.Size([40, 1314])
span start probs dim:  torch.Size([40, 1314])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1314]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 31, 200])
Embedded passage dim:  torch.Size([40, 313, 200])
Passage Length:  313
Encoded question dim:  torch.Size([40, 31, 200])
Encoded passage dim:  torch.Size([40, 313, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 313, 31])
Passage ques attention dim:  torch.Size([40, 313, 31])
Passage question vectors dim:  torch.Size([40, 313, 200])
Question Passage Similarity dim:  torch.Size([40, 313])
Question passage attention dim:  torch.Size([40, 313])
Final Merged Passage dim:  torch.Size([40, 313, 800])
Modeled Passage dim:  torch.Size([40, 313, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 313, 1000])
Span start logits:  torch.Size([40, 313])
span start probs dim:  torch.Size([40, 313])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 313]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 423, 200])
Passage Length:  423
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 423, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 423, 16])
Passage ques attention dim:  torch.Size([40, 423, 16])
Passage question vectors dim:  torch.Size([40, 423, 200])
Question Passage Similarity dim:  torch.Size([40, 423])
Question passage attention dim:  torch.Size([40, 423])
Final Merged Passage dim:  torch.Size([40, 423, 800])
Modeled Passage dim:  torch.Size([40, 423, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 423, 1000])
Span start logits:  torch.Size([40, 423])
span start probs dim:  torch.Size([40, 423])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 423]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 355, 200])
Passage Length:  355
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 355, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 355, 13])
Passage ques attention dim:  torch.Size([40, 355, 13])
Passage question vectors dim:  torch.Size([40, 355, 200])
Question Passage Similarity dim:  torch.Size([40, 355])
Question passage attention dim:  torch.Size([40, 355])
Final Merged Passage dim:  torch.Size([40, 355, 800])
Modeled Passage dim:  torch.Size([40, 355, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 355, 1000])
Span start logits:  torch.Size([40, 355])
span start probs dim:  torch.Size([40, 355])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 355]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 898, 200])
Passage Length:  898
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 898, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 898, 16])
Passage ques attention dim:  torch.Size([40, 898, 16])
Passage question vectors dim:  torch.Size([40, 898, 200])
Question Passage Similarity dim:  torch.Size([40, 898])
Question passage attention dim:  torch.Size([40, 898])
Final Merged Passage dim:  torch.Size([40, 898, 800])
Modeled Passage dim:  torch.Size([40, 898, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 898, 1000])
Span start logits:  torch.Size([40, 898])
span start probs dim:  torch.Size([40, 898])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 898]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 634, 200])
Passage Length:  634
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 634, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 634, 14])
Passage ques attention dim:  torch.Size([40, 634, 14])
Passage question vectors dim:  torch.Size([40, 634, 200])
Question Passage Similarity dim:  torch.Size([40, 634])
Question passage attention dim:  torch.Size([40, 634])
Final Merged Passage dim:  torch.Size([40, 634, 800])
Modeled Passage dim:  torch.Size([40, 634, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 634, 1000])
Span start logits:  torch.Size([40, 634])
span start probs dim:  torch.Size([40, 634])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 634]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 576, 16])
Passage ques attention dim:  torch.Size([40, 576, 16])
Passage question vectors dim:  torch.Size([40, 576, 200])
Question Passage Similarity dim:  torch.Size([40, 576])
Question passage attention dim:  torch.Size([40, 576])
Final Merged Passage dim:  torch.Size([40, 576, 800])
Modeled Passage dim:  torch.Size([40, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 576, 1000])
Span start logits:  torch.Size([40, 576])
span start probs dim:  torch.Size([40, 576])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 576]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 436, 200])
Passage Length:  436
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 436, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 436, 14])
Passage ques attention dim:  torch.Size([40, 436, 14])
Passage question vectors dim:  torch.Size([40, 436, 200])
Question Passage Similarity dim:  torch.Size([40, 436])
Question passage attention dim:  torch.Size([40, 436])
Final Merged Passage dim:  torch.Size([40, 436, 800])
Modeled Passage dim:  torch.Size([40, 436, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 436, 1000])
Span start logits:  torch.Size([40, 436])
span start probs dim:  torch.Size([40, 436])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 436]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 395, 200])
Passage Length:  395
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 395, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 395, 15])
Passage ques attention dim:  torch.Size([40, 395, 15])
Passage question vectors dim:  torch.Size([40, 395, 200])
Question Passage Similarity dim:  torch.Size([40, 395])
Question passage attention dim:  torch.Size([40, 395])
Final Merged Passage dim:  torch.Size([40, 395, 800])
Modeled Passage dim:  torch.Size([40, 395, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 395, 1000])
Span start logits:  torch.Size([40, 395])
span start probs dim:  torch.Size([40, 395])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 395]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 650, 200])
Passage Length:  650
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 650, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 650, 13])
Passage ques attention dim:  torch.Size([40, 650, 13])
Passage question vectors dim:  torch.Size([40, 650, 200])
Question Passage Similarity dim:  torch.Size([40, 650])
Question passage attention dim:  torch.Size([40, 650])
Final Merged Passage dim:  torch.Size([40, 650, 800])
Modeled Passage dim:  torch.Size([40, 650, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 650, 1000])
Span start logits:  torch.Size([40, 650])
span start probs dim:  torch.Size([40, 650])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 650]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 278, 200])
Passage Length:  278
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 278, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 278, 12])
Passage ques attention dim:  torch.Size([40, 278, 12])
Passage question vectors dim:  torch.Size([40, 278, 200])
Question Passage Similarity dim:  torch.Size([40, 278])
Question passage attention dim:  torch.Size([40, 278])
Final Merged Passage dim:  torch.Size([40, 278, 800])
Modeled Passage dim:  torch.Size([40, 278, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 278, 1000])
Span start logits:  torch.Size([40, 278])
span start probs dim:  torch.Size([40, 278])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 278]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 384, 200])
Passage Length:  384
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 384, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 384, 15])
Passage ques attention dim:  torch.Size([40, 384, 15])
Passage question vectors dim:  torch.Size([40, 384, 200])
Question Passage Similarity dim:  torch.Size([40, 384])
Question passage attention dim:  torch.Size([40, 384])
Final Merged Passage dim:  torch.Size([40, 384, 800])
Modeled Passage dim:  torch.Size([40, 384, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 384, 1000])
Span start logits:  torch.Size([40, 384])
span start probs dim:  torch.Size([40, 384])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 384]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 567, 200])
Passage Length:  567
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 567, 13])
Passage ques attention dim:  torch.Size([40, 567, 13])
Passage question vectors dim:  torch.Size([40, 567, 200])
Question Passage Similarity dim:  torch.Size([40, 567])
Question passage attention dim:  torch.Size([40, 567])
Final Merged Passage dim:  torch.Size([40, 567, 800])
Modeled Passage dim:  torch.Size([40, 567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 567, 1000])
Span start logits:  torch.Size([40, 567])
span start probs dim:  torch.Size([40, 567])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 567]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 932, 200])
Passage Length:  932
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 932, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 932, 12])
Passage ques attention dim:  torch.Size([40, 932, 12])
Passage question vectors dim:  torch.Size([40, 932, 200])
Question Passage Similarity dim:  torch.Size([40, 932])
Question passage attention dim:  torch.Size([40, 932])
Final Merged Passage dim:  torch.Size([40, 932, 800])
Modeled Passage dim:  torch.Size([40, 932, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 932, 1000])
Span start logits:  torch.Size([40, 932])
span start probs dim:  torch.Size([40, 932])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 932]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 593, 200])
Passage Length:  593
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 593, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 593, 16])
Passage ques attention dim:  torch.Size([40, 593, 16])
Passage question vectors dim:  torch.Size([40, 593, 200])
Question Passage Similarity dim:  torch.Size([40, 593])
Question passage attention dim:  torch.Size([40, 593])
Final Merged Passage dim:  torch.Size([40, 593, 800])
Modeled Passage dim:  torch.Size([40, 593, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 593, 1000])
Span start logits:  torch.Size([40, 593])
span start probs dim:  torch.Size([40, 593])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 593]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 697, 200])
Passage Length:  697
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 697, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 697, 17])
Passage ques attention dim:  torch.Size([40, 697, 17])
Passage question vectors dim:  torch.Size([40, 697, 200])
Question Passage Similarity dim:  torch.Size([40, 697])
Question passage attention dim:  torch.Size([40, 697])
Final Merged Passage dim:  torch.Size([40, 697, 800])
Modeled Passage dim:  torch.Size([40, 697, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 697, 1000])
Span start logits:  torch.Size([40, 697])
span start probs dim:  torch.Size([40, 697])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 697]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1744, 200])
Passage Length:  1744
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1744, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1744, 15])
Passage ques attention dim:  torch.Size([40, 1744, 15])
Passage question vectors dim:  torch.Size([40, 1744, 200])
Question Passage Similarity dim:  torch.Size([40, 1744])
Question passage attention dim:  torch.Size([40, 1744])
Final Merged Passage dim:  torch.Size([40, 1744, 800])
Modeled Passage dim:  torch.Size([40, 1744, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1744, 1000])
Span start logits:  torch.Size([40, 1744])
span start probs dim:  torch.Size([40, 1744])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1744]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 242, 200])
Passage Length:  242
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 242, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 242, 14])
Passage ques attention dim:  torch.Size([40, 242, 14])
Passage question vectors dim:  torch.Size([40, 242, 200])
Question Passage Similarity dim:  torch.Size([40, 242])
Question passage attention dim:  torch.Size([40, 242])
Final Merged Passage dim:  torch.Size([40, 242, 800])
Modeled Passage dim:  torch.Size([40, 242, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 242, 1000])
Span start logits:  torch.Size([40, 242])
span start probs dim:  torch.Size([40, 242])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 242]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 404, 200])
Passage Length:  404
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 404, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 404, 15])
Passage ques attention dim:  torch.Size([40, 404, 15])
Passage question vectors dim:  torch.Size([40, 404, 200])
Question Passage Similarity dim:  torch.Size([40, 404])
Question passage attention dim:  torch.Size([40, 404])
Final Merged Passage dim:  torch.Size([40, 404, 800])
Modeled Passage dim:  torch.Size([40, 404, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 404, 1000])
Span start logits:  torch.Size([40, 404])
span start probs dim:  torch.Size([40, 404])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 404]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 478, 200])
Passage Length:  478
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 478, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 478, 18])
Passage ques attention dim:  torch.Size([40, 478, 18])
Passage question vectors dim:  torch.Size([40, 478, 200])
Question Passage Similarity dim:  torch.Size([40, 478])
Question passage attention dim:  torch.Size([40, 478])
Final Merged Passage dim:  torch.Size([40, 478, 800])
Modeled Passage dim:  torch.Size([40, 478, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 478, 1000])
Span start logits:  torch.Size([40, 478])
span start probs dim:  torch.Size([40, 478])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 478]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1195, 200])
Passage Length:  1195
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1195, 14])
Passage ques attention dim:  torch.Size([40, 1195, 14])
Passage question vectors dim:  torch.Size([40, 1195, 200])
Question Passage Similarity dim:  torch.Size([40, 1195])
Question passage attention dim:  torch.Size([40, 1195])
Final Merged Passage dim:  torch.Size([40, 1195, 800])
Modeled Passage dim:  torch.Size([40, 1195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1195, 1000])
Span start logits:  torch.Size([40, 1195])
span start probs dim:  torch.Size([40, 1195])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1195]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 253, 200])
Passage Length:  253
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 253, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 253, 15])
Passage ques attention dim:  torch.Size([40, 253, 15])
Passage question vectors dim:  torch.Size([40, 253, 200])
Question Passage Similarity dim:  torch.Size([40, 253])
Question passage attention dim:  torch.Size([40, 253])
Final Merged Passage dim:  torch.Size([40, 253, 800])
Modeled Passage dim:  torch.Size([40, 253, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 253, 1000])
Span start logits:  torch.Size([40, 253])
span start probs dim:  torch.Size([40, 253])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 253]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 283, 200])
Passage Length:  283
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 283, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 283, 14])
Passage ques attention dim:  torch.Size([40, 283, 14])
Passage question vectors dim:  torch.Size([40, 283, 200])
Question Passage Similarity dim:  torch.Size([40, 283])
Question passage attention dim:  torch.Size([40, 283])
Final Merged Passage dim:  torch.Size([40, 283, 800])
Modeled Passage dim:  torch.Size([40, 283, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 283, 1000])
Span start logits:  torch.Size([40, 283])
span start probs dim:  torch.Size([40, 283])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 283]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 332, 200])
Passage Length:  332
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 332, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 332, 20])
Passage ques attention dim:  torch.Size([40, 332, 20])
Passage question vectors dim:  torch.Size([40, 332, 200])
Question Passage Similarity dim:  torch.Size([40, 332])
Question passage attention dim:  torch.Size([40, 332])
Final Merged Passage dim:  torch.Size([40, 332, 800])
Modeled Passage dim:  torch.Size([40, 332, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 332, 1000])
Span start logits:  torch.Size([40, 332])
span start probs dim:  torch.Size([40, 332])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 332]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 341, 200])
Passage Length:  341
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 341, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 341, 12])
Passage ques attention dim:  torch.Size([40, 341, 12])
Passage question vectors dim:  torch.Size([40, 341, 200])
Question Passage Similarity dim:  torch.Size([40, 341])
Question passage attention dim:  torch.Size([40, 341])
Final Merged Passage dim:  torch.Size([40, 341, 800])
Modeled Passage dim:  torch.Size([40, 341, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 341, 1000])
Span start logits:  torch.Size([40, 341])
span start probs dim:  torch.Size([40, 341])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 341]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 386, 200])
Passage Length:  386
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 386, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 386, 16])
Passage ques attention dim:  torch.Size([40, 386, 16])
Passage question vectors dim:  torch.Size([40, 386, 200])
Question Passage Similarity dim:  torch.Size([40, 386])
Question passage attention dim:  torch.Size([40, 386])
Final Merged Passage dim:  torch.Size([40, 386, 800])
Modeled Passage dim:  torch.Size([40, 386, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 386, 1000])
Span start logits:  torch.Size([40, 386])
span start probs dim:  torch.Size([40, 386])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 386]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 591, 200])
Passage Length:  591
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 591, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 591, 14])
Passage ques attention dim:  torch.Size([40, 591, 14])
Passage question vectors dim:  torch.Size([40, 591, 200])
Question Passage Similarity dim:  torch.Size([40, 591])
Question passage attention dim:  torch.Size([40, 591])
Final Merged Passage dim:  torch.Size([40, 591, 800])
Modeled Passage dim:  torch.Size([40, 591, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 591, 1000])
Span start logits:  torch.Size([40, 591])
span start probs dim:  torch.Size([40, 591])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 591]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 987, 200])
Passage Length:  987
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 987, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 987, 14])
Passage ques attention dim:  torch.Size([40, 987, 14])
Passage question vectors dim:  torch.Size([40, 987, 200])
Question Passage Similarity dim:  torch.Size([40, 987])
Question passage attention dim:  torch.Size([40, 987])
Final Merged Passage dim:  torch.Size([40, 987, 800])
Modeled Passage dim:  torch.Size([40, 987, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 987, 1000])
Span start logits:  torch.Size([40, 987])
span start probs dim:  torch.Size([40, 987])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 987]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 446, 200])
Passage Length:  446
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 446, 19])
Passage ques attention dim:  torch.Size([40, 446, 19])
Passage question vectors dim:  torch.Size([40, 446, 200])
Question Passage Similarity dim:  torch.Size([40, 446])
Question passage attention dim:  torch.Size([40, 446])
Final Merged Passage dim:  torch.Size([40, 446, 800])
Modeled Passage dim:  torch.Size([40, 446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 446, 1000])
Span start logits:  torch.Size([40, 446])
span start probs dim:  torch.Size([40, 446])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 446]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1449, 200])
Passage Length:  1449
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1449, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1449, 16])
Passage ques attention dim:  torch.Size([40, 1449, 16])
Passage question vectors dim:  torch.Size([40, 1449, 200])
Question Passage Similarity dim:  torch.Size([40, 1449])
Question passage attention dim:  torch.Size([40, 1449])
Final Merged Passage dim:  torch.Size([40, 1449, 800])
Modeled Passage dim:  torch.Size([40, 1449, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1449, 1000])
Span start logits:  torch.Size([40, 1449])
span start probs dim:  torch.Size([40, 1449])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1449]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1363, 200])
Passage Length:  1363
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1363, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1363, 18])
Passage ques attention dim:  torch.Size([40, 1363, 18])
Passage question vectors dim:  torch.Size([40, 1363, 200])
Question Passage Similarity dim:  torch.Size([40, 1363])
Question passage attention dim:  torch.Size([40, 1363])
Final Merged Passage dim:  torch.Size([40, 1363, 800])
Modeled Passage dim:  torch.Size([40, 1363, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1363, 1000])
Span start logits:  torch.Size([40, 1363])
span start probs dim:  torch.Size([40, 1363])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1363]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 410, 200])
Passage Length:  410
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 410, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 410, 18])
Passage ques attention dim:  torch.Size([40, 410, 18])
Passage question vectors dim:  torch.Size([40, 410, 200])
Question Passage Similarity dim:  torch.Size([40, 410])
Question passage attention dim:  torch.Size([40, 410])
Final Merged Passage dim:  torch.Size([40, 410, 800])
Modeled Passage dim:  torch.Size([40, 410, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 410, 1000])
Span start logits:  torch.Size([40, 410])
span start probs dim:  torch.Size([40, 410])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 410]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1207, 200])
Passage Length:  1207
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1207, 15])
Passage ques attention dim:  torch.Size([40, 1207, 15])
Passage question vectors dim:  torch.Size([40, 1207, 200])
Question Passage Similarity dim:  torch.Size([40, 1207])
Question passage attention dim:  torch.Size([40, 1207])
Final Merged Passage dim:  torch.Size([40, 1207, 800])
Modeled Passage dim:  torch.Size([40, 1207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1207, 1000])
Span start logits:  torch.Size([40, 1207])
span start probs dim:  torch.Size([40, 1207])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1207]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 824, 200])
Passage Length:  824
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 824, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 824, 17])
Passage ques attention dim:  torch.Size([40, 824, 17])
Passage question vectors dim:  torch.Size([40, 824, 200])
Question Passage Similarity dim:  torch.Size([40, 824])
Question passage attention dim:  torch.Size([40, 824])
Final Merged Passage dim:  torch.Size([40, 824, 800])
Modeled Passage dim:  torch.Size([40, 824, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 824, 1000])
Span start logits:  torch.Size([40, 824])
span start probs dim:  torch.Size([40, 824])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 824]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 246, 15])
Passage ques attention dim:  torch.Size([40, 246, 15])
Passage question vectors dim:  torch.Size([40, 246, 200])
Question Passage Similarity dim:  torch.Size([40, 246])
Question passage attention dim:  torch.Size([40, 246])
Final Merged Passage dim:  torch.Size([40, 246, 800])
Modeled Passage dim:  torch.Size([40, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 246, 1000])
Span start logits:  torch.Size([40, 246])
span start probs dim:  torch.Size([40, 246])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 246]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1144, 200])
Passage Length:  1144
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1144, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1144, 16])
Passage ques attention dim:  torch.Size([40, 1144, 16])
Passage question vectors dim:  torch.Size([40, 1144, 200])
Question Passage Similarity dim:  torch.Size([40, 1144])
Question passage attention dim:  torch.Size([40, 1144])
Final Merged Passage dim:  torch.Size([40, 1144, 800])
Modeled Passage dim:  torch.Size([40, 1144, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1144, 1000])
Span start logits:  torch.Size([40, 1144])
span start probs dim:  torch.Size([40, 1144])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1144]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 330, 200])
Passage Length:  330
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 330, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 330, 17])
Passage ques attention dim:  torch.Size([40, 330, 17])
Passage question vectors dim:  torch.Size([40, 330, 200])
Question Passage Similarity dim:  torch.Size([40, 330])
Question passage attention dim:  torch.Size([40, 330])
Final Merged Passage dim:  torch.Size([40, 330, 800])
Modeled Passage dim:  torch.Size([40, 330, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 330, 1000])
Span start logits:  torch.Size([40, 330])
span start probs dim:  torch.Size([40, 330])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 330]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1167, 200])
Passage Length:  1167
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1167, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1167, 14])
Passage ques attention dim:  torch.Size([40, 1167, 14])
Passage question vectors dim:  torch.Size([40, 1167, 200])
Question Passage Similarity dim:  torch.Size([40, 1167])
Question passage attention dim:  torch.Size([40, 1167])
Final Merged Passage dim:  torch.Size([40, 1167, 800])
Modeled Passage dim:  torch.Size([40, 1167, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1167, 1000])
Span start logits:  torch.Size([40, 1167])
span start probs dim:  torch.Size([40, 1167])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1167]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 388, 200])
Passage Length:  388
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 388, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 388, 14])
Passage ques attention dim:  torch.Size([40, 388, 14])
Passage question vectors dim:  torch.Size([40, 388, 200])
Question Passage Similarity dim:  torch.Size([40, 388])
Question passage attention dim:  torch.Size([40, 388])
Final Merged Passage dim:  torch.Size([40, 388, 800])
Modeled Passage dim:  torch.Size([40, 388, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 388, 1000])
Span start logits:  torch.Size([40, 388])
span start probs dim:  torch.Size([40, 388])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 388]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 892, 200])
Passage Length:  892
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 892, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 892, 14])
Passage ques attention dim:  torch.Size([40, 892, 14])
Passage question vectors dim:  torch.Size([40, 892, 200])
Question Passage Similarity dim:  torch.Size([40, 892])
Question passage attention dim:  torch.Size([40, 892])
Final Merged Passage dim:  torch.Size([40, 892, 800])
Modeled Passage dim:  torch.Size([40, 892, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 892, 1000])
Span start logits:  torch.Size([40, 892])
span start probs dim:  torch.Size([40, 892])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 892]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 538, 200])
Passage Length:  538
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 538, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 538, 16])
Passage ques attention dim:  torch.Size([40, 538, 16])
Passage question vectors dim:  torch.Size([40, 538, 200])
Question Passage Similarity dim:  torch.Size([40, 538])
Question passage attention dim:  torch.Size([40, 538])
Final Merged Passage dim:  torch.Size([40, 538, 800])
Modeled Passage dim:  torch.Size([40, 538, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 538, 1000])
Span start logits:  torch.Size([40, 538])
span start probs dim:  torch.Size([40, 538])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 538]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 882, 200])
Passage Length:  882
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 882, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 882, 14])
Passage ques attention dim:  torch.Size([40, 882, 14])
Passage question vectors dim:  torch.Size([40, 882, 200])
Question Passage Similarity dim:  torch.Size([40, 882])
Question passage attention dim:  torch.Size([40, 882])
Final Merged Passage dim:  torch.Size([40, 882, 800])
Modeled Passage dim:  torch.Size([40, 882, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 882, 1000])
Span start logits:  torch.Size([40, 882])
span start probs dim:  torch.Size([40, 882])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 882]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 679, 200])
Passage Length:  679
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 679, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 679, 15])
Passage ques attention dim:  torch.Size([40, 679, 15])
Passage question vectors dim:  torch.Size([40, 679, 200])
Question Passage Similarity dim:  torch.Size([40, 679])
Question passage attention dim:  torch.Size([40, 679])
Final Merged Passage dim:  torch.Size([40, 679, 800])
Modeled Passage dim:  torch.Size([40, 679, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 679, 1000])
Span start logits:  torch.Size([40, 679])
span start probs dim:  torch.Size([40, 679])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 679]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 976, 200])
Passage Length:  976
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 976, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 976, 19])
Passage ques attention dim:  torch.Size([40, 976, 19])
Passage question vectors dim:  torch.Size([40, 976, 200])
Question Passage Similarity dim:  torch.Size([40, 976])
Question passage attention dim:  torch.Size([40, 976])
Final Merged Passage dim:  torch.Size([40, 976, 800])
Modeled Passage dim:  torch.Size([40, 976, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 976, 1000])
Span start logits:  torch.Size([40, 976])
span start probs dim:  torch.Size([40, 976])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 976]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 404, 200])
Passage Length:  404
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 404, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 404, 12])
Passage ques attention dim:  torch.Size([40, 404, 12])
Passage question vectors dim:  torch.Size([40, 404, 200])
Question Passage Similarity dim:  torch.Size([40, 404])
Question passage attention dim:  torch.Size([40, 404])
Final Merged Passage dim:  torch.Size([40, 404, 800])
Modeled Passage dim:  torch.Size([40, 404, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 404, 1000])
Span start logits:  torch.Size([40, 404])
span start probs dim:  torch.Size([40, 404])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 404]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 308, 200])
Passage Length:  308
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 308, 18])
Passage ques attention dim:  torch.Size([40, 308, 18])
Passage question vectors dim:  torch.Size([40, 308, 200])
Question Passage Similarity dim:  torch.Size([40, 308])
Question passage attention dim:  torch.Size([40, 308])
Final Merged Passage dim:  torch.Size([40, 308, 800])
Modeled Passage dim:  torch.Size([40, 308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 308, 1000])
Span start logits:  torch.Size([40, 308])
span start probs dim:  torch.Size([40, 308])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 308]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1168, 200])
Passage Length:  1168
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1168, 14])
Passage ques attention dim:  torch.Size([40, 1168, 14])
Passage question vectors dim:  torch.Size([40, 1168, 200])
Question Passage Similarity dim:  torch.Size([40, 1168])
Question passage attention dim:  torch.Size([40, 1168])
Final Merged Passage dim:  torch.Size([40, 1168, 800])
Modeled Passage dim:  torch.Size([40, 1168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1168, 1000])
Span start logits:  torch.Size([40, 1168])
span start probs dim:  torch.Size([40, 1168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 659, 200])
Passage Length:  659
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 659, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 659, 12])
Passage ques attention dim:  torch.Size([40, 659, 12])
Passage question vectors dim:  torch.Size([40, 659, 200])
Question Passage Similarity dim:  torch.Size([40, 659])
Question passage attention dim:  torch.Size([40, 659])
Final Merged Passage dim:  torch.Size([40, 659, 800])
Modeled Passage dim:  torch.Size([40, 659, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 659, 1000])
Span start logits:  torch.Size([40, 659])
span start probs dim:  torch.Size([40, 659])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 659]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 490, 200])
Passage Length:  490
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 490, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 490, 16])
Passage ques attention dim:  torch.Size([40, 490, 16])
Passage question vectors dim:  torch.Size([40, 490, 200])
Question Passage Similarity dim:  torch.Size([40, 490])
Question passage attention dim:  torch.Size([40, 490])
Final Merged Passage dim:  torch.Size([40, 490, 800])
Modeled Passage dim:  torch.Size([40, 490, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 490, 1000])
Span start logits:  torch.Size([40, 490])
span start probs dim:  torch.Size([40, 490])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 490]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 239, 200])
Passage Length:  239
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 239, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 239, 12])
Passage ques attention dim:  torch.Size([40, 239, 12])
Passage question vectors dim:  torch.Size([40, 239, 200])
Question Passage Similarity dim:  torch.Size([40, 239])
Question passage attention dim:  torch.Size([40, 239])
Final Merged Passage dim:  torch.Size([40, 239, 800])
Modeled Passage dim:  torch.Size([40, 239, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 239, 1000])
Span start logits:  torch.Size([40, 239])
span start probs dim:  torch.Size([40, 239])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 239]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1097, 200])
Passage Length:  1097
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1097, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1097, 14])
Passage ques attention dim:  torch.Size([40, 1097, 14])
Passage question vectors dim:  torch.Size([40, 1097, 200])
Question Passage Similarity dim:  torch.Size([40, 1097])
Question passage attention dim:  torch.Size([40, 1097])
Final Merged Passage dim:  torch.Size([40, 1097, 800])
Modeled Passage dim:  torch.Size([40, 1097, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1097, 1000])
Span start logits:  torch.Size([40, 1097])
span start probs dim:  torch.Size([40, 1097])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1097]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 854, 200])
Passage Length:  854
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 854, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 854, 18])
Passage ques attention dim:  torch.Size([40, 854, 18])
Passage question vectors dim:  torch.Size([40, 854, 200])
Question Passage Similarity dim:  torch.Size([40, 854])
Question passage attention dim:  torch.Size([40, 854])
Final Merged Passage dim:  torch.Size([40, 854, 800])
Modeled Passage dim:  torch.Size([40, 854, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 854, 1000])
Span start logits:  torch.Size([40, 854])
span start probs dim:  torch.Size([40, 854])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 854]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 1081, 200])
Passage Length:  1081
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 1081, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1081, 10])
Passage ques attention dim:  torch.Size([40, 1081, 10])
Passage question vectors dim:  torch.Size([40, 1081, 200])
Question Passage Similarity dim:  torch.Size([40, 1081])
Question passage attention dim:  torch.Size([40, 1081])
Final Merged Passage dim:  torch.Size([40, 1081, 800])
Modeled Passage dim:  torch.Size([40, 1081, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1081, 1000])
Span start logits:  torch.Size([40, 1081])
span start probs dim:  torch.Size([40, 1081])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1081]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 308, 200])
Passage Length:  308
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 308, 15])
Passage ques attention dim:  torch.Size([40, 308, 15])
Passage question vectors dim:  torch.Size([40, 308, 200])
Question Passage Similarity dim:  torch.Size([40, 308])
Question passage attention dim:  torch.Size([40, 308])
Final Merged Passage dim:  torch.Size([40, 308, 800])
Modeled Passage dim:  torch.Size([40, 308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 308, 1000])
Span start logits:  torch.Size([40, 308])
span start probs dim:  torch.Size([40, 308])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 308]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 523, 200])
Passage Length:  523
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 523, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 523, 13])
Passage ques attention dim:  torch.Size([40, 523, 13])
Passage question vectors dim:  torch.Size([40, 523, 200])
Question Passage Similarity dim:  torch.Size([40, 523])
Question passage attention dim:  torch.Size([40, 523])
Final Merged Passage dim:  torch.Size([40, 523, 800])
Modeled Passage dim:  torch.Size([40, 523, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 523, 1000])
Span start logits:  torch.Size([40, 523])
span start probs dim:  torch.Size([40, 523])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 523]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1257, 200])
Passage Length:  1257
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1257, 16])
Passage ques attention dim:  torch.Size([40, 1257, 16])
Passage question vectors dim:  torch.Size([40, 1257, 200])
Question Passage Similarity dim:  torch.Size([40, 1257])
Question passage attention dim:  torch.Size([40, 1257])
Final Merged Passage dim:  torch.Size([40, 1257, 800])
Modeled Passage dim:  torch.Size([40, 1257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1257, 1000])
Span start logits:  torch.Size([40, 1257])
span start probs dim:  torch.Size([40, 1257])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1257]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1188, 200])
Passage Length:  1188
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1188, 15])
Passage ques attention dim:  torch.Size([40, 1188, 15])
Passage question vectors dim:  torch.Size([40, 1188, 200])
Question Passage Similarity dim:  torch.Size([40, 1188])
Question passage attention dim:  torch.Size([40, 1188])
Final Merged Passage dim:  torch.Size([40, 1188, 800])
Modeled Passage dim:  torch.Size([40, 1188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1188, 1000])
Span start logits:  torch.Size([40, 1188])
span start probs dim:  torch.Size([40, 1188])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1188]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 317, 200])
Passage Length:  317
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 317, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 317, 12])
Passage ques attention dim:  torch.Size([40, 317, 12])
Passage question vectors dim:  torch.Size([40, 317, 200])
Question Passage Similarity dim:  torch.Size([40, 317])
Question passage attention dim:  torch.Size([40, 317])
Final Merged Passage dim:  torch.Size([40, 317, 800])
Modeled Passage dim:  torch.Size([40, 317, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 317, 1000])
Span start logits:  torch.Size([40, 317])
span start probs dim:  torch.Size([40, 317])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 317]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 480, 200])
Passage Length:  480
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 480, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 480, 16])
Passage ques attention dim:  torch.Size([40, 480, 16])
Passage question vectors dim:  torch.Size([40, 480, 200])
Question Passage Similarity dim:  torch.Size([40, 480])
Question passage attention dim:  torch.Size([40, 480])
Final Merged Passage dim:  torch.Size([40, 480, 800])
Modeled Passage dim:  torch.Size([40, 480, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 480, 1000])
Span start logits:  torch.Size([40, 480])
span start probs dim:  torch.Size([40, 480])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 480]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1291, 200])
Passage Length:  1291
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1291, 17])
Passage ques attention dim:  torch.Size([40, 1291, 17])
Passage question vectors dim:  torch.Size([40, 1291, 200])
Question Passage Similarity dim:  torch.Size([40, 1291])
Question passage attention dim:  torch.Size([40, 1291])
Final Merged Passage dim:  torch.Size([40, 1291, 800])
Modeled Passage dim:  torch.Size([40, 1291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1291, 1000])
Span start logits:  torch.Size([40, 1291])
span start probs dim:  torch.Size([40, 1291])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1291]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 471, 200])
Passage Length:  471
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 471, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 471, 14])
Passage ques attention dim:  torch.Size([40, 471, 14])
Passage question vectors dim:  torch.Size([40, 471, 200])
Question Passage Similarity dim:  torch.Size([40, 471])
Question passage attention dim:  torch.Size([40, 471])
Final Merged Passage dim:  torch.Size([40, 471, 800])
Modeled Passage dim:  torch.Size([40, 471, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 471, 1000])
Span start logits:  torch.Size([40, 471])
span start probs dim:  torch.Size([40, 471])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 471]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 415, 200])
Passage Length:  415
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 415, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 415, 17])
Passage ques attention dim:  torch.Size([40, 415, 17])
Passage question vectors dim:  torch.Size([40, 415, 200])
Question Passage Similarity dim:  torch.Size([40, 415])
Question passage attention dim:  torch.Size([40, 415])
Final Merged Passage dim:  torch.Size([40, 415, 800])
Modeled Passage dim:  torch.Size([40, 415, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 415, 1000])
Span start logits:  torch.Size([40, 415])
span start probs dim:  torch.Size([40, 415])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 415]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1000, 200])
Passage Length:  1000
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1000, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1000, 16])
Passage ques attention dim:  torch.Size([40, 1000, 16])
Passage question vectors dim:  torch.Size([40, 1000, 200])
Question Passage Similarity dim:  torch.Size([40, 1000])
Question passage attention dim:  torch.Size([40, 1000])
Final Merged Passage dim:  torch.Size([40, 1000, 800])
Modeled Passage dim:  torch.Size([40, 1000, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1000, 1000])
Span start logits:  torch.Size([40, 1000])
span start probs dim:  torch.Size([40, 1000])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1000]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 717, 200])
Passage Length:  717
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 717, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 717, 13])
Passage ques attention dim:  torch.Size([40, 717, 13])
Passage question vectors dim:  torch.Size([40, 717, 200])
Question Passage Similarity dim:  torch.Size([40, 717])
Question passage attention dim:  torch.Size([40, 717])
Final Merged Passage dim:  torch.Size([40, 717, 800])
Modeled Passage dim:  torch.Size([40, 717, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 717, 1000])
Span start logits:  torch.Size([40, 717])
span start probs dim:  torch.Size([40, 717])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 717]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 500, 200])
Passage Length:  500
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 500, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 500, 13])
Passage ques attention dim:  torch.Size([40, 500, 13])
Passage question vectors dim:  torch.Size([40, 500, 200])
Question Passage Similarity dim:  torch.Size([40, 500])
Question passage attention dim:  torch.Size([40, 500])
Final Merged Passage dim:  torch.Size([40, 500, 800])
Modeled Passage dim:  torch.Size([40, 500, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 500, 1000])
Span start logits:  torch.Size([40, 500])
span start probs dim:  torch.Size([40, 500])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 500]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 614, 200])
Passage Length:  614
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 614, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 614, 14])
Passage ques attention dim:  torch.Size([40, 614, 14])
Passage question vectors dim:  torch.Size([40, 614, 200])
Question Passage Similarity dim:  torch.Size([40, 614])
Question passage attention dim:  torch.Size([40, 614])
Final Merged Passage dim:  torch.Size([40, 614, 800])
Modeled Passage dim:  torch.Size([40, 614, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 614, 1000])
Span start logits:  torch.Size([40, 614])
span start probs dim:  torch.Size([40, 614])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 614]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1017, 200])
Passage Length:  1017
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1017, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1017, 14])
Passage ques attention dim:  torch.Size([40, 1017, 14])
Passage question vectors dim:  torch.Size([40, 1017, 200])
Question Passage Similarity dim:  torch.Size([40, 1017])
Question passage attention dim:  torch.Size([40, 1017])
Final Merged Passage dim:  torch.Size([40, 1017, 800])
Modeled Passage dim:  torch.Size([40, 1017, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1017, 1000])
Span start logits:  torch.Size([40, 1017])
span start probs dim:  torch.Size([40, 1017])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1017]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1070, 200])
Passage Length:  1070
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1070, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1070, 14])
Passage ques attention dim:  torch.Size([40, 1070, 14])
Passage question vectors dim:  torch.Size([40, 1070, 200])
Question Passage Similarity dim:  torch.Size([40, 1070])
Question passage attention dim:  torch.Size([40, 1070])
Final Merged Passage dim:  torch.Size([40, 1070, 800])
Modeled Passage dim:  torch.Size([40, 1070, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1070, 1000])
Span start logits:  torch.Size([40, 1070])
span start probs dim:  torch.Size([40, 1070])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1070]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 751, 200])
Passage Length:  751
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 751, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 751, 15])
Passage ques attention dim:  torch.Size([40, 751, 15])
Passage question vectors dim:  torch.Size([40, 751, 200])
Question Passage Similarity dim:  torch.Size([40, 751])
Question passage attention dim:  torch.Size([40, 751])
Final Merged Passage dim:  torch.Size([40, 751, 800])
Modeled Passage dim:  torch.Size([40, 751, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 751, 1000])
Span start logits:  torch.Size([40, 751])
span start probs dim:  torch.Size([40, 751])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 751]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 2096, 200])
Passage Length:  2096
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 2096, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2096, 13])
Passage ques attention dim:  torch.Size([40, 2096, 13])
Passage question vectors dim:  torch.Size([40, 2096, 200])
Question Passage Similarity dim:  torch.Size([40, 2096])
Question passage attention dim:  torch.Size([40, 2096])
Final Merged Passage dim:  torch.Size([40, 2096, 800])
Modeled Passage dim:  torch.Size([40, 2096, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2096, 1000])
Span start logits:  torch.Size([40, 2096])
span start probs dim:  torch.Size([40, 2096])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2096]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 283, 200])
Passage Length:  283
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 283, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 283, 19])
Passage ques attention dim:  torch.Size([40, 283, 19])
Passage question vectors dim:  torch.Size([40, 283, 200])
Question Passage Similarity dim:  torch.Size([40, 283])
Question passage attention dim:  torch.Size([40, 283])
Final Merged Passage dim:  torch.Size([40, 283, 800])
Modeled Passage dim:  torch.Size([40, 283, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 283, 1000])
Span start logits:  torch.Size([40, 283])
span start probs dim:  torch.Size([40, 283])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 283]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 609, 200])
Passage Length:  609
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 609, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 609, 17])
Passage ques attention dim:  torch.Size([40, 609, 17])
Passage question vectors dim:  torch.Size([40, 609, 200])
Question Passage Similarity dim:  torch.Size([40, 609])
Question passage attention dim:  torch.Size([40, 609])
Final Merged Passage dim:  torch.Size([40, 609, 800])
Modeled Passage dim:  torch.Size([40, 609, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 609, 1000])
Span start logits:  torch.Size([40, 609])
span start probs dim:  torch.Size([40, 609])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 609]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 492, 200])
Passage Length:  492
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 492, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 492, 17])
Passage ques attention dim:  torch.Size([40, 492, 17])
Passage question vectors dim:  torch.Size([40, 492, 200])
Question Passage Similarity dim:  torch.Size([40, 492])
Question passage attention dim:  torch.Size([40, 492])
Final Merged Passage dim:  torch.Size([40, 492, 800])
Modeled Passage dim:  torch.Size([40, 492, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 492, 1000])
Span start logits:  torch.Size([40, 492])
span start probs dim:  torch.Size([40, 492])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 492]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 180, 200])
Passage Length:  180
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 180, 21])
Passage ques attention dim:  torch.Size([40, 180, 21])
Passage question vectors dim:  torch.Size([40, 180, 200])
Question Passage Similarity dim:  torch.Size([40, 180])
Question passage attention dim:  torch.Size([40, 180])
Final Merged Passage dim:  torch.Size([40, 180, 800])
Modeled Passage dim:  torch.Size([40, 180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 180, 1000])
Span start logits:  torch.Size([40, 180])
span start probs dim:  torch.Size([40, 180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 496, 200])
Passage Length:  496
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 496, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 496, 16])
Passage ques attention dim:  torch.Size([40, 496, 16])
Passage question vectors dim:  torch.Size([40, 496, 200])
Question Passage Similarity dim:  torch.Size([40, 496])
Question passage attention dim:  torch.Size([40, 496])
Final Merged Passage dim:  torch.Size([40, 496, 800])
Modeled Passage dim:  torch.Size([40, 496, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 496, 1000])
Span start logits:  torch.Size([40, 496])
span start probs dim:  torch.Size([40, 496])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 496]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 616, 200])
Passage Length:  616
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 616, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 616, 12])
Passage ques attention dim:  torch.Size([40, 616, 12])
Passage question vectors dim:  torch.Size([40, 616, 200])
Question Passage Similarity dim:  torch.Size([40, 616])
Question passage attention dim:  torch.Size([40, 616])
Final Merged Passage dim:  torch.Size([40, 616, 800])
Modeled Passage dim:  torch.Size([40, 616, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 616, 1000])
Span start logits:  torch.Size([40, 616])
span start probs dim:  torch.Size([40, 616])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 616]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1505, 200])
Passage Length:  1505
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1505, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1505, 16])
Passage ques attention dim:  torch.Size([40, 1505, 16])
Passage question vectors dim:  torch.Size([40, 1505, 200])
Question Passage Similarity dim:  torch.Size([40, 1505])
Question passage attention dim:  torch.Size([40, 1505])
Final Merged Passage dim:  torch.Size([40, 1505, 800])
Modeled Passage dim:  torch.Size([40, 1505, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1505, 1000])
Span start logits:  torch.Size([40, 1505])
span start probs dim:  torch.Size([40, 1505])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1505]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1147, 200])
Passage Length:  1147
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1147, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1147, 19])
Passage ques attention dim:  torch.Size([40, 1147, 19])
Passage question vectors dim:  torch.Size([40, 1147, 200])
Question Passage Similarity dim:  torch.Size([40, 1147])
Question passage attention dim:  torch.Size([40, 1147])
Final Merged Passage dim:  torch.Size([40, 1147, 800])
Modeled Passage dim:  torch.Size([40, 1147, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1147, 1000])
Span start logits:  torch.Size([40, 1147])
span start probs dim:  torch.Size([40, 1147])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1147]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 271, 200])
Passage Length:  271
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 271, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 271, 13])
Passage ques attention dim:  torch.Size([40, 271, 13])
Passage question vectors dim:  torch.Size([40, 271, 200])
Question Passage Similarity dim:  torch.Size([40, 271])
Question passage attention dim:  torch.Size([40, 271])
Final Merged Passage dim:  torch.Size([40, 271, 800])
Modeled Passage dim:  torch.Size([40, 271, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 271, 1000])
Span start logits:  torch.Size([40, 271])
span start probs dim:  torch.Size([40, 271])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 271]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 524, 200])
Passage Length:  524
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 524, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 524, 17])
Passage ques attention dim:  torch.Size([40, 524, 17])
Passage question vectors dim:  torch.Size([40, 524, 200])
Question Passage Similarity dim:  torch.Size([40, 524])
Question passage attention dim:  torch.Size([40, 524])
Final Merged Passage dim:  torch.Size([40, 524, 800])
Modeled Passage dim:  torch.Size([40, 524, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 524, 1000])
Span start logits:  torch.Size([40, 524])
span start probs dim:  torch.Size([40, 524])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 524]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1146, 200])
Passage Length:  1146
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1146, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1146, 17])
Passage ques attention dim:  torch.Size([40, 1146, 17])
Passage question vectors dim:  torch.Size([40, 1146, 200])
Question Passage Similarity dim:  torch.Size([40, 1146])
Question passage attention dim:  torch.Size([40, 1146])
Final Merged Passage dim:  torch.Size([40, 1146, 800])
Modeled Passage dim:  torch.Size([40, 1146, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1146, 1000])
Span start logits:  torch.Size([40, 1146])
span start probs dim:  torch.Size([40, 1146])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1146]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1172, 200])
Passage Length:  1172
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1172, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1172, 18])
Passage ques attention dim:  torch.Size([40, 1172, 18])
Passage question vectors dim:  torch.Size([40, 1172, 200])
Question Passage Similarity dim:  torch.Size([40, 1172])
Question passage attention dim:  torch.Size([40, 1172])
Final Merged Passage dim:  torch.Size([40, 1172, 800])
Modeled Passage dim:  torch.Size([40, 1172, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1172, 1000])
Span start logits:  torch.Size([40, 1172])
span start probs dim:  torch.Size([40, 1172])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1172]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 856, 200])
Passage Length:  856
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 856, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 856, 16])
Passage ques attention dim:  torch.Size([40, 856, 16])
Passage question vectors dim:  torch.Size([40, 856, 200])
Question Passage Similarity dim:  torch.Size([40, 856])
Question passage attention dim:  torch.Size([40, 856])
Final Merged Passage dim:  torch.Size([40, 856, 800])
Modeled Passage dim:  torch.Size([40, 856, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 856, 1000])
Span start logits:  torch.Size([40, 856])
span start probs dim:  torch.Size([40, 856])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 856]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 417, 200])
Passage Length:  417
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 417, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 417, 14])
Passage ques attention dim:  torch.Size([40, 417, 14])
Passage question vectors dim:  torch.Size([40, 417, 200])
Question Passage Similarity dim:  torch.Size([40, 417])
Question passage attention dim:  torch.Size([40, 417])
Final Merged Passage dim:  torch.Size([40, 417, 800])
Modeled Passage dim:  torch.Size([40, 417, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 417, 1000])
Span start logits:  torch.Size([40, 417])
span start probs dim:  torch.Size([40, 417])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 417]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 880, 200])
Passage Length:  880
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 880, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 880, 16])
Passage ques attention dim:  torch.Size([40, 880, 16])
Passage question vectors dim:  torch.Size([40, 880, 200])
Question Passage Similarity dim:  torch.Size([40, 880])
Question passage attention dim:  torch.Size([40, 880])
Final Merged Passage dim:  torch.Size([40, 880, 800])
Modeled Passage dim:  torch.Size([40, 880, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 880, 1000])
Span start logits:  torch.Size([40, 880])
span start probs dim:  torch.Size([40, 880])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 880]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 921, 200])
Passage Length:  921
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 921, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 921, 22])
Passage ques attention dim:  torch.Size([40, 921, 22])
Passage question vectors dim:  torch.Size([40, 921, 200])
Question Passage Similarity dim:  torch.Size([40, 921])
Question passage attention dim:  torch.Size([40, 921])
Final Merged Passage dim:  torch.Size([40, 921, 800])
Modeled Passage dim:  torch.Size([40, 921, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 921, 1000])
Span start logits:  torch.Size([40, 921])
span start probs dim:  torch.Size([40, 921])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 921]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 494, 200])
Passage Length:  494
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 494, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 494, 15])
Passage ques attention dim:  torch.Size([40, 494, 15])
Passage question vectors dim:  torch.Size([40, 494, 200])
Question Passage Similarity dim:  torch.Size([40, 494])
Question passage attention dim:  torch.Size([40, 494])
Final Merged Passage dim:  torch.Size([40, 494, 800])
Modeled Passage dim:  torch.Size([40, 494, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 494, 1000])
Span start logits:  torch.Size([40, 494])
span start probs dim:  torch.Size([40, 494])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 494]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 609, 200])
Passage Length:  609
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 609, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 609, 16])
Passage ques attention dim:  torch.Size([40, 609, 16])
Passage question vectors dim:  torch.Size([40, 609, 200])
Question Passage Similarity dim:  torch.Size([40, 609])
Question passage attention dim:  torch.Size([40, 609])
Final Merged Passage dim:  torch.Size([40, 609, 800])
Modeled Passage dim:  torch.Size([40, 609, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 609, 1000])
Span start logits:  torch.Size([40, 609])
span start probs dim:  torch.Size([40, 609])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 609]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 824, 200])
Passage Length:  824
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 824, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 824, 12])
Passage ques attention dim:  torch.Size([40, 824, 12])
Passage question vectors dim:  torch.Size([40, 824, 200])
Question Passage Similarity dim:  torch.Size([40, 824])
Question passage attention dim:  torch.Size([40, 824])
Final Merged Passage dim:  torch.Size([40, 824, 800])
Modeled Passage dim:  torch.Size([40, 824, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 824, 1000])
Span start logits:  torch.Size([40, 824])
span start probs dim:  torch.Size([40, 824])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 824]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 585, 200])
Passage Length:  585
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 585, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 585, 14])
Passage ques attention dim:  torch.Size([40, 585, 14])
Passage question vectors dim:  torch.Size([40, 585, 200])
Question Passage Similarity dim:  torch.Size([40, 585])
Question passage attention dim:  torch.Size([40, 585])
Final Merged Passage dim:  torch.Size([40, 585, 800])
Modeled Passage dim:  torch.Size([40, 585, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 585, 1000])
Span start logits:  torch.Size([40, 585])
span start probs dim:  torch.Size([40, 585])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 585]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1578, 200])
Passage Length:  1578
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1578, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1578, 14])
Passage ques attention dim:  torch.Size([40, 1578, 14])
Passage question vectors dim:  torch.Size([40, 1578, 200])
Question Passage Similarity dim:  torch.Size([40, 1578])
Question passage attention dim:  torch.Size([40, 1578])
Final Merged Passage dim:  torch.Size([40, 1578, 800])
Modeled Passage dim:  torch.Size([40, 1578, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1578, 1000])
Span start logits:  torch.Size([40, 1578])
span start probs dim:  torch.Size([40, 1578])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1578]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 545, 200])
Passage Length:  545
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 545, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 545, 12])
Passage ques attention dim:  torch.Size([40, 545, 12])
Passage question vectors dim:  torch.Size([40, 545, 200])
Question Passage Similarity dim:  torch.Size([40, 545])
Question passage attention dim:  torch.Size([40, 545])
Final Merged Passage dim:  torch.Size([40, 545, 800])
Modeled Passage dim:  torch.Size([40, 545, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 545, 1000])
Span start logits:  torch.Size([40, 545])
span start probs dim:  torch.Size([40, 545])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 545]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 607, 200])
Passage Length:  607
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 607, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 607, 14])
Passage ques attention dim:  torch.Size([40, 607, 14])
Passage question vectors dim:  torch.Size([40, 607, 200])
Question Passage Similarity dim:  torch.Size([40, 607])
Question passage attention dim:  torch.Size([40, 607])
Final Merged Passage dim:  torch.Size([40, 607, 800])
Modeled Passage dim:  torch.Size([40, 607, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 607, 1000])
Span start logits:  torch.Size([40, 607])
span start probs dim:  torch.Size([40, 607])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 607]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 652, 200])
Passage Length:  652
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 652, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 652, 15])
Passage ques attention dim:  torch.Size([40, 652, 15])
Passage question vectors dim:  torch.Size([40, 652, 200])
Question Passage Similarity dim:  torch.Size([40, 652])
Question passage attention dim:  torch.Size([40, 652])
Final Merged Passage dim:  torch.Size([40, 652, 800])
Modeled Passage dim:  torch.Size([40, 652, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 652, 1000])
Span start logits:  torch.Size([40, 652])
span start probs dim:  torch.Size([40, 652])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 652]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 283, 200])
Passage Length:  283
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 283, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 283, 16])
Passage ques attention dim:  torch.Size([40, 283, 16])
Passage question vectors dim:  torch.Size([40, 283, 200])
Question Passage Similarity dim:  torch.Size([40, 283])
Question passage attention dim:  torch.Size([40, 283])
Final Merged Passage dim:  torch.Size([40, 283, 800])
Modeled Passage dim:  torch.Size([40, 283, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 283, 1000])
Span start logits:  torch.Size([40, 283])
span start probs dim:  torch.Size([40, 283])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 283]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 358, 200])
Passage Length:  358
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 358, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 358, 20])
Passage ques attention dim:  torch.Size([40, 358, 20])
Passage question vectors dim:  torch.Size([40, 358, 200])
Question Passage Similarity dim:  torch.Size([40, 358])
Question passage attention dim:  torch.Size([40, 358])
Final Merged Passage dim:  torch.Size([40, 358, 800])
Modeled Passage dim:  torch.Size([40, 358, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 358, 1000])
Span start logits:  torch.Size([40, 358])
span start probs dim:  torch.Size([40, 358])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 358]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 978, 200])
Passage Length:  978
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 978, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 978, 15])
Passage ques attention dim:  torch.Size([40, 978, 15])
Passage question vectors dim:  torch.Size([40, 978, 200])
Question Passage Similarity dim:  torch.Size([40, 978])
Question passage attention dim:  torch.Size([40, 978])
Final Merged Passage dim:  torch.Size([40, 978, 800])
Modeled Passage dim:  torch.Size([40, 978, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 978, 1000])
Span start logits:  torch.Size([40, 978])
span start probs dim:  torch.Size([40, 978])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 978]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 141, 200])
Passage Length:  141
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 141, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 141, 11])
Passage ques attention dim:  torch.Size([40, 141, 11])
Passage question vectors dim:  torch.Size([40, 141, 200])
Question Passage Similarity dim:  torch.Size([40, 141])
Question passage attention dim:  torch.Size([40, 141])
Final Merged Passage dim:  torch.Size([40, 141, 800])
Modeled Passage dim:  torch.Size([40, 141, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 141, 1000])
Span start logits:  torch.Size([40, 141])
span start probs dim:  torch.Size([40, 141])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 141]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 789, 200])
Passage Length:  789
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 789, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 789, 16])
Passage ques attention dim:  torch.Size([40, 789, 16])
Passage question vectors dim:  torch.Size([40, 789, 200])
Question Passage Similarity dim:  torch.Size([40, 789])
Question passage attention dim:  torch.Size([40, 789])
Final Merged Passage dim:  torch.Size([40, 789, 800])
Modeled Passage dim:  torch.Size([40, 789, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 789, 1000])
Span start logits:  torch.Size([40, 789])
span start probs dim:  torch.Size([40, 789])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 789]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1126, 200])
Passage Length:  1126
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1126, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1126, 13])
Passage ques attention dim:  torch.Size([40, 1126, 13])
Passage question vectors dim:  torch.Size([40, 1126, 200])
Question Passage Similarity dim:  torch.Size([40, 1126])
Question passage attention dim:  torch.Size([40, 1126])
Final Merged Passage dim:  torch.Size([40, 1126, 800])
Modeled Passage dim:  torch.Size([40, 1126, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1126, 1000])
Span start logits:  torch.Size([40, 1126])
span start probs dim:  torch.Size([40, 1126])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1126]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 892, 200])
Passage Length:  892
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 892, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 892, 16])
Passage ques attention dim:  torch.Size([40, 892, 16])
Passage question vectors dim:  torch.Size([40, 892, 200])
Question Passage Similarity dim:  torch.Size([40, 892])
Question passage attention dim:  torch.Size([40, 892])
Final Merged Passage dim:  torch.Size([40, 892, 800])
Modeled Passage dim:  torch.Size([40, 892, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 892, 1000])
Span start logits:  torch.Size([40, 892])
span start probs dim:  torch.Size([40, 892])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 892]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1345, 200])
Passage Length:  1345
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1345, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1345, 14])
Passage ques attention dim:  torch.Size([40, 1345, 14])
Passage question vectors dim:  torch.Size([40, 1345, 200])
Question Passage Similarity dim:  torch.Size([40, 1345])
Question passage attention dim:  torch.Size([40, 1345])
Final Merged Passage dim:  torch.Size([40, 1345, 800])
Modeled Passage dim:  torch.Size([40, 1345, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1345, 1000])
Span start logits:  torch.Size([40, 1345])
span start probs dim:  torch.Size([40, 1345])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1345]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 811, 200])
Passage Length:  811
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 811, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 811, 16])
Passage ques attention dim:  torch.Size([40, 811, 16])
Passage question vectors dim:  torch.Size([40, 811, 200])
Question Passage Similarity dim:  torch.Size([40, 811])
Question passage attention dim:  torch.Size([40, 811])
Final Merged Passage dim:  torch.Size([40, 811, 800])
Modeled Passage dim:  torch.Size([40, 811, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 811, 1000])
Span start logits:  torch.Size([40, 811])
span start probs dim:  torch.Size([40, 811])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 811]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 544, 200])
Passage Length:  544
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 544, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 544, 15])
Passage ques attention dim:  torch.Size([40, 544, 15])
Passage question vectors dim:  torch.Size([40, 544, 200])
Question Passage Similarity dim:  torch.Size([40, 544])
Question passage attention dim:  torch.Size([40, 544])
Final Merged Passage dim:  torch.Size([40, 544, 800])
Modeled Passage dim:  torch.Size([40, 544, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 544, 1000])
Span start logits:  torch.Size([40, 544])
span start probs dim:  torch.Size([40, 544])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 544]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 452, 200])
Passage Length:  452
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 452, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 452, 17])
Passage ques attention dim:  torch.Size([40, 452, 17])
Passage question vectors dim:  torch.Size([40, 452, 200])
Question Passage Similarity dim:  torch.Size([40, 452])
Question passage attention dim:  torch.Size([40, 452])
Final Merged Passage dim:  torch.Size([40, 452, 800])
Modeled Passage dim:  torch.Size([40, 452, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 452, 1000])
Span start logits:  torch.Size([40, 452])
span start probs dim:  torch.Size([40, 452])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 452]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 755, 200])
Passage Length:  755
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 755, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 755, 13])
Passage ques attention dim:  torch.Size([40, 755, 13])
Passage question vectors dim:  torch.Size([40, 755, 200])
Question Passage Similarity dim:  torch.Size([40, 755])
Question passage attention dim:  torch.Size([40, 755])
Final Merged Passage dim:  torch.Size([40, 755, 800])
Modeled Passage dim:  torch.Size([40, 755, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 755, 1000])
Span start logits:  torch.Size([40, 755])
span start probs dim:  torch.Size([40, 755])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 755]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 301, 12])
Passage ques attention dim:  torch.Size([40, 301, 12])
Passage question vectors dim:  torch.Size([40, 301, 200])
Question Passage Similarity dim:  torch.Size([40, 301])
Question passage attention dim:  torch.Size([40, 301])
Final Merged Passage dim:  torch.Size([40, 301, 800])
Modeled Passage dim:  torch.Size([40, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 301, 1000])
Span start logits:  torch.Size([40, 301])
span start probs dim:  torch.Size([40, 301])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 301]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 720, 200])
Passage Length:  720
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 720, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 720, 24])
Passage ques attention dim:  torch.Size([40, 720, 24])
Passage question vectors dim:  torch.Size([40, 720, 200])
Question Passage Similarity dim:  torch.Size([40, 720])
Question passage attention dim:  torch.Size([40, 720])
Final Merged Passage dim:  torch.Size([40, 720, 800])
Modeled Passage dim:  torch.Size([40, 720, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 720, 1000])
Span start logits:  torch.Size([40, 720])
span start probs dim:  torch.Size([40, 720])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 720]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 635, 200])
Passage Length:  635
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 635, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 635, 16])
Passage ques attention dim:  torch.Size([40, 635, 16])
Passage question vectors dim:  torch.Size([40, 635, 200])
Question Passage Similarity dim:  torch.Size([40, 635])
Question passage attention dim:  torch.Size([40, 635])
Final Merged Passage dim:  torch.Size([40, 635, 800])
Modeled Passage dim:  torch.Size([40, 635, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 635, 1000])
Span start logits:  torch.Size([40, 635])
span start probs dim:  torch.Size([40, 635])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 635]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1040, 200])
Passage Length:  1040
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1040, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1040, 17])
Passage ques attention dim:  torch.Size([40, 1040, 17])
Passage question vectors dim:  torch.Size([40, 1040, 200])
Question Passage Similarity dim:  torch.Size([40, 1040])
Question passage attention dim:  torch.Size([40, 1040])
Final Merged Passage dim:  torch.Size([40, 1040, 800])
Modeled Passage dim:  torch.Size([40, 1040, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1040, 1000])
Span start logits:  torch.Size([40, 1040])
span start probs dim:  torch.Size([40, 1040])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1040]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 885, 200])
Passage Length:  885
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 885, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 885, 16])
Passage ques attention dim:  torch.Size([40, 885, 16])
Passage question vectors dim:  torch.Size([40, 885, 200])
Question Passage Similarity dim:  torch.Size([40, 885])
Question passage attention dim:  torch.Size([40, 885])
Final Merged Passage dim:  torch.Size([40, 885, 800])
Modeled Passage dim:  torch.Size([40, 885, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 885, 1000])
Span start logits:  torch.Size([40, 885])
span start probs dim:  torch.Size([40, 885])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 885]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1351, 200])
Passage Length:  1351
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1351, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1351, 13])
Passage ques attention dim:  torch.Size([40, 1351, 13])
Passage question vectors dim:  torch.Size([40, 1351, 200])
Question Passage Similarity dim:  torch.Size([40, 1351])
Question passage attention dim:  torch.Size([40, 1351])
Final Merged Passage dim:  torch.Size([40, 1351, 800])
Modeled Passage dim:  torch.Size([40, 1351, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1351, 1000])
Span start logits:  torch.Size([40, 1351])
span start probs dim:  torch.Size([40, 1351])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1351]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1351, 200])
Passage Length:  1351
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1351, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1351, 16])
Passage ques attention dim:  torch.Size([40, 1351, 16])
Passage question vectors dim:  torch.Size([40, 1351, 200])
Question Passage Similarity dim:  torch.Size([40, 1351])
Question passage attention dim:  torch.Size([40, 1351])
Final Merged Passage dim:  torch.Size([40, 1351, 800])
Modeled Passage dim:  torch.Size([40, 1351, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1351, 1000])
Span start logits:  torch.Size([40, 1351])
span start probs dim:  torch.Size([40, 1351])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1351]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 801, 200])
Passage Length:  801
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 801, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 801, 19])
Passage ques attention dim:  torch.Size([40, 801, 19])
Passage question vectors dim:  torch.Size([40, 801, 200])
Question Passage Similarity dim:  torch.Size([40, 801])
Question passage attention dim:  torch.Size([40, 801])
Final Merged Passage dim:  torch.Size([40, 801, 800])
Modeled Passage dim:  torch.Size([40, 801, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 801, 1000])
Span start logits:  torch.Size([40, 801])
span start probs dim:  torch.Size([40, 801])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 801]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 289, 200])
Passage Length:  289
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 289, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 289, 17])
Passage ques attention dim:  torch.Size([40, 289, 17])
Passage question vectors dim:  torch.Size([40, 289, 200])
Question Passage Similarity dim:  torch.Size([40, 289])
Question passage attention dim:  torch.Size([40, 289])
Final Merged Passage dim:  torch.Size([40, 289, 800])
Modeled Passage dim:  torch.Size([40, 289, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 289, 1000])
Span start logits:  torch.Size([40, 289])
span start probs dim:  torch.Size([40, 289])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 289]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 661, 200])
Passage Length:  661
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 661, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 661, 13])
Passage ques attention dim:  torch.Size([40, 661, 13])
Passage question vectors dim:  torch.Size([40, 661, 200])
Question Passage Similarity dim:  torch.Size([40, 661])
Question passage attention dim:  torch.Size([40, 661])
Final Merged Passage dim:  torch.Size([40, 661, 800])
Modeled Passage dim:  torch.Size([40, 661, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 661, 1000])
Span start logits:  torch.Size([40, 661])
span start probs dim:  torch.Size([40, 661])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 661]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 977, 200])
Passage Length:  977
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 977, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 977, 13])
Passage ques attention dim:  torch.Size([40, 977, 13])
Passage question vectors dim:  torch.Size([40, 977, 200])
Question Passage Similarity dim:  torch.Size([40, 977])
Question passage attention dim:  torch.Size([40, 977])
Final Merged Passage dim:  torch.Size([40, 977, 800])
Modeled Passage dim:  torch.Size([40, 977, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 977, 1000])
Span start logits:  torch.Size([40, 977])
span start probs dim:  torch.Size([40, 977])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 977]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1176, 200])
Passage Length:  1176
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1176, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1176, 14])
Passage ques attention dim:  torch.Size([40, 1176, 14])
Passage question vectors dim:  torch.Size([40, 1176, 200])
Question Passage Similarity dim:  torch.Size([40, 1176])
Question passage attention dim:  torch.Size([40, 1176])
Final Merged Passage dim:  torch.Size([40, 1176, 800])
Modeled Passage dim:  torch.Size([40, 1176, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1176, 1000])
Span start logits:  torch.Size([40, 1176])
span start probs dim:  torch.Size([40, 1176])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1176]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 828, 200])
Passage Length:  828
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 828, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 828, 15])
Passage ques attention dim:  torch.Size([40, 828, 15])
Passage question vectors dim:  torch.Size([40, 828, 200])
Question Passage Similarity dim:  torch.Size([40, 828])
Question passage attention dim:  torch.Size([40, 828])
Final Merged Passage dim:  torch.Size([40, 828, 800])
Modeled Passage dim:  torch.Size([40, 828, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 828, 1000])
Span start logits:  torch.Size([40, 828])
span start probs dim:  torch.Size([40, 828])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 828]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1367, 200])
Passage Length:  1367
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1367, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1367, 12])
Passage ques attention dim:  torch.Size([40, 1367, 12])
Passage question vectors dim:  torch.Size([40, 1367, 200])
Question Passage Similarity dim:  torch.Size([40, 1367])
Question passage attention dim:  torch.Size([40, 1367])
Final Merged Passage dim:  torch.Size([40, 1367, 800])
Modeled Passage dim:  torch.Size([40, 1367, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1367, 1000])
Span start logits:  torch.Size([40, 1367])
span start probs dim:  torch.Size([40, 1367])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1367]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1082, 200])
Passage Length:  1082
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1082, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1082, 15])
Passage ques attention dim:  torch.Size([40, 1082, 15])
Passage question vectors dim:  torch.Size([40, 1082, 200])
Question Passage Similarity dim:  torch.Size([40, 1082])
Question passage attention dim:  torch.Size([40, 1082])
Final Merged Passage dim:  torch.Size([40, 1082, 800])
Modeled Passage dim:  torch.Size([40, 1082, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1082, 1000])
Span start logits:  torch.Size([40, 1082])
span start probs dim:  torch.Size([40, 1082])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1082]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 567, 200])
Passage Length:  567
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 567, 15])
Passage ques attention dim:  torch.Size([40, 567, 15])
Passage question vectors dim:  torch.Size([40, 567, 200])
Question Passage Similarity dim:  torch.Size([40, 567])
Question passage attention dim:  torch.Size([40, 567])
Final Merged Passage dim:  torch.Size([40, 567, 800])
Modeled Passage dim:  torch.Size([40, 567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 567, 1000])
Span start logits:  torch.Size([40, 567])
span start probs dim:  torch.Size([40, 567])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 567]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 697, 200])
Passage Length:  697
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 697, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 697, 16])
Passage ques attention dim:  torch.Size([40, 697, 16])
Passage question vectors dim:  torch.Size([40, 697, 200])
Question Passage Similarity dim:  torch.Size([40, 697])
Question passage attention dim:  torch.Size([40, 697])
Final Merged Passage dim:  torch.Size([40, 697, 800])
Modeled Passage dim:  torch.Size([40, 697, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 697, 1000])
Span start logits:  torch.Size([40, 697])
span start probs dim:  torch.Size([40, 697])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 697]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 700, 200])
Passage Length:  700
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 700, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 700, 13])
Passage ques attention dim:  torch.Size([40, 700, 13])
Passage question vectors dim:  torch.Size([40, 700, 200])
Question Passage Similarity dim:  torch.Size([40, 700])
Question passage attention dim:  torch.Size([40, 700])
Final Merged Passage dim:  torch.Size([40, 700, 800])
Modeled Passage dim:  torch.Size([40, 700, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 700, 1000])
Span start logits:  torch.Size([40, 700])
span start probs dim:  torch.Size([40, 700])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 700]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 513, 200])
Passage Length:  513
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 513, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 513, 15])
Passage ques attention dim:  torch.Size([40, 513, 15])
Passage question vectors dim:  torch.Size([40, 513, 200])
Question Passage Similarity dim:  torch.Size([40, 513])
Question passage attention dim:  torch.Size([40, 513])
Final Merged Passage dim:  torch.Size([40, 513, 800])
Modeled Passage dim:  torch.Size([40, 513, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 513, 1000])
Span start logits:  torch.Size([40, 513])
span start probs dim:  torch.Size([40, 513])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 513]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 736, 200])
Passage Length:  736
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 736, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 736, 16])
Passage ques attention dim:  torch.Size([40, 736, 16])
Passage question vectors dim:  torch.Size([40, 736, 200])
Question Passage Similarity dim:  torch.Size([40, 736])
Question passage attention dim:  torch.Size([40, 736])
Final Merged Passage dim:  torch.Size([40, 736, 800])
Modeled Passage dim:  torch.Size([40, 736, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 736, 1000])
Span start logits:  torch.Size([40, 736])
span start probs dim:  torch.Size([40, 736])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 736]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1660, 200])
Passage Length:  1660
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1660, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1660, 18])
Passage ques attention dim:  torch.Size([40, 1660, 18])
Passage question vectors dim:  torch.Size([40, 1660, 200])
Question Passage Similarity dim:  torch.Size([40, 1660])
Question passage attention dim:  torch.Size([40, 1660])
Final Merged Passage dim:  torch.Size([40, 1660, 800])
Modeled Passage dim:  torch.Size([40, 1660, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1660, 1000])
Span start logits:  torch.Size([40, 1660])
span start probs dim:  torch.Size([40, 1660])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1660]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 681, 200])
Passage Length:  681
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 681, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 681, 12])
Passage ques attention dim:  torch.Size([40, 681, 12])
Passage question vectors dim:  torch.Size([40, 681, 200])
Question Passage Similarity dim:  torch.Size([40, 681])
Question passage attention dim:  torch.Size([40, 681])
Final Merged Passage dim:  torch.Size([40, 681, 800])
Modeled Passage dim:  torch.Size([40, 681, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 681, 1000])
Span start logits:  torch.Size([40, 681])
span start probs dim:  torch.Size([40, 681])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 681]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1106, 200])
Passage Length:  1106
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1106, 19])
Passage ques attention dim:  torch.Size([40, 1106, 19])
Passage question vectors dim:  torch.Size([40, 1106, 200])
Question Passage Similarity dim:  torch.Size([40, 1106])
Question passage attention dim:  torch.Size([40, 1106])
Final Merged Passage dim:  torch.Size([40, 1106, 800])
Modeled Passage dim:  torch.Size([40, 1106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1106, 1000])
Span start logits:  torch.Size([40, 1106])
span start probs dim:  torch.Size([40, 1106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1025, 13])
Passage ques attention dim:  torch.Size([40, 1025, 13])
Passage question vectors dim:  torch.Size([40, 1025, 200])
Question Passage Similarity dim:  torch.Size([40, 1025])
Question passage attention dim:  torch.Size([40, 1025])
Final Merged Passage dim:  torch.Size([40, 1025, 800])
Modeled Passage dim:  torch.Size([40, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1025, 1000])
Span start logits:  torch.Size([40, 1025])
span start probs dim:  torch.Size([40, 1025])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1025]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 525, 200])
Passage Length:  525
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 525, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 525, 19])
Passage ques attention dim:  torch.Size([40, 525, 19])
Passage question vectors dim:  torch.Size([40, 525, 200])
Question Passage Similarity dim:  torch.Size([40, 525])
Question passage attention dim:  torch.Size([40, 525])
Final Merged Passage dim:  torch.Size([40, 525, 800])
Modeled Passage dim:  torch.Size([40, 525, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 525, 1000])
Span start logits:  torch.Size([40, 525])
span start probs dim:  torch.Size([40, 525])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 525]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1183, 200])
Passage Length:  1183
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1183, 19])
Passage ques attention dim:  torch.Size([40, 1183, 19])
Passage question vectors dim:  torch.Size([40, 1183, 200])
Question Passage Similarity dim:  torch.Size([40, 1183])
Question passage attention dim:  torch.Size([40, 1183])
Final Merged Passage dim:  torch.Size([40, 1183, 800])
Modeled Passage dim:  torch.Size([40, 1183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1183, 1000])
Span start logits:  torch.Size([40, 1183])
span start probs dim:  torch.Size([40, 1183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1367, 200])
Passage Length:  1367
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1367, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1367, 13])
Passage ques attention dim:  torch.Size([40, 1367, 13])
Passage question vectors dim:  torch.Size([40, 1367, 200])
Question Passage Similarity dim:  torch.Size([40, 1367])
Question passage attention dim:  torch.Size([40, 1367])
Final Merged Passage dim:  torch.Size([40, 1367, 800])
Modeled Passage dim:  torch.Size([40, 1367, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1367, 1000])
Span start logits:  torch.Size([40, 1367])
span start probs dim:  torch.Size([40, 1367])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1367]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 703, 200])
Passage Length:  703
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 703, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 703, 15])
Passage ques attention dim:  torch.Size([40, 703, 15])
Passage question vectors dim:  torch.Size([40, 703, 200])
Question Passage Similarity dim:  torch.Size([40, 703])
Question passage attention dim:  torch.Size([40, 703])
Final Merged Passage dim:  torch.Size([40, 703, 800])
Modeled Passage dim:  torch.Size([40, 703, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 703, 1000])
Span start logits:  torch.Size([40, 703])
span start probs dim:  torch.Size([40, 703])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 703]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1139, 200])
Passage Length:  1139
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1139, 16])
Passage ques attention dim:  torch.Size([40, 1139, 16])
Passage question vectors dim:  torch.Size([40, 1139, 200])
Question Passage Similarity dim:  torch.Size([40, 1139])
Question passage attention dim:  torch.Size([40, 1139])
Final Merged Passage dim:  torch.Size([40, 1139, 800])
Modeled Passage dim:  torch.Size([40, 1139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1139, 1000])
Span start logits:  torch.Size([40, 1139])
span start probs dim:  torch.Size([40, 1139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1215, 200])
Passage Length:  1215
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1215, 16])
Passage ques attention dim:  torch.Size([40, 1215, 16])
Passage question vectors dim:  torch.Size([40, 1215, 200])
Question Passage Similarity dim:  torch.Size([40, 1215])
Question passage attention dim:  torch.Size([40, 1215])
Final Merged Passage dim:  torch.Size([40, 1215, 800])
Modeled Passage dim:  torch.Size([40, 1215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1215, 1000])
Span start logits:  torch.Size([40, 1215])
span start probs dim:  torch.Size([40, 1215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 430, 200])
Passage Length:  430
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 430, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 430, 16])
Passage ques attention dim:  torch.Size([40, 430, 16])
Passage question vectors dim:  torch.Size([40, 430, 200])
Question Passage Similarity dim:  torch.Size([40, 430])
Question passage attention dim:  torch.Size([40, 430])
Final Merged Passage dim:  torch.Size([40, 430, 800])
Modeled Passage dim:  torch.Size([40, 430, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 430, 1000])
Span start logits:  torch.Size([40, 430])
span start probs dim:  torch.Size([40, 430])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 430]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 375, 200])
Passage Length:  375
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 375, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 375, 14])
Passage ques attention dim:  torch.Size([40, 375, 14])
Passage question vectors dim:  torch.Size([40, 375, 200])
Question Passage Similarity dim:  torch.Size([40, 375])
Question passage attention dim:  torch.Size([40, 375])
Final Merged Passage dim:  torch.Size([40, 375, 800])
Modeled Passage dim:  torch.Size([40, 375, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 375, 1000])
Span start logits:  torch.Size([40, 375])
span start probs dim:  torch.Size([40, 375])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 375]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 513, 200])
Passage Length:  513
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 513, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 513, 14])
Passage ques attention dim:  torch.Size([40, 513, 14])
Passage question vectors dim:  torch.Size([40, 513, 200])
Question Passage Similarity dim:  torch.Size([40, 513])
Question passage attention dim:  torch.Size([40, 513])
Final Merged Passage dim:  torch.Size([40, 513, 800])
Modeled Passage dim:  torch.Size([40, 513, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 513, 1000])
Span start logits:  torch.Size([40, 513])
span start probs dim:  torch.Size([40, 513])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 513]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1234, 200])
Passage Length:  1234
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1234, 16])
Passage ques attention dim:  torch.Size([40, 1234, 16])
Passage question vectors dim:  torch.Size([40, 1234, 200])
Question Passage Similarity dim:  torch.Size([40, 1234])
Question passage attention dim:  torch.Size([40, 1234])
Final Merged Passage dim:  torch.Size([40, 1234, 800])
Modeled Passage dim:  torch.Size([40, 1234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1234, 1000])
Span start logits:  torch.Size([40, 1234])
span start probs dim:  torch.Size([40, 1234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 543, 200])
Passage Length:  543
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 543, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 543, 16])
Passage ques attention dim:  torch.Size([40, 543, 16])
Passage question vectors dim:  torch.Size([40, 543, 200])
Question Passage Similarity dim:  torch.Size([40, 543])
Question passage attention dim:  torch.Size([40, 543])
Final Merged Passage dim:  torch.Size([40, 543, 800])
Modeled Passage dim:  torch.Size([40, 543, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 543, 1000])
Span start logits:  torch.Size([40, 543])
span start probs dim:  torch.Size([40, 543])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 543]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 759, 200])
Passage Length:  759
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 759, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 759, 16])
Passage ques attention dim:  torch.Size([40, 759, 16])
Passage question vectors dim:  torch.Size([40, 759, 200])
Question Passage Similarity dim:  torch.Size([40, 759])
Question passage attention dim:  torch.Size([40, 759])
Final Merged Passage dim:  torch.Size([40, 759, 800])
Modeled Passage dim:  torch.Size([40, 759, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 759, 1000])
Span start logits:  torch.Size([40, 759])
span start probs dim:  torch.Size([40, 759])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 759]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 1169, 200])
Passage Length:  1169
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 1169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1169, 21])
Passage ques attention dim:  torch.Size([40, 1169, 21])
Passage question vectors dim:  torch.Size([40, 1169, 200])
Question Passage Similarity dim:  torch.Size([40, 1169])
Question passage attention dim:  torch.Size([40, 1169])
Final Merged Passage dim:  torch.Size([40, 1169, 800])
Modeled Passage dim:  torch.Size([40, 1169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1169, 1000])
Span start logits:  torch.Size([40, 1169])
span start probs dim:  torch.Size([40, 1169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 168, 200])
Passage Length:  168
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 168, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 168, 15])
Passage ques attention dim:  torch.Size([40, 168, 15])
Passage question vectors dim:  torch.Size([40, 168, 200])
Question Passage Similarity dim:  torch.Size([40, 168])
Question passage attention dim:  torch.Size([40, 168])
Final Merged Passage dim:  torch.Size([40, 168, 800])
Modeled Passage dim:  torch.Size([40, 168, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 168, 1000])
Span start logits:  torch.Size([40, 168])
span start probs dim:  torch.Size([40, 168])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 168]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 890, 200])
Passage Length:  890
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 890, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 890, 17])
Passage ques attention dim:  torch.Size([40, 890, 17])
Passage question vectors dim:  torch.Size([40, 890, 200])
Question Passage Similarity dim:  torch.Size([40, 890])
Question passage attention dim:  torch.Size([40, 890])
Final Merged Passage dim:  torch.Size([40, 890, 800])
Modeled Passage dim:  torch.Size([40, 890, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 890, 1000])
Span start logits:  torch.Size([40, 890])
span start probs dim:  torch.Size([40, 890])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 890]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1178, 200])
Passage Length:  1178
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1178, 15])
Passage ques attention dim:  torch.Size([40, 1178, 15])
Passage question vectors dim:  torch.Size([40, 1178, 200])
Question Passage Similarity dim:  torch.Size([40, 1178])
Question passage attention dim:  torch.Size([40, 1178])
Final Merged Passage dim:  torch.Size([40, 1178, 800])
Modeled Passage dim:  torch.Size([40, 1178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1178, 1000])
Span start logits:  torch.Size([40, 1178])
span start probs dim:  torch.Size([40, 1178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 290, 200])
Passage Length:  290
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 290, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 290, 13])
Passage ques attention dim:  torch.Size([40, 290, 13])
Passage question vectors dim:  torch.Size([40, 290, 200])
Question Passage Similarity dim:  torch.Size([40, 290])
Question passage attention dim:  torch.Size([40, 290])
Final Merged Passage dim:  torch.Size([40, 290, 800])
Modeled Passage dim:  torch.Size([40, 290, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 290, 1000])
Span start logits:  torch.Size([40, 290])
span start probs dim:  torch.Size([40, 290])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 290]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1052, 200])
Passage Length:  1052
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1052, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1052, 17])
Passage ques attention dim:  torch.Size([40, 1052, 17])
Passage question vectors dim:  torch.Size([40, 1052, 200])
Question Passage Similarity dim:  torch.Size([40, 1052])
Question passage attention dim:  torch.Size([40, 1052])
Final Merged Passage dim:  torch.Size([40, 1052, 800])
Modeled Passage dim:  torch.Size([40, 1052, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1052, 1000])
Span start logits:  torch.Size([40, 1052])
span start probs dim:  torch.Size([40, 1052])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1052]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 873, 200])
Passage Length:  873
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 873, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 873, 14])
Passage ques attention dim:  torch.Size([40, 873, 14])
Passage question vectors dim:  torch.Size([40, 873, 200])
Question Passage Similarity dim:  torch.Size([40, 873])
Question passage attention dim:  torch.Size([40, 873])
Final Merged Passage dim:  torch.Size([40, 873, 800])
Modeled Passage dim:  torch.Size([40, 873, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 873, 1000])
Span start logits:  torch.Size([40, 873])
span start probs dim:  torch.Size([40, 873])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 873]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 490, 200])
Passage Length:  490
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 490, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 490, 12])
Passage ques attention dim:  torch.Size([40, 490, 12])
Passage question vectors dim:  torch.Size([40, 490, 200])
Question Passage Similarity dim:  torch.Size([40, 490])
Question passage attention dim:  torch.Size([40, 490])
Final Merged Passage dim:  torch.Size([40, 490, 800])
Modeled Passage dim:  torch.Size([40, 490, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 490, 1000])
Span start logits:  torch.Size([40, 490])
span start probs dim:  torch.Size([40, 490])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 490]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 935, 200])
Passage Length:  935
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 935, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 935, 12])
Passage ques attention dim:  torch.Size([40, 935, 12])
Passage question vectors dim:  torch.Size([40, 935, 200])
Question Passage Similarity dim:  torch.Size([40, 935])
Question passage attention dim:  torch.Size([40, 935])
Final Merged Passage dim:  torch.Size([40, 935, 800])
Modeled Passage dim:  torch.Size([40, 935, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 935, 1000])
Span start logits:  torch.Size([40, 935])
span start probs dim:  torch.Size([40, 935])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 935]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 821, 200])
Passage Length:  821
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 821, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 821, 18])
Passage ques attention dim:  torch.Size([40, 821, 18])
Passage question vectors dim:  torch.Size([40, 821, 200])
Question Passage Similarity dim:  torch.Size([40, 821])
Question passage attention dim:  torch.Size([40, 821])
Final Merged Passage dim:  torch.Size([40, 821, 800])
Modeled Passage dim:  torch.Size([40, 821, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 821, 1000])
Span start logits:  torch.Size([40, 821])
span start probs dim:  torch.Size([40, 821])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 821]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 707, 200])
Passage Length:  707
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 707, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 707, 12])
Passage ques attention dim:  torch.Size([40, 707, 12])
Passage question vectors dim:  torch.Size([40, 707, 200])
Question Passage Similarity dim:  torch.Size([40, 707])
Question passage attention dim:  torch.Size([40, 707])
Final Merged Passage dim:  torch.Size([40, 707, 800])
Modeled Passage dim:  torch.Size([40, 707, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 707, 1000])
Span start logits:  torch.Size([40, 707])
span start probs dim:  torch.Size([40, 707])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 707]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 653, 200])
Passage Length:  653
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 653, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 653, 13])
Passage ques attention dim:  torch.Size([40, 653, 13])
Passage question vectors dim:  torch.Size([40, 653, 200])
Question Passage Similarity dim:  torch.Size([40, 653])
Question passage attention dim:  torch.Size([40, 653])
Final Merged Passage dim:  torch.Size([40, 653, 800])
Modeled Passage dim:  torch.Size([40, 653, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 653, 1000])
Span start logits:  torch.Size([40, 653])
span start probs dim:  torch.Size([40, 653])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 653]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 986, 200])
Passage Length:  986
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 986, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 986, 18])
Passage ques attention dim:  torch.Size([40, 986, 18])
Passage question vectors dim:  torch.Size([40, 986, 200])
Question Passage Similarity dim:  torch.Size([40, 986])
Question passage attention dim:  torch.Size([40, 986])
Final Merged Passage dim:  torch.Size([40, 986, 800])
Modeled Passage dim:  torch.Size([40, 986, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 986, 1000])
Span start logits:  torch.Size([40, 986])
span start probs dim:  torch.Size([40, 986])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 986]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 475, 200])
Passage Length:  475
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 475, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 475, 15])
Passage ques attention dim:  torch.Size([40, 475, 15])
Passage question vectors dim:  torch.Size([40, 475, 200])
Question Passage Similarity dim:  torch.Size([40, 475])
Question passage attention dim:  torch.Size([40, 475])
Final Merged Passage dim:  torch.Size([40, 475, 800])
Modeled Passage dim:  torch.Size([40, 475, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 475, 1000])
Span start logits:  torch.Size([40, 475])
span start probs dim:  torch.Size([40, 475])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 475]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1121, 200])
Passage Length:  1121
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1121, 18])
Passage ques attention dim:  torch.Size([40, 1121, 18])
Passage question vectors dim:  torch.Size([40, 1121, 200])
Question Passage Similarity dim:  torch.Size([40, 1121])
Question passage attention dim:  torch.Size([40, 1121])
Final Merged Passage dim:  torch.Size([40, 1121, 800])
Modeled Passage dim:  torch.Size([40, 1121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1121, 1000])
Span start logits:  torch.Size([40, 1121])
span start probs dim:  torch.Size([40, 1121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 423, 200])
Passage Length:  423
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 423, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 423, 13])
Passage ques attention dim:  torch.Size([40, 423, 13])
Passage question vectors dim:  torch.Size([40, 423, 200])
Question Passage Similarity dim:  torch.Size([40, 423])
Question passage attention dim:  torch.Size([40, 423])
Final Merged Passage dim:  torch.Size([40, 423, 800])
Modeled Passage dim:  torch.Size([40, 423, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 423, 1000])
Span start logits:  torch.Size([40, 423])
span start probs dim:  torch.Size([40, 423])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 423]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 121, 200])
Passage Length:  121
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 121, 14])
Passage ques attention dim:  torch.Size([40, 121, 14])
Passage question vectors dim:  torch.Size([40, 121, 200])
Question Passage Similarity dim:  torch.Size([40, 121])
Question passage attention dim:  torch.Size([40, 121])
Final Merged Passage dim:  torch.Size([40, 121, 800])
Modeled Passage dim:  torch.Size([40, 121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 121, 1000])
Span start logits:  torch.Size([40, 121])
span start probs dim:  torch.Size([40, 121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 920, 200])
Passage Length:  920
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 920, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 920, 14])
Passage ques attention dim:  torch.Size([40, 920, 14])
Passage question vectors dim:  torch.Size([40, 920, 200])
Question Passage Similarity dim:  torch.Size([40, 920])
Question passage attention dim:  torch.Size([40, 920])
Final Merged Passage dim:  torch.Size([40, 920, 800])
Modeled Passage dim:  torch.Size([40, 920, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 920, 1000])
Span start logits:  torch.Size([40, 920])
span start probs dim:  torch.Size([40, 920])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 920]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 569, 200])
Passage Length:  569
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 569, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 569, 12])
Passage ques attention dim:  torch.Size([40, 569, 12])
Passage question vectors dim:  torch.Size([40, 569, 200])
Question Passage Similarity dim:  torch.Size([40, 569])
Question passage attention dim:  torch.Size([40, 569])
Final Merged Passage dim:  torch.Size([40, 569, 800])
Modeled Passage dim:  torch.Size([40, 569, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 569, 1000])
Span start logits:  torch.Size([40, 569])
span start probs dim:  torch.Size([40, 569])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 569]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 717, 200])
Passage Length:  717
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 717, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 717, 16])
Passage ques attention dim:  torch.Size([40, 717, 16])
Passage question vectors dim:  torch.Size([40, 717, 200])
Question Passage Similarity dim:  torch.Size([40, 717])
Question passage attention dim:  torch.Size([40, 717])
Final Merged Passage dim:  torch.Size([40, 717, 800])
Modeled Passage dim:  torch.Size([40, 717, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 717, 1000])
Span start logits:  torch.Size([40, 717])
span start probs dim:  torch.Size([40, 717])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 717]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1060, 200])
Passage Length:  1060
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1060, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1060, 14])
Passage ques attention dim:  torch.Size([40, 1060, 14])
Passage question vectors dim:  torch.Size([40, 1060, 200])
Question Passage Similarity dim:  torch.Size([40, 1060])
Question passage attention dim:  torch.Size([40, 1060])
Final Merged Passage dim:  torch.Size([40, 1060, 800])
Modeled Passage dim:  torch.Size([40, 1060, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1060, 1000])
Span start logits:  torch.Size([40, 1060])
span start probs dim:  torch.Size([40, 1060])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1060]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 736, 200])
Passage Length:  736
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 736, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 736, 12])
Passage ques attention dim:  torch.Size([40, 736, 12])
Passage question vectors dim:  torch.Size([40, 736, 200])
Question Passage Similarity dim:  torch.Size([40, 736])
Question passage attention dim:  torch.Size([40, 736])
Final Merged Passage dim:  torch.Size([40, 736, 800])
Modeled Passage dim:  torch.Size([40, 736, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 736, 1000])
Span start logits:  torch.Size([40, 736])
span start probs dim:  torch.Size([40, 736])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 736]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 905, 200])
Passage Length:  905
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 905, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 905, 14])
Passage ques attention dim:  torch.Size([40, 905, 14])
Passage question vectors dim:  torch.Size([40, 905, 200])
Question Passage Similarity dim:  torch.Size([40, 905])
Question passage attention dim:  torch.Size([40, 905])
Final Merged Passage dim:  torch.Size([40, 905, 800])
Modeled Passage dim:  torch.Size([40, 905, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 905, 1000])
Span start logits:  torch.Size([40, 905])
span start probs dim:  torch.Size([40, 905])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 905]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1100, 200])
Passage Length:  1100
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1100, 15])
Passage ques attention dim:  torch.Size([40, 1100, 15])
Passage question vectors dim:  torch.Size([40, 1100, 200])
Question Passage Similarity dim:  torch.Size([40, 1100])
Question passage attention dim:  torch.Size([40, 1100])
Final Merged Passage dim:  torch.Size([40, 1100, 800])
Modeled Passage dim:  torch.Size([40, 1100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1100, 1000])
Span start logits:  torch.Size([40, 1100])
span start probs dim:  torch.Size([40, 1100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 303, 200])
Passage Length:  303
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 303, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 303, 14])
Passage ques attention dim:  torch.Size([40, 303, 14])
Passage question vectors dim:  torch.Size([40, 303, 200])
Question Passage Similarity dim:  torch.Size([40, 303])
Question passage attention dim:  torch.Size([40, 303])
Final Merged Passage dim:  torch.Size([40, 303, 800])
Modeled Passage dim:  torch.Size([40, 303, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 303, 1000])
Span start logits:  torch.Size([40, 303])
span start probs dim:  torch.Size([40, 303])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 303]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1121, 200])
Passage Length:  1121
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1121, 14])
Passage ques attention dim:  torch.Size([40, 1121, 14])
Passage question vectors dim:  torch.Size([40, 1121, 200])
Question Passage Similarity dim:  torch.Size([40, 1121])
Question passage attention dim:  torch.Size([40, 1121])
Final Merged Passage dim:  torch.Size([40, 1121, 800])
Modeled Passage dim:  torch.Size([40, 1121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1121, 1000])
Span start logits:  torch.Size([40, 1121])
span start probs dim:  torch.Size([40, 1121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 532, 200])
Passage Length:  532
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 532, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 532, 16])
Passage ques attention dim:  torch.Size([40, 532, 16])
Passage question vectors dim:  torch.Size([40, 532, 200])
Question Passage Similarity dim:  torch.Size([40, 532])
Question passage attention dim:  torch.Size([40, 532])
Final Merged Passage dim:  torch.Size([40, 532, 800])
Modeled Passage dim:  torch.Size([40, 532, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 532, 1000])
Span start logits:  torch.Size([40, 532])
span start probs dim:  torch.Size([40, 532])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 532]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 741, 200])
Passage Length:  741
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 741, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 741, 13])
Passage ques attention dim:  torch.Size([40, 741, 13])
Passage question vectors dim:  torch.Size([40, 741, 200])
Question Passage Similarity dim:  torch.Size([40, 741])
Question passage attention dim:  torch.Size([40, 741])
Final Merged Passage dim:  torch.Size([40, 741, 800])
Modeled Passage dim:  torch.Size([40, 741, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 741, 1000])
Span start logits:  torch.Size([40, 741])
span start probs dim:  torch.Size([40, 741])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 741]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 322, 200])
Passage Length:  322
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 322, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 322, 12])
Passage ques attention dim:  torch.Size([40, 322, 12])
Passage question vectors dim:  torch.Size([40, 322, 200])
Question Passage Similarity dim:  torch.Size([40, 322])
Question passage attention dim:  torch.Size([40, 322])
Final Merged Passage dim:  torch.Size([40, 322, 800])
Modeled Passage dim:  torch.Size([40, 322, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 322, 1000])
Span start logits:  torch.Size([40, 322])
span start probs dim:  torch.Size([40, 322])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 322]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 702, 200])
Passage Length:  702
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 702, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 702, 16])
Passage ques attention dim:  torch.Size([40, 702, 16])
Passage question vectors dim:  torch.Size([40, 702, 200])
Question Passage Similarity dim:  torch.Size([40, 702])
Question passage attention dim:  torch.Size([40, 702])
Final Merged Passage dim:  torch.Size([40, 702, 800])
Modeled Passage dim:  torch.Size([40, 702, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 702, 1000])
Span start logits:  torch.Size([40, 702])
span start probs dim:  torch.Size([40, 702])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 702]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 642, 200])
Passage Length:  642
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 642, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 642, 13])
Passage ques attention dim:  torch.Size([40, 642, 13])
Passage question vectors dim:  torch.Size([40, 642, 200])
Question Passage Similarity dim:  torch.Size([40, 642])
Question passage attention dim:  torch.Size([40, 642])
Final Merged Passage dim:  torch.Size([40, 642, 800])
Modeled Passage dim:  torch.Size([40, 642, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 642, 1000])
Span start logits:  torch.Size([40, 642])
span start probs dim:  torch.Size([40, 642])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 642]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1039, 200])
Passage Length:  1039
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1039, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1039, 14])
Passage ques attention dim:  torch.Size([40, 1039, 14])
Passage question vectors dim:  torch.Size([40, 1039, 200])
Question Passage Similarity dim:  torch.Size([40, 1039])
Question passage attention dim:  torch.Size([40, 1039])
Final Merged Passage dim:  torch.Size([40, 1039, 800])
Modeled Passage dim:  torch.Size([40, 1039, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1039, 1000])
Span start logits:  torch.Size([40, 1039])
span start probs dim:  torch.Size([40, 1039])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1039]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1077, 200])
Passage Length:  1077
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1077, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1077, 14])
Passage ques attention dim:  torch.Size([40, 1077, 14])
Passage question vectors dim:  torch.Size([40, 1077, 200])
Question Passage Similarity dim:  torch.Size([40, 1077])
Question passage attention dim:  torch.Size([40, 1077])
Final Merged Passage dim:  torch.Size([40, 1077, 800])
Modeled Passage dim:  torch.Size([40, 1077, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1077, 1000])
Span start logits:  torch.Size([40, 1077])
span start probs dim:  torch.Size([40, 1077])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1077]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 404, 200])
Passage Length:  404
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 404, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 404, 12])
Passage ques attention dim:  torch.Size([40, 404, 12])
Passage question vectors dim:  torch.Size([40, 404, 200])
Question Passage Similarity dim:  torch.Size([40, 404])
Question passage attention dim:  torch.Size([40, 404])
Final Merged Passage dim:  torch.Size([40, 404, 800])
Modeled Passage dim:  torch.Size([40, 404, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 404, 1000])
Span start logits:  torch.Size([40, 404])
span start probs dim:  torch.Size([40, 404])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 404]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 765, 200])
Passage Length:  765
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 765, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 765, 15])
Passage ques attention dim:  torch.Size([40, 765, 15])
Passage question vectors dim:  torch.Size([40, 765, 200])
Question Passage Similarity dim:  torch.Size([40, 765])
Question passage attention dim:  torch.Size([40, 765])
Final Merged Passage dim:  torch.Size([40, 765, 800])
Modeled Passage dim:  torch.Size([40, 765, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 765, 1000])
Span start logits:  torch.Size([40, 765])
span start probs dim:  torch.Size([40, 765])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 765]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 453, 200])
Passage Length:  453
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 453, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 453, 16])
Passage ques attention dim:  torch.Size([40, 453, 16])
Passage question vectors dim:  torch.Size([40, 453, 200])
Question Passage Similarity dim:  torch.Size([40, 453])
Question passage attention dim:  torch.Size([40, 453])
Final Merged Passage dim:  torch.Size([40, 453, 800])
Modeled Passage dim:  torch.Size([40, 453, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 453, 1000])
Span start logits:  torch.Size([40, 453])
span start probs dim:  torch.Size([40, 453])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 453]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1256, 200])
Passage Length:  1256
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1256, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1256, 14])
Passage ques attention dim:  torch.Size([40, 1256, 14])
Passage question vectors dim:  torch.Size([40, 1256, 200])
Question Passage Similarity dim:  torch.Size([40, 1256])
Question passage attention dim:  torch.Size([40, 1256])
Final Merged Passage dim:  torch.Size([40, 1256, 800])
Modeled Passage dim:  torch.Size([40, 1256, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1256, 1000])
Span start logits:  torch.Size([40, 1256])
span start probs dim:  torch.Size([40, 1256])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1256]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 453, 200])
Passage Length:  453
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 453, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 453, 12])
Passage ques attention dim:  torch.Size([40, 453, 12])
Passage question vectors dim:  torch.Size([40, 453, 200])
Question Passage Similarity dim:  torch.Size([40, 453])
Question passage attention dim:  torch.Size([40, 453])
Final Merged Passage dim:  torch.Size([40, 453, 800])
Modeled Passage dim:  torch.Size([40, 453, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 453, 1000])
Span start logits:  torch.Size([40, 453])
span start probs dim:  torch.Size([40, 453])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 453]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 407, 200])
Passage Length:  407
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 407, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 407, 15])
Passage ques attention dim:  torch.Size([40, 407, 15])
Passage question vectors dim:  torch.Size([40, 407, 200])
Question Passage Similarity dim:  torch.Size([40, 407])
Question passage attention dim:  torch.Size([40, 407])
Final Merged Passage dim:  torch.Size([40, 407, 800])
Modeled Passage dim:  torch.Size([40, 407, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 407, 1000])
Span start logits:  torch.Size([40, 407])
span start probs dim:  torch.Size([40, 407])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 407]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 293, 200])
Passage Length:  293
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 293, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 293, 17])
Passage ques attention dim:  torch.Size([40, 293, 17])
Passage question vectors dim:  torch.Size([40, 293, 200])
Question Passage Similarity dim:  torch.Size([40, 293])
Question passage attention dim:  torch.Size([40, 293])
Final Merged Passage dim:  torch.Size([40, 293, 800])
Modeled Passage dim:  torch.Size([40, 293, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 293, 1000])
Span start logits:  torch.Size([40, 293])
span start probs dim:  torch.Size([40, 293])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 293]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 555, 200])
Passage Length:  555
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 555, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 555, 15])
Passage ques attention dim:  torch.Size([40, 555, 15])
Passage question vectors dim:  torch.Size([40, 555, 200])
Question Passage Similarity dim:  torch.Size([40, 555])
Question passage attention dim:  torch.Size([40, 555])
Final Merged Passage dim:  torch.Size([40, 555, 800])
Modeled Passage dim:  torch.Size([40, 555, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 555, 1000])
Span start logits:  torch.Size([40, 555])
span start probs dim:  torch.Size([40, 555])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 555]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 275, 200])
Passage Length:  275
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 275, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 275, 13])
Passage ques attention dim:  torch.Size([40, 275, 13])
Passage question vectors dim:  torch.Size([40, 275, 200])
Question Passage Similarity dim:  torch.Size([40, 275])
Question passage attention dim:  torch.Size([40, 275])
Final Merged Passage dim:  torch.Size([40, 275, 800])
Modeled Passage dim:  torch.Size([40, 275, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 275, 1000])
Span start logits:  torch.Size([40, 275])
span start probs dim:  torch.Size([40, 275])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 275]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 474, 200])
Passage Length:  474
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 474, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 474, 21])
Passage ques attention dim:  torch.Size([40, 474, 21])
Passage question vectors dim:  torch.Size([40, 474, 200])
Question Passage Similarity dim:  torch.Size([40, 474])
Question passage attention dim:  torch.Size([40, 474])
Final Merged Passage dim:  torch.Size([40, 474, 800])
Modeled Passage dim:  torch.Size([40, 474, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 474, 1000])
Span start logits:  torch.Size([40, 474])
span start probs dim:  torch.Size([40, 474])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 474]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 663, 200])
Passage Length:  663
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 663, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 663, 15])
Passage ques attention dim:  torch.Size([40, 663, 15])
Passage question vectors dim:  torch.Size([40, 663, 200])
Question Passage Similarity dim:  torch.Size([40, 663])
Question passage attention dim:  torch.Size([40, 663])
Final Merged Passage dim:  torch.Size([40, 663, 800])
Modeled Passage dim:  torch.Size([40, 663, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 663, 1000])
Span start logits:  torch.Size([40, 663])
span start probs dim:  torch.Size([40, 663])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 663]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 740, 200])
Passage Length:  740
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 740, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 740, 16])
Passage ques attention dim:  torch.Size([40, 740, 16])
Passage question vectors dim:  torch.Size([40, 740, 200])
Question Passage Similarity dim:  torch.Size([40, 740])
Question passage attention dim:  torch.Size([40, 740])
Final Merged Passage dim:  torch.Size([40, 740, 800])
Modeled Passage dim:  torch.Size([40, 740, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 740, 1000])
Span start logits:  torch.Size([40, 740])
span start probs dim:  torch.Size([40, 740])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 740]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 345, 200])
Passage Length:  345
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 345, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 345, 14])
Passage ques attention dim:  torch.Size([40, 345, 14])
Passage question vectors dim:  torch.Size([40, 345, 200])
Question Passage Similarity dim:  torch.Size([40, 345])
Question passage attention dim:  torch.Size([40, 345])
Final Merged Passage dim:  torch.Size([40, 345, 800])
Modeled Passage dim:  torch.Size([40, 345, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 345, 1000])
Span start logits:  torch.Size([40, 345])
span start probs dim:  torch.Size([40, 345])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 345]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 306, 200])
Passage Length:  306
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 306, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 306, 13])
Passage ques attention dim:  torch.Size([40, 306, 13])
Passage question vectors dim:  torch.Size([40, 306, 200])
Question Passage Similarity dim:  torch.Size([40, 306])
Question passage attention dim:  torch.Size([40, 306])
Final Merged Passage dim:  torch.Size([40, 306, 800])
Modeled Passage dim:  torch.Size([40, 306, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 306, 1000])
Span start logits:  torch.Size([40, 306])
span start probs dim:  torch.Size([40, 306])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 306]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 327, 200])
Passage Length:  327
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 327, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 327, 14])
Passage ques attention dim:  torch.Size([40, 327, 14])
Passage question vectors dim:  torch.Size([40, 327, 200])
Question Passage Similarity dim:  torch.Size([40, 327])
Question passage attention dim:  torch.Size([40, 327])
Final Merged Passage dim:  torch.Size([40, 327, 800])
Modeled Passage dim:  torch.Size([40, 327, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 327, 1000])
Span start logits:  torch.Size([40, 327])
span start probs dim:  torch.Size([40, 327])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 327]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 570, 200])
Passage Length:  570
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 570, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 570, 14])
Passage ques attention dim:  torch.Size([40, 570, 14])
Passage question vectors dim:  torch.Size([40, 570, 200])
Question Passage Similarity dim:  torch.Size([40, 570])
Question passage attention dim:  torch.Size([40, 570])
Final Merged Passage dim:  torch.Size([40, 570, 800])
Modeled Passage dim:  torch.Size([40, 570, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 570, 1000])
Span start logits:  torch.Size([40, 570])
span start probs dim:  torch.Size([40, 570])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 570]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 2056, 200])
Passage Length:  2056
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 2056, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2056, 13])
Passage ques attention dim:  torch.Size([40, 2056, 13])
Passage question vectors dim:  torch.Size([40, 2056, 200])
Question Passage Similarity dim:  torch.Size([40, 2056])
Question passage attention dim:  torch.Size([40, 2056])
Final Merged Passage dim:  torch.Size([40, 2056, 800])
Modeled Passage dim:  torch.Size([40, 2056, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2056, 1000])
Span start logits:  torch.Size([40, 2056])
span start probs dim:  torch.Size([40, 2056])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2056]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1129, 200])
Passage Length:  1129
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1129, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1129, 16])
Passage ques attention dim:  torch.Size([40, 1129, 16])
Passage question vectors dim:  torch.Size([40, 1129, 200])
Question Passage Similarity dim:  torch.Size([40, 1129])
Question passage attention dim:  torch.Size([40, 1129])
Final Merged Passage dim:  torch.Size([40, 1129, 800])
Modeled Passage dim:  torch.Size([40, 1129, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1129, 1000])
Span start logits:  torch.Size([40, 1129])
span start probs dim:  torch.Size([40, 1129])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1129]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 408, 200])
Passage Length:  408
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 408, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 408, 12])
Passage ques attention dim:  torch.Size([40, 408, 12])
Passage question vectors dim:  torch.Size([40, 408, 200])
Question Passage Similarity dim:  torch.Size([40, 408])
Question passage attention dim:  torch.Size([40, 408])
Final Merged Passage dim:  torch.Size([40, 408, 800])
Modeled Passage dim:  torch.Size([40, 408, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 408, 1000])
Span start logits:  torch.Size([40, 408])
span start probs dim:  torch.Size([40, 408])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 408]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1124, 200])
Passage Length:  1124
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1124, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1124, 14])
Passage ques attention dim:  torch.Size([40, 1124, 14])
Passage question vectors dim:  torch.Size([40, 1124, 200])
Question Passage Similarity dim:  torch.Size([40, 1124])
Question passage attention dim:  torch.Size([40, 1124])
Final Merged Passage dim:  torch.Size([40, 1124, 800])
Modeled Passage dim:  torch.Size([40, 1124, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1124, 1000])
Span start logits:  torch.Size([40, 1124])
span start probs dim:  torch.Size([40, 1124])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1124]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 659, 200])
Passage Length:  659
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 659, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 659, 15])
Passage ques attention dim:  torch.Size([40, 659, 15])
Passage question vectors dim:  torch.Size([40, 659, 200])
Question Passage Similarity dim:  torch.Size([40, 659])
Question passage attention dim:  torch.Size([40, 659])
Final Merged Passage dim:  torch.Size([40, 659, 800])
Modeled Passage dim:  torch.Size([40, 659, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 659, 1000])
Span start logits:  torch.Size([40, 659])
span start probs dim:  torch.Size([40, 659])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 659]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1125, 200])
Passage Length:  1125
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1125, 15])
Passage ques attention dim:  torch.Size([40, 1125, 15])
Passage question vectors dim:  torch.Size([40, 1125, 200])
Question Passage Similarity dim:  torch.Size([40, 1125])
Question passage attention dim:  torch.Size([40, 1125])
Final Merged Passage dim:  torch.Size([40, 1125, 800])
Modeled Passage dim:  torch.Size([40, 1125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1125, 1000])
Span start logits:  torch.Size([40, 1125])
span start probs dim:  torch.Size([40, 1125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 786, 200])
Passage Length:  786
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 786, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 786, 16])
Passage ques attention dim:  torch.Size([40, 786, 16])
Passage question vectors dim:  torch.Size([40, 786, 200])
Question Passage Similarity dim:  torch.Size([40, 786])
Question passage attention dim:  torch.Size([40, 786])
Final Merged Passage dim:  torch.Size([40, 786, 800])
Modeled Passage dim:  torch.Size([40, 786, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 786, 1000])
Span start logits:  torch.Size([40, 786])
span start probs dim:  torch.Size([40, 786])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 786]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 353, 200])
Passage Length:  353
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 353, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 353, 15])
Passage ques attention dim:  torch.Size([40, 353, 15])
Passage question vectors dim:  torch.Size([40, 353, 200])
Question Passage Similarity dim:  torch.Size([40, 353])
Question passage attention dim:  torch.Size([40, 353])
Final Merged Passage dim:  torch.Size([40, 353, 800])
Modeled Passage dim:  torch.Size([40, 353, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 353, 1000])
Span start logits:  torch.Size([40, 353])
span start probs dim:  torch.Size([40, 353])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 353]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1303, 200])
Passage Length:  1303
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1303, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1303, 11])
Passage ques attention dim:  torch.Size([40, 1303, 11])
Passage question vectors dim:  torch.Size([40, 1303, 200])
Question Passage Similarity dim:  torch.Size([40, 1303])
Question passage attention dim:  torch.Size([40, 1303])
Final Merged Passage dim:  torch.Size([40, 1303, 800])
Modeled Passage dim:  torch.Size([40, 1303, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1303, 1000])
Span start logits:  torch.Size([40, 1303])
span start probs dim:  torch.Size([40, 1303])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1303]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 766, 200])
Passage Length:  766
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 766, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 766, 16])
Passage ques attention dim:  torch.Size([40, 766, 16])
Passage question vectors dim:  torch.Size([40, 766, 200])
Question Passage Similarity dim:  torch.Size([40, 766])
Question passage attention dim:  torch.Size([40, 766])
Final Merged Passage dim:  torch.Size([40, 766, 800])
Modeled Passage dim:  torch.Size([40, 766, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 766, 1000])
Span start logits:  torch.Size([40, 766])
span start probs dim:  torch.Size([40, 766])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 766]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 681, 200])
Passage Length:  681
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 681, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 681, 13])
Passage ques attention dim:  torch.Size([40, 681, 13])
Passage question vectors dim:  torch.Size([40, 681, 200])
Question Passage Similarity dim:  torch.Size([40, 681])
Question passage attention dim:  torch.Size([40, 681])
Final Merged Passage dim:  torch.Size([40, 681, 800])
Modeled Passage dim:  torch.Size([40, 681, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 681, 1000])
Span start logits:  torch.Size([40, 681])
span start probs dim:  torch.Size([40, 681])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 681]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 379, 12])
Passage ques attention dim:  torch.Size([40, 379, 12])
Passage question vectors dim:  torch.Size([40, 379, 200])
Question Passage Similarity dim:  torch.Size([40, 379])
Question passage attention dim:  torch.Size([40, 379])
Final Merged Passage dim:  torch.Size([40, 379, 800])
Modeled Passage dim:  torch.Size([40, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 379, 1000])
Span start logits:  torch.Size([40, 379])
span start probs dim:  torch.Size([40, 379])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 379]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 540, 200])
Passage Length:  540
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 540, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 540, 14])
Passage ques attention dim:  torch.Size([40, 540, 14])
Passage question vectors dim:  torch.Size([40, 540, 200])
Question Passage Similarity dim:  torch.Size([40, 540])
Question passage attention dim:  torch.Size([40, 540])
Final Merged Passage dim:  torch.Size([40, 540, 800])
Modeled Passage dim:  torch.Size([40, 540, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 540, 1000])
Span start logits:  torch.Size([40, 540])
span start probs dim:  torch.Size([40, 540])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 540]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1287, 200])
Passage Length:  1287
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1287, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1287, 14])
Passage ques attention dim:  torch.Size([40, 1287, 14])
Passage question vectors dim:  torch.Size([40, 1287, 200])
Question Passage Similarity dim:  torch.Size([40, 1287])
Question passage attention dim:  torch.Size([40, 1287])
Final Merged Passage dim:  torch.Size([40, 1287, 800])
Modeled Passage dim:  torch.Size([40, 1287, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1287, 1000])
Span start logits:  torch.Size([40, 1287])
span start probs dim:  torch.Size([40, 1287])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1287]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 402, 200])
Passage Length:  402
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 402, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 402, 13])
Passage ques attention dim:  torch.Size([40, 402, 13])
Passage question vectors dim:  torch.Size([40, 402, 200])
Question Passage Similarity dim:  torch.Size([40, 402])
Question passage attention dim:  torch.Size([40, 402])
Final Merged Passage dim:  torch.Size([40, 402, 800])
Modeled Passage dim:  torch.Size([40, 402, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 402, 1000])
Span start logits:  torch.Size([40, 402])
span start probs dim:  torch.Size([40, 402])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 402]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1992, 200])
Passage Length:  1992
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1992, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1992, 14])
Passage ques attention dim:  torch.Size([40, 1992, 14])
Passage question vectors dim:  torch.Size([40, 1992, 200])
Question Passage Similarity dim:  torch.Size([40, 1992])
Question passage attention dim:  torch.Size([40, 1992])
Final Merged Passage dim:  torch.Size([40, 1992, 800])
Modeled Passage dim:  torch.Size([40, 1992, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1992, 1000])
Span start logits:  torch.Size([40, 1992])
span start probs dim:  torch.Size([40, 1992])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1992]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1221, 200])
Passage Length:  1221
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1221, 11])
Passage ques attention dim:  torch.Size([40, 1221, 11])
Passage question vectors dim:  torch.Size([40, 1221, 200])
Question Passage Similarity dim:  torch.Size([40, 1221])
Question passage attention dim:  torch.Size([40, 1221])
Final Merged Passage dim:  torch.Size([40, 1221, 800])
Modeled Passage dim:  torch.Size([40, 1221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1221, 1000])
Span start logits:  torch.Size([40, 1221])
span start probs dim:  torch.Size([40, 1221])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1221]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 273, 200])
Passage Length:  273
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 273, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 273, 14])
Passage ques attention dim:  torch.Size([40, 273, 14])
Passage question vectors dim:  torch.Size([40, 273, 200])
Question Passage Similarity dim:  torch.Size([40, 273])
Question passage attention dim:  torch.Size([40, 273])
Final Merged Passage dim:  torch.Size([40, 273, 800])
Modeled Passage dim:  torch.Size([40, 273, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 273, 1000])
Span start logits:  torch.Size([40, 273])
span start probs dim:  torch.Size([40, 273])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 273]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 542, 200])
Passage Length:  542
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 542, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 542, 14])
Passage ques attention dim:  torch.Size([40, 542, 14])
Passage question vectors dim:  torch.Size([40, 542, 200])
Question Passage Similarity dim:  torch.Size([40, 542])
Question passage attention dim:  torch.Size([40, 542])
Final Merged Passage dim:  torch.Size([40, 542, 800])
Modeled Passage dim:  torch.Size([40, 542, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 542, 1000])
Span start logits:  torch.Size([40, 542])
span start probs dim:  torch.Size([40, 542])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 542]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 601, 200])
Passage Length:  601
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 601, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 601, 14])
Passage ques attention dim:  torch.Size([40, 601, 14])
Passage question vectors dim:  torch.Size([40, 601, 200])
Question Passage Similarity dim:  torch.Size([40, 601])
Question passage attention dim:  torch.Size([40, 601])
Final Merged Passage dim:  torch.Size([40, 601, 800])
Modeled Passage dim:  torch.Size([40, 601, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 601, 1000])
Span start logits:  torch.Size([40, 601])
span start probs dim:  torch.Size([40, 601])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 601]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 916, 200])
Passage Length:  916
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 916, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 916, 11])
Passage ques attention dim:  torch.Size([40, 916, 11])
Passage question vectors dim:  torch.Size([40, 916, 200])
Question Passage Similarity dim:  torch.Size([40, 916])
Question passage attention dim:  torch.Size([40, 916])
Final Merged Passage dim:  torch.Size([40, 916, 800])
Modeled Passage dim:  torch.Size([40, 916, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 916, 1000])
Span start logits:  torch.Size([40, 916])
span start probs dim:  torch.Size([40, 916])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 916]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 257, 200])
Passage Length:  257
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 257, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 257, 18])
Passage ques attention dim:  torch.Size([40, 257, 18])
Passage question vectors dim:  torch.Size([40, 257, 200])
Question Passage Similarity dim:  torch.Size([40, 257])
Question passage attention dim:  torch.Size([40, 257])
Final Merged Passage dim:  torch.Size([40, 257, 800])
Modeled Passage dim:  torch.Size([40, 257, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 257, 1000])
Span start logits:  torch.Size([40, 257])
span start probs dim:  torch.Size([40, 257])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 257]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 462, 200])
Passage Length:  462
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 462, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 462, 16])
Passage ques attention dim:  torch.Size([40, 462, 16])
Passage question vectors dim:  torch.Size([40, 462, 200])
Question Passage Similarity dim:  torch.Size([40, 462])
Question passage attention dim:  torch.Size([40, 462])
Final Merged Passage dim:  torch.Size([40, 462, 800])
Modeled Passage dim:  torch.Size([40, 462, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 462, 1000])
Span start logits:  torch.Size([40, 462])
span start probs dim:  torch.Size([40, 462])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 462]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 558, 200])
Passage Length:  558
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 558, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 558, 12])
Passage ques attention dim:  torch.Size([40, 558, 12])
Passage question vectors dim:  torch.Size([40, 558, 200])
Question Passage Similarity dim:  torch.Size([40, 558])
Question passage attention dim:  torch.Size([40, 558])
Final Merged Passage dim:  torch.Size([40, 558, 800])
Modeled Passage dim:  torch.Size([40, 558, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 558, 1000])
Span start logits:  torch.Size([40, 558])
span start probs dim:  torch.Size([40, 558])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 558]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 980, 200])
Passage Length:  980
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 980, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 980, 13])
Passage ques attention dim:  torch.Size([40, 980, 13])
Passage question vectors dim:  torch.Size([40, 980, 200])
Question Passage Similarity dim:  torch.Size([40, 980])
Question passage attention dim:  torch.Size([40, 980])
Final Merged Passage dim:  torch.Size([40, 980, 800])
Modeled Passage dim:  torch.Size([40, 980, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 980, 1000])
Span start logits:  torch.Size([40, 980])
span start probs dim:  torch.Size([40, 980])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 980]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 621, 200])
Passage Length:  621
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 621, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 621, 15])
Passage ques attention dim:  torch.Size([40, 621, 15])
Passage question vectors dim:  torch.Size([40, 621, 200])
Question Passage Similarity dim:  torch.Size([40, 621])
Question passage attention dim:  torch.Size([40, 621])
Final Merged Passage dim:  torch.Size([40, 621, 800])
Modeled Passage dim:  torch.Size([40, 621, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 621, 1000])
Span start logits:  torch.Size([40, 621])
span start probs dim:  torch.Size([40, 621])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 621]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 968, 200])
Passage Length:  968
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 968, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 968, 15])
Passage ques attention dim:  torch.Size([40, 968, 15])
Passage question vectors dim:  torch.Size([40, 968, 200])
Question Passage Similarity dim:  torch.Size([40, 968])
Question passage attention dim:  torch.Size([40, 968])
Final Merged Passage dim:  torch.Size([40, 968, 800])
Modeled Passage dim:  torch.Size([40, 968, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 968, 1000])
Span start logits:  torch.Size([40, 968])
span start probs dim:  torch.Size([40, 968])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 968]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 767, 200])
Passage Length:  767
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 767, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 767, 13])
Passage ques attention dim:  torch.Size([40, 767, 13])
Passage question vectors dim:  torch.Size([40, 767, 200])
Question Passage Similarity dim:  torch.Size([40, 767])
Question passage attention dim:  torch.Size([40, 767])
Final Merged Passage dim:  torch.Size([40, 767, 800])
Modeled Passage dim:  torch.Size([40, 767, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 767, 1000])
Span start logits:  torch.Size([40, 767])
span start probs dim:  torch.Size([40, 767])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 767]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 692, 200])
Passage Length:  692
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 692, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 692, 20])
Passage ques attention dim:  torch.Size([40, 692, 20])
Passage question vectors dim:  torch.Size([40, 692, 200])
Question Passage Similarity dim:  torch.Size([40, 692])
Question passage attention dim:  torch.Size([40, 692])
Final Merged Passage dim:  torch.Size([40, 692, 800])
Modeled Passage dim:  torch.Size([40, 692, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 692, 1000])
Span start logits:  torch.Size([40, 692])
span start probs dim:  torch.Size([40, 692])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 692]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 675, 200])
Passage Length:  675
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 675, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 675, 14])
Passage ques attention dim:  torch.Size([40, 675, 14])
Passage question vectors dim:  torch.Size([40, 675, 200])
Question Passage Similarity dim:  torch.Size([40, 675])
Question passage attention dim:  torch.Size([40, 675])
Final Merged Passage dim:  torch.Size([40, 675, 800])
Modeled Passage dim:  torch.Size([40, 675, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 675, 1000])
Span start logits:  torch.Size([40, 675])
span start probs dim:  torch.Size([40, 675])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 675]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 892, 200])
Passage Length:  892
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 892, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 892, 19])
Passage ques attention dim:  torch.Size([40, 892, 19])
Passage question vectors dim:  torch.Size([40, 892, 200])
Question Passage Similarity dim:  torch.Size([40, 892])
Question passage attention dim:  torch.Size([40, 892])
Final Merged Passage dim:  torch.Size([40, 892, 800])
Modeled Passage dim:  torch.Size([40, 892, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 892, 1000])
Span start logits:  torch.Size([40, 892])
span start probs dim:  torch.Size([40, 892])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 892]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 193, 200])
Passage Length:  193
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 193, 12])
Passage ques attention dim:  torch.Size([40, 193, 12])
Passage question vectors dim:  torch.Size([40, 193, 200])
Question Passage Similarity dim:  torch.Size([40, 193])
Question passage attention dim:  torch.Size([40, 193])
Final Merged Passage dim:  torch.Size([40, 193, 800])
Modeled Passage dim:  torch.Size([40, 193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 193, 1000])
Span start logits:  torch.Size([40, 193])
span start probs dim:  torch.Size([40, 193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1095, 200])
Passage Length:  1095
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1095, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1095, 15])
Passage ques attention dim:  torch.Size([40, 1095, 15])
Passage question vectors dim:  torch.Size([40, 1095, 200])
Question Passage Similarity dim:  torch.Size([40, 1095])
Question passage attention dim:  torch.Size([40, 1095])
Final Merged Passage dim:  torch.Size([40, 1095, 800])
Modeled Passage dim:  torch.Size([40, 1095, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1095, 1000])
Span start logits:  torch.Size([40, 1095])
span start probs dim:  torch.Size([40, 1095])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1095]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1325, 200])
Passage Length:  1325
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1325, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1325, 13])
Passage ques attention dim:  torch.Size([40, 1325, 13])
Passage question vectors dim:  torch.Size([40, 1325, 200])
Question Passage Similarity dim:  torch.Size([40, 1325])
Question passage attention dim:  torch.Size([40, 1325])
Final Merged Passage dim:  torch.Size([40, 1325, 800])
Modeled Passage dim:  torch.Size([40, 1325, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1325, 1000])
Span start logits:  torch.Size([40, 1325])
span start probs dim:  torch.Size([40, 1325])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1325]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 743, 200])
Passage Length:  743
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 743, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 743, 13])
Passage ques attention dim:  torch.Size([40, 743, 13])
Passage question vectors dim:  torch.Size([40, 743, 200])
Question Passage Similarity dim:  torch.Size([40, 743])
Question passage attention dim:  torch.Size([40, 743])
Final Merged Passage dim:  torch.Size([40, 743, 800])
Modeled Passage dim:  torch.Size([40, 743, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 743, 1000])
Span start logits:  torch.Size([40, 743])
span start probs dim:  torch.Size([40, 743])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 743]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 289, 200])
Passage Length:  289
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 289, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 289, 12])
Passage ques attention dim:  torch.Size([40, 289, 12])
Passage question vectors dim:  torch.Size([40, 289, 200])
Question Passage Similarity dim:  torch.Size([40, 289])
Question passage attention dim:  torch.Size([40, 289])
Final Merged Passage dim:  torch.Size([40, 289, 800])
Modeled Passage dim:  torch.Size([40, 289, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 289, 1000])
Span start logits:  torch.Size([40, 289])
span start probs dim:  torch.Size([40, 289])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 289]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1037, 200])
Passage Length:  1037
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1037, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1037, 13])
Passage ques attention dim:  torch.Size([40, 1037, 13])
Passage question vectors dim:  torch.Size([40, 1037, 200])
Question Passage Similarity dim:  torch.Size([40, 1037])
Question passage attention dim:  torch.Size([40, 1037])
Final Merged Passage dim:  torch.Size([40, 1037, 800])
Modeled Passage dim:  torch.Size([40, 1037, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1037, 1000])
Span start logits:  torch.Size([40, 1037])
span start probs dim:  torch.Size([40, 1037])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1037]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 975, 200])
Passage Length:  975
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 975, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 975, 19])
Passage ques attention dim:  torch.Size([40, 975, 19])
Passage question vectors dim:  torch.Size([40, 975, 200])
Question Passage Similarity dim:  torch.Size([40, 975])
Question passage attention dim:  torch.Size([40, 975])
Final Merged Passage dim:  torch.Size([40, 975, 800])
Modeled Passage dim:  torch.Size([40, 975, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 975, 1000])
Span start logits:  torch.Size([40, 975])
span start probs dim:  torch.Size([40, 975])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 975]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1018, 200])
Passage Length:  1018
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1018, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1018, 13])
Passage ques attention dim:  torch.Size([40, 1018, 13])
Passage question vectors dim:  torch.Size([40, 1018, 200])
Question Passage Similarity dim:  torch.Size([40, 1018])
Question passage attention dim:  torch.Size([40, 1018])
Final Merged Passage dim:  torch.Size([40, 1018, 800])
Modeled Passage dim:  torch.Size([40, 1018, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1018, 1000])
Span start logits:  torch.Size([40, 1018])
span start probs dim:  torch.Size([40, 1018])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1018]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 715, 200])
Passage Length:  715
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 715, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 715, 14])
Passage ques attention dim:  torch.Size([40, 715, 14])
Passage question vectors dim:  torch.Size([40, 715, 200])
Question Passage Similarity dim:  torch.Size([40, 715])
Question passage attention dim:  torch.Size([40, 715])
Final Merged Passage dim:  torch.Size([40, 715, 800])
Modeled Passage dim:  torch.Size([40, 715, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 715, 1000])
Span start logits:  torch.Size([40, 715])
span start probs dim:  torch.Size([40, 715])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 715]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 703, 200])
Passage Length:  703
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 703, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 703, 13])
Passage ques attention dim:  torch.Size([40, 703, 13])
Passage question vectors dim:  torch.Size([40, 703, 200])
Question Passage Similarity dim:  torch.Size([40, 703])
Question passage attention dim:  torch.Size([40, 703])
Final Merged Passage dim:  torch.Size([40, 703, 800])
Modeled Passage dim:  torch.Size([40, 703, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 703, 1000])
Span start logits:  torch.Size([40, 703])
span start probs dim:  torch.Size([40, 703])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 703]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 464, 200])
Passage Length:  464
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 464, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 464, 13])
Passage ques attention dim:  torch.Size([40, 464, 13])
Passage question vectors dim:  torch.Size([40, 464, 200])
Question Passage Similarity dim:  torch.Size([40, 464])
Question passage attention dim:  torch.Size([40, 464])
Final Merged Passage dim:  torch.Size([40, 464, 800])
Modeled Passage dim:  torch.Size([40, 464, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 464, 1000])
Span start logits:  torch.Size([40, 464])
span start probs dim:  torch.Size([40, 464])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 464]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1009, 200])
Passage Length:  1009
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1009, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1009, 16])
Passage ques attention dim:  torch.Size([40, 1009, 16])
Passage question vectors dim:  torch.Size([40, 1009, 200])
Question Passage Similarity dim:  torch.Size([40, 1009])
Question passage attention dim:  torch.Size([40, 1009])
Final Merged Passage dim:  torch.Size([40, 1009, 800])
Modeled Passage dim:  torch.Size([40, 1009, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1009, 1000])
Span start logits:  torch.Size([40, 1009])
span start probs dim:  torch.Size([40, 1009])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1009]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 217, 200])
Passage Length:  217
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 217, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 217, 15])
Passage ques attention dim:  torch.Size([40, 217, 15])
Passage question vectors dim:  torch.Size([40, 217, 200])
Question Passage Similarity dim:  torch.Size([40, 217])
Question passage attention dim:  torch.Size([40, 217])
Final Merged Passage dim:  torch.Size([40, 217, 800])
Modeled Passage dim:  torch.Size([40, 217, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 217, 1000])
Span start logits:  torch.Size([40, 217])
span start probs dim:  torch.Size([40, 217])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 217]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1242, 200])
Passage Length:  1242
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1242, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1242, 15])
Passage ques attention dim:  torch.Size([40, 1242, 15])
Passage question vectors dim:  torch.Size([40, 1242, 200])
Question Passage Similarity dim:  torch.Size([40, 1242])
Question passage attention dim:  torch.Size([40, 1242])
Final Merged Passage dim:  torch.Size([40, 1242, 800])
Modeled Passage dim:  torch.Size([40, 1242, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1242, 1000])
Span start logits:  torch.Size([40, 1242])
span start probs dim:  torch.Size([40, 1242])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1242]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 243, 200])
Passage Length:  243
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 243, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 243, 12])
Passage ques attention dim:  torch.Size([40, 243, 12])
Passage question vectors dim:  torch.Size([40, 243, 200])
Question Passage Similarity dim:  torch.Size([40, 243])
Question passage attention dim:  torch.Size([40, 243])
Final Merged Passage dim:  torch.Size([40, 243, 800])
Modeled Passage dim:  torch.Size([40, 243, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 243, 1000])
Span start logits:  torch.Size([40, 243])
span start probs dim:  torch.Size([40, 243])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 243]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 849, 200])
Passage Length:  849
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 849, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 849, 14])
Passage ques attention dim:  torch.Size([40, 849, 14])
Passage question vectors dim:  torch.Size([40, 849, 200])
Question Passage Similarity dim:  torch.Size([40, 849])
Question passage attention dim:  torch.Size([40, 849])
Final Merged Passage dim:  torch.Size([40, 849, 800])
Modeled Passage dim:  torch.Size([40, 849, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 849, 1000])
Span start logits:  torch.Size([40, 849])
span start probs dim:  torch.Size([40, 849])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 849]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1138, 200])
Passage Length:  1138
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1138, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1138, 12])
Passage ques attention dim:  torch.Size([40, 1138, 12])
Passage question vectors dim:  torch.Size([40, 1138, 200])
Question Passage Similarity dim:  torch.Size([40, 1138])
Question passage attention dim:  torch.Size([40, 1138])
Final Merged Passage dim:  torch.Size([40, 1138, 800])
Modeled Passage dim:  torch.Size([40, 1138, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1138, 1000])
Span start logits:  torch.Size([40, 1138])
span start probs dim:  torch.Size([40, 1138])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1138]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 643, 200])
Passage Length:  643
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 643, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 643, 14])
Passage ques attention dim:  torch.Size([40, 643, 14])
Passage question vectors dim:  torch.Size([40, 643, 200])
Question Passage Similarity dim:  torch.Size([40, 643])
Question passage attention dim:  torch.Size([40, 643])
Final Merged Passage dim:  torch.Size([40, 643, 800])
Modeled Passage dim:  torch.Size([40, 643, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 643, 1000])
Span start logits:  torch.Size([40, 643])
span start probs dim:  torch.Size([40, 643])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 643]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 207, 200])
Passage Length:  207
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 207, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 207, 24])
Passage ques attention dim:  torch.Size([40, 207, 24])
Passage question vectors dim:  torch.Size([40, 207, 200])
Question Passage Similarity dim:  torch.Size([40, 207])
Question passage attention dim:  torch.Size([40, 207])
Final Merged Passage dim:  torch.Size([40, 207, 800])
Modeled Passage dim:  torch.Size([40, 207, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 207, 1000])
Span start logits:  torch.Size([40, 207])
span start probs dim:  torch.Size([40, 207])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 207]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1048, 200])
Passage Length:  1048
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1048, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1048, 16])
Passage ques attention dim:  torch.Size([40, 1048, 16])
Passage question vectors dim:  torch.Size([40, 1048, 200])
Question Passage Similarity dim:  torch.Size([40, 1048])
Question passage attention dim:  torch.Size([40, 1048])
Final Merged Passage dim:  torch.Size([40, 1048, 800])
Modeled Passage dim:  torch.Size([40, 1048, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1048, 1000])
Span start logits:  torch.Size([40, 1048])
span start probs dim:  torch.Size([40, 1048])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1048]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 574, 200])
Passage Length:  574
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 574, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 574, 15])
Passage ques attention dim:  torch.Size([40, 574, 15])
Passage question vectors dim:  torch.Size([40, 574, 200])
Question Passage Similarity dim:  torch.Size([40, 574])
Question passage attention dim:  torch.Size([40, 574])
Final Merged Passage dim:  torch.Size([40, 574, 800])
Modeled Passage dim:  torch.Size([40, 574, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 574, 1000])
Span start logits:  torch.Size([40, 574])
span start probs dim:  torch.Size([40, 574])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 574]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 685, 200])
Passage Length:  685
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 685, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 685, 12])
Passage ques attention dim:  torch.Size([40, 685, 12])
Passage question vectors dim:  torch.Size([40, 685, 200])
Question Passage Similarity dim:  torch.Size([40, 685])
Question passage attention dim:  torch.Size([40, 685])
Final Merged Passage dim:  torch.Size([40, 685, 800])
Modeled Passage dim:  torch.Size([40, 685, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 685, 1000])
Span start logits:  torch.Size([40, 685])
span start probs dim:  torch.Size([40, 685])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 685]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 575, 200])
Passage Length:  575
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 575, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 575, 14])
Passage ques attention dim:  torch.Size([40, 575, 14])
Passage question vectors dim:  torch.Size([40, 575, 200])
Question Passage Similarity dim:  torch.Size([40, 575])
Question passage attention dim:  torch.Size([40, 575])
Final Merged Passage dim:  torch.Size([40, 575, 800])
Modeled Passage dim:  torch.Size([40, 575, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 575, 1000])
Span start logits:  torch.Size([40, 575])
span start probs dim:  torch.Size([40, 575])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 575]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1043, 200])
Passage Length:  1043
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1043, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1043, 17])
Passage ques attention dim:  torch.Size([40, 1043, 17])
Passage question vectors dim:  torch.Size([40, 1043, 200])
Question Passage Similarity dim:  torch.Size([40, 1043])
Question passage attention dim:  torch.Size([40, 1043])
Final Merged Passage dim:  torch.Size([40, 1043, 800])
Modeled Passage dim:  torch.Size([40, 1043, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1043, 1000])
Span start logits:  torch.Size([40, 1043])
span start probs dim:  torch.Size([40, 1043])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1043]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 399, 200])
Passage Length:  399
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 399, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 399, 14])
Passage ques attention dim:  torch.Size([40, 399, 14])
Passage question vectors dim:  torch.Size([40, 399, 200])
Question Passage Similarity dim:  torch.Size([40, 399])
Question passage attention dim:  torch.Size([40, 399])
Final Merged Passage dim:  torch.Size([40, 399, 800])
Modeled Passage dim:  torch.Size([40, 399, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 399, 1000])
Span start logits:  torch.Size([40, 399])
span start probs dim:  torch.Size([40, 399])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 399]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 679, 200])
Passage Length:  679
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 679, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 679, 13])
Passage ques attention dim:  torch.Size([40, 679, 13])
Passage question vectors dim:  torch.Size([40, 679, 200])
Question Passage Similarity dim:  torch.Size([40, 679])
Question passage attention dim:  torch.Size([40, 679])
Final Merged Passage dim:  torch.Size([40, 679, 800])
Modeled Passage dim:  torch.Size([40, 679, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 679, 1000])
Span start logits:  torch.Size([40, 679])
span start probs dim:  torch.Size([40, 679])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 679]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 523, 200])
Passage Length:  523
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 523, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 523, 20])
Passage ques attention dim:  torch.Size([40, 523, 20])
Passage question vectors dim:  torch.Size([40, 523, 200])
Question Passage Similarity dim:  torch.Size([40, 523])
Question passage attention dim:  torch.Size([40, 523])
Final Merged Passage dim:  torch.Size([40, 523, 800])
Modeled Passage dim:  torch.Size([40, 523, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 523, 1000])
Span start logits:  torch.Size([40, 523])
span start probs dim:  torch.Size([40, 523])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 523]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1003, 200])
Passage Length:  1003
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1003, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1003, 15])
Passage ques attention dim:  torch.Size([40, 1003, 15])
Passage question vectors dim:  torch.Size([40, 1003, 200])
Question Passage Similarity dim:  torch.Size([40, 1003])
Question passage attention dim:  torch.Size([40, 1003])
Final Merged Passage dim:  torch.Size([40, 1003, 800])
Modeled Passage dim:  torch.Size([40, 1003, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1003, 1000])
Span start logits:  torch.Size([40, 1003])
span start probs dim:  torch.Size([40, 1003])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1003]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1012, 200])
Passage Length:  1012
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1012, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1012, 16])
Passage ques attention dim:  torch.Size([40, 1012, 16])
Passage question vectors dim:  torch.Size([40, 1012, 200])
Question Passage Similarity dim:  torch.Size([40, 1012])
Question passage attention dim:  torch.Size([40, 1012])
Final Merged Passage dim:  torch.Size([40, 1012, 800])
Modeled Passage dim:  torch.Size([40, 1012, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1012, 1000])
Span start logits:  torch.Size([40, 1012])
span start probs dim:  torch.Size([40, 1012])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1012]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 807, 200])
Passage Length:  807
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 807, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 807, 17])
Passage ques attention dim:  torch.Size([40, 807, 17])
Passage question vectors dim:  torch.Size([40, 807, 200])
Question Passage Similarity dim:  torch.Size([40, 807])
Question passage attention dim:  torch.Size([40, 807])
Final Merged Passage dim:  torch.Size([40, 807, 800])
Modeled Passage dim:  torch.Size([40, 807, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 807, 1000])
Span start logits:  torch.Size([40, 807])
span start probs dim:  torch.Size([40, 807])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 807]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 576, 200])
Passage Length:  576
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 576, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 576, 12])
Passage ques attention dim:  torch.Size([40, 576, 12])
Passage question vectors dim:  torch.Size([40, 576, 200])
Question Passage Similarity dim:  torch.Size([40, 576])
Question passage attention dim:  torch.Size([40, 576])
Final Merged Passage dim:  torch.Size([40, 576, 800])
Modeled Passage dim:  torch.Size([40, 576, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 576, 1000])
Span start logits:  torch.Size([40, 576])
span start probs dim:  torch.Size([40, 576])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 576]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 349, 200])
Passage Length:  349
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 349, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 349, 18])
Passage ques attention dim:  torch.Size([40, 349, 18])
Passage question vectors dim:  torch.Size([40, 349, 200])
Question Passage Similarity dim:  torch.Size([40, 349])
Question passage attention dim:  torch.Size([40, 349])
Final Merged Passage dim:  torch.Size([40, 349, 800])
Modeled Passage dim:  torch.Size([40, 349, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 349, 1000])
Span start logits:  torch.Size([40, 349])
span start probs dim:  torch.Size([40, 349])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 349]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 926, 200])
Passage Length:  926
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 926, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 926, 15])
Passage ques attention dim:  torch.Size([40, 926, 15])
Passage question vectors dim:  torch.Size([40, 926, 200])
Question Passage Similarity dim:  torch.Size([40, 926])
Question passage attention dim:  torch.Size([40, 926])
Final Merged Passage dim:  torch.Size([40, 926, 800])
Modeled Passage dim:  torch.Size([40, 926, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 926, 1000])
Span start logits:  torch.Size([40, 926])
span start probs dim:  torch.Size([40, 926])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 926]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1367, 200])
Passage Length:  1367
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1367, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1367, 15])
Passage ques attention dim:  torch.Size([40, 1367, 15])
Passage question vectors dim:  torch.Size([40, 1367, 200])
Question Passage Similarity dim:  torch.Size([40, 1367])
Question passage attention dim:  torch.Size([40, 1367])
Final Merged Passage dim:  torch.Size([40, 1367, 800])
Modeled Passage dim:  torch.Size([40, 1367, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1367, 1000])
Span start logits:  torch.Size([40, 1367])
span start probs dim:  torch.Size([40, 1367])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1367]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1025, 13])
Passage ques attention dim:  torch.Size([40, 1025, 13])
Passage question vectors dim:  torch.Size([40, 1025, 200])
Question Passage Similarity dim:  torch.Size([40, 1025])
Question passage attention dim:  torch.Size([40, 1025])
Final Merged Passage dim:  torch.Size([40, 1025, 800])
Modeled Passage dim:  torch.Size([40, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1025, 1000])
Span start logits:  torch.Size([40, 1025])
span start probs dim:  torch.Size([40, 1025])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1025]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 483, 200])
Passage Length:  483
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 483, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 483, 14])
Passage ques attention dim:  torch.Size([40, 483, 14])
Passage question vectors dim:  torch.Size([40, 483, 200])
Question Passage Similarity dim:  torch.Size([40, 483])
Question passage attention dim:  torch.Size([40, 483])
Final Merged Passage dim:  torch.Size([40, 483, 800])
Modeled Passage dim:  torch.Size([40, 483, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 483, 1000])
Span start logits:  torch.Size([40, 483])
span start probs dim:  torch.Size([40, 483])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 483]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 772, 200])
Passage Length:  772
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 772, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 772, 15])
Passage ques attention dim:  torch.Size([40, 772, 15])
Passage question vectors dim:  torch.Size([40, 772, 200])
Question Passage Similarity dim:  torch.Size([40, 772])
Question passage attention dim:  torch.Size([40, 772])
Final Merged Passage dim:  torch.Size([40, 772, 800])
Modeled Passage dim:  torch.Size([40, 772, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 772, 1000])
Span start logits:  torch.Size([40, 772])
span start probs dim:  torch.Size([40, 772])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 772]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 246, 200])
Passage Length:  246
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 246, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 246, 18])
Passage ques attention dim:  torch.Size([40, 246, 18])
Passage question vectors dim:  torch.Size([40, 246, 200])
Question Passage Similarity dim:  torch.Size([40, 246])
Question passage attention dim:  torch.Size([40, 246])
Final Merged Passage dim:  torch.Size([40, 246, 800])
Modeled Passage dim:  torch.Size([40, 246, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 246, 1000])
Span start logits:  torch.Size([40, 246])
span start probs dim:  torch.Size([40, 246])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 246]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 439, 200])
Passage Length:  439
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 439, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 439, 15])
Passage ques attention dim:  torch.Size([40, 439, 15])
Passage question vectors dim:  torch.Size([40, 439, 200])
Question Passage Similarity dim:  torch.Size([40, 439])
Question passage attention dim:  torch.Size([40, 439])
Final Merged Passage dim:  torch.Size([40, 439, 800])
Modeled Passage dim:  torch.Size([40, 439, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 439, 1000])
Span start logits:  torch.Size([40, 439])
span start probs dim:  torch.Size([40, 439])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 439]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1015, 200])
Passage Length:  1015
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1015, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1015, 15])
Passage ques attention dim:  torch.Size([40, 1015, 15])
Passage question vectors dim:  torch.Size([40, 1015, 200])
Question Passage Similarity dim:  torch.Size([40, 1015])
Question passage attention dim:  torch.Size([40, 1015])
Final Merged Passage dim:  torch.Size([40, 1015, 800])
Modeled Passage dim:  torch.Size([40, 1015, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1015, 1000])
Span start logits:  torch.Size([40, 1015])
span start probs dim:  torch.Size([40, 1015])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1015]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1017, 200])
Passage Length:  1017
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1017, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1017, 15])
Passage ques attention dim:  torch.Size([40, 1017, 15])
Passage question vectors dim:  torch.Size([40, 1017, 200])
Question Passage Similarity dim:  torch.Size([40, 1017])
Question passage attention dim:  torch.Size([40, 1017])
Final Merged Passage dim:  torch.Size([40, 1017, 800])
Modeled Passage dim:  torch.Size([40, 1017, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1017, 1000])
Span start logits:  torch.Size([40, 1017])
span start probs dim:  torch.Size([40, 1017])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1017]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1675, 200])
Passage Length:  1675
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1675, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1675, 14])
Passage ques attention dim:  torch.Size([40, 1675, 14])
Passage question vectors dim:  torch.Size([40, 1675, 200])
Question Passage Similarity dim:  torch.Size([40, 1675])
Question passage attention dim:  torch.Size([40, 1675])
Final Merged Passage dim:  torch.Size([40, 1675, 800])
Modeled Passage dim:  torch.Size([40, 1675, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1675, 1000])
Span start logits:  torch.Size([40, 1675])
span start probs dim:  torch.Size([40, 1675])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1675]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 925, 200])
Passage Length:  925
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 925, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 925, 15])
Passage ques attention dim:  torch.Size([40, 925, 15])
Passage question vectors dim:  torch.Size([40, 925, 200])
Question Passage Similarity dim:  torch.Size([40, 925])
Question passage attention dim:  torch.Size([40, 925])
Final Merged Passage dim:  torch.Size([40, 925, 800])
Modeled Passage dim:  torch.Size([40, 925, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 925, 1000])
Span start logits:  torch.Size([40, 925])
span start probs dim:  torch.Size([40, 925])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 925]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 381, 14])
Passage ques attention dim:  torch.Size([40, 381, 14])
Passage question vectors dim:  torch.Size([40, 381, 200])
Question Passage Similarity dim:  torch.Size([40, 381])
Question passage attention dim:  torch.Size([40, 381])
Final Merged Passage dim:  torch.Size([40, 381, 800])
Modeled Passage dim:  torch.Size([40, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 381, 1000])
Span start logits:  torch.Size([40, 381])
span start probs dim:  torch.Size([40, 381])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 381]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 703, 200])
Passage Length:  703
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 703, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 703, 20])
Passage ques attention dim:  torch.Size([40, 703, 20])
Passage question vectors dim:  torch.Size([40, 703, 200])
Question Passage Similarity dim:  torch.Size([40, 703])
Question passage attention dim:  torch.Size([40, 703])
Final Merged Passage dim:  torch.Size([40, 703, 800])
Modeled Passage dim:  torch.Size([40, 703, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 703, 1000])
Span start logits:  torch.Size([40, 703])
span start probs dim:  torch.Size([40, 703])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 703]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 256, 200])
Passage Length:  256
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 256, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 256, 13])
Passage ques attention dim:  torch.Size([40, 256, 13])
Passage question vectors dim:  torch.Size([40, 256, 200])
Question Passage Similarity dim:  torch.Size([40, 256])
Question passage attention dim:  torch.Size([40, 256])
Final Merged Passage dim:  torch.Size([40, 256, 800])
Modeled Passage dim:  torch.Size([40, 256, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 256, 1000])
Span start logits:  torch.Size([40, 256])
span start probs dim:  torch.Size([40, 256])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 256]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1197, 200])
Passage Length:  1197
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1197, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1197, 17])
Passage ques attention dim:  torch.Size([40, 1197, 17])
Passage question vectors dim:  torch.Size([40, 1197, 200])
Question Passage Similarity dim:  torch.Size([40, 1197])
Question passage attention dim:  torch.Size([40, 1197])
Final Merged Passage dim:  torch.Size([40, 1197, 800])
Modeled Passage dim:  torch.Size([40, 1197, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1197, 1000])
Span start logits:  torch.Size([40, 1197])
span start probs dim:  torch.Size([40, 1197])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1197]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 885, 200])
Passage Length:  885
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 885, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 885, 12])
Passage ques attention dim:  torch.Size([40, 885, 12])
Passage question vectors dim:  torch.Size([40, 885, 200])
Question Passage Similarity dim:  torch.Size([40, 885])
Question passage attention dim:  torch.Size([40, 885])
Final Merged Passage dim:  torch.Size([40, 885, 800])
Modeled Passage dim:  torch.Size([40, 885, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 885, 1000])
Span start logits:  torch.Size([40, 885])
span start probs dim:  torch.Size([40, 885])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 885]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 749, 200])
Passage Length:  749
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 749, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 749, 16])
Passage ques attention dim:  torch.Size([40, 749, 16])
Passage question vectors dim:  torch.Size([40, 749, 200])
Question Passage Similarity dim:  torch.Size([40, 749])
Question passage attention dim:  torch.Size([40, 749])
Final Merged Passage dim:  torch.Size([40, 749, 800])
Modeled Passage dim:  torch.Size([40, 749, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 749, 1000])
Span start logits:  torch.Size([40, 749])
span start probs dim:  torch.Size([40, 749])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 749]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1013, 200])
Passage Length:  1013
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1013, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1013, 15])
Passage ques attention dim:  torch.Size([40, 1013, 15])
Passage question vectors dim:  torch.Size([40, 1013, 200])
Question Passage Similarity dim:  torch.Size([40, 1013])
Question passage attention dim:  torch.Size([40, 1013])
Final Merged Passage dim:  torch.Size([40, 1013, 800])
Modeled Passage dim:  torch.Size([40, 1013, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1013, 1000])
Span start logits:  torch.Size([40, 1013])
span start probs dim:  torch.Size([40, 1013])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1013]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 802, 200])
Passage Length:  802
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 802, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 802, 11])
Passage ques attention dim:  torch.Size([40, 802, 11])
Passage question vectors dim:  torch.Size([40, 802, 200])
Question Passage Similarity dim:  torch.Size([40, 802])
Question passage attention dim:  torch.Size([40, 802])
Final Merged Passage dim:  torch.Size([40, 802, 800])
Modeled Passage dim:  torch.Size([40, 802, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 802, 1000])
Span start logits:  torch.Size([40, 802])
span start probs dim:  torch.Size([40, 802])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 802]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 824, 200])
Passage Length:  824
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 824, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 824, 18])
Passage ques attention dim:  torch.Size([40, 824, 18])
Passage question vectors dim:  torch.Size([40, 824, 200])
Question Passage Similarity dim:  torch.Size([40, 824])
Question passage attention dim:  torch.Size([40, 824])
Final Merged Passage dim:  torch.Size([40, 824, 800])
Modeled Passage dim:  torch.Size([40, 824, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 824, 1000])
Span start logits:  torch.Size([40, 824])
span start probs dim:  torch.Size([40, 824])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 824]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 164, 200])
Passage Length:  164
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 164, 12])
Passage ques attention dim:  torch.Size([40, 164, 12])
Passage question vectors dim:  torch.Size([40, 164, 200])
Question Passage Similarity dim:  torch.Size([40, 164])
Question passage attention dim:  torch.Size([40, 164])
Final Merged Passage dim:  torch.Size([40, 164, 800])
Modeled Passage dim:  torch.Size([40, 164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 164, 1000])
Span start logits:  torch.Size([40, 164])
span start probs dim:  torch.Size([40, 164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 587, 200])
Passage Length:  587
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 587, 19])
Passage ques attention dim:  torch.Size([40, 587, 19])
Passage question vectors dim:  torch.Size([40, 587, 200])
Question Passage Similarity dim:  torch.Size([40, 587])
Question passage attention dim:  torch.Size([40, 587])
Final Merged Passage dim:  torch.Size([40, 587, 800])
Modeled Passage dim:  torch.Size([40, 587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 587, 1000])
Span start logits:  torch.Size([40, 587])
span start probs dim:  torch.Size([40, 587])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 587]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 939, 200])
Passage Length:  939
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 939, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 939, 20])
Passage ques attention dim:  torch.Size([40, 939, 20])
Passage question vectors dim:  torch.Size([40, 939, 200])
Question Passage Similarity dim:  torch.Size([40, 939])
Question passage attention dim:  torch.Size([40, 939])
Final Merged Passage dim:  torch.Size([40, 939, 800])
Modeled Passage dim:  torch.Size([40, 939, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 939, 1000])
Span start logits:  torch.Size([40, 939])
span start probs dim:  torch.Size([40, 939])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 939]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 268, 200])
Passage Length:  268
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 268, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 268, 21])
Passage ques attention dim:  torch.Size([40, 268, 21])
Passage question vectors dim:  torch.Size([40, 268, 200])
Question Passage Similarity dim:  torch.Size([40, 268])
Question passage attention dim:  torch.Size([40, 268])
Final Merged Passage dim:  torch.Size([40, 268, 800])
Modeled Passage dim:  torch.Size([40, 268, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 268, 1000])
Span start logits:  torch.Size([40, 268])
span start probs dim:  torch.Size([40, 268])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 268]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1183, 200])
Passage Length:  1183
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1183, 12])
Passage ques attention dim:  torch.Size([40, 1183, 12])
Passage question vectors dim:  torch.Size([40, 1183, 200])
Question Passage Similarity dim:  torch.Size([40, 1183])
Question passage attention dim:  torch.Size([40, 1183])
Final Merged Passage dim:  torch.Size([40, 1183, 800])
Modeled Passage dim:  torch.Size([40, 1183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1183, 1000])
Span start logits:  torch.Size([40, 1183])
span start probs dim:  torch.Size([40, 1183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 310, 200])
Passage Length:  310
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 310, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 310, 15])
Passage ques attention dim:  torch.Size([40, 310, 15])
Passage question vectors dim:  torch.Size([40, 310, 200])
Question Passage Similarity dim:  torch.Size([40, 310])
Question passage attention dim:  torch.Size([40, 310])
Final Merged Passage dim:  torch.Size([40, 310, 800])
Modeled Passage dim:  torch.Size([40, 310, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 310, 1000])
Span start logits:  torch.Size([40, 310])
span start probs dim:  torch.Size([40, 310])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 310]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1383, 200])
Passage Length:  1383
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1383, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1383, 13])
Passage ques attention dim:  torch.Size([40, 1383, 13])
Passage question vectors dim:  torch.Size([40, 1383, 200])
Question Passage Similarity dim:  torch.Size([40, 1383])
Question passage attention dim:  torch.Size([40, 1383])
Final Merged Passage dim:  torch.Size([40, 1383, 800])
Modeled Passage dim:  torch.Size([40, 1383, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1383, 1000])
Span start logits:  torch.Size([40, 1383])
span start probs dim:  torch.Size([40, 1383])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1383]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 938, 200])
Passage Length:  938
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 938, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 938, 13])
Passage ques attention dim:  torch.Size([40, 938, 13])
Passage question vectors dim:  torch.Size([40, 938, 200])
Question Passage Similarity dim:  torch.Size([40, 938])
Question passage attention dim:  torch.Size([40, 938])
Final Merged Passage dim:  torch.Size([40, 938, 800])
Modeled Passage dim:  torch.Size([40, 938, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 938, 1000])
Span start logits:  torch.Size([40, 938])
span start probs dim:  torch.Size([40, 938])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 938]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 51, 200])
Embedded passage dim:  torch.Size([40, 568, 200])
Passage Length:  568
Encoded question dim:  torch.Size([40, 51, 200])
Encoded passage dim:  torch.Size([40, 568, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 568, 51])
Passage ques attention dim:  torch.Size([40, 568, 51])
Passage question vectors dim:  torch.Size([40, 568, 200])
Question Passage Similarity dim:  torch.Size([40, 568])
Question passage attention dim:  torch.Size([40, 568])
Final Merged Passage dim:  torch.Size([40, 568, 800])
Modeled Passage dim:  torch.Size([40, 568, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 568, 1000])
Span start logits:  torch.Size([40, 568])
span start probs dim:  torch.Size([40, 568])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 568]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 533, 200])
Passage Length:  533
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 533, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 533, 17])
Passage ques attention dim:  torch.Size([40, 533, 17])
Passage question vectors dim:  torch.Size([40, 533, 200])
Question Passage Similarity dim:  torch.Size([40, 533])
Question passage attention dim:  torch.Size([40, 533])
Final Merged Passage dim:  torch.Size([40, 533, 800])
Modeled Passage dim:  torch.Size([40, 533, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 533, 1000])
Span start logits:  torch.Size([40, 533])
span start probs dim:  torch.Size([40, 533])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 533]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 451, 200])
Passage Length:  451
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 451, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 451, 13])
Passage ques attention dim:  torch.Size([40, 451, 13])
Passage question vectors dim:  torch.Size([40, 451, 200])
Question Passage Similarity dim:  torch.Size([40, 451])
Question passage attention dim:  torch.Size([40, 451])
Final Merged Passage dim:  torch.Size([40, 451, 800])
Modeled Passage dim:  torch.Size([40, 451, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 451, 1000])
Span start logits:  torch.Size([40, 451])
span start probs dim:  torch.Size([40, 451])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 451]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 663, 200])
Passage Length:  663
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 663, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 663, 14])
Passage ques attention dim:  torch.Size([40, 663, 14])
Passage question vectors dim:  torch.Size([40, 663, 200])
Question Passage Similarity dim:  torch.Size([40, 663])
Question passage attention dim:  torch.Size([40, 663])
Final Merged Passage dim:  torch.Size([40, 663, 800])
Modeled Passage dim:  torch.Size([40, 663, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 663, 1000])
Span start logits:  torch.Size([40, 663])
span start probs dim:  torch.Size([40, 663])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 663]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 713, 200])
Passage Length:  713
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 713, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 713, 13])
Passage ques attention dim:  torch.Size([40, 713, 13])
Passage question vectors dim:  torch.Size([40, 713, 200])
Question Passage Similarity dim:  torch.Size([40, 713])
Question passage attention dim:  torch.Size([40, 713])
Final Merged Passage dim:  torch.Size([40, 713, 800])
Modeled Passage dim:  torch.Size([40, 713, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 713, 1000])
Span start logits:  torch.Size([40, 713])
span start probs dim:  torch.Size([40, 713])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 713]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1282, 200])
Passage Length:  1282
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1282, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1282, 17])
Passage ques attention dim:  torch.Size([40, 1282, 17])
Passage question vectors dim:  torch.Size([40, 1282, 200])
Question Passage Similarity dim:  torch.Size([40, 1282])
Question passage attention dim:  torch.Size([40, 1282])
Final Merged Passage dim:  torch.Size([40, 1282, 800])
Modeled Passage dim:  torch.Size([40, 1282, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1282, 1000])
Span start logits:  torch.Size([40, 1282])
span start probs dim:  torch.Size([40, 1282])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1282]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1286, 200])
Passage Length:  1286
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1286, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1286, 13])
Passage ques attention dim:  torch.Size([40, 1286, 13])
Passage question vectors dim:  torch.Size([40, 1286, 200])
Question Passage Similarity dim:  torch.Size([40, 1286])
Question passage attention dim:  torch.Size([40, 1286])
Final Merged Passage dim:  torch.Size([40, 1286, 800])
Modeled Passage dim:  torch.Size([40, 1286, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1286, 1000])
Span start logits:  torch.Size([40, 1286])
span start probs dim:  torch.Size([40, 1286])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1286]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 635, 200])
Passage Length:  635
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 635, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 635, 21])
Passage ques attention dim:  torch.Size([40, 635, 21])
Passage question vectors dim:  torch.Size([40, 635, 200])
Question Passage Similarity dim:  torch.Size([40, 635])
Question passage attention dim:  torch.Size([40, 635])
Final Merged Passage dim:  torch.Size([40, 635, 800])
Modeled Passage dim:  torch.Size([40, 635, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 635, 1000])
Span start logits:  torch.Size([40, 635])
span start probs dim:  torch.Size([40, 635])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 635]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 793, 200])
Passage Length:  793
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 793, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 793, 18])
Passage ques attention dim:  torch.Size([40, 793, 18])
Passage question vectors dim:  torch.Size([40, 793, 200])
Question Passage Similarity dim:  torch.Size([40, 793])
Question passage attention dim:  torch.Size([40, 793])
Final Merged Passage dim:  torch.Size([40, 793, 800])
Modeled Passage dim:  torch.Size([40, 793, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 793, 1000])
Span start logits:  torch.Size([40, 793])
span start probs dim:  torch.Size([40, 793])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 793]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 565, 200])
Passage Length:  565
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 565, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 565, 13])
Passage ques attention dim:  torch.Size([40, 565, 13])
Passage question vectors dim:  torch.Size([40, 565, 200])
Question Passage Similarity dim:  torch.Size([40, 565])
Question passage attention dim:  torch.Size([40, 565])
Final Merged Passage dim:  torch.Size([40, 565, 800])
Modeled Passage dim:  torch.Size([40, 565, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 565, 1000])
Span start logits:  torch.Size([40, 565])
span start probs dim:  torch.Size([40, 565])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 565]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1281, 200])
Passage Length:  1281
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1281, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1281, 15])
Passage ques attention dim:  torch.Size([40, 1281, 15])
Passage question vectors dim:  torch.Size([40, 1281, 200])
Question Passage Similarity dim:  torch.Size([40, 1281])
Question passage attention dim:  torch.Size([40, 1281])
Final Merged Passage dim:  torch.Size([40, 1281, 800])
Modeled Passage dim:  torch.Size([40, 1281, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1281, 1000])
Span start logits:  torch.Size([40, 1281])
span start probs dim:  torch.Size([40, 1281])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1281]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 622, 200])
Passage Length:  622
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 622, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 622, 15])
Passage ques attention dim:  torch.Size([40, 622, 15])
Passage question vectors dim:  torch.Size([40, 622, 200])
Question Passage Similarity dim:  torch.Size([40, 622])
Question passage attention dim:  torch.Size([40, 622])
Final Merged Passage dim:  torch.Size([40, 622, 800])
Modeled Passage dim:  torch.Size([40, 622, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 622, 1000])
Span start logits:  torch.Size([40, 622])
span start probs dim:  torch.Size([40, 622])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 622]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 669, 200])
Passage Length:  669
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 669, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 669, 11])
Passage ques attention dim:  torch.Size([40, 669, 11])
Passage question vectors dim:  torch.Size([40, 669, 200])
Question Passage Similarity dim:  torch.Size([40, 669])
Question passage attention dim:  torch.Size([40, 669])
Final Merged Passage dim:  torch.Size([40, 669, 800])
Modeled Passage dim:  torch.Size([40, 669, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 669, 1000])
Span start logits:  torch.Size([40, 669])
span start probs dim:  torch.Size([40, 669])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 669]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1125, 200])
Passage Length:  1125
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1125, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1125, 16])
Passage ques attention dim:  torch.Size([40, 1125, 16])
Passage question vectors dim:  torch.Size([40, 1125, 200])
Question Passage Similarity dim:  torch.Size([40, 1125])
Question passage attention dim:  torch.Size([40, 1125])
Final Merged Passage dim:  torch.Size([40, 1125, 800])
Modeled Passage dim:  torch.Size([40, 1125, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1125, 1000])
Span start logits:  torch.Size([40, 1125])
span start probs dim:  torch.Size([40, 1125])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1125]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1288, 200])
Passage Length:  1288
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1288, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1288, 15])
Passage ques attention dim:  torch.Size([40, 1288, 15])
Passage question vectors dim:  torch.Size([40, 1288, 200])
Question Passage Similarity dim:  torch.Size([40, 1288])
Question passage attention dim:  torch.Size([40, 1288])
Final Merged Passage dim:  torch.Size([40, 1288, 800])
Modeled Passage dim:  torch.Size([40, 1288, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1288, 1000])
Span start logits:  torch.Size([40, 1288])
span start probs dim:  torch.Size([40, 1288])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1288]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 322, 200])
Passage Length:  322
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 322, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 322, 11])
Passage ques attention dim:  torch.Size([40, 322, 11])
Passage question vectors dim:  torch.Size([40, 322, 200])
Question Passage Similarity dim:  torch.Size([40, 322])
Question passage attention dim:  torch.Size([40, 322])
Final Merged Passage dim:  torch.Size([40, 322, 800])
Modeled Passage dim:  torch.Size([40, 322, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 322, 1000])
Span start logits:  torch.Size([40, 322])
span start probs dim:  torch.Size([40, 322])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 322]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1405, 200])
Passage Length:  1405
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1405, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1405, 15])
Passage ques attention dim:  torch.Size([40, 1405, 15])
Passage question vectors dim:  torch.Size([40, 1405, 200])
Question Passage Similarity dim:  torch.Size([40, 1405])
Question passage attention dim:  torch.Size([40, 1405])
Final Merged Passage dim:  torch.Size([40, 1405, 800])
Modeled Passage dim:  torch.Size([40, 1405, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1405, 1000])
Span start logits:  torch.Size([40, 1405])
span start probs dim:  torch.Size([40, 1405])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1405]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1435, 200])
Passage Length:  1435
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1435, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1435, 15])
Passage ques attention dim:  torch.Size([40, 1435, 15])
Passage question vectors dim:  torch.Size([40, 1435, 200])
Question Passage Similarity dim:  torch.Size([40, 1435])
Question passage attention dim:  torch.Size([40, 1435])
Final Merged Passage dim:  torch.Size([40, 1435, 800])
Modeled Passage dim:  torch.Size([40, 1435, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1435, 1000])
Span start logits:  torch.Size([40, 1435])
span start probs dim:  torch.Size([40, 1435])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1435]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1573, 200])
Passage Length:  1573
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1573, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1573, 15])
Passage ques attention dim:  torch.Size([40, 1573, 15])
Passage question vectors dim:  torch.Size([40, 1573, 200])
Question Passage Similarity dim:  torch.Size([40, 1573])
Question passage attention dim:  torch.Size([40, 1573])
Final Merged Passage dim:  torch.Size([40, 1573, 800])
Modeled Passage dim:  torch.Size([40, 1573, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1573, 1000])
Span start logits:  torch.Size([40, 1573])
span start probs dim:  torch.Size([40, 1573])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1573]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 399, 200])
Passage Length:  399
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 399, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 399, 21])
Passage ques attention dim:  torch.Size([40, 399, 21])
Passage question vectors dim:  torch.Size([40, 399, 200])
Question Passage Similarity dim:  torch.Size([40, 399])
Question passage attention dim:  torch.Size([40, 399])
Final Merged Passage dim:  torch.Size([40, 399, 800])
Modeled Passage dim:  torch.Size([40, 399, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 399, 1000])
Span start logits:  torch.Size([40, 399])
span start probs dim:  torch.Size([40, 399])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 399]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1401, 200])
Passage Length:  1401
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1401, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1401, 15])
Passage ques attention dim:  torch.Size([40, 1401, 15])
Passage question vectors dim:  torch.Size([40, 1401, 200])
Question Passage Similarity dim:  torch.Size([40, 1401])
Question passage attention dim:  torch.Size([40, 1401])
Final Merged Passage dim:  torch.Size([40, 1401, 800])
Modeled Passage dim:  torch.Size([40, 1401, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1401, 1000])
Span start logits:  torch.Size([40, 1401])
span start probs dim:  torch.Size([40, 1401])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1401]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1020, 200])
Passage Length:  1020
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1020, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1020, 13])
Passage ques attention dim:  torch.Size([40, 1020, 13])
Passage question vectors dim:  torch.Size([40, 1020, 200])
Question Passage Similarity dim:  torch.Size([40, 1020])
Question passage attention dim:  torch.Size([40, 1020])
Final Merged Passage dim:  torch.Size([40, 1020, 800])
Modeled Passage dim:  torch.Size([40, 1020, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1020, 1000])
Span start logits:  torch.Size([40, 1020])
span start probs dim:  torch.Size([40, 1020])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1020]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 788, 200])
Passage Length:  788
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 788, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 788, 19])
Passage ques attention dim:  torch.Size([40, 788, 19])
Passage question vectors dim:  torch.Size([40, 788, 200])
Question Passage Similarity dim:  torch.Size([40, 788])
Question passage attention dim:  torch.Size([40, 788])
Final Merged Passage dim:  torch.Size([40, 788, 800])
Modeled Passage dim:  torch.Size([40, 788, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 788, 1000])
Span start logits:  torch.Size([40, 788])
span start probs dim:  torch.Size([40, 788])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 788]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 755, 200])
Passage Length:  755
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 755, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 755, 20])
Passage ques attention dim:  torch.Size([40, 755, 20])
Passage question vectors dim:  torch.Size([40, 755, 200])
Question Passage Similarity dim:  torch.Size([40, 755])
Question passage attention dim:  torch.Size([40, 755])
Final Merged Passage dim:  torch.Size([40, 755, 800])
Modeled Passage dim:  torch.Size([40, 755, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 755, 1000])
Span start logits:  torch.Size([40, 755])
span start probs dim:  torch.Size([40, 755])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 755]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1123, 200])
Passage Length:  1123
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1123, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1123, 17])
Passage ques attention dim:  torch.Size([40, 1123, 17])
Passage question vectors dim:  torch.Size([40, 1123, 200])
Question Passage Similarity dim:  torch.Size([40, 1123])
Question passage attention dim:  torch.Size([40, 1123])
Final Merged Passage dim:  torch.Size([40, 1123, 800])
Modeled Passage dim:  torch.Size([40, 1123, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1123, 1000])
Span start logits:  torch.Size([40, 1123])
span start probs dim:  torch.Size([40, 1123])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1123]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1179, 200])
Passage Length:  1179
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1179, 13])
Passage ques attention dim:  torch.Size([40, 1179, 13])
Passage question vectors dim:  torch.Size([40, 1179, 200])
Question Passage Similarity dim:  torch.Size([40, 1179])
Question passage attention dim:  torch.Size([40, 1179])
Final Merged Passage dim:  torch.Size([40, 1179, 800])
Modeled Passage dim:  torch.Size([40, 1179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1179, 1000])
Span start logits:  torch.Size([40, 1179])
span start probs dim:  torch.Size([40, 1179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 586, 200])
Passage Length:  586
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 586, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 586, 14])
Passage ques attention dim:  torch.Size([40, 586, 14])
Passage question vectors dim:  torch.Size([40, 586, 200])
Question Passage Similarity dim:  torch.Size([40, 586])
Question passage attention dim:  torch.Size([40, 586])
Final Merged Passage dim:  torch.Size([40, 586, 800])
Modeled Passage dim:  torch.Size([40, 586, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 586, 1000])
Span start logits:  torch.Size([40, 586])
span start probs dim:  torch.Size([40, 586])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 586]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1225, 200])
Passage Length:  1225
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1225, 17])
Passage ques attention dim:  torch.Size([40, 1225, 17])
Passage question vectors dim:  torch.Size([40, 1225, 200])
Question Passage Similarity dim:  torch.Size([40, 1225])
Question passage attention dim:  torch.Size([40, 1225])
Final Merged Passage dim:  torch.Size([40, 1225, 800])
Modeled Passage dim:  torch.Size([40, 1225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1225, 1000])
Span start logits:  torch.Size([40, 1225])
span start probs dim:  torch.Size([40, 1225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 911, 200])
Passage Length:  911
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 911, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 911, 15])
Passage ques attention dim:  torch.Size([40, 911, 15])
Passage question vectors dim:  torch.Size([40, 911, 200])
Question Passage Similarity dim:  torch.Size([40, 911])
Question passage attention dim:  torch.Size([40, 911])
Final Merged Passage dim:  torch.Size([40, 911, 800])
Modeled Passage dim:  torch.Size([40, 911, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 911, 1000])
Span start logits:  torch.Size([40, 911])
span start probs dim:  torch.Size([40, 911])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 911]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 179, 200])
Passage Length:  179
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 179, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 179, 17])
Passage ques attention dim:  torch.Size([40, 179, 17])
Passage question vectors dim:  torch.Size([40, 179, 200])
Question Passage Similarity dim:  torch.Size([40, 179])
Question passage attention dim:  torch.Size([40, 179])
Final Merged Passage dim:  torch.Size([40, 179, 800])
Modeled Passage dim:  torch.Size([40, 179, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 179, 1000])
Span start logits:  torch.Size([40, 179])
span start probs dim:  torch.Size([40, 179])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 179]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1164, 200])
Passage Length:  1164
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1164, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1164, 15])
Passage ques attention dim:  torch.Size([40, 1164, 15])
Passage question vectors dim:  torch.Size([40, 1164, 200])
Question Passage Similarity dim:  torch.Size([40, 1164])
Question passage attention dim:  torch.Size([40, 1164])
Final Merged Passage dim:  torch.Size([40, 1164, 800])
Modeled Passage dim:  torch.Size([40, 1164, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1164, 1000])
Span start logits:  torch.Size([40, 1164])
span start probs dim:  torch.Size([40, 1164])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1164]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 158, 200])
Passage Length:  158
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 158, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 158, 12])
Passage ques attention dim:  torch.Size([40, 158, 12])
Passage question vectors dim:  torch.Size([40, 158, 200])
Question Passage Similarity dim:  torch.Size([40, 158])
Question passage attention dim:  torch.Size([40, 158])
Final Merged Passage dim:  torch.Size([40, 158, 800])
Modeled Passage dim:  torch.Size([40, 158, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 158, 1000])
Span start logits:  torch.Size([40, 158])
span start probs dim:  torch.Size([40, 158])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 158]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 489, 200])
Passage Length:  489
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 489, 13])
Passage ques attention dim:  torch.Size([40, 489, 13])
Passage question vectors dim:  torch.Size([40, 489, 200])
Question Passage Similarity dim:  torch.Size([40, 489])
Question passage attention dim:  torch.Size([40, 489])
Final Merged Passage dim:  torch.Size([40, 489, 800])
Modeled Passage dim:  torch.Size([40, 489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 489, 1000])
Span start logits:  torch.Size([40, 489])
span start probs dim:  torch.Size([40, 489])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 489]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 634, 200])
Passage Length:  634
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 634, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 634, 16])
Passage ques attention dim:  torch.Size([40, 634, 16])
Passage question vectors dim:  torch.Size([40, 634, 200])
Question Passage Similarity dim:  torch.Size([40, 634])
Question passage attention dim:  torch.Size([40, 634])
Final Merged Passage dim:  torch.Size([40, 634, 800])
Modeled Passage dim:  torch.Size([40, 634, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 634, 1000])
Span start logits:  torch.Size([40, 634])
span start probs dim:  torch.Size([40, 634])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 634]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1679, 200])
Passage Length:  1679
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1679, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1679, 18])
Passage ques attention dim:  torch.Size([40, 1679, 18])
Passage question vectors dim:  torch.Size([40, 1679, 200])
Question Passage Similarity dim:  torch.Size([40, 1679])
Question passage attention dim:  torch.Size([40, 1679])
Final Merged Passage dim:  torch.Size([40, 1679, 800])
Modeled Passage dim:  torch.Size([40, 1679, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1679, 1000])
Span start logits:  torch.Size([40, 1679])
span start probs dim:  torch.Size([40, 1679])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1679]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 242, 200])
Passage Length:  242
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 242, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 242, 11])
Passage ques attention dim:  torch.Size([40, 242, 11])
Passage question vectors dim:  torch.Size([40, 242, 200])
Question Passage Similarity dim:  torch.Size([40, 242])
Question passage attention dim:  torch.Size([40, 242])
Final Merged Passage dim:  torch.Size([40, 242, 800])
Modeled Passage dim:  torch.Size([40, 242, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 242, 1000])
Span start logits:  torch.Size([40, 242])
span start probs dim:  torch.Size([40, 242])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 242]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 911, 200])
Passage Length:  911
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 911, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 911, 13])
Passage ques attention dim:  torch.Size([40, 911, 13])
Passage question vectors dim:  torch.Size([40, 911, 200])
Question Passage Similarity dim:  torch.Size([40, 911])
Question passage attention dim:  torch.Size([40, 911])
Final Merged Passage dim:  torch.Size([40, 911, 800])
Modeled Passage dim:  torch.Size([40, 911, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 911, 1000])
Span start logits:  torch.Size([40, 911])
span start probs dim:  torch.Size([40, 911])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 911]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 698, 200])
Passage Length:  698
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 698, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 698, 16])
Passage ques attention dim:  torch.Size([40, 698, 16])
Passage question vectors dim:  torch.Size([40, 698, 200])
Question Passage Similarity dim:  torch.Size([40, 698])
Question passage attention dim:  torch.Size([40, 698])
Final Merged Passage dim:  torch.Size([40, 698, 800])
Modeled Passage dim:  torch.Size([40, 698, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 698, 1000])
Span start logits:  torch.Size([40, 698])
span start probs dim:  torch.Size([40, 698])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 698]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1097, 200])
Passage Length:  1097
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1097, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1097, 13])
Passage ques attention dim:  torch.Size([40, 1097, 13])
Passage question vectors dim:  torch.Size([40, 1097, 200])
Question Passage Similarity dim:  torch.Size([40, 1097])
Question passage attention dim:  torch.Size([40, 1097])
Final Merged Passage dim:  torch.Size([40, 1097, 800])
Modeled Passage dim:  torch.Size([40, 1097, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1097, 1000])
Span start logits:  torch.Size([40, 1097])
span start probs dim:  torch.Size([40, 1097])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1097]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 825, 200])
Passage Length:  825
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 825, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 825, 15])
Passage ques attention dim:  torch.Size([40, 825, 15])
Passage question vectors dim:  torch.Size([40, 825, 200])
Question Passage Similarity dim:  torch.Size([40, 825])
Question passage attention dim:  torch.Size([40, 825])
Final Merged Passage dim:  torch.Size([40, 825, 800])
Modeled Passage dim:  torch.Size([40, 825, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 825, 1000])
Span start logits:  torch.Size([40, 825])
span start probs dim:  torch.Size([40, 825])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 825]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1234, 200])
Passage Length:  1234
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1234, 12])
Passage ques attention dim:  torch.Size([40, 1234, 12])
Passage question vectors dim:  torch.Size([40, 1234, 200])
Question Passage Similarity dim:  torch.Size([40, 1234])
Question passage attention dim:  torch.Size([40, 1234])
Final Merged Passage dim:  torch.Size([40, 1234, 800])
Modeled Passage dim:  torch.Size([40, 1234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1234, 1000])
Span start logits:  torch.Size([40, 1234])
span start probs dim:  torch.Size([40, 1234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 551, 200])
Passage Length:  551
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 551, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 551, 14])
Passage ques attention dim:  torch.Size([40, 551, 14])
Passage question vectors dim:  torch.Size([40, 551, 200])
Question Passage Similarity dim:  torch.Size([40, 551])
Question passage attention dim:  torch.Size([40, 551])
Final Merged Passage dim:  torch.Size([40, 551, 800])
Modeled Passage dim:  torch.Size([40, 551, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 551, 1000])
Span start logits:  torch.Size([40, 551])
span start probs dim:  torch.Size([40, 551])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 551]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 834, 200])
Passage Length:  834
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 834, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 834, 18])
Passage ques attention dim:  torch.Size([40, 834, 18])
Passage question vectors dim:  torch.Size([40, 834, 200])
Question Passage Similarity dim:  torch.Size([40, 834])
Question passage attention dim:  torch.Size([40, 834])
Final Merged Passage dim:  torch.Size([40, 834, 800])
Modeled Passage dim:  torch.Size([40, 834, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 834, 1000])
Span start logits:  torch.Size([40, 834])
span start probs dim:  torch.Size([40, 834])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 834]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1045, 200])
Passage Length:  1045
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1045, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1045, 16])
Passage ques attention dim:  torch.Size([40, 1045, 16])
Passage question vectors dim:  torch.Size([40, 1045, 200])
Question Passage Similarity dim:  torch.Size([40, 1045])
Question passage attention dim:  torch.Size([40, 1045])
Final Merged Passage dim:  torch.Size([40, 1045, 800])
Modeled Passage dim:  torch.Size([40, 1045, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1045, 1000])
Span start logits:  torch.Size([40, 1045])
span start probs dim:  torch.Size([40, 1045])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1045]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 249, 200])
Passage Length:  249
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 249, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 249, 15])
Passage ques attention dim:  torch.Size([40, 249, 15])
Passage question vectors dim:  torch.Size([40, 249, 200])
Question Passage Similarity dim:  torch.Size([40, 249])
Question passage attention dim:  torch.Size([40, 249])
Final Merged Passage dim:  torch.Size([40, 249, 800])
Modeled Passage dim:  torch.Size([40, 249, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 249, 1000])
Span start logits:  torch.Size([40, 249])
span start probs dim:  torch.Size([40, 249])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 249]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 761, 200])
Passage Length:  761
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 761, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 761, 14])
Passage ques attention dim:  torch.Size([40, 761, 14])
Passage question vectors dim:  torch.Size([40, 761, 200])
Question Passage Similarity dim:  torch.Size([40, 761])
Question passage attention dim:  torch.Size([40, 761])
Final Merged Passage dim:  torch.Size([40, 761, 800])
Modeled Passage dim:  torch.Size([40, 761, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 761, 1000])
Span start logits:  torch.Size([40, 761])
span start probs dim:  torch.Size([40, 761])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 761]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 859, 200])
Passage Length:  859
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 859, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 859, 14])
Passage ques attention dim:  torch.Size([40, 859, 14])
Passage question vectors dim:  torch.Size([40, 859, 200])
Question Passage Similarity dim:  torch.Size([40, 859])
Question passage attention dim:  torch.Size([40, 859])
Final Merged Passage dim:  torch.Size([40, 859, 800])
Modeled Passage dim:  torch.Size([40, 859, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 859, 1000])
Span start logits:  torch.Size([40, 859])
span start probs dim:  torch.Size([40, 859])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 859]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 297, 15])
Passage ques attention dim:  torch.Size([40, 297, 15])
Passage question vectors dim:  torch.Size([40, 297, 200])
Question Passage Similarity dim:  torch.Size([40, 297])
Question passage attention dim:  torch.Size([40, 297])
Final Merged Passage dim:  torch.Size([40, 297, 800])
Modeled Passage dim:  torch.Size([40, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 297, 1000])
Span start logits:  torch.Size([40, 297])
span start probs dim:  torch.Size([40, 297])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 297]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 991, 200])
Passage Length:  991
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 991, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 991, 18])
Passage ques attention dim:  torch.Size([40, 991, 18])
Passage question vectors dim:  torch.Size([40, 991, 200])
Question Passage Similarity dim:  torch.Size([40, 991])
Question passage attention dim:  torch.Size([40, 991])
Final Merged Passage dim:  torch.Size([40, 991, 800])
Modeled Passage dim:  torch.Size([40, 991, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 991, 1000])
Span start logits:  torch.Size([40, 991])
span start probs dim:  torch.Size([40, 991])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 991]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 437, 200])
Passage Length:  437
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 437, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 437, 16])
Passage ques attention dim:  torch.Size([40, 437, 16])
Passage question vectors dim:  torch.Size([40, 437, 200])
Question Passage Similarity dim:  torch.Size([40, 437])
Question passage attention dim:  torch.Size([40, 437])
Final Merged Passage dim:  torch.Size([40, 437, 800])
Modeled Passage dim:  torch.Size([40, 437, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 437, 1000])
Span start logits:  torch.Size([40, 437])
span start probs dim:  torch.Size([40, 437])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 437]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 321, 200])
Passage Length:  321
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 321, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 321, 15])
Passage ques attention dim:  torch.Size([40, 321, 15])
Passage question vectors dim:  torch.Size([40, 321, 200])
Question Passage Similarity dim:  torch.Size([40, 321])
Question passage attention dim:  torch.Size([40, 321])
Final Merged Passage dim:  torch.Size([40, 321, 800])
Modeled Passage dim:  torch.Size([40, 321, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 321, 1000])
Span start logits:  torch.Size([40, 321])
span start probs dim:  torch.Size([40, 321])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 321]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 637, 200])
Passage Length:  637
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 637, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 637, 13])
Passage ques attention dim:  torch.Size([40, 637, 13])
Passage question vectors dim:  torch.Size([40, 637, 200])
Question Passage Similarity dim:  torch.Size([40, 637])
Question passage attention dim:  torch.Size([40, 637])
Final Merged Passage dim:  torch.Size([40, 637, 800])
Modeled Passage dim:  torch.Size([40, 637, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 637, 1000])
Span start logits:  torch.Size([40, 637])
span start probs dim:  torch.Size([40, 637])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 637]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 628, 200])
Passage Length:  628
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 628, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 628, 15])
Passage ques attention dim:  torch.Size([40, 628, 15])
Passage question vectors dim:  torch.Size([40, 628, 200])
Question Passage Similarity dim:  torch.Size([40, 628])
Question passage attention dim:  torch.Size([40, 628])
Final Merged Passage dim:  torch.Size([40, 628, 800])
Modeled Passage dim:  torch.Size([40, 628, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 628, 1000])
Span start logits:  torch.Size([40, 628])
span start probs dim:  torch.Size([40, 628])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 628]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1107, 200])
Passage Length:  1107
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1107, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1107, 18])
Passage ques attention dim:  torch.Size([40, 1107, 18])
Passage question vectors dim:  torch.Size([40, 1107, 200])
Question Passage Similarity dim:  torch.Size([40, 1107])
Question passage attention dim:  torch.Size([40, 1107])
Final Merged Passage dim:  torch.Size([40, 1107, 800])
Modeled Passage dim:  torch.Size([40, 1107, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1107, 1000])
Span start logits:  torch.Size([40, 1107])
span start probs dim:  torch.Size([40, 1107])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1107]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 782, 200])
Passage Length:  782
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 782, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 782, 14])
Passage ques attention dim:  torch.Size([40, 782, 14])
Passage question vectors dim:  torch.Size([40, 782, 200])
Question Passage Similarity dim:  torch.Size([40, 782])
Question passage attention dim:  torch.Size([40, 782])
Final Merged Passage dim:  torch.Size([40, 782, 800])
Modeled Passage dim:  torch.Size([40, 782, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 782, 1000])
Span start logits:  torch.Size([40, 782])
span start probs dim:  torch.Size([40, 782])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 782]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 406, 200])
Passage Length:  406
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 406, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 406, 13])
Passage ques attention dim:  torch.Size([40, 406, 13])
Passage question vectors dim:  torch.Size([40, 406, 200])
Question Passage Similarity dim:  torch.Size([40, 406])
Question passage attention dim:  torch.Size([40, 406])
Final Merged Passage dim:  torch.Size([40, 406, 800])
Modeled Passage dim:  torch.Size([40, 406, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 406, 1000])
Span start logits:  torch.Size([40, 406])
span start probs dim:  torch.Size([40, 406])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 406]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 551, 200])
Passage Length:  551
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 551, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 551, 15])
Passage ques attention dim:  torch.Size([40, 551, 15])
Passage question vectors dim:  torch.Size([40, 551, 200])
Question Passage Similarity dim:  torch.Size([40, 551])
Question passage attention dim:  torch.Size([40, 551])
Final Merged Passage dim:  torch.Size([40, 551, 800])
Modeled Passage dim:  torch.Size([40, 551, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 551, 1000])
Span start logits:  torch.Size([40, 551])
span start probs dim:  torch.Size([40, 551])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 551]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 900, 200])
Passage Length:  900
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 900, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 900, 15])
Passage ques attention dim:  torch.Size([40, 900, 15])
Passage question vectors dim:  torch.Size([40, 900, 200])
Question Passage Similarity dim:  torch.Size([40, 900])
Question passage attention dim:  torch.Size([40, 900])
Final Merged Passage dim:  torch.Size([40, 900, 800])
Modeled Passage dim:  torch.Size([40, 900, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 900, 1000])
Span start logits:  torch.Size([40, 900])
span start probs dim:  torch.Size([40, 900])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 900]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 237, 200])
Passage Length:  237
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 237, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 237, 16])
Passage ques attention dim:  torch.Size([40, 237, 16])
Passage question vectors dim:  torch.Size([40, 237, 200])
Question Passage Similarity dim:  torch.Size([40, 237])
Question passage attention dim:  torch.Size([40, 237])
Final Merged Passage dim:  torch.Size([40, 237, 800])
Modeled Passage dim:  torch.Size([40, 237, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 237, 1000])
Span start logits:  torch.Size([40, 237])
span start probs dim:  torch.Size([40, 237])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 237]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1139, 200])
Passage Length:  1139
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1139, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1139, 16])
Passage ques attention dim:  torch.Size([40, 1139, 16])
Passage question vectors dim:  torch.Size([40, 1139, 200])
Question Passage Similarity dim:  torch.Size([40, 1139])
Question passage attention dim:  torch.Size([40, 1139])
Final Merged Passage dim:  torch.Size([40, 1139, 800])
Modeled Passage dim:  torch.Size([40, 1139, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1139, 1000])
Span start logits:  torch.Size([40, 1139])
span start probs dim:  torch.Size([40, 1139])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1139]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1187, 200])
Passage Length:  1187
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1187, 14])
Passage ques attention dim:  torch.Size([40, 1187, 14])
Passage question vectors dim:  torch.Size([40, 1187, 200])
Question Passage Similarity dim:  torch.Size([40, 1187])
Question passage attention dim:  torch.Size([40, 1187])
Final Merged Passage dim:  torch.Size([40, 1187, 800])
Modeled Passage dim:  torch.Size([40, 1187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1187, 1000])
Span start logits:  torch.Size([40, 1187])
span start probs dim:  torch.Size([40, 1187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 887, 200])
Passage Length:  887
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 887, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 887, 13])
Passage ques attention dim:  torch.Size([40, 887, 13])
Passage question vectors dim:  torch.Size([40, 887, 200])
Question Passage Similarity dim:  torch.Size([40, 887])
Question passage attention dim:  torch.Size([40, 887])
Final Merged Passage dim:  torch.Size([40, 887, 800])
Modeled Passage dim:  torch.Size([40, 887, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 887, 1000])
Span start logits:  torch.Size([40, 887])
span start probs dim:  torch.Size([40, 887])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 887]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 646, 200])
Passage Length:  646
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 646, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 646, 15])
Passage ques attention dim:  torch.Size([40, 646, 15])
Passage question vectors dim:  torch.Size([40, 646, 200])
Question Passage Similarity dim:  torch.Size([40, 646])
Question passage attention dim:  torch.Size([40, 646])
Final Merged Passage dim:  torch.Size([40, 646, 800])
Modeled Passage dim:  torch.Size([40, 646, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 646, 1000])
Span start logits:  torch.Size([40, 646])
span start probs dim:  torch.Size([40, 646])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 646]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1270, 200])
Passage Length:  1270
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1270, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1270, 13])
Passage ques attention dim:  torch.Size([40, 1270, 13])
Passage question vectors dim:  torch.Size([40, 1270, 200])
Question Passage Similarity dim:  torch.Size([40, 1270])
Question passage attention dim:  torch.Size([40, 1270])
Final Merged Passage dim:  torch.Size([40, 1270, 800])
Modeled Passage dim:  torch.Size([40, 1270, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1270, 1000])
Span start logits:  torch.Size([40, 1270])
span start probs dim:  torch.Size([40, 1270])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1270]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 187, 200])
Passage Length:  187
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 187, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 187, 12])
Passage ques attention dim:  torch.Size([40, 187, 12])
Passage question vectors dim:  torch.Size([40, 187, 200])
Question Passage Similarity dim:  torch.Size([40, 187])
Question passage attention dim:  torch.Size([40, 187])
Final Merged Passage dim:  torch.Size([40, 187, 800])
Modeled Passage dim:  torch.Size([40, 187, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 187, 1000])
Span start logits:  torch.Size([40, 187])
span start probs dim:  torch.Size([40, 187])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 187]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 577, 200])
Passage Length:  577
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 577, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 577, 13])
Passage ques attention dim:  torch.Size([40, 577, 13])
Passage question vectors dim:  torch.Size([40, 577, 200])
Question Passage Similarity dim:  torch.Size([40, 577])
Question passage attention dim:  torch.Size([40, 577])
Final Merged Passage dim:  torch.Size([40, 577, 800])
Modeled Passage dim:  torch.Size([40, 577, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 577, 1000])
Span start logits:  torch.Size([40, 577])
span start probs dim:  torch.Size([40, 577])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 577]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 161, 200])
Passage Length:  161
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 161, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 161, 12])
Passage ques attention dim:  torch.Size([40, 161, 12])
Passage question vectors dim:  torch.Size([40, 161, 200])
Question Passage Similarity dim:  torch.Size([40, 161])
Question passage attention dim:  torch.Size([40, 161])
Final Merged Passage dim:  torch.Size([40, 161, 800])
Modeled Passage dim:  torch.Size([40, 161, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 161, 1000])
Span start logits:  torch.Size([40, 161])
span start probs dim:  torch.Size([40, 161])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 161]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 504, 200])
Passage Length:  504
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 504, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 504, 14])
Passage ques attention dim:  torch.Size([40, 504, 14])
Passage question vectors dim:  torch.Size([40, 504, 200])
Question Passage Similarity dim:  torch.Size([40, 504])
Question passage attention dim:  torch.Size([40, 504])
Final Merged Passage dim:  torch.Size([40, 504, 800])
Modeled Passage dim:  torch.Size([40, 504, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 504, 1000])
Span start logits:  torch.Size([40, 504])
span start probs dim:  torch.Size([40, 504])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 504]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 479, 200])
Passage Length:  479
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 479, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 479, 13])
Passage ques attention dim:  torch.Size([40, 479, 13])
Passage question vectors dim:  torch.Size([40, 479, 200])
Question Passage Similarity dim:  torch.Size([40, 479])
Question passage attention dim:  torch.Size([40, 479])
Final Merged Passage dim:  torch.Size([40, 479, 800])
Modeled Passage dim:  torch.Size([40, 479, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 479, 1000])
Span start logits:  torch.Size([40, 479])
span start probs dim:  torch.Size([40, 479])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 479]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 687, 200])
Passage Length:  687
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 687, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 687, 15])
Passage ques attention dim:  torch.Size([40, 687, 15])
Passage question vectors dim:  torch.Size([40, 687, 200])
Question Passage Similarity dim:  torch.Size([40, 687])
Question passage attention dim:  torch.Size([40, 687])
Final Merged Passage dim:  torch.Size([40, 687, 800])
Modeled Passage dim:  torch.Size([40, 687, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 687, 1000])
Span start logits:  torch.Size([40, 687])
span start probs dim:  torch.Size([40, 687])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 687]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 115, 200])
Passage Length:  115
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 115, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 115, 15])
Passage ques attention dim:  torch.Size([40, 115, 15])
Passage question vectors dim:  torch.Size([40, 115, 200])
Question Passage Similarity dim:  torch.Size([40, 115])
Question passage attention dim:  torch.Size([40, 115])
Final Merged Passage dim:  torch.Size([40, 115, 800])
Modeled Passage dim:  torch.Size([40, 115, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 115, 1000])
Span start logits:  torch.Size([40, 115])
span start probs dim:  torch.Size([40, 115])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 115]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 933, 200])
Passage Length:  933
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 933, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 933, 16])
Passage ques attention dim:  torch.Size([40, 933, 16])
Passage question vectors dim:  torch.Size([40, 933, 200])
Question Passage Similarity dim:  torch.Size([40, 933])
Question passage attention dim:  torch.Size([40, 933])
Final Merged Passage dim:  torch.Size([40, 933, 800])
Modeled Passage dim:  torch.Size([40, 933, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 933, 1000])
Span start logits:  torch.Size([40, 933])
span start probs dim:  torch.Size([40, 933])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 933]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1029, 200])
Passage Length:  1029
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1029, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1029, 11])
Passage ques attention dim:  torch.Size([40, 1029, 11])
Passage question vectors dim:  torch.Size([40, 1029, 200])
Question Passage Similarity dim:  torch.Size([40, 1029])
Question passage attention dim:  torch.Size([40, 1029])
Final Merged Passage dim:  torch.Size([40, 1029, 800])
Modeled Passage dim:  torch.Size([40, 1029, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1029, 1000])
Span start logits:  torch.Size([40, 1029])
span start probs dim:  torch.Size([40, 1029])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1029]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1151, 200])
Passage Length:  1151
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1151, 15])
Passage ques attention dim:  torch.Size([40, 1151, 15])
Passage question vectors dim:  torch.Size([40, 1151, 200])
Question Passage Similarity dim:  torch.Size([40, 1151])
Question passage attention dim:  torch.Size([40, 1151])
Final Merged Passage dim:  torch.Size([40, 1151, 800])
Modeled Passage dim:  torch.Size([40, 1151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1151, 1000])
Span start logits:  torch.Size([40, 1151])
span start probs dim:  torch.Size([40, 1151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 634, 200])
Passage Length:  634
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 634, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 634, 20])
Passage ques attention dim:  torch.Size([40, 634, 20])
Passage question vectors dim:  torch.Size([40, 634, 200])
Question Passage Similarity dim:  torch.Size([40, 634])
Question passage attention dim:  torch.Size([40, 634])
Final Merged Passage dim:  torch.Size([40, 634, 800])
Modeled Passage dim:  torch.Size([40, 634, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 634, 1000])
Span start logits:  torch.Size([40, 634])
span start probs dim:  torch.Size([40, 634])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 634]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1359, 200])
Passage Length:  1359
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1359, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1359, 14])
Passage ques attention dim:  torch.Size([40, 1359, 14])
Passage question vectors dim:  torch.Size([40, 1359, 200])
Question Passage Similarity dim:  torch.Size([40, 1359])
Question passage attention dim:  torch.Size([40, 1359])
Final Merged Passage dim:  torch.Size([40, 1359, 800])
Modeled Passage dim:  torch.Size([40, 1359, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1359, 1000])
Span start logits:  torch.Size([40, 1359])
span start probs dim:  torch.Size([40, 1359])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1359]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1320, 200])
Passage Length:  1320
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1320, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1320, 14])
Passage ques attention dim:  torch.Size([40, 1320, 14])
Passage question vectors dim:  torch.Size([40, 1320, 200])
Question Passage Similarity dim:  torch.Size([40, 1320])
Question passage attention dim:  torch.Size([40, 1320])
Final Merged Passage dim:  torch.Size([40, 1320, 800])
Modeled Passage dim:  torch.Size([40, 1320, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1320, 1000])
Span start logits:  torch.Size([40, 1320])
span start probs dim:  torch.Size([40, 1320])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1320]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1033, 200])
Passage Length:  1033
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1033, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1033, 18])
Passage ques attention dim:  torch.Size([40, 1033, 18])
Passage question vectors dim:  torch.Size([40, 1033, 200])
Question Passage Similarity dim:  torch.Size([40, 1033])
Question passage attention dim:  torch.Size([40, 1033])
Final Merged Passage dim:  torch.Size([40, 1033, 800])
Modeled Passage dim:  torch.Size([40, 1033, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1033, 1000])
Span start logits:  torch.Size([40, 1033])
span start probs dim:  torch.Size([40, 1033])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1033]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1762, 200])
Passage Length:  1762
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1762, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1762, 14])
Passage ques attention dim:  torch.Size([40, 1762, 14])
Passage question vectors dim:  torch.Size([40, 1762, 200])
Question Passage Similarity dim:  torch.Size([40, 1762])
Question passage attention dim:  torch.Size([40, 1762])
Final Merged Passage dim:  torch.Size([40, 1762, 800])
Modeled Passage dim:  torch.Size([40, 1762, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1762, 1000])
Span start logits:  torch.Size([40, 1762])
span start probs dim:  torch.Size([40, 1762])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1762]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 890, 200])
Passage Length:  890
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 890, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 890, 15])
Passage ques attention dim:  torch.Size([40, 890, 15])
Passage question vectors dim:  torch.Size([40, 890, 200])
Question Passage Similarity dim:  torch.Size([40, 890])
Question passage attention dim:  torch.Size([40, 890])
Final Merged Passage dim:  torch.Size([40, 890, 800])
Modeled Passage dim:  torch.Size([40, 890, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 890, 1000])
Span start logits:  torch.Size([40, 890])
span start probs dim:  torch.Size([40, 890])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 890]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 896, 200])
Passage Length:  896
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 896, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 896, 15])
Passage ques attention dim:  torch.Size([40, 896, 15])
Passage question vectors dim:  torch.Size([40, 896, 200])
Question Passage Similarity dim:  torch.Size([40, 896])
Question passage attention dim:  torch.Size([40, 896])
Final Merged Passage dim:  torch.Size([40, 896, 800])
Modeled Passage dim:  torch.Size([40, 896, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 896, 1000])
Span start logits:  torch.Size([40, 896])
span start probs dim:  torch.Size([40, 896])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 896]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 647, 200])
Passage Length:  647
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 647, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 647, 20])
Passage ques attention dim:  torch.Size([40, 647, 20])
Passage question vectors dim:  torch.Size([40, 647, 200])
Question Passage Similarity dim:  torch.Size([40, 647])
Question passage attention dim:  torch.Size([40, 647])
Final Merged Passage dim:  torch.Size([40, 647, 800])
Modeled Passage dim:  torch.Size([40, 647, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 647, 1000])
Span start logits:  torch.Size([40, 647])
span start probs dim:  torch.Size([40, 647])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 647]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 452, 200])
Passage Length:  452
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 452, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 452, 12])
Passage ques attention dim:  torch.Size([40, 452, 12])
Passage question vectors dim:  torch.Size([40, 452, 200])
Question Passage Similarity dim:  torch.Size([40, 452])
Question passage attention dim:  torch.Size([40, 452])
Final Merged Passage dim:  torch.Size([40, 452, 800])
Modeled Passage dim:  torch.Size([40, 452, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 452, 1000])
Span start logits:  torch.Size([40, 452])
span start probs dim:  torch.Size([40, 452])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 452]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 825, 200])
Passage Length:  825
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 825, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 825, 14])
Passage ques attention dim:  torch.Size([40, 825, 14])
Passage question vectors dim:  torch.Size([40, 825, 200])
Question Passage Similarity dim:  torch.Size([40, 825])
Question passage attention dim:  torch.Size([40, 825])
Final Merged Passage dim:  torch.Size([40, 825, 800])
Modeled Passage dim:  torch.Size([40, 825, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 825, 1000])
Span start logits:  torch.Size([40, 825])
span start probs dim:  torch.Size([40, 825])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 825]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1215, 200])
Passage Length:  1215
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1215, 14])
Passage ques attention dim:  torch.Size([40, 1215, 14])
Passage question vectors dim:  torch.Size([40, 1215, 200])
Question Passage Similarity dim:  torch.Size([40, 1215])
Question passage attention dim:  torch.Size([40, 1215])
Final Merged Passage dim:  torch.Size([40, 1215, 800])
Modeled Passage dim:  torch.Size([40, 1215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1215, 1000])
Span start logits:  torch.Size([40, 1215])
span start probs dim:  torch.Size([40, 1215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1727, 200])
Passage Length:  1727
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1727, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1727, 18])
Passage ques attention dim:  torch.Size([40, 1727, 18])
Passage question vectors dim:  torch.Size([40, 1727, 200])
Question Passage Similarity dim:  torch.Size([40, 1727])
Question passage attention dim:  torch.Size([40, 1727])
Final Merged Passage dim:  torch.Size([40, 1727, 800])
Modeled Passage dim:  torch.Size([40, 1727, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1727, 1000])
Span start logits:  torch.Size([40, 1727])
span start probs dim:  torch.Size([40, 1727])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1727]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 43, 200])
Embedded passage dim:  torch.Size([40, 1213, 200])
Passage Length:  1213
Encoded question dim:  torch.Size([40, 43, 200])
Encoded passage dim:  torch.Size([40, 1213, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1213, 43])
Passage ques attention dim:  torch.Size([40, 1213, 43])
Passage question vectors dim:  torch.Size([40, 1213, 200])
Question Passage Similarity dim:  torch.Size([40, 1213])
Question passage attention dim:  torch.Size([40, 1213])
Final Merged Passage dim:  torch.Size([40, 1213, 800])
Modeled Passage dim:  torch.Size([40, 1213, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1213, 1000])
Span start logits:  torch.Size([40, 1213])
span start probs dim:  torch.Size([40, 1213])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1213]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1713, 200])
Passage Length:  1713
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1713, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1713, 14])
Passage ques attention dim:  torch.Size([40, 1713, 14])
Passage question vectors dim:  torch.Size([40, 1713, 200])
Question Passage Similarity dim:  torch.Size([40, 1713])
Question passage attention dim:  torch.Size([40, 1713])
Final Merged Passage dim:  torch.Size([40, 1713, 800])
Modeled Passage dim:  torch.Size([40, 1713, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1713, 1000])
Span start logits:  torch.Size([40, 1713])
span start probs dim:  torch.Size([40, 1713])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1713]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 534, 200])
Passage Length:  534
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 534, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 534, 14])
Passage ques attention dim:  torch.Size([40, 534, 14])
Passage question vectors dim:  torch.Size([40, 534, 200])
Question Passage Similarity dim:  torch.Size([40, 534])
Question passage attention dim:  torch.Size([40, 534])
Final Merged Passage dim:  torch.Size([40, 534, 800])
Modeled Passage dim:  torch.Size([40, 534, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 534, 1000])
Span start logits:  torch.Size([40, 534])
span start probs dim:  torch.Size([40, 534])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 534]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 478, 200])
Passage Length:  478
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 478, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 478, 14])
Passage ques attention dim:  torch.Size([40, 478, 14])
Passage question vectors dim:  torch.Size([40, 478, 200])
Question Passage Similarity dim:  torch.Size([40, 478])
Question passage attention dim:  torch.Size([40, 478])
Final Merged Passage dim:  torch.Size([40, 478, 800])
Modeled Passage dim:  torch.Size([40, 478, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 478, 1000])
Span start logits:  torch.Size([40, 478])
span start probs dim:  torch.Size([40, 478])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 478]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 331, 200])
Passage Length:  331
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 331, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 331, 14])
Passage ques attention dim:  torch.Size([40, 331, 14])
Passage question vectors dim:  torch.Size([40, 331, 200])
Question Passage Similarity dim:  torch.Size([40, 331])
Question passage attention dim:  torch.Size([40, 331])
Final Merged Passage dim:  torch.Size([40, 331, 800])
Modeled Passage dim:  torch.Size([40, 331, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 331, 1000])
Span start logits:  torch.Size([40, 331])
span start probs dim:  torch.Size([40, 331])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 331]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 638, 200])
Passage Length:  638
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 638, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 638, 13])
Passage ques attention dim:  torch.Size([40, 638, 13])
Passage question vectors dim:  torch.Size([40, 638, 200])
Question Passage Similarity dim:  torch.Size([40, 638])
Question passage attention dim:  torch.Size([40, 638])
Final Merged Passage dim:  torch.Size([40, 638, 800])
Modeled Passage dim:  torch.Size([40, 638, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 638, 1000])
Span start logits:  torch.Size([40, 638])
span start probs dim:  torch.Size([40, 638])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 638]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 2096, 200])
Passage Length:  2096
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 2096, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2096, 17])
Passage ques attention dim:  torch.Size([40, 2096, 17])
Passage question vectors dim:  torch.Size([40, 2096, 200])
Question Passage Similarity dim:  torch.Size([40, 2096])
Question passage attention dim:  torch.Size([40, 2096])
Final Merged Passage dim:  torch.Size([40, 2096, 800])
Modeled Passage dim:  torch.Size([40, 2096, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2096, 1000])
Span start logits:  torch.Size([40, 2096])
span start probs dim:  torch.Size([40, 2096])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2096]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 551, 200])
Passage Length:  551
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 551, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 551, 13])
Passage ques attention dim:  torch.Size([40, 551, 13])
Passage question vectors dim:  torch.Size([40, 551, 200])
Question Passage Similarity dim:  torch.Size([40, 551])
Question passage attention dim:  torch.Size([40, 551])
Final Merged Passage dim:  torch.Size([40, 551, 800])
Modeled Passage dim:  torch.Size([40, 551, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 551, 1000])
Span start logits:  torch.Size([40, 551])
span start probs dim:  torch.Size([40, 551])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 551]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 550, 200])
Passage Length:  550
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 550, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 550, 18])
Passage ques attention dim:  torch.Size([40, 550, 18])
Passage question vectors dim:  torch.Size([40, 550, 200])
Question Passage Similarity dim:  torch.Size([40, 550])
Question passage attention dim:  torch.Size([40, 550])
Final Merged Passage dim:  torch.Size([40, 550, 800])
Modeled Passage dim:  torch.Size([40, 550, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 550, 1000])
Span start logits:  torch.Size([40, 550])
span start probs dim:  torch.Size([40, 550])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 550]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 248, 200])
Passage Length:  248
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 248, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 248, 22])
Passage ques attention dim:  torch.Size([40, 248, 22])
Passage question vectors dim:  torch.Size([40, 248, 200])
Question Passage Similarity dim:  torch.Size([40, 248])
Question passage attention dim:  torch.Size([40, 248])
Final Merged Passage dim:  torch.Size([40, 248, 800])
Modeled Passage dim:  torch.Size([40, 248, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 248, 1000])
Span start logits:  torch.Size([40, 248])
span start probs dim:  torch.Size([40, 248])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 248]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 528, 200])
Passage Length:  528
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 528, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 528, 19])
Passage ques attention dim:  torch.Size([40, 528, 19])
Passage question vectors dim:  torch.Size([40, 528, 200])
Question Passage Similarity dim:  torch.Size([40, 528])
Question passage attention dim:  torch.Size([40, 528])
Final Merged Passage dim:  torch.Size([40, 528, 800])
Modeled Passage dim:  torch.Size([40, 528, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 528, 1000])
Span start logits:  torch.Size([40, 528])
span start probs dim:  torch.Size([40, 528])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 528]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 509, 200])
Passage Length:  509
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 509, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 509, 16])
Passage ques attention dim:  torch.Size([40, 509, 16])
Passage question vectors dim:  torch.Size([40, 509, 200])
Question Passage Similarity dim:  torch.Size([40, 509])
Question passage attention dim:  torch.Size([40, 509])
Final Merged Passage dim:  torch.Size([40, 509, 800])
Modeled Passage dim:  torch.Size([40, 509, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 509, 1000])
Span start logits:  torch.Size([40, 509])
span start probs dim:  torch.Size([40, 509])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 509]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1934, 200])
Passage Length:  1934
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1934, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1934, 12])
Passage ques attention dim:  torch.Size([40, 1934, 12])
Passage question vectors dim:  torch.Size([40, 1934, 200])
Question Passage Similarity dim:  torch.Size([40, 1934])
Question passage attention dim:  torch.Size([40, 1934])
Final Merged Passage dim:  torch.Size([40, 1934, 800])
Modeled Passage dim:  torch.Size([40, 1934, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1934, 1000])
Span start logits:  torch.Size([40, 1934])
span start probs dim:  torch.Size([40, 1934])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1934]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 296, 200])
Passage Length:  296
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 296, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 296, 21])
Passage ques attention dim:  torch.Size([40, 296, 21])
Passage question vectors dim:  torch.Size([40, 296, 200])
Question Passage Similarity dim:  torch.Size([40, 296])
Question passage attention dim:  torch.Size([40, 296])
Final Merged Passage dim:  torch.Size([40, 296, 800])
Modeled Passage dim:  torch.Size([40, 296, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 296, 1000])
Span start logits:  torch.Size([40, 296])
span start probs dim:  torch.Size([40, 296])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 296]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1119, 200])
Passage Length:  1119
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1119, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1119, 13])
Passage ques attention dim:  torch.Size([40, 1119, 13])
Passage question vectors dim:  torch.Size([40, 1119, 200])
Question Passage Similarity dim:  torch.Size([40, 1119])
Question passage attention dim:  torch.Size([40, 1119])
Final Merged Passage dim:  torch.Size([40, 1119, 800])
Modeled Passage dim:  torch.Size([40, 1119, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1119, 1000])
Span start logits:  torch.Size([40, 1119])
span start probs dim:  torch.Size([40, 1119])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1119]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 306, 200])
Passage Length:  306
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 306, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 306, 14])
Passage ques attention dim:  torch.Size([40, 306, 14])
Passage question vectors dim:  torch.Size([40, 306, 200])
Question Passage Similarity dim:  torch.Size([40, 306])
Question passage attention dim:  torch.Size([40, 306])
Final Merged Passage dim:  torch.Size([40, 306, 800])
Modeled Passage dim:  torch.Size([40, 306, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 306, 1000])
Span start logits:  torch.Size([40, 306])
span start probs dim:  torch.Size([40, 306])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 306]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1442, 200])
Passage Length:  1442
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1442, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1442, 20])
Passage ques attention dim:  torch.Size([40, 1442, 20])
Passage question vectors dim:  torch.Size([40, 1442, 200])
Question Passage Similarity dim:  torch.Size([40, 1442])
Question passage attention dim:  torch.Size([40, 1442])
Final Merged Passage dim:  torch.Size([40, 1442, 800])
Modeled Passage dim:  torch.Size([40, 1442, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1442, 1000])
Span start logits:  torch.Size([40, 1442])
span start probs dim:  torch.Size([40, 1442])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1442]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 812, 200])
Passage Length:  812
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 812, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 812, 17])
Passage ques attention dim:  torch.Size([40, 812, 17])
Passage question vectors dim:  torch.Size([40, 812, 200])
Question Passage Similarity dim:  torch.Size([40, 812])
Question passage attention dim:  torch.Size([40, 812])
Final Merged Passage dim:  torch.Size([40, 812, 800])
Modeled Passage dim:  torch.Size([40, 812, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 812, 1000])
Span start logits:  torch.Size([40, 812])
span start probs dim:  torch.Size([40, 812])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 812]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 489, 200])
Passage Length:  489
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 489, 15])
Passage ques attention dim:  torch.Size([40, 489, 15])
Passage question vectors dim:  torch.Size([40, 489, 200])
Question Passage Similarity dim:  torch.Size([40, 489])
Question passage attention dim:  torch.Size([40, 489])
Final Merged Passage dim:  torch.Size([40, 489, 800])
Modeled Passage dim:  torch.Size([40, 489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 489, 1000])
Span start logits:  torch.Size([40, 489])
span start probs dim:  torch.Size([40, 489])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 489]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 339, 200])
Passage Length:  339
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 339, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 339, 13])
Passage ques attention dim:  torch.Size([40, 339, 13])
Passage question vectors dim:  torch.Size([40, 339, 200])
Question Passage Similarity dim:  torch.Size([40, 339])
Question passage attention dim:  torch.Size([40, 339])
Final Merged Passage dim:  torch.Size([40, 339, 800])
Modeled Passage dim:  torch.Size([40, 339, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 339, 1000])
Span start logits:  torch.Size([40, 339])
span start probs dim:  torch.Size([40, 339])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 339]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 393, 200])
Passage Length:  393
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 393, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 393, 16])
Passage ques attention dim:  torch.Size([40, 393, 16])
Passage question vectors dim:  torch.Size([40, 393, 200])
Question Passage Similarity dim:  torch.Size([40, 393])
Question passage attention dim:  torch.Size([40, 393])
Final Merged Passage dim:  torch.Size([40, 393, 800])
Modeled Passage dim:  torch.Size([40, 393, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 393, 1000])
Span start logits:  torch.Size([40, 393])
span start probs dim:  torch.Size([40, 393])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 393]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1387, 200])
Passage Length:  1387
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1387, 15])
Passage ques attention dim:  torch.Size([40, 1387, 15])
Passage question vectors dim:  torch.Size([40, 1387, 200])
Question Passage Similarity dim:  torch.Size([40, 1387])
Question passage attention dim:  torch.Size([40, 1387])
Final Merged Passage dim:  torch.Size([40, 1387, 800])
Modeled Passage dim:  torch.Size([40, 1387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1387, 1000])
Span start logits:  torch.Size([40, 1387])
span start probs dim:  torch.Size([40, 1387])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1387]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 166, 200])
Passage Length:  166
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 166, 16])
Passage ques attention dim:  torch.Size([40, 166, 16])
Passage question vectors dim:  torch.Size([40, 166, 200])
Question Passage Similarity dim:  torch.Size([40, 166])
Question passage attention dim:  torch.Size([40, 166])
Final Merged Passage dim:  torch.Size([40, 166, 800])
Modeled Passage dim:  torch.Size([40, 166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 166, 1000])
Span start logits:  torch.Size([40, 166])
span start probs dim:  torch.Size([40, 166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 821, 200])
Passage Length:  821
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 821, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 821, 14])
Passage ques attention dim:  torch.Size([40, 821, 14])
Passage question vectors dim:  torch.Size([40, 821, 200])
Question Passage Similarity dim:  torch.Size([40, 821])
Question passage attention dim:  torch.Size([40, 821])
Final Merged Passage dim:  torch.Size([40, 821, 800])
Modeled Passage dim:  torch.Size([40, 821, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 821, 1000])
Span start logits:  torch.Size([40, 821])
span start probs dim:  torch.Size([40, 821])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 821]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 391, 200])
Passage Length:  391
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 391, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 391, 17])
Passage ques attention dim:  torch.Size([40, 391, 17])
Passage question vectors dim:  torch.Size([40, 391, 200])
Question Passage Similarity dim:  torch.Size([40, 391])
Question passage attention dim:  torch.Size([40, 391])
Final Merged Passage dim:  torch.Size([40, 391, 800])
Modeled Passage dim:  torch.Size([40, 391, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 391, 1000])
Span start logits:  torch.Size([40, 391])
span start probs dim:  torch.Size([40, 391])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 391]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1556, 200])
Passage Length:  1556
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1556, 14])
Passage ques attention dim:  torch.Size([40, 1556, 14])
Passage question vectors dim:  torch.Size([40, 1556, 200])
Question Passage Similarity dim:  torch.Size([40, 1556])
Question passage attention dim:  torch.Size([40, 1556])
Final Merged Passage dim:  torch.Size([40, 1556, 800])
Modeled Passage dim:  torch.Size([40, 1556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1556, 1000])
Span start logits:  torch.Size([40, 1556])
span start probs dim:  torch.Size([40, 1556])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1556]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1109, 200])
Passage Length:  1109
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1109, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1109, 18])
Passage ques attention dim:  torch.Size([40, 1109, 18])
Passage question vectors dim:  torch.Size([40, 1109, 200])
Question Passage Similarity dim:  torch.Size([40, 1109])
Question passage attention dim:  torch.Size([40, 1109])
Final Merged Passage dim:  torch.Size([40, 1109, 800])
Modeled Passage dim:  torch.Size([40, 1109, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1109, 1000])
Span start logits:  torch.Size([40, 1109])
span start probs dim:  torch.Size([40, 1109])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1109]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1309, 200])
Passage Length:  1309
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1309, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1309, 16])
Passage ques attention dim:  torch.Size([40, 1309, 16])
Passage question vectors dim:  torch.Size([40, 1309, 200])
Question Passage Similarity dim:  torch.Size([40, 1309])
Question passage attention dim:  torch.Size([40, 1309])
Final Merged Passage dim:  torch.Size([40, 1309, 800])
Modeled Passage dim:  torch.Size([40, 1309, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1309, 1000])
Span start logits:  torch.Size([40, 1309])
span start probs dim:  torch.Size([40, 1309])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1309]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 971, 200])
Passage Length:  971
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 971, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 971, 20])
Passage ques attention dim:  torch.Size([40, 971, 20])
Passage question vectors dim:  torch.Size([40, 971, 200])
Question Passage Similarity dim:  torch.Size([40, 971])
Question passage attention dim:  torch.Size([40, 971])
Final Merged Passage dim:  torch.Size([40, 971, 800])
Modeled Passage dim:  torch.Size([40, 971, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 971, 1000])
Span start logits:  torch.Size([40, 971])
span start probs dim:  torch.Size([40, 971])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 971]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 335, 200])
Passage Length:  335
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 335, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 335, 17])
Passage ques attention dim:  torch.Size([40, 335, 17])
Passage question vectors dim:  torch.Size([40, 335, 200])
Question Passage Similarity dim:  torch.Size([40, 335])
Question passage attention dim:  torch.Size([40, 335])
Final Merged Passage dim:  torch.Size([40, 335, 800])
Modeled Passage dim:  torch.Size([40, 335, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 335, 1000])
Span start logits:  torch.Size([40, 335])
span start probs dim:  torch.Size([40, 335])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 335]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1193, 200])
Passage Length:  1193
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1193, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1193, 13])
Passage ques attention dim:  torch.Size([40, 1193, 13])
Passage question vectors dim:  torch.Size([40, 1193, 200])
Question Passage Similarity dim:  torch.Size([40, 1193])
Question passage attention dim:  torch.Size([40, 1193])
Final Merged Passage dim:  torch.Size([40, 1193, 800])
Modeled Passage dim:  torch.Size([40, 1193, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1193, 1000])
Span start logits:  torch.Size([40, 1193])
span start probs dim:  torch.Size([40, 1193])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1193]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 960, 200])
Passage Length:  960
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 960, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 960, 14])
Passage ques attention dim:  torch.Size([40, 960, 14])
Passage question vectors dim:  torch.Size([40, 960, 200])
Question Passage Similarity dim:  torch.Size([40, 960])
Question passage attention dim:  torch.Size([40, 960])
Final Merged Passage dim:  torch.Size([40, 960, 800])
Modeled Passage dim:  torch.Size([40, 960, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 960, 1000])
Span start logits:  torch.Size([40, 960])
span start probs dim:  torch.Size([40, 960])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 960]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 697, 200])
Passage Length:  697
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 697, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 697, 17])
Passage ques attention dim:  torch.Size([40, 697, 17])
Passage question vectors dim:  torch.Size([40, 697, 200])
Question Passage Similarity dim:  torch.Size([40, 697])
Question passage attention dim:  torch.Size([40, 697])
Final Merged Passage dim:  torch.Size([40, 697, 800])
Modeled Passage dim:  torch.Size([40, 697, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 697, 1000])
Span start logits:  torch.Size([40, 697])
span start probs dim:  torch.Size([40, 697])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 697]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 421, 200])
Passage Length:  421
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 421, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 421, 13])
Passage ques attention dim:  torch.Size([40, 421, 13])
Passage question vectors dim:  torch.Size([40, 421, 200])
Question Passage Similarity dim:  torch.Size([40, 421])
Question passage attention dim:  torch.Size([40, 421])
Final Merged Passage dim:  torch.Size([40, 421, 800])
Modeled Passage dim:  torch.Size([40, 421, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 421, 1000])
Span start logits:  torch.Size([40, 421])
span start probs dim:  torch.Size([40, 421])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 421]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 269, 200])
Passage Length:  269
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 269, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 269, 16])
Passage ques attention dim:  torch.Size([40, 269, 16])
Passage question vectors dim:  torch.Size([40, 269, 200])
Question Passage Similarity dim:  torch.Size([40, 269])
Question passage attention dim:  torch.Size([40, 269])
Final Merged Passage dim:  torch.Size([40, 269, 800])
Modeled Passage dim:  torch.Size([40, 269, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 269, 1000])
Span start logits:  torch.Size([40, 269])
span start probs dim:  torch.Size([40, 269])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 269]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 404, 200])
Passage Length:  404
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 404, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 404, 15])
Passage ques attention dim:  torch.Size([40, 404, 15])
Passage question vectors dim:  torch.Size([40, 404, 200])
Question Passage Similarity dim:  torch.Size([40, 404])
Question passage attention dim:  torch.Size([40, 404])
Final Merged Passage dim:  torch.Size([40, 404, 800])
Modeled Passage dim:  torch.Size([40, 404, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 404, 1000])
Span start logits:  torch.Size([40, 404])
span start probs dim:  torch.Size([40, 404])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 404]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1378, 200])
Passage Length:  1378
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1378, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1378, 15])
Passage ques attention dim:  torch.Size([40, 1378, 15])
Passage question vectors dim:  torch.Size([40, 1378, 200])
Question Passage Similarity dim:  torch.Size([40, 1378])
Question passage attention dim:  torch.Size([40, 1378])
Final Merged Passage dim:  torch.Size([40, 1378, 800])
Modeled Passage dim:  torch.Size([40, 1378, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1378, 1000])
Span start logits:  torch.Size([40, 1378])
span start probs dim:  torch.Size([40, 1378])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1378]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 482, 200])
Passage Length:  482
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 482, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 482, 14])
Passage ques attention dim:  torch.Size([40, 482, 14])
Passage question vectors dim:  torch.Size([40, 482, 200])
Question Passage Similarity dim:  torch.Size([40, 482])
Question passage attention dim:  torch.Size([40, 482])
Final Merged Passage dim:  torch.Size([40, 482, 800])
Modeled Passage dim:  torch.Size([40, 482, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 482, 1000])
Span start logits:  torch.Size([40, 482])
span start probs dim:  torch.Size([40, 482])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 482]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 340, 200])
Passage Length:  340
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 340, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 340, 15])
Passage ques attention dim:  torch.Size([40, 340, 15])
Passage question vectors dim:  torch.Size([40, 340, 200])
Question Passage Similarity dim:  torch.Size([40, 340])
Question passage attention dim:  torch.Size([40, 340])
Final Merged Passage dim:  torch.Size([40, 340, 800])
Modeled Passage dim:  torch.Size([40, 340, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 340, 1000])
Span start logits:  torch.Size([40, 340])
span start probs dim:  torch.Size([40, 340])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 340]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 104, 200])
Passage Length:  104
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 104, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 104, 13])
Passage ques attention dim:  torch.Size([40, 104, 13])
Passage question vectors dim:  torch.Size([40, 104, 200])
Question Passage Similarity dim:  torch.Size([40, 104])
Question passage attention dim:  torch.Size([40, 104])
Final Merged Passage dim:  torch.Size([40, 104, 800])
Modeled Passage dim:  torch.Size([40, 104, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 104, 1000])
Span start logits:  torch.Size([40, 104])
span start probs dim:  torch.Size([40, 104])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 104]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 874, 200])
Passage Length:  874
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 874, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 874, 15])
Passage ques attention dim:  torch.Size([40, 874, 15])
Passage question vectors dim:  torch.Size([40, 874, 200])
Question Passage Similarity dim:  torch.Size([40, 874])
Question passage attention dim:  torch.Size([40, 874])
Final Merged Passage dim:  torch.Size([40, 874, 800])
Modeled Passage dim:  torch.Size([40, 874, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 874, 1000])
Span start logits:  torch.Size([40, 874])
span start probs dim:  torch.Size([40, 874])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 874]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1023, 200])
Passage Length:  1023
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1023, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1023, 12])
Passage ques attention dim:  torch.Size([40, 1023, 12])
Passage question vectors dim:  torch.Size([40, 1023, 200])
Question Passage Similarity dim:  torch.Size([40, 1023])
Question passage attention dim:  torch.Size([40, 1023])
Final Merged Passage dim:  torch.Size([40, 1023, 800])
Modeled Passage dim:  torch.Size([40, 1023, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1023, 1000])
Span start logits:  torch.Size([40, 1023])
span start probs dim:  torch.Size([40, 1023])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1023]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 311, 18])
Passage ques attention dim:  torch.Size([40, 311, 18])
Passage question vectors dim:  torch.Size([40, 311, 200])
Question Passage Similarity dim:  torch.Size([40, 311])
Question passage attention dim:  torch.Size([40, 311])
Final Merged Passage dim:  torch.Size([40, 311, 800])
Modeled Passage dim:  torch.Size([40, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 311, 1000])
Span start logits:  torch.Size([40, 311])
span start probs dim:  torch.Size([40, 311])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 311]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1659, 200])
Passage Length:  1659
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1659, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1659, 17])
Passage ques attention dim:  torch.Size([40, 1659, 17])
Passage question vectors dim:  torch.Size([40, 1659, 200])
Question Passage Similarity dim:  torch.Size([40, 1659])
Question passage attention dim:  torch.Size([40, 1659])
Final Merged Passage dim:  torch.Size([40, 1659, 800])
Modeled Passage dim:  torch.Size([40, 1659, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1659, 1000])
Span start logits:  torch.Size([40, 1659])
span start probs dim:  torch.Size([40, 1659])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1659]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 486, 200])
Passage Length:  486
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 486, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 486, 14])
Passage ques attention dim:  torch.Size([40, 486, 14])
Passage question vectors dim:  torch.Size([40, 486, 200])
Question Passage Similarity dim:  torch.Size([40, 486])
Question passage attention dim:  torch.Size([40, 486])
Final Merged Passage dim:  torch.Size([40, 486, 800])
Modeled Passage dim:  torch.Size([40, 486, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 486, 1000])
Span start logits:  torch.Size([40, 486])
span start probs dim:  torch.Size([40, 486])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 486]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1011, 200])
Passage Length:  1011
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1011, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1011, 13])
Passage ques attention dim:  torch.Size([40, 1011, 13])
Passage question vectors dim:  torch.Size([40, 1011, 200])
Question Passage Similarity dim:  torch.Size([40, 1011])
Question passage attention dim:  torch.Size([40, 1011])
Final Merged Passage dim:  torch.Size([40, 1011, 800])
Modeled Passage dim:  torch.Size([40, 1011, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1011, 1000])
Span start logits:  torch.Size([40, 1011])
span start probs dim:  torch.Size([40, 1011])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1011]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1195, 200])
Passage Length:  1195
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1195, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1195, 16])
Passage ques attention dim:  torch.Size([40, 1195, 16])
Passage question vectors dim:  torch.Size([40, 1195, 200])
Question Passage Similarity dim:  torch.Size([40, 1195])
Question passage attention dim:  torch.Size([40, 1195])
Final Merged Passage dim:  torch.Size([40, 1195, 800])
Modeled Passage dim:  torch.Size([40, 1195, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1195, 1000])
Span start logits:  torch.Size([40, 1195])
span start probs dim:  torch.Size([40, 1195])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1195]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 530, 200])
Passage Length:  530
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 530, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 530, 13])
Passage ques attention dim:  torch.Size([40, 530, 13])
Passage question vectors dim:  torch.Size([40, 530, 200])
Question Passage Similarity dim:  torch.Size([40, 530])
Question passage attention dim:  torch.Size([40, 530])
Final Merged Passage dim:  torch.Size([40, 530, 800])
Modeled Passage dim:  torch.Size([40, 530, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 530, 1000])
Span start logits:  torch.Size([40, 530])
span start probs dim:  torch.Size([40, 530])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 530]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1547, 200])
Passage Length:  1547
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1547, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1547, 15])
Passage ques attention dim:  torch.Size([40, 1547, 15])
Passage question vectors dim:  torch.Size([40, 1547, 200])
Question Passage Similarity dim:  torch.Size([40, 1547])
Question passage attention dim:  torch.Size([40, 1547])
Final Merged Passage dim:  torch.Size([40, 1547, 800])
Modeled Passage dim:  torch.Size([40, 1547, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1547, 1000])
Span start logits:  torch.Size([40, 1547])
span start probs dim:  torch.Size([40, 1547])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1547]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 1069, 200])
Passage Length:  1069
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 1069, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1069, 27])
Passage ques attention dim:  torch.Size([40, 1069, 27])
Passage question vectors dim:  torch.Size([40, 1069, 200])
Question Passage Similarity dim:  torch.Size([40, 1069])
Question passage attention dim:  torch.Size([40, 1069])
Final Merged Passage dim:  torch.Size([40, 1069, 800])
Modeled Passage dim:  torch.Size([40, 1069, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1069, 1000])
Span start logits:  torch.Size([40, 1069])
span start probs dim:  torch.Size([40, 1069])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1069]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 299, 200])
Passage Length:  299
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 299, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 299, 14])
Passage ques attention dim:  torch.Size([40, 299, 14])
Passage question vectors dim:  torch.Size([40, 299, 200])
Question Passage Similarity dim:  torch.Size([40, 299])
Question passage attention dim:  torch.Size([40, 299])
Final Merged Passage dim:  torch.Size([40, 299, 800])
Modeled Passage dim:  torch.Size([40, 299, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 299, 1000])
Span start logits:  torch.Size([40, 299])
span start probs dim:  torch.Size([40, 299])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 299]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 814, 200])
Passage Length:  814
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 814, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 814, 15])
Passage ques attention dim:  torch.Size([40, 814, 15])
Passage question vectors dim:  torch.Size([40, 814, 200])
Question Passage Similarity dim:  torch.Size([40, 814])
Question passage attention dim:  torch.Size([40, 814])
Final Merged Passage dim:  torch.Size([40, 814, 800])
Modeled Passage dim:  torch.Size([40, 814, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 814, 1000])
Span start logits:  torch.Size([40, 814])
span start probs dim:  torch.Size([40, 814])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 814]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 834, 200])
Passage Length:  834
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 834, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 834, 15])
Passage ques attention dim:  torch.Size([40, 834, 15])
Passage question vectors dim:  torch.Size([40, 834, 200])
Question Passage Similarity dim:  torch.Size([40, 834])
Question passage attention dim:  torch.Size([40, 834])
Final Merged Passage dim:  torch.Size([40, 834, 800])
Modeled Passage dim:  torch.Size([40, 834, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 834, 1000])
Span start logits:  torch.Size([40, 834])
span start probs dim:  torch.Size([40, 834])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 834]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 637, 200])
Passage Length:  637
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 637, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 637, 22])
Passage ques attention dim:  torch.Size([40, 637, 22])
Passage question vectors dim:  torch.Size([40, 637, 200])
Question Passage Similarity dim:  torch.Size([40, 637])
Question passage attention dim:  torch.Size([40, 637])
Final Merged Passage dim:  torch.Size([40, 637, 800])
Modeled Passage dim:  torch.Size([40, 637, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 637, 1000])
Span start logits:  torch.Size([40, 637])
span start probs dim:  torch.Size([40, 637])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 637]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 689, 200])
Passage Length:  689
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 689, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 689, 17])
Passage ques attention dim:  torch.Size([40, 689, 17])
Passage question vectors dim:  torch.Size([40, 689, 200])
Question Passage Similarity dim:  torch.Size([40, 689])
Question passage attention dim:  torch.Size([40, 689])
Final Merged Passage dim:  torch.Size([40, 689, 800])
Modeled Passage dim:  torch.Size([40, 689, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 689, 1000])
Span start logits:  torch.Size([40, 689])
span start probs dim:  torch.Size([40, 689])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 689]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1274, 200])
Passage Length:  1274
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1274, 15])
Passage ques attention dim:  torch.Size([40, 1274, 15])
Passage question vectors dim:  torch.Size([40, 1274, 200])
Question Passage Similarity dim:  torch.Size([40, 1274])
Question passage attention dim:  torch.Size([40, 1274])
Final Merged Passage dim:  torch.Size([40, 1274, 800])
Modeled Passage dim:  torch.Size([40, 1274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1274, 1000])
Span start logits:  torch.Size([40, 1274])
span start probs dim:  torch.Size([40, 1274])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1274]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 541, 200])
Passage Length:  541
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 541, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 541, 15])
Passage ques attention dim:  torch.Size([40, 541, 15])
Passage question vectors dim:  torch.Size([40, 541, 200])
Question Passage Similarity dim:  torch.Size([40, 541])
Question passage attention dim:  torch.Size([40, 541])
Final Merged Passage dim:  torch.Size([40, 541, 800])
Modeled Passage dim:  torch.Size([40, 541, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 541, 1000])
Span start logits:  torch.Size([40, 541])
span start probs dim:  torch.Size([40, 541])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 541]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 369, 200])
Passage Length:  369
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 369, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 369, 16])
Passage ques attention dim:  torch.Size([40, 369, 16])
Passage question vectors dim:  torch.Size([40, 369, 200])
Question Passage Similarity dim:  torch.Size([40, 369])
Question passage attention dim:  torch.Size([40, 369])
Final Merged Passage dim:  torch.Size([40, 369, 800])
Modeled Passage dim:  torch.Size([40, 369, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 369, 1000])
Span start logits:  torch.Size([40, 369])
span start probs dim:  torch.Size([40, 369])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 369]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 382, 200])
Passage Length:  382
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 382, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 382, 16])
Passage ques attention dim:  torch.Size([40, 382, 16])
Passage question vectors dim:  torch.Size([40, 382, 200])
Question Passage Similarity dim:  torch.Size([40, 382])
Question passage attention dim:  torch.Size([40, 382])
Final Merged Passage dim:  torch.Size([40, 382, 800])
Modeled Passage dim:  torch.Size([40, 382, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 382, 1000])
Span start logits:  torch.Size([40, 382])
span start probs dim:  torch.Size([40, 382])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 382]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 463, 200])
Passage Length:  463
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 463, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 463, 15])
Passage ques attention dim:  torch.Size([40, 463, 15])
Passage question vectors dim:  torch.Size([40, 463, 200])
Question Passage Similarity dim:  torch.Size([40, 463])
Question passage attention dim:  torch.Size([40, 463])
Final Merged Passage dim:  torch.Size([40, 463, 800])
Modeled Passage dim:  torch.Size([40, 463, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 463, 1000])
Span start logits:  torch.Size([40, 463])
span start probs dim:  torch.Size([40, 463])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 463]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 677, 200])
Passage Length:  677
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 677, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 677, 14])
Passage ques attention dim:  torch.Size([40, 677, 14])
Passage question vectors dim:  torch.Size([40, 677, 200])
Question Passage Similarity dim:  torch.Size([40, 677])
Question passage attention dim:  torch.Size([40, 677])
Final Merged Passage dim:  torch.Size([40, 677, 800])
Modeled Passage dim:  torch.Size([40, 677, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 677, 1000])
Span start logits:  torch.Size([40, 677])
span start probs dim:  torch.Size([40, 677])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 677]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 716, 200])
Passage Length:  716
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 716, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 716, 15])
Passage ques attention dim:  torch.Size([40, 716, 15])
Passage question vectors dim:  torch.Size([40, 716, 200])
Question Passage Similarity dim:  torch.Size([40, 716])
Question passage attention dim:  torch.Size([40, 716])
Final Merged Passage dim:  torch.Size([40, 716, 800])
Modeled Passage dim:  torch.Size([40, 716, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 716, 1000])
Span start logits:  torch.Size([40, 716])
span start probs dim:  torch.Size([40, 716])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 716]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 641, 200])
Passage Length:  641
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 641, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 641, 14])
Passage ques attention dim:  torch.Size([40, 641, 14])
Passage question vectors dim:  torch.Size([40, 641, 200])
Question Passage Similarity dim:  torch.Size([40, 641])
Question passage attention dim:  torch.Size([40, 641])
Final Merged Passage dim:  torch.Size([40, 641, 800])
Modeled Passage dim:  torch.Size([40, 641, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 641, 1000])
Span start logits:  torch.Size([40, 641])
span start probs dim:  torch.Size([40, 641])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 641]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1517, 200])
Passage Length:  1517
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1517, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1517, 19])
Passage ques attention dim:  torch.Size([40, 1517, 19])
Passage question vectors dim:  torch.Size([40, 1517, 200])
Question Passage Similarity dim:  torch.Size([40, 1517])
Question passage attention dim:  torch.Size([40, 1517])
Final Merged Passage dim:  torch.Size([40, 1517, 800])
Modeled Passage dim:  torch.Size([40, 1517, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1517, 1000])
Span start logits:  torch.Size([40, 1517])
span start probs dim:  torch.Size([40, 1517])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1517]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 675, 200])
Passage Length:  675
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 675, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 675, 13])
Passage ques attention dim:  torch.Size([40, 675, 13])
Passage question vectors dim:  torch.Size([40, 675, 200])
Question Passage Similarity dim:  torch.Size([40, 675])
Question passage attention dim:  torch.Size([40, 675])
Final Merged Passage dim:  torch.Size([40, 675, 800])
Modeled Passage dim:  torch.Size([40, 675, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 675, 1000])
Span start logits:  torch.Size([40, 675])
span start probs dim:  torch.Size([40, 675])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 675]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1103, 200])
Passage Length:  1103
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1103, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1103, 13])
Passage ques attention dim:  torch.Size([40, 1103, 13])
Passage question vectors dim:  torch.Size([40, 1103, 200])
Question Passage Similarity dim:  torch.Size([40, 1103])
Question passage attention dim:  torch.Size([40, 1103])
Final Merged Passage dim:  torch.Size([40, 1103, 800])
Modeled Passage dim:  torch.Size([40, 1103, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1103, 1000])
Span start logits:  torch.Size([40, 1103])
span start probs dim:  torch.Size([40, 1103])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1103]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 501, 200])
Passage Length:  501
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 501, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 501, 13])
Passage ques attention dim:  torch.Size([40, 501, 13])
Passage question vectors dim:  torch.Size([40, 501, 200])
Question Passage Similarity dim:  torch.Size([40, 501])
Question passage attention dim:  torch.Size([40, 501])
Final Merged Passage dim:  torch.Size([40, 501, 800])
Modeled Passage dim:  torch.Size([40, 501, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 501, 1000])
Span start logits:  torch.Size([40, 501])
span start probs dim:  torch.Size([40, 501])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 501]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 957, 200])
Passage Length:  957
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 957, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 957, 16])
Passage ques attention dim:  torch.Size([40, 957, 16])
Passage question vectors dim:  torch.Size([40, 957, 200])
Question Passage Similarity dim:  torch.Size([40, 957])
Question passage attention dim:  torch.Size([40, 957])
Final Merged Passage dim:  torch.Size([40, 957, 800])
Modeled Passage dim:  torch.Size([40, 957, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 957, 1000])
Span start logits:  torch.Size([40, 957])
span start probs dim:  torch.Size([40, 957])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 957]) 40
METADATA: 
Embedded question dim:  torch.Size([15, 11, 200])
Embedded passage dim:  torch.Size([15, 2202, 200])
Passage Length:  2202
Encoded question dim:  torch.Size([15, 11, 200])
Encoded passage dim:  torch.Size([15, 2202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([15, 2202, 11])
Passage ques attention dim:  torch.Size([15, 2202, 11])
Passage question vectors dim:  torch.Size([15, 2202, 200])
Question Passage Similarity dim:  torch.Size([15, 2202])
Question passage attention dim:  torch.Size([15, 2202])
Final Merged Passage dim:  torch.Size([15, 2202, 800])
Modeled Passage dim:  torch.Size([15, 2202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([15, 2202, 1000])
Span start logits:  torch.Size([15, 2202])
span start probs dim:  torch.Size([15, 2202])
Span start representation dim:  torch.Size([15, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([15, 2202]) 15
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1200, 200])
Passage Length:  1200
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1200, 15])
Passage ques attention dim:  torch.Size([40, 1200, 15])
Passage question vectors dim:  torch.Size([40, 1200, 200])
Question Passage Similarity dim:  torch.Size([40, 1200])
Question passage attention dim:  torch.Size([40, 1200])
Final Merged Passage dim:  torch.Size([40, 1200, 800])
Modeled Passage dim:  torch.Size([40, 1200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1200, 1000])
Span start logits:  torch.Size([40, 1200])
span start probs dim:  torch.Size([40, 1200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 511, 200])
Passage Length:  511
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 511, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 511, 13])
Passage ques attention dim:  torch.Size([40, 511, 13])
Passage question vectors dim:  torch.Size([40, 511, 200])
Question Passage Similarity dim:  torch.Size([40, 511])
Question passage attention dim:  torch.Size([40, 511])
Final Merged Passage dim:  torch.Size([40, 511, 800])
Modeled Passage dim:  torch.Size([40, 511, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 511, 1000])
Span start logits:  torch.Size([40, 511])
span start probs dim:  torch.Size([40, 511])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 511]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1175, 200])
Passage Length:  1175
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1175, 15])
Passage ques attention dim:  torch.Size([40, 1175, 15])
Passage question vectors dim:  torch.Size([40, 1175, 200])
Question Passage Similarity dim:  torch.Size([40, 1175])
Question passage attention dim:  torch.Size([40, 1175])
Final Merged Passage dim:  torch.Size([40, 1175, 800])
Modeled Passage dim:  torch.Size([40, 1175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1175, 1000])
Span start logits:  torch.Size([40, 1175])
span start probs dim:  torch.Size([40, 1175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 796, 200])
Passage Length:  796
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 796, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 796, 17])
Passage ques attention dim:  torch.Size([40, 796, 17])
Passage question vectors dim:  torch.Size([40, 796, 200])
Question Passage Similarity dim:  torch.Size([40, 796])
Question passage attention dim:  torch.Size([40, 796])
Final Merged Passage dim:  torch.Size([40, 796, 800])
Modeled Passage dim:  torch.Size([40, 796, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 796, 1000])
Span start logits:  torch.Size([40, 796])
span start probs dim:  torch.Size([40, 796])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 796]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 883, 200])
Passage Length:  883
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 883, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 883, 15])
Passage ques attention dim:  torch.Size([40, 883, 15])
Passage question vectors dim:  torch.Size([40, 883, 200])
Question Passage Similarity dim:  torch.Size([40, 883])
Question passage attention dim:  torch.Size([40, 883])
Final Merged Passage dim:  torch.Size([40, 883, 800])
Modeled Passage dim:  torch.Size([40, 883, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 883, 1000])
Span start logits:  torch.Size([40, 883])
span start probs dim:  torch.Size([40, 883])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 883]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 586, 200])
Passage Length:  586
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 586, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 586, 14])
Passage ques attention dim:  torch.Size([40, 586, 14])
Passage question vectors dim:  torch.Size([40, 586, 200])
Question Passage Similarity dim:  torch.Size([40, 586])
Question passage attention dim:  torch.Size([40, 586])
Final Merged Passage dim:  torch.Size([40, 586, 800])
Modeled Passage dim:  torch.Size([40, 586, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 586, 1000])
Span start logits:  torch.Size([40, 586])
span start probs dim:  torch.Size([40, 586])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 586]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 803, 200])
Passage Length:  803
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 803, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 803, 15])
Passage ques attention dim:  torch.Size([40, 803, 15])
Passage question vectors dim:  torch.Size([40, 803, 200])
Question Passage Similarity dim:  torch.Size([40, 803])
Question passage attention dim:  torch.Size([40, 803])
Final Merged Passage dim:  torch.Size([40, 803, 800])
Modeled Passage dim:  torch.Size([40, 803, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 803, 1000])
Span start logits:  torch.Size([40, 803])
span start probs dim:  torch.Size([40, 803])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 803]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 824, 200])
Passage Length:  824
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 824, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 824, 13])
Passage ques attention dim:  torch.Size([40, 824, 13])
Passage question vectors dim:  torch.Size([40, 824, 200])
Question Passage Similarity dim:  torch.Size([40, 824])
Question passage attention dim:  torch.Size([40, 824])
Final Merged Passage dim:  torch.Size([40, 824, 800])
Modeled Passage dim:  torch.Size([40, 824, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 824, 1000])
Span start logits:  torch.Size([40, 824])
span start probs dim:  torch.Size([40, 824])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 824]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 895, 200])
Passage Length:  895
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 895, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 895, 19])
Passage ques attention dim:  torch.Size([40, 895, 19])
Passage question vectors dim:  torch.Size([40, 895, 200])
Question Passage Similarity dim:  torch.Size([40, 895])
Question passage attention dim:  torch.Size([40, 895])
Final Merged Passage dim:  torch.Size([40, 895, 800])
Modeled Passage dim:  torch.Size([40, 895, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 895, 1000])
Span start logits:  torch.Size([40, 895])
span start probs dim:  torch.Size([40, 895])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 895]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1414, 200])
Passage Length:  1414
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1414, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1414, 13])
Passage ques attention dim:  torch.Size([40, 1414, 13])
Passage question vectors dim:  torch.Size([40, 1414, 200])
Question Passage Similarity dim:  torch.Size([40, 1414])
Question passage attention dim:  torch.Size([40, 1414])
Final Merged Passage dim:  torch.Size([40, 1414, 800])
Modeled Passage dim:  torch.Size([40, 1414, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1414, 1000])
Span start logits:  torch.Size([40, 1414])
span start probs dim:  torch.Size([40, 1414])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1414]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 494, 200])
Passage Length:  494
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 494, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 494, 15])
Passage ques attention dim:  torch.Size([40, 494, 15])
Passage question vectors dim:  torch.Size([40, 494, 200])
Question Passage Similarity dim:  torch.Size([40, 494])
Question passage attention dim:  torch.Size([40, 494])
Final Merged Passage dim:  torch.Size([40, 494, 800])
Modeled Passage dim:  torch.Size([40, 494, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 494, 1000])
Span start logits:  torch.Size([40, 494])
span start probs dim:  torch.Size([40, 494])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 494]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 844, 200])
Passage Length:  844
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 844, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 844, 16])
Passage ques attention dim:  torch.Size([40, 844, 16])
Passage question vectors dim:  torch.Size([40, 844, 200])
Question Passage Similarity dim:  torch.Size([40, 844])
Question passage attention dim:  torch.Size([40, 844])
Final Merged Passage dim:  torch.Size([40, 844, 800])
Modeled Passage dim:  torch.Size([40, 844, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 844, 1000])
Span start logits:  torch.Size([40, 844])
span start probs dim:  torch.Size([40, 844])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 844]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 387, 200])
Passage Length:  387
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 387, 15])
Passage ques attention dim:  torch.Size([40, 387, 15])
Passage question vectors dim:  torch.Size([40, 387, 200])
Question Passage Similarity dim:  torch.Size([40, 387])
Question passage attention dim:  torch.Size([40, 387])
Final Merged Passage dim:  torch.Size([40, 387, 800])
Modeled Passage dim:  torch.Size([40, 387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 387, 1000])
Span start logits:  torch.Size([40, 387])
span start probs dim:  torch.Size([40, 387])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 387]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 661, 200])
Passage Length:  661
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 661, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 661, 11])
Passage ques attention dim:  torch.Size([40, 661, 11])
Passage question vectors dim:  torch.Size([40, 661, 200])
Question Passage Similarity dim:  torch.Size([40, 661])
Question passage attention dim:  torch.Size([40, 661])
Final Merged Passage dim:  torch.Size([40, 661, 800])
Modeled Passage dim:  torch.Size([40, 661, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 661, 1000])
Span start logits:  torch.Size([40, 661])
span start probs dim:  torch.Size([40, 661])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 661]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 917, 200])
Passage Length:  917
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 917, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 917, 16])
Passage ques attention dim:  torch.Size([40, 917, 16])
Passage question vectors dim:  torch.Size([40, 917, 200])
Question Passage Similarity dim:  torch.Size([40, 917])
Question passage attention dim:  torch.Size([40, 917])
Final Merged Passage dim:  torch.Size([40, 917, 800])
Modeled Passage dim:  torch.Size([40, 917, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 917, 1000])
Span start logits:  torch.Size([40, 917])
span start probs dim:  torch.Size([40, 917])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 917]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1117, 200])
Passage Length:  1117
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1117, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1117, 14])
Passage ques attention dim:  torch.Size([40, 1117, 14])
Passage question vectors dim:  torch.Size([40, 1117, 200])
Question Passage Similarity dim:  torch.Size([40, 1117])
Question passage attention dim:  torch.Size([40, 1117])
Final Merged Passage dim:  torch.Size([40, 1117, 800])
Modeled Passage dim:  torch.Size([40, 1117, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1117, 1000])
Span start logits:  torch.Size([40, 1117])
span start probs dim:  torch.Size([40, 1117])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1117]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 33, 200])
Embedded passage dim:  torch.Size([40, 436, 200])
Passage Length:  436
Encoded question dim:  torch.Size([40, 33, 200])
Encoded passage dim:  torch.Size([40, 436, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 436, 33])
Passage ques attention dim:  torch.Size([40, 436, 33])
Passage question vectors dim:  torch.Size([40, 436, 200])
Question Passage Similarity dim:  torch.Size([40, 436])
Question passage attention dim:  torch.Size([40, 436])
Final Merged Passage dim:  torch.Size([40, 436, 800])
Modeled Passage dim:  torch.Size([40, 436, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 436, 1000])
Span start logits:  torch.Size([40, 436])
span start probs dim:  torch.Size([40, 436])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 436]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 2038, 200])
Passage Length:  2038
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 2038, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2038, 12])
Passage ques attention dim:  torch.Size([40, 2038, 12])
Passage question vectors dim:  torch.Size([40, 2038, 200])
Question Passage Similarity dim:  torch.Size([40, 2038])
Question passage attention dim:  torch.Size([40, 2038])
Final Merged Passage dim:  torch.Size([40, 2038, 800])
Modeled Passage dim:  torch.Size([40, 2038, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2038, 1000])
Span start logits:  torch.Size([40, 2038])
span start probs dim:  torch.Size([40, 2038])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2038]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 971, 200])
Passage Length:  971
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 971, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 971, 12])
Passage ques attention dim:  torch.Size([40, 971, 12])
Passage question vectors dim:  torch.Size([40, 971, 200])
Question Passage Similarity dim:  torch.Size([40, 971])
Question passage attention dim:  torch.Size([40, 971])
Final Merged Passage dim:  torch.Size([40, 971, 800])
Modeled Passage dim:  torch.Size([40, 971, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 971, 1000])
Span start logits:  torch.Size([40, 971])
span start probs dim:  torch.Size([40, 971])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 971]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 447, 200])
Passage Length:  447
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 447, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 447, 15])
Passage ques attention dim:  torch.Size([40, 447, 15])
Passage question vectors dim:  torch.Size([40, 447, 200])
Question Passage Similarity dim:  torch.Size([40, 447])
Question passage attention dim:  torch.Size([40, 447])
Final Merged Passage dim:  torch.Size([40, 447, 800])
Modeled Passage dim:  torch.Size([40, 447, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 447, 1000])
Span start logits:  torch.Size([40, 447])
span start probs dim:  torch.Size([40, 447])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 447]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 28, 200])
Embedded passage dim:  torch.Size([40, 2096, 200])
Passage Length:  2096
Encoded question dim:  torch.Size([40, 28, 200])
Encoded passage dim:  torch.Size([40, 2096, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2096, 28])
Passage ques attention dim:  torch.Size([40, 2096, 28])
Passage question vectors dim:  torch.Size([40, 2096, 200])
Question Passage Similarity dim:  torch.Size([40, 2096])
Question passage attention dim:  torch.Size([40, 2096])
Final Merged Passage dim:  torch.Size([40, 2096, 800])
Modeled Passage dim:  torch.Size([40, 2096, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2096, 1000])
Span start logits:  torch.Size([40, 2096])
span start probs dim:  torch.Size([40, 2096])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2096]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 690, 200])
Passage Length:  690
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 690, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 690, 22])
Passage ques attention dim:  torch.Size([40, 690, 22])
Passage question vectors dim:  torch.Size([40, 690, 200])
Question Passage Similarity dim:  torch.Size([40, 690])
Question passage attention dim:  torch.Size([40, 690])
Final Merged Passage dim:  torch.Size([40, 690, 800])
Modeled Passage dim:  torch.Size([40, 690, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 690, 1000])
Span start logits:  torch.Size([40, 690])
span start probs dim:  torch.Size([40, 690])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 690]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1648, 200])
Passage Length:  1648
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1648, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1648, 14])
Passage ques attention dim:  torch.Size([40, 1648, 14])
Passage question vectors dim:  torch.Size([40, 1648, 200])
Question Passage Similarity dim:  torch.Size([40, 1648])
Question passage attention dim:  torch.Size([40, 1648])
Final Merged Passage dim:  torch.Size([40, 1648, 800])
Modeled Passage dim:  torch.Size([40, 1648, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1648, 1000])
Span start logits:  torch.Size([40, 1648])
span start probs dim:  torch.Size([40, 1648])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1648]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1137, 200])
Passage Length:  1137
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1137, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1137, 15])
Passage ques attention dim:  torch.Size([40, 1137, 15])
Passage question vectors dim:  torch.Size([40, 1137, 200])
Question Passage Similarity dim:  torch.Size([40, 1137])
Question passage attention dim:  torch.Size([40, 1137])
Final Merged Passage dim:  torch.Size([40, 1137, 800])
Modeled Passage dim:  torch.Size([40, 1137, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1137, 1000])
Span start logits:  torch.Size([40, 1137])
span start probs dim:  torch.Size([40, 1137])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1137]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 778, 200])
Passage Length:  778
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 778, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 778, 13])
Passage ques attention dim:  torch.Size([40, 778, 13])
Passage question vectors dim:  torch.Size([40, 778, 200])
Question Passage Similarity dim:  torch.Size([40, 778])
Question passage attention dim:  torch.Size([40, 778])
Final Merged Passage dim:  torch.Size([40, 778, 800])
Modeled Passage dim:  torch.Size([40, 778, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 778, 1000])
Span start logits:  torch.Size([40, 778])
span start probs dim:  torch.Size([40, 778])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 778]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 496, 200])
Passage Length:  496
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 496, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 496, 16])
Passage ques attention dim:  torch.Size([40, 496, 16])
Passage question vectors dim:  torch.Size([40, 496, 200])
Question Passage Similarity dim:  torch.Size([40, 496])
Question passage attention dim:  torch.Size([40, 496])
Final Merged Passage dim:  torch.Size([40, 496, 800])
Modeled Passage dim:  torch.Size([40, 496, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 496, 1000])
Span start logits:  torch.Size([40, 496])
span start probs dim:  torch.Size([40, 496])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 496]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1327, 200])
Passage Length:  1327
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1327, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1327, 14])
Passage ques attention dim:  torch.Size([40, 1327, 14])
Passage question vectors dim:  torch.Size([40, 1327, 200])
Question Passage Similarity dim:  torch.Size([40, 1327])
Question passage attention dim:  torch.Size([40, 1327])
Final Merged Passage dim:  torch.Size([40, 1327, 800])
Modeled Passage dim:  torch.Size([40, 1327, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1327, 1000])
Span start logits:  torch.Size([40, 1327])
span start probs dim:  torch.Size([40, 1327])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1327]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1180, 200])
Passage Length:  1180
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1180, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1180, 13])
Passage ques attention dim:  torch.Size([40, 1180, 13])
Passage question vectors dim:  torch.Size([40, 1180, 200])
Question Passage Similarity dim:  torch.Size([40, 1180])
Question passage attention dim:  torch.Size([40, 1180])
Final Merged Passage dim:  torch.Size([40, 1180, 800])
Modeled Passage dim:  torch.Size([40, 1180, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1180, 1000])
Span start logits:  torch.Size([40, 1180])
span start probs dim:  torch.Size([40, 1180])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1180]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1715, 200])
Passage Length:  1715
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1715, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1715, 14])
Passage ques attention dim:  torch.Size([40, 1715, 14])
Passage question vectors dim:  torch.Size([40, 1715, 200])
Question Passage Similarity dim:  torch.Size([40, 1715])
Question passage attention dim:  torch.Size([40, 1715])
Final Merged Passage dim:  torch.Size([40, 1715, 800])
Modeled Passage dim:  torch.Size([40, 1715, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1715, 1000])
Span start logits:  torch.Size([40, 1715])
span start probs dim:  torch.Size([40, 1715])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1715]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 267, 200])
Passage Length:  267
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 267, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 267, 11])
Passage ques attention dim:  torch.Size([40, 267, 11])
Passage question vectors dim:  torch.Size([40, 267, 200])
Question Passage Similarity dim:  torch.Size([40, 267])
Question passage attention dim:  torch.Size([40, 267])
Final Merged Passage dim:  torch.Size([40, 267, 800])
Modeled Passage dim:  torch.Size([40, 267, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 267, 1000])
Span start logits:  torch.Size([40, 267])
span start probs dim:  torch.Size([40, 267])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 267]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 571, 200])
Passage Length:  571
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 571, 12])
Passage ques attention dim:  torch.Size([40, 571, 12])
Passage question vectors dim:  torch.Size([40, 571, 200])
Question Passage Similarity dim:  torch.Size([40, 571])
Question passage attention dim:  torch.Size([40, 571])
Final Merged Passage dim:  torch.Size([40, 571, 800])
Modeled Passage dim:  torch.Size([40, 571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 571, 1000])
Span start logits:  torch.Size([40, 571])
span start probs dim:  torch.Size([40, 571])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 571]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1215, 200])
Passage Length:  1215
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1215, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1215, 13])
Passage ques attention dim:  torch.Size([40, 1215, 13])
Passage question vectors dim:  torch.Size([40, 1215, 200])
Question Passage Similarity dim:  torch.Size([40, 1215])
Question passage attention dim:  torch.Size([40, 1215])
Final Merged Passage dim:  torch.Size([40, 1215, 800])
Modeled Passage dim:  torch.Size([40, 1215, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1215, 1000])
Span start logits:  torch.Size([40, 1215])
span start probs dim:  torch.Size([40, 1215])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1215]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 688, 200])
Passage Length:  688
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 688, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 688, 14])
Passage ques attention dim:  torch.Size([40, 688, 14])
Passage question vectors dim:  torch.Size([40, 688, 200])
Question Passage Similarity dim:  torch.Size([40, 688])
Question passage attention dim:  torch.Size([40, 688])
Final Merged Passage dim:  torch.Size([40, 688, 800])
Modeled Passage dim:  torch.Size([40, 688, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 688, 1000])
Span start logits:  torch.Size([40, 688])
span start probs dim:  torch.Size([40, 688])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 688]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 562, 200])
Passage Length:  562
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 562, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 562, 14])
Passage ques attention dim:  torch.Size([40, 562, 14])
Passage question vectors dim:  torch.Size([40, 562, 200])
Question Passage Similarity dim:  torch.Size([40, 562])
Question passage attention dim:  torch.Size([40, 562])
Final Merged Passage dim:  torch.Size([40, 562, 800])
Modeled Passage dim:  torch.Size([40, 562, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 562, 1000])
Span start logits:  torch.Size([40, 562])
span start probs dim:  torch.Size([40, 562])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 562]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 738, 200])
Passage Length:  738
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 738, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 738, 16])
Passage ques attention dim:  torch.Size([40, 738, 16])
Passage question vectors dim:  torch.Size([40, 738, 200])
Question Passage Similarity dim:  torch.Size([40, 738])
Question passage attention dim:  torch.Size([40, 738])
Final Merged Passage dim:  torch.Size([40, 738, 800])
Modeled Passage dim:  torch.Size([40, 738, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 738, 1000])
Span start logits:  torch.Size([40, 738])
span start probs dim:  torch.Size([40, 738])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 738]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 975, 200])
Passage Length:  975
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 975, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 975, 14])
Passage ques attention dim:  torch.Size([40, 975, 14])
Passage question vectors dim:  torch.Size([40, 975, 200])
Question Passage Similarity dim:  torch.Size([40, 975])
Question passage attention dim:  torch.Size([40, 975])
Final Merged Passage dim:  torch.Size([40, 975, 800])
Modeled Passage dim:  torch.Size([40, 975, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 975, 1000])
Span start logits:  torch.Size([40, 975])
span start probs dim:  torch.Size([40, 975])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 975]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 421, 200])
Passage Length:  421
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 421, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 421, 14])
Passage ques attention dim:  torch.Size([40, 421, 14])
Passage question vectors dim:  torch.Size([40, 421, 200])
Question Passage Similarity dim:  torch.Size([40, 421])
Question passage attention dim:  torch.Size([40, 421])
Final Merged Passage dim:  torch.Size([40, 421, 800])
Modeled Passage dim:  torch.Size([40, 421, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 421, 1000])
Span start logits:  torch.Size([40, 421])
span start probs dim:  torch.Size([40, 421])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 421]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 364, 200])
Passage Length:  364
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 364, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 364, 13])
Passage ques attention dim:  torch.Size([40, 364, 13])
Passage question vectors dim:  torch.Size([40, 364, 200])
Question Passage Similarity dim:  torch.Size([40, 364])
Question passage attention dim:  torch.Size([40, 364])
Final Merged Passage dim:  torch.Size([40, 364, 800])
Modeled Passage dim:  torch.Size([40, 364, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 364, 1000])
Span start logits:  torch.Size([40, 364])
span start probs dim:  torch.Size([40, 364])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 364]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 702, 200])
Passage Length:  702
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 702, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 702, 17])
Passage ques attention dim:  torch.Size([40, 702, 17])
Passage question vectors dim:  torch.Size([40, 702, 200])
Question Passage Similarity dim:  torch.Size([40, 702])
Question passage attention dim:  torch.Size([40, 702])
Final Merged Passage dim:  torch.Size([40, 702, 800])
Modeled Passage dim:  torch.Size([40, 702, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 702, 1000])
Span start logits:  torch.Size([40, 702])
span start probs dim:  torch.Size([40, 702])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 702]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1008, 200])
Passage Length:  1008
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1008, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1008, 15])
Passage ques attention dim:  torch.Size([40, 1008, 15])
Passage question vectors dim:  torch.Size([40, 1008, 200])
Question Passage Similarity dim:  torch.Size([40, 1008])
Question passage attention dim:  torch.Size([40, 1008])
Final Merged Passage dim:  torch.Size([40, 1008, 800])
Modeled Passage dim:  torch.Size([40, 1008, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1008, 1000])
Span start logits:  torch.Size([40, 1008])
span start probs dim:  torch.Size([40, 1008])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1008]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 734, 200])
Passage Length:  734
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 734, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 734, 16])
Passage ques attention dim:  torch.Size([40, 734, 16])
Passage question vectors dim:  torch.Size([40, 734, 200])
Question Passage Similarity dim:  torch.Size([40, 734])
Question passage attention dim:  torch.Size([40, 734])
Final Merged Passage dim:  torch.Size([40, 734, 800])
Modeled Passage dim:  torch.Size([40, 734, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 734, 1000])
Span start logits:  torch.Size([40, 734])
span start probs dim:  torch.Size([40, 734])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 734]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 493, 200])
Passage Length:  493
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 493, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 493, 13])
Passage ques attention dim:  torch.Size([40, 493, 13])
Passage question vectors dim:  torch.Size([40, 493, 200])
Question Passage Similarity dim:  torch.Size([40, 493])
Question passage attention dim:  torch.Size([40, 493])
Final Merged Passage dim:  torch.Size([40, 493, 800])
Modeled Passage dim:  torch.Size([40, 493, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 493, 1000])
Span start logits:  torch.Size([40, 493])
span start probs dim:  torch.Size([40, 493])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 493]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 846, 200])
Passage Length:  846
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 846, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 846, 15])
Passage ques attention dim:  torch.Size([40, 846, 15])
Passage question vectors dim:  torch.Size([40, 846, 200])
Question Passage Similarity dim:  torch.Size([40, 846])
Question passage attention dim:  torch.Size([40, 846])
Final Merged Passage dim:  torch.Size([40, 846, 800])
Modeled Passage dim:  torch.Size([40, 846, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 846, 1000])
Span start logits:  torch.Size([40, 846])
span start probs dim:  torch.Size([40, 846])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 846]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 542, 200])
Passage Length:  542
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 542, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 542, 15])
Passage ques attention dim:  torch.Size([40, 542, 15])
Passage question vectors dim:  torch.Size([40, 542, 200])
Question Passage Similarity dim:  torch.Size([40, 542])
Question passage attention dim:  torch.Size([40, 542])
Final Merged Passage dim:  torch.Size([40, 542, 800])
Modeled Passage dim:  torch.Size([40, 542, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 542, 1000])
Span start logits:  torch.Size([40, 542])
span start probs dim:  torch.Size([40, 542])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 542]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 927, 200])
Passage Length:  927
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 927, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 927, 12])
Passage ques attention dim:  torch.Size([40, 927, 12])
Passage question vectors dim:  torch.Size([40, 927, 200])
Question Passage Similarity dim:  torch.Size([40, 927])
Question passage attention dim:  torch.Size([40, 927])
Final Merged Passage dim:  torch.Size([40, 927, 800])
Modeled Passage dim:  torch.Size([40, 927, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 927, 1000])
Span start logits:  torch.Size([40, 927])
span start probs dim:  torch.Size([40, 927])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 927]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1221, 200])
Passage Length:  1221
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1221, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1221, 13])
Passage ques attention dim:  torch.Size([40, 1221, 13])
Passage question vectors dim:  torch.Size([40, 1221, 200])
Question Passage Similarity dim:  torch.Size([40, 1221])
Question passage attention dim:  torch.Size([40, 1221])
Final Merged Passage dim:  torch.Size([40, 1221, 800])
Modeled Passage dim:  torch.Size([40, 1221, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1221, 1000])
Span start logits:  torch.Size([40, 1221])
span start probs dim:  torch.Size([40, 1221])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1221]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 433, 200])
Passage Length:  433
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 433, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 433, 14])
Passage ques attention dim:  torch.Size([40, 433, 14])
Passage question vectors dim:  torch.Size([40, 433, 200])
Question Passage Similarity dim:  torch.Size([40, 433])
Question passage attention dim:  torch.Size([40, 433])
Final Merged Passage dim:  torch.Size([40, 433, 800])
Modeled Passage dim:  torch.Size([40, 433, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 433, 1000])
Span start logits:  torch.Size([40, 433])
span start probs dim:  torch.Size([40, 433])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 433]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1067, 200])
Passage Length:  1067
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1067, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1067, 16])
Passage ques attention dim:  torch.Size([40, 1067, 16])
Passage question vectors dim:  torch.Size([40, 1067, 200])
Question Passage Similarity dim:  torch.Size([40, 1067])
Question passage attention dim:  torch.Size([40, 1067])
Final Merged Passage dim:  torch.Size([40, 1067, 800])
Modeled Passage dim:  torch.Size([40, 1067, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1067, 1000])
Span start logits:  torch.Size([40, 1067])
span start probs dim:  torch.Size([40, 1067])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1067]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 616, 200])
Passage Length:  616
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 616, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 616, 18])
Passage ques attention dim:  torch.Size([40, 616, 18])
Passage question vectors dim:  torch.Size([40, 616, 200])
Question Passage Similarity dim:  torch.Size([40, 616])
Question passage attention dim:  torch.Size([40, 616])
Final Merged Passage dim:  torch.Size([40, 616, 800])
Modeled Passage dim:  torch.Size([40, 616, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 616, 1000])
Span start logits:  torch.Size([40, 616])
span start probs dim:  torch.Size([40, 616])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 616]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 232, 200])
Passage Length:  232
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 232, 13])
Passage ques attention dim:  torch.Size([40, 232, 13])
Passage question vectors dim:  torch.Size([40, 232, 200])
Question Passage Similarity dim:  torch.Size([40, 232])
Question passage attention dim:  torch.Size([40, 232])
Final Merged Passage dim:  torch.Size([40, 232, 800])
Modeled Passage dim:  torch.Size([40, 232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 232, 1000])
Span start logits:  torch.Size([40, 232])
span start probs dim:  torch.Size([40, 232])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 232]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 240, 200])
Passage Length:  240
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 240, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 240, 12])
Passage ques attention dim:  torch.Size([40, 240, 12])
Passage question vectors dim:  torch.Size([40, 240, 200])
Question Passage Similarity dim:  torch.Size([40, 240])
Question passage attention dim:  torch.Size([40, 240])
Final Merged Passage dim:  torch.Size([40, 240, 800])
Modeled Passage dim:  torch.Size([40, 240, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 240, 1000])
Span start logits:  torch.Size([40, 240])
span start probs dim:  torch.Size([40, 240])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 240]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1154, 200])
Passage Length:  1154
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1154, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1154, 15])
Passage ques attention dim:  torch.Size([40, 1154, 15])
Passage question vectors dim:  torch.Size([40, 1154, 200])
Question Passage Similarity dim:  torch.Size([40, 1154])
Question passage attention dim:  torch.Size([40, 1154])
Final Merged Passage dim:  torch.Size([40, 1154, 800])
Modeled Passage dim:  torch.Size([40, 1154, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1154, 1000])
Span start logits:  torch.Size([40, 1154])
span start probs dim:  torch.Size([40, 1154])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1154]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 310, 200])
Passage Length:  310
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 310, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 310, 15])
Passage ques attention dim:  torch.Size([40, 310, 15])
Passage question vectors dim:  torch.Size([40, 310, 200])
Question Passage Similarity dim:  torch.Size([40, 310])
Question passage attention dim:  torch.Size([40, 310])
Final Merged Passage dim:  torch.Size([40, 310, 800])
Modeled Passage dim:  torch.Size([40, 310, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 310, 1000])
Span start logits:  torch.Size([40, 310])
span start probs dim:  torch.Size([40, 310])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 310]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 725, 200])
Passage Length:  725
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 725, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 725, 15])
Passage ques attention dim:  torch.Size([40, 725, 15])
Passage question vectors dim:  torch.Size([40, 725, 200])
Question Passage Similarity dim:  torch.Size([40, 725])
Question passage attention dim:  torch.Size([40, 725])
Final Merged Passage dim:  torch.Size([40, 725, 800])
Modeled Passage dim:  torch.Size([40, 725, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 725, 1000])
Span start logits:  torch.Size([40, 725])
span start probs dim:  torch.Size([40, 725])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 725]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 370, 200])
Passage Length:  370
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 370, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 370, 14])
Passage ques attention dim:  torch.Size([40, 370, 14])
Passage question vectors dim:  torch.Size([40, 370, 200])
Question Passage Similarity dim:  torch.Size([40, 370])
Question passage attention dim:  torch.Size([40, 370])
Final Merged Passage dim:  torch.Size([40, 370, 800])
Modeled Passage dim:  torch.Size([40, 370, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 370, 1000])
Span start logits:  torch.Size([40, 370])
span start probs dim:  torch.Size([40, 370])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 370]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 806, 200])
Passage Length:  806
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 806, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 806, 15])
Passage ques attention dim:  torch.Size([40, 806, 15])
Passage question vectors dim:  torch.Size([40, 806, 200])
Question Passage Similarity dim:  torch.Size([40, 806])
Question passage attention dim:  torch.Size([40, 806])
Final Merged Passage dim:  torch.Size([40, 806, 800])
Modeled Passage dim:  torch.Size([40, 806, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 806, 1000])
Span start logits:  torch.Size([40, 806])
span start probs dim:  torch.Size([40, 806])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 806]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 459, 200])
Passage Length:  459
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 459, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 459, 13])
Passage ques attention dim:  torch.Size([40, 459, 13])
Passage question vectors dim:  torch.Size([40, 459, 200])
Question Passage Similarity dim:  torch.Size([40, 459])
Question passage attention dim:  torch.Size([40, 459])
Final Merged Passage dim:  torch.Size([40, 459, 800])
Modeled Passage dim:  torch.Size([40, 459, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 459, 1000])
Span start logits:  torch.Size([40, 459])
span start probs dim:  torch.Size([40, 459])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 459]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1584, 200])
Passage Length:  1584
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1584, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1584, 14])
Passage ques attention dim:  torch.Size([40, 1584, 14])
Passage question vectors dim:  torch.Size([40, 1584, 200])
Question Passage Similarity dim:  torch.Size([40, 1584])
Question passage attention dim:  torch.Size([40, 1584])
Final Merged Passage dim:  torch.Size([40, 1584, 800])
Modeled Passage dim:  torch.Size([40, 1584, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1584, 1000])
Span start logits:  torch.Size([40, 1584])
span start probs dim:  torch.Size([40, 1584])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1584]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 735, 200])
Passage Length:  735
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 735, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 735, 16])
Passage ques attention dim:  torch.Size([40, 735, 16])
Passage question vectors dim:  torch.Size([40, 735, 200])
Question Passage Similarity dim:  torch.Size([40, 735])
Question passage attention dim:  torch.Size([40, 735])
Final Merged Passage dim:  torch.Size([40, 735, 800])
Modeled Passage dim:  torch.Size([40, 735, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 735, 1000])
Span start logits:  torch.Size([40, 735])
span start probs dim:  torch.Size([40, 735])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 735]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1143, 200])
Passage Length:  1143
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1143, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1143, 14])
Passage ques attention dim:  torch.Size([40, 1143, 14])
Passage question vectors dim:  torch.Size([40, 1143, 200])
Question Passage Similarity dim:  torch.Size([40, 1143])
Question passage attention dim:  torch.Size([40, 1143])
Final Merged Passage dim:  torch.Size([40, 1143, 800])
Modeled Passage dim:  torch.Size([40, 1143, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1143, 1000])
Span start logits:  torch.Size([40, 1143])
span start probs dim:  torch.Size([40, 1143])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1143]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 715, 200])
Passage Length:  715
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 715, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 715, 15])
Passage ques attention dim:  torch.Size([40, 715, 15])
Passage question vectors dim:  torch.Size([40, 715, 200])
Question Passage Similarity dim:  torch.Size([40, 715])
Question passage attention dim:  torch.Size([40, 715])
Final Merged Passage dim:  torch.Size([40, 715, 800])
Modeled Passage dim:  torch.Size([40, 715, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 715, 1000])
Span start logits:  torch.Size([40, 715])
span start probs dim:  torch.Size([40, 715])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 715]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1621, 200])
Passage Length:  1621
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1621, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1621, 16])
Passage ques attention dim:  torch.Size([40, 1621, 16])
Passage question vectors dim:  torch.Size([40, 1621, 200])
Question Passage Similarity dim:  torch.Size([40, 1621])
Question passage attention dim:  torch.Size([40, 1621])
Final Merged Passage dim:  torch.Size([40, 1621, 800])
Modeled Passage dim:  torch.Size([40, 1621, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1621, 1000])
Span start logits:  torch.Size([40, 1621])
span start probs dim:  torch.Size([40, 1621])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1621]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1664, 200])
Passage Length:  1664
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1664, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1664, 14])
Passage ques attention dim:  torch.Size([40, 1664, 14])
Passage question vectors dim:  torch.Size([40, 1664, 200])
Question Passage Similarity dim:  torch.Size([40, 1664])
Question passage attention dim:  torch.Size([40, 1664])
Final Merged Passage dim:  torch.Size([40, 1664, 800])
Modeled Passage dim:  torch.Size([40, 1664, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1664, 1000])
Span start logits:  torch.Size([40, 1664])
span start probs dim:  torch.Size([40, 1664])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1664]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1527, 200])
Passage Length:  1527
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1527, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1527, 15])
Passage ques attention dim:  torch.Size([40, 1527, 15])
Passage question vectors dim:  torch.Size([40, 1527, 200])
Question Passage Similarity dim:  torch.Size([40, 1527])
Question passage attention dim:  torch.Size([40, 1527])
Final Merged Passage dim:  torch.Size([40, 1527, 800])
Modeled Passage dim:  torch.Size([40, 1527, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1527, 1000])
Span start logits:  torch.Size([40, 1527])
span start probs dim:  torch.Size([40, 1527])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1527]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1378, 200])
Passage Length:  1378
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1378, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1378, 14])
Passage ques attention dim:  torch.Size([40, 1378, 14])
Passage question vectors dim:  torch.Size([40, 1378, 200])
Question Passage Similarity dim:  torch.Size([40, 1378])
Question passage attention dim:  torch.Size([40, 1378])
Final Merged Passage dim:  torch.Size([40, 1378, 800])
Modeled Passage dim:  torch.Size([40, 1378, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1378, 1000])
Span start logits:  torch.Size([40, 1378])
span start probs dim:  torch.Size([40, 1378])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1378]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 522, 200])
Passage Length:  522
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 522, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 522, 20])
Passage ques attention dim:  torch.Size([40, 522, 20])
Passage question vectors dim:  torch.Size([40, 522, 200])
Question Passage Similarity dim:  torch.Size([40, 522])
Question passage attention dim:  torch.Size([40, 522])
Final Merged Passage dim:  torch.Size([40, 522, 800])
Modeled Passage dim:  torch.Size([40, 522, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 522, 1000])
Span start logits:  torch.Size([40, 522])
span start probs dim:  torch.Size([40, 522])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 522]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 630, 200])
Passage Length:  630
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 630, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 630, 14])
Passage ques attention dim:  torch.Size([40, 630, 14])
Passage question vectors dim:  torch.Size([40, 630, 200])
Question Passage Similarity dim:  torch.Size([40, 630])
Question passage attention dim:  torch.Size([40, 630])
Final Merged Passage dim:  torch.Size([40, 630, 800])
Modeled Passage dim:  torch.Size([40, 630, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 630, 1000])
Span start logits:  torch.Size([40, 630])
span start probs dim:  torch.Size([40, 630])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 630]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 361, 200])
Passage Length:  361
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 361, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 361, 13])
Passage ques attention dim:  torch.Size([40, 361, 13])
Passage question vectors dim:  torch.Size([40, 361, 200])
Question Passage Similarity dim:  torch.Size([40, 361])
Question passage attention dim:  torch.Size([40, 361])
Final Merged Passage dim:  torch.Size([40, 361, 800])
Modeled Passage dim:  torch.Size([40, 361, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 361, 1000])
Span start logits:  torch.Size([40, 361])
span start probs dim:  torch.Size([40, 361])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 361]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1611, 200])
Passage Length:  1611
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1611, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1611, 15])
Passage ques attention dim:  torch.Size([40, 1611, 15])
Passage question vectors dim:  torch.Size([40, 1611, 200])
Question Passage Similarity dim:  torch.Size([40, 1611])
Question passage attention dim:  torch.Size([40, 1611])
Final Merged Passage dim:  torch.Size([40, 1611, 800])
Modeled Passage dim:  torch.Size([40, 1611, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1611, 1000])
Span start logits:  torch.Size([40, 1611])
span start probs dim:  torch.Size([40, 1611])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1611]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 448, 200])
Passage Length:  448
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 448, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 448, 16])
Passage ques attention dim:  torch.Size([40, 448, 16])
Passage question vectors dim:  torch.Size([40, 448, 200])
Question Passage Similarity dim:  torch.Size([40, 448])
Question passage attention dim:  torch.Size([40, 448])
Final Merged Passage dim:  torch.Size([40, 448, 800])
Modeled Passage dim:  torch.Size([40, 448, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 448, 1000])
Span start logits:  torch.Size([40, 448])
span start probs dim:  torch.Size([40, 448])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 448]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 483, 200])
Passage Length:  483
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 483, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 483, 12])
Passage ques attention dim:  torch.Size([40, 483, 12])
Passage question vectors dim:  torch.Size([40, 483, 200])
Question Passage Similarity dim:  torch.Size([40, 483])
Question passage attention dim:  torch.Size([40, 483])
Final Merged Passage dim:  torch.Size([40, 483, 800])
Modeled Passage dim:  torch.Size([40, 483, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 483, 1000])
Span start logits:  torch.Size([40, 483])
span start probs dim:  torch.Size([40, 483])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 483]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 659, 200])
Passage Length:  659
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 659, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 659, 17])
Passage ques attention dim:  torch.Size([40, 659, 17])
Passage question vectors dim:  torch.Size([40, 659, 200])
Question Passage Similarity dim:  torch.Size([40, 659])
Question passage attention dim:  torch.Size([40, 659])
Final Merged Passage dim:  torch.Size([40, 659, 800])
Modeled Passage dim:  torch.Size([40, 659, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 659, 1000])
Span start logits:  torch.Size([40, 659])
span start probs dim:  torch.Size([40, 659])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 659]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1108, 200])
Passage Length:  1108
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1108, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1108, 12])
Passage ques attention dim:  torch.Size([40, 1108, 12])
Passage question vectors dim:  torch.Size([40, 1108, 200])
Question Passage Similarity dim:  torch.Size([40, 1108])
Question passage attention dim:  torch.Size([40, 1108])
Final Merged Passage dim:  torch.Size([40, 1108, 800])
Modeled Passage dim:  torch.Size([40, 1108, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1108, 1000])
Span start logits:  torch.Size([40, 1108])
span start probs dim:  torch.Size([40, 1108])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1108]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1685, 200])
Passage Length:  1685
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1685, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1685, 18])
Passage ques attention dim:  torch.Size([40, 1685, 18])
Passage question vectors dim:  torch.Size([40, 1685, 200])
Question Passage Similarity dim:  torch.Size([40, 1685])
Question passage attention dim:  torch.Size([40, 1685])
Final Merged Passage dim:  torch.Size([40, 1685, 800])
Modeled Passage dim:  torch.Size([40, 1685, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1685, 1000])
Span start logits:  torch.Size([40, 1685])
span start probs dim:  torch.Size([40, 1685])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1685]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 355, 200])
Passage Length:  355
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 355, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 355, 16])
Passage ques attention dim:  torch.Size([40, 355, 16])
Passage question vectors dim:  torch.Size([40, 355, 200])
Question Passage Similarity dim:  torch.Size([40, 355])
Question passage attention dim:  torch.Size([40, 355])
Final Merged Passage dim:  torch.Size([40, 355, 800])
Modeled Passage dim:  torch.Size([40, 355, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 355, 1000])
Span start logits:  torch.Size([40, 355])
span start probs dim:  torch.Size([40, 355])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 355]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 931, 200])
Passage Length:  931
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 931, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 931, 15])
Passage ques attention dim:  torch.Size([40, 931, 15])
Passage question vectors dim:  torch.Size([40, 931, 200])
Question Passage Similarity dim:  torch.Size([40, 931])
Question passage attention dim:  torch.Size([40, 931])
Final Merged Passage dim:  torch.Size([40, 931, 800])
Modeled Passage dim:  torch.Size([40, 931, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 931, 1000])
Span start logits:  torch.Size([40, 931])
span start probs dim:  torch.Size([40, 931])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 931]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 408, 200])
Passage Length:  408
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 408, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 408, 12])
Passage ques attention dim:  torch.Size([40, 408, 12])
Passage question vectors dim:  torch.Size([40, 408, 200])
Question Passage Similarity dim:  torch.Size([40, 408])
Question passage attention dim:  torch.Size([40, 408])
Final Merged Passage dim:  torch.Size([40, 408, 800])
Modeled Passage dim:  torch.Size([40, 408, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 408, 1000])
Span start logits:  torch.Size([40, 408])
span start probs dim:  torch.Size([40, 408])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 408]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 561, 200])
Passage Length:  561
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 561, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 561, 14])
Passage ques attention dim:  torch.Size([40, 561, 14])
Passage question vectors dim:  torch.Size([40, 561, 200])
Question Passage Similarity dim:  torch.Size([40, 561])
Question passage attention dim:  torch.Size([40, 561])
Final Merged Passage dim:  torch.Size([40, 561, 800])
Modeled Passage dim:  torch.Size([40, 561, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 561, 1000])
Span start logits:  torch.Size([40, 561])
span start probs dim:  torch.Size([40, 561])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 561]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 561, 200])
Passage Length:  561
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 561, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 561, 14])
Passage ques attention dim:  torch.Size([40, 561, 14])
Passage question vectors dim:  torch.Size([40, 561, 200])
Question Passage Similarity dim:  torch.Size([40, 561])
Question passage attention dim:  torch.Size([40, 561])
Final Merged Passage dim:  torch.Size([40, 561, 800])
Modeled Passage dim:  torch.Size([40, 561, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 561, 1000])
Span start logits:  torch.Size([40, 561])
span start probs dim:  torch.Size([40, 561])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 561]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 563, 200])
Passage Length:  563
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 563, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 563, 16])
Passage ques attention dim:  torch.Size([40, 563, 16])
Passage question vectors dim:  torch.Size([40, 563, 200])
Question Passage Similarity dim:  torch.Size([40, 563])
Question passage attention dim:  torch.Size([40, 563])
Final Merged Passage dim:  torch.Size([40, 563, 800])
Modeled Passage dim:  torch.Size([40, 563, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 563, 1000])
Span start logits:  torch.Size([40, 563])
span start probs dim:  torch.Size([40, 563])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 563]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 480, 200])
Passage Length:  480
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 480, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 480, 13])
Passage ques attention dim:  torch.Size([40, 480, 13])
Passage question vectors dim:  torch.Size([40, 480, 200])
Question Passage Similarity dim:  torch.Size([40, 480])
Question passage attention dim:  torch.Size([40, 480])
Final Merged Passage dim:  torch.Size([40, 480, 800])
Modeled Passage dim:  torch.Size([40, 480, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 480, 1000])
Span start logits:  torch.Size([40, 480])
span start probs dim:  torch.Size([40, 480])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 480]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1291, 200])
Passage Length:  1291
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1291, 18])
Passage ques attention dim:  torch.Size([40, 1291, 18])
Passage question vectors dim:  torch.Size([40, 1291, 200])
Question Passage Similarity dim:  torch.Size([40, 1291])
Question passage attention dim:  torch.Size([40, 1291])
Final Merged Passage dim:  torch.Size([40, 1291, 800])
Modeled Passage dim:  torch.Size([40, 1291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1291, 1000])
Span start logits:  torch.Size([40, 1291])
span start probs dim:  torch.Size([40, 1291])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1291]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 657, 200])
Passage Length:  657
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 657, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 657, 16])
Passage ques attention dim:  torch.Size([40, 657, 16])
Passage question vectors dim:  torch.Size([40, 657, 200])
Question Passage Similarity dim:  torch.Size([40, 657])
Question passage attention dim:  torch.Size([40, 657])
Final Merged Passage dim:  torch.Size([40, 657, 800])
Modeled Passage dim:  torch.Size([40, 657, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 657, 1000])
Span start logits:  torch.Size([40, 657])
span start probs dim:  torch.Size([40, 657])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 657]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 931, 200])
Passage Length:  931
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 931, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 931, 17])
Passage ques attention dim:  torch.Size([40, 931, 17])
Passage question vectors dim:  torch.Size([40, 931, 200])
Question Passage Similarity dim:  torch.Size([40, 931])
Question passage attention dim:  torch.Size([40, 931])
Final Merged Passage dim:  torch.Size([40, 931, 800])
Modeled Passage dim:  torch.Size([40, 931, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 931, 1000])
Span start logits:  torch.Size([40, 931])
span start probs dim:  torch.Size([40, 931])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 931]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 876, 200])
Passage Length:  876
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 876, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 876, 15])
Passage ques attention dim:  torch.Size([40, 876, 15])
Passage question vectors dim:  torch.Size([40, 876, 200])
Question Passage Similarity dim:  torch.Size([40, 876])
Question passage attention dim:  torch.Size([40, 876])
Final Merged Passage dim:  torch.Size([40, 876, 800])
Modeled Passage dim:  torch.Size([40, 876, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 876, 1000])
Span start logits:  torch.Size([40, 876])
span start probs dim:  torch.Size([40, 876])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 876]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 800, 200])
Passage Length:  800
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 800, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 800, 14])
Passage ques attention dim:  torch.Size([40, 800, 14])
Passage question vectors dim:  torch.Size([40, 800, 200])
Question Passage Similarity dim:  torch.Size([40, 800])
Question passage attention dim:  torch.Size([40, 800])
Final Merged Passage dim:  torch.Size([40, 800, 800])
Modeled Passage dim:  torch.Size([40, 800, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 800, 1000])
Span start logits:  torch.Size([40, 800])
span start probs dim:  torch.Size([40, 800])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 800]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 549, 200])
Passage Length:  549
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 549, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 549, 13])
Passage ques attention dim:  torch.Size([40, 549, 13])
Passage question vectors dim:  torch.Size([40, 549, 200])
Question Passage Similarity dim:  torch.Size([40, 549])
Question passage attention dim:  torch.Size([40, 549])
Final Merged Passage dim:  torch.Size([40, 549, 800])
Modeled Passage dim:  torch.Size([40, 549, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 549, 1000])
Span start logits:  torch.Size([40, 549])
span start probs dim:  torch.Size([40, 549])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 549]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 547, 200])
Passage Length:  547
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 547, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 547, 17])
Passage ques attention dim:  torch.Size([40, 547, 17])
Passage question vectors dim:  torch.Size([40, 547, 200])
Question Passage Similarity dim:  torch.Size([40, 547])
Question passage attention dim:  torch.Size([40, 547])
Final Merged Passage dim:  torch.Size([40, 547, 800])
Modeled Passage dim:  torch.Size([40, 547, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 547, 1000])
Span start logits:  torch.Size([40, 547])
span start probs dim:  torch.Size([40, 547])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 547]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 602, 200])
Passage Length:  602
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 602, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 602, 14])
Passage ques attention dim:  torch.Size([40, 602, 14])
Passage question vectors dim:  torch.Size([40, 602, 200])
Question Passage Similarity dim:  torch.Size([40, 602])
Question passage attention dim:  torch.Size([40, 602])
Final Merged Passage dim:  torch.Size([40, 602, 800])
Modeled Passage dim:  torch.Size([40, 602, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 602, 1000])
Span start logits:  torch.Size([40, 602])
span start probs dim:  torch.Size([40, 602])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 602]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 758, 200])
Passage Length:  758
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 758, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 758, 12])
Passage ques attention dim:  torch.Size([40, 758, 12])
Passage question vectors dim:  torch.Size([40, 758, 200])
Question Passage Similarity dim:  torch.Size([40, 758])
Question passage attention dim:  torch.Size([40, 758])
Final Merged Passage dim:  torch.Size([40, 758, 800])
Modeled Passage dim:  torch.Size([40, 758, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 758, 1000])
Span start logits:  torch.Size([40, 758])
span start probs dim:  torch.Size([40, 758])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 758]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 43, 200])
Embedded passage dim:  torch.Size([40, 334, 200])
Passage Length:  334
Encoded question dim:  torch.Size([40, 43, 200])
Encoded passage dim:  torch.Size([40, 334, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 334, 43])
Passage ques attention dim:  torch.Size([40, 334, 43])
Passage question vectors dim:  torch.Size([40, 334, 200])
Question Passage Similarity dim:  torch.Size([40, 334])
Question passage attention dim:  torch.Size([40, 334])
Final Merged Passage dim:  torch.Size([40, 334, 800])
Modeled Passage dim:  torch.Size([40, 334, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 334, 1000])
Span start logits:  torch.Size([40, 334])
span start probs dim:  torch.Size([40, 334])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 334]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1205, 200])
Passage Length:  1205
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1205, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1205, 20])
Passage ques attention dim:  torch.Size([40, 1205, 20])
Passage question vectors dim:  torch.Size([40, 1205, 200])
Question Passage Similarity dim:  torch.Size([40, 1205])
Question passage attention dim:  torch.Size([40, 1205])
Final Merged Passage dim:  torch.Size([40, 1205, 800])
Modeled Passage dim:  torch.Size([40, 1205, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1205, 1000])
Span start logits:  torch.Size([40, 1205])
span start probs dim:  torch.Size([40, 1205])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1205]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 449, 200])
Passage Length:  449
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 449, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 449, 11])
Passage ques attention dim:  torch.Size([40, 449, 11])
Passage question vectors dim:  torch.Size([40, 449, 200])
Question Passage Similarity dim:  torch.Size([40, 449])
Question passage attention dim:  torch.Size([40, 449])
Final Merged Passage dim:  torch.Size([40, 449, 800])
Modeled Passage dim:  torch.Size([40, 449, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 449, 1000])
Span start logits:  torch.Size([40, 449])
span start probs dim:  torch.Size([40, 449])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 449]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 684, 200])
Passage Length:  684
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 684, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 684, 13])
Passage ques attention dim:  torch.Size([40, 684, 13])
Passage question vectors dim:  torch.Size([40, 684, 200])
Question Passage Similarity dim:  torch.Size([40, 684])
Question passage attention dim:  torch.Size([40, 684])
Final Merged Passage dim:  torch.Size([40, 684, 800])
Modeled Passage dim:  torch.Size([40, 684, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 684, 1000])
Span start logits:  torch.Size([40, 684])
span start probs dim:  torch.Size([40, 684])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 684]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1515, 200])
Passage Length:  1515
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1515, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1515, 17])
Passage ques attention dim:  torch.Size([40, 1515, 17])
Passage question vectors dim:  torch.Size([40, 1515, 200])
Question Passage Similarity dim:  torch.Size([40, 1515])
Question passage attention dim:  torch.Size([40, 1515])
Final Merged Passage dim:  torch.Size([40, 1515, 800])
Modeled Passage dim:  torch.Size([40, 1515, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1515, 1000])
Span start logits:  torch.Size([40, 1515])
span start probs dim:  torch.Size([40, 1515])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1515]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 220, 200])
Passage Length:  220
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 220, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 220, 11])
Passage ques attention dim:  torch.Size([40, 220, 11])
Passage question vectors dim:  torch.Size([40, 220, 200])
Question Passage Similarity dim:  torch.Size([40, 220])
Question passage attention dim:  torch.Size([40, 220])
Final Merged Passage dim:  torch.Size([40, 220, 800])
Modeled Passage dim:  torch.Size([40, 220, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 220, 1000])
Span start logits:  torch.Size([40, 220])
span start probs dim:  torch.Size([40, 220])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 220]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 496, 200])
Passage Length:  496
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 496, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 496, 18])
Passage ques attention dim:  torch.Size([40, 496, 18])
Passage question vectors dim:  torch.Size([40, 496, 200])
Question Passage Similarity dim:  torch.Size([40, 496])
Question passage attention dim:  torch.Size([40, 496])
Final Merged Passage dim:  torch.Size([40, 496, 800])
Modeled Passage dim:  torch.Size([40, 496, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 496, 1000])
Span start logits:  torch.Size([40, 496])
span start probs dim:  torch.Size([40, 496])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 496]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1525, 200])
Passage Length:  1525
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1525, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1525, 15])
Passage ques attention dim:  torch.Size([40, 1525, 15])
Passage question vectors dim:  torch.Size([40, 1525, 200])
Question Passage Similarity dim:  torch.Size([40, 1525])
Question passage attention dim:  torch.Size([40, 1525])
Final Merged Passage dim:  torch.Size([40, 1525, 800])
Modeled Passage dim:  torch.Size([40, 1525, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1525, 1000])
Span start logits:  torch.Size([40, 1525])
span start probs dim:  torch.Size([40, 1525])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1525]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 755, 200])
Passage Length:  755
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 755, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 755, 14])
Passage ques attention dim:  torch.Size([40, 755, 14])
Passage question vectors dim:  torch.Size([40, 755, 200])
Question Passage Similarity dim:  torch.Size([40, 755])
Question passage attention dim:  torch.Size([40, 755])
Final Merged Passage dim:  torch.Size([40, 755, 800])
Modeled Passage dim:  torch.Size([40, 755, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 755, 1000])
Span start logits:  torch.Size([40, 755])
span start probs dim:  torch.Size([40, 755])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 755]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 759, 200])
Passage Length:  759
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 759, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 759, 13])
Passage ques attention dim:  torch.Size([40, 759, 13])
Passage question vectors dim:  torch.Size([40, 759, 200])
Question Passage Similarity dim:  torch.Size([40, 759])
Question passage attention dim:  torch.Size([40, 759])
Final Merged Passage dim:  torch.Size([40, 759, 800])
Modeled Passage dim:  torch.Size([40, 759, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 759, 1000])
Span start logits:  torch.Size([40, 759])
span start probs dim:  torch.Size([40, 759])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 759]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 906, 200])
Passage Length:  906
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 906, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 906, 15])
Passage ques attention dim:  torch.Size([40, 906, 15])
Passage question vectors dim:  torch.Size([40, 906, 200])
Question Passage Similarity dim:  torch.Size([40, 906])
Question passage attention dim:  torch.Size([40, 906])
Final Merged Passage dim:  torch.Size([40, 906, 800])
Modeled Passage dim:  torch.Size([40, 906, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 906, 1000])
Span start logits:  torch.Size([40, 906])
span start probs dim:  torch.Size([40, 906])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 906]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 880, 200])
Passage Length:  880
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 880, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 880, 13])
Passage ques attention dim:  torch.Size([40, 880, 13])
Passage question vectors dim:  torch.Size([40, 880, 200])
Question Passage Similarity dim:  torch.Size([40, 880])
Question passage attention dim:  torch.Size([40, 880])
Final Merged Passage dim:  torch.Size([40, 880, 800])
Modeled Passage dim:  torch.Size([40, 880, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 880, 1000])
Span start logits:  torch.Size([40, 880])
span start probs dim:  torch.Size([40, 880])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 880]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 297, 200])
Passage Length:  297
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 297, 15])
Passage ques attention dim:  torch.Size([40, 297, 15])
Passage question vectors dim:  torch.Size([40, 297, 200])
Question Passage Similarity dim:  torch.Size([40, 297])
Question passage attention dim:  torch.Size([40, 297])
Final Merged Passage dim:  torch.Size([40, 297, 800])
Modeled Passage dim:  torch.Size([40, 297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 297, 1000])
Span start logits:  torch.Size([40, 297])
span start probs dim:  torch.Size([40, 297])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 297]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 606, 200])
Passage Length:  606
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 606, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 606, 12])
Passage ques attention dim:  torch.Size([40, 606, 12])
Passage question vectors dim:  torch.Size([40, 606, 200])
Question Passage Similarity dim:  torch.Size([40, 606])
Question passage attention dim:  torch.Size([40, 606])
Final Merged Passage dim:  torch.Size([40, 606, 800])
Modeled Passage dim:  torch.Size([40, 606, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 606, 1000])
Span start logits:  torch.Size([40, 606])
span start probs dim:  torch.Size([40, 606])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 606]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 287, 200])
Passage Length:  287
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 287, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 287, 13])
Passage ques attention dim:  torch.Size([40, 287, 13])
Passage question vectors dim:  torch.Size([40, 287, 200])
Question Passage Similarity dim:  torch.Size([40, 287])
Question passage attention dim:  torch.Size([40, 287])
Final Merged Passage dim:  torch.Size([40, 287, 800])
Modeled Passage dim:  torch.Size([40, 287, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 287, 1000])
Span start logits:  torch.Size([40, 287])
span start probs dim:  torch.Size([40, 287])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 287]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1330, 200])
Passage Length:  1330
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1330, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1330, 16])
Passage ques attention dim:  torch.Size([40, 1330, 16])
Passage question vectors dim:  torch.Size([40, 1330, 200])
Question Passage Similarity dim:  torch.Size([40, 1330])
Question passage attention dim:  torch.Size([40, 1330])
Final Merged Passage dim:  torch.Size([40, 1330, 800])
Modeled Passage dim:  torch.Size([40, 1330, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1330, 1000])
Span start logits:  torch.Size([40, 1330])
span start probs dim:  torch.Size([40, 1330])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1330]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1321, 200])
Passage Length:  1321
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1321, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1321, 18])
Passage ques attention dim:  torch.Size([40, 1321, 18])
Passage question vectors dim:  torch.Size([40, 1321, 200])
Question Passage Similarity dim:  torch.Size([40, 1321])
Question passage attention dim:  torch.Size([40, 1321])
Final Merged Passage dim:  torch.Size([40, 1321, 800])
Modeled Passage dim:  torch.Size([40, 1321, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1321, 1000])
Span start logits:  torch.Size([40, 1321])
span start probs dim:  torch.Size([40, 1321])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1321]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 362, 200])
Passage Length:  362
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 362, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 362, 14])
Passage ques attention dim:  torch.Size([40, 362, 14])
Passage question vectors dim:  torch.Size([40, 362, 200])
Question Passage Similarity dim:  torch.Size([40, 362])
Question passage attention dim:  torch.Size([40, 362])
Final Merged Passage dim:  torch.Size([40, 362, 800])
Modeled Passage dim:  torch.Size([40, 362, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 362, 1000])
Span start logits:  torch.Size([40, 362])
span start probs dim:  torch.Size([40, 362])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 362]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 225, 12])
Passage ques attention dim:  torch.Size([40, 225, 12])
Passage question vectors dim:  torch.Size([40, 225, 200])
Question Passage Similarity dim:  torch.Size([40, 225])
Question passage attention dim:  torch.Size([40, 225])
Final Merged Passage dim:  torch.Size([40, 225, 800])
Modeled Passage dim:  torch.Size([40, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 225, 1000])
Span start logits:  torch.Size([40, 225])
span start probs dim:  torch.Size([40, 225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1157, 200])
Passage Length:  1157
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1157, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1157, 13])
Passage ques attention dim:  torch.Size([40, 1157, 13])
Passage question vectors dim:  torch.Size([40, 1157, 200])
Question Passage Similarity dim:  torch.Size([40, 1157])
Question passage attention dim:  torch.Size([40, 1157])
Final Merged Passage dim:  torch.Size([40, 1157, 800])
Modeled Passage dim:  torch.Size([40, 1157, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1157, 1000])
Span start logits:  torch.Size([40, 1157])
span start probs dim:  torch.Size([40, 1157])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1157]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 748, 200])
Passage Length:  748
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 748, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 748, 14])
Passage ques attention dim:  torch.Size([40, 748, 14])
Passage question vectors dim:  torch.Size([40, 748, 200])
Question Passage Similarity dim:  torch.Size([40, 748])
Question passage attention dim:  torch.Size([40, 748])
Final Merged Passage dim:  torch.Size([40, 748, 800])
Modeled Passage dim:  torch.Size([40, 748, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 748, 1000])
Span start logits:  torch.Size([40, 748])
span start probs dim:  torch.Size([40, 748])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 748]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 644, 200])
Passage Length:  644
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 644, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 644, 17])
Passage ques attention dim:  torch.Size([40, 644, 17])
Passage question vectors dim:  torch.Size([40, 644, 200])
Question Passage Similarity dim:  torch.Size([40, 644])
Question passage attention dim:  torch.Size([40, 644])
Final Merged Passage dim:  torch.Size([40, 644, 800])
Modeled Passage dim:  torch.Size([40, 644, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 644, 1000])
Span start logits:  torch.Size([40, 644])
span start probs dim:  torch.Size([40, 644])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 644]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1063, 200])
Passage Length:  1063
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1063, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1063, 13])
Passage ques attention dim:  torch.Size([40, 1063, 13])
Passage question vectors dim:  torch.Size([40, 1063, 200])
Question Passage Similarity dim:  torch.Size([40, 1063])
Question passage attention dim:  torch.Size([40, 1063])
Final Merged Passage dim:  torch.Size([40, 1063, 800])
Modeled Passage dim:  torch.Size([40, 1063, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1063, 1000])
Span start logits:  torch.Size([40, 1063])
span start probs dim:  torch.Size([40, 1063])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1063]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 2056, 200])
Passage Length:  2056
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 2056, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2056, 14])
Passage ques attention dim:  torch.Size([40, 2056, 14])
Passage question vectors dim:  torch.Size([40, 2056, 200])
Question Passage Similarity dim:  torch.Size([40, 2056])
Question passage attention dim:  torch.Size([40, 2056])
Final Merged Passage dim:  torch.Size([40, 2056, 800])
Modeled Passage dim:  torch.Size([40, 2056, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2056, 1000])
Span start logits:  torch.Size([40, 2056])
span start probs dim:  torch.Size([40, 2056])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2056]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 360, 200])
Passage Length:  360
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 360, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 360, 12])
Passage ques attention dim:  torch.Size([40, 360, 12])
Passage question vectors dim:  torch.Size([40, 360, 200])
Question Passage Similarity dim:  torch.Size([40, 360])
Question passage attention dim:  torch.Size([40, 360])
Final Merged Passage dim:  torch.Size([40, 360, 800])
Modeled Passage dim:  torch.Size([40, 360, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 360, 1000])
Span start logits:  torch.Size([40, 360])
span start probs dim:  torch.Size([40, 360])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 360]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 735, 200])
Passage Length:  735
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 735, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 735, 15])
Passage ques attention dim:  torch.Size([40, 735, 15])
Passage question vectors dim:  torch.Size([40, 735, 200])
Question Passage Similarity dim:  torch.Size([40, 735])
Question passage attention dim:  torch.Size([40, 735])
Final Merged Passage dim:  torch.Size([40, 735, 800])
Modeled Passage dim:  torch.Size([40, 735, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 735, 1000])
Span start logits:  torch.Size([40, 735])
span start probs dim:  torch.Size([40, 735])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 735]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 308, 200])
Passage Length:  308
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 308, 18])
Passage ques attention dim:  torch.Size([40, 308, 18])
Passage question vectors dim:  torch.Size([40, 308, 200])
Question Passage Similarity dim:  torch.Size([40, 308])
Question passage attention dim:  torch.Size([40, 308])
Final Merged Passage dim:  torch.Size([40, 308, 800])
Modeled Passage dim:  torch.Size([40, 308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 308, 1000])
Span start logits:  torch.Size([40, 308])
span start probs dim:  torch.Size([40, 308])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 308]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 365, 200])
Passage Length:  365
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 365, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 365, 11])
Passage ques attention dim:  torch.Size([40, 365, 11])
Passage question vectors dim:  torch.Size([40, 365, 200])
Question Passage Similarity dim:  torch.Size([40, 365])
Question passage attention dim:  torch.Size([40, 365])
Final Merged Passage dim:  torch.Size([40, 365, 800])
Modeled Passage dim:  torch.Size([40, 365, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 365, 1000])
Span start logits:  torch.Size([40, 365])
span start probs dim:  torch.Size([40, 365])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 365]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 941, 200])
Passage Length:  941
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 941, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 941, 14])
Passage ques attention dim:  torch.Size([40, 941, 14])
Passage question vectors dim:  torch.Size([40, 941, 200])
Question Passage Similarity dim:  torch.Size([40, 941])
Question passage attention dim:  torch.Size([40, 941])
Final Merged Passage dim:  torch.Size([40, 941, 800])
Modeled Passage dim:  torch.Size([40, 941, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 941, 1000])
Span start logits:  torch.Size([40, 941])
span start probs dim:  torch.Size([40, 941])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 941]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1877, 200])
Passage Length:  1877
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1877, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1877, 13])
Passage ques attention dim:  torch.Size([40, 1877, 13])
Passage question vectors dim:  torch.Size([40, 1877, 200])
Question Passage Similarity dim:  torch.Size([40, 1877])
Question passage attention dim:  torch.Size([40, 1877])
Final Merged Passage dim:  torch.Size([40, 1877, 800])
Modeled Passage dim:  torch.Size([40, 1877, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1877, 1000])
Span start logits:  torch.Size([40, 1877])
span start probs dim:  torch.Size([40, 1877])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1877]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 340, 200])
Passage Length:  340
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 340, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 340, 15])
Passage ques attention dim:  torch.Size([40, 340, 15])
Passage question vectors dim:  torch.Size([40, 340, 200])
Question Passage Similarity dim:  torch.Size([40, 340])
Question passage attention dim:  torch.Size([40, 340])
Final Merged Passage dim:  torch.Size([40, 340, 800])
Modeled Passage dim:  torch.Size([40, 340, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 340, 1000])
Span start logits:  torch.Size([40, 340])
span start probs dim:  torch.Size([40, 340])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 340]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1145, 200])
Passage Length:  1145
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1145, 14])
Passage ques attention dim:  torch.Size([40, 1145, 14])
Passage question vectors dim:  torch.Size([40, 1145, 200])
Question Passage Similarity dim:  torch.Size([40, 1145])
Question passage attention dim:  torch.Size([40, 1145])
Final Merged Passage dim:  torch.Size([40, 1145, 800])
Modeled Passage dim:  torch.Size([40, 1145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1145, 1000])
Span start logits:  torch.Size([40, 1145])
span start probs dim:  torch.Size([40, 1145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 522, 200])
Passage Length:  522
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 522, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 522, 17])
Passage ques attention dim:  torch.Size([40, 522, 17])
Passage question vectors dim:  torch.Size([40, 522, 200])
Question Passage Similarity dim:  torch.Size([40, 522])
Question passage attention dim:  torch.Size([40, 522])
Final Merged Passage dim:  torch.Size([40, 522, 800])
Modeled Passage dim:  torch.Size([40, 522, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 522, 1000])
Span start logits:  torch.Size([40, 522])
span start probs dim:  torch.Size([40, 522])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 522]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 414, 200])
Passage Length:  414
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 414, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 414, 14])
Passage ques attention dim:  torch.Size([40, 414, 14])
Passage question vectors dim:  torch.Size([40, 414, 200])
Question Passage Similarity dim:  torch.Size([40, 414])
Question passage attention dim:  torch.Size([40, 414])
Final Merged Passage dim:  torch.Size([40, 414, 800])
Modeled Passage dim:  torch.Size([40, 414, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 414, 1000])
Span start logits:  torch.Size([40, 414])
span start probs dim:  torch.Size([40, 414])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 414]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 942, 200])
Passage Length:  942
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 942, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 942, 15])
Passage ques attention dim:  torch.Size([40, 942, 15])
Passage question vectors dim:  torch.Size([40, 942, 200])
Question Passage Similarity dim:  torch.Size([40, 942])
Question passage attention dim:  torch.Size([40, 942])
Final Merged Passage dim:  torch.Size([40, 942, 800])
Modeled Passage dim:  torch.Size([40, 942, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 942, 1000])
Span start logits:  torch.Size([40, 942])
span start probs dim:  torch.Size([40, 942])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 942]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1538, 200])
Passage Length:  1538
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1538, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1538, 17])
Passage ques attention dim:  torch.Size([40, 1538, 17])
Passage question vectors dim:  torch.Size([40, 1538, 200])
Question Passage Similarity dim:  torch.Size([40, 1538])
Question passage attention dim:  torch.Size([40, 1538])
Final Merged Passage dim:  torch.Size([40, 1538, 800])
Modeled Passage dim:  torch.Size([40, 1538, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1538, 1000])
Span start logits:  torch.Size([40, 1538])
span start probs dim:  torch.Size([40, 1538])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1538]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1529, 200])
Passage Length:  1529
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1529, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1529, 14])
Passage ques attention dim:  torch.Size([40, 1529, 14])
Passage question vectors dim:  torch.Size([40, 1529, 200])
Question Passage Similarity dim:  torch.Size([40, 1529])
Question passage attention dim:  torch.Size([40, 1529])
Final Merged Passage dim:  torch.Size([40, 1529, 800])
Modeled Passage dim:  torch.Size([40, 1529, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1529, 1000])
Span start logits:  torch.Size([40, 1529])
span start probs dim:  torch.Size([40, 1529])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1529]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1035, 200])
Passage Length:  1035
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1035, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1035, 15])
Passage ques attention dim:  torch.Size([40, 1035, 15])
Passage question vectors dim:  torch.Size([40, 1035, 200])
Question Passage Similarity dim:  torch.Size([40, 1035])
Question passage attention dim:  torch.Size([40, 1035])
Final Merged Passage dim:  torch.Size([40, 1035, 800])
Modeled Passage dim:  torch.Size([40, 1035, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1035, 1000])
Span start logits:  torch.Size([40, 1035])
span start probs dim:  torch.Size([40, 1035])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1035]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1169, 200])
Passage Length:  1169
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1169, 15])
Passage ques attention dim:  torch.Size([40, 1169, 15])
Passage question vectors dim:  torch.Size([40, 1169, 200])
Question Passage Similarity dim:  torch.Size([40, 1169])
Question passage attention dim:  torch.Size([40, 1169])
Final Merged Passage dim:  torch.Size([40, 1169, 800])
Modeled Passage dim:  torch.Size([40, 1169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1169, 1000])
Span start logits:  torch.Size([40, 1169])
span start probs dim:  torch.Size([40, 1169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 996, 200])
Passage Length:  996
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 996, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 996, 15])
Passage ques attention dim:  torch.Size([40, 996, 15])
Passage question vectors dim:  torch.Size([40, 996, 200])
Question Passage Similarity dim:  torch.Size([40, 996])
Question passage attention dim:  torch.Size([40, 996])
Final Merged Passage dim:  torch.Size([40, 996, 800])
Modeled Passage dim:  torch.Size([40, 996, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 996, 1000])
Span start logits:  torch.Size([40, 996])
span start probs dim:  torch.Size([40, 996])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 996]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1090, 200])
Passage Length:  1090
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1090, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1090, 13])
Passage ques attention dim:  torch.Size([40, 1090, 13])
Passage question vectors dim:  torch.Size([40, 1090, 200])
Question Passage Similarity dim:  torch.Size([40, 1090])
Question passage attention dim:  torch.Size([40, 1090])
Final Merged Passage dim:  torch.Size([40, 1090, 800])
Modeled Passage dim:  torch.Size([40, 1090, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1090, 1000])
Span start logits:  torch.Size([40, 1090])
span start probs dim:  torch.Size([40, 1090])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1090]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 825, 200])
Passage Length:  825
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 825, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 825, 16])
Passage ques attention dim:  torch.Size([40, 825, 16])
Passage question vectors dim:  torch.Size([40, 825, 200])
Question Passage Similarity dim:  torch.Size([40, 825])
Question passage attention dim:  torch.Size([40, 825])
Final Merged Passage dim:  torch.Size([40, 825, 800])
Modeled Passage dim:  torch.Size([40, 825, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 825, 1000])
Span start logits:  torch.Size([40, 825])
span start probs dim:  torch.Size([40, 825])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 825]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 841, 200])
Passage Length:  841
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 841, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 841, 17])
Passage ques attention dim:  torch.Size([40, 841, 17])
Passage question vectors dim:  torch.Size([40, 841, 200])
Question Passage Similarity dim:  torch.Size([40, 841])
Question passage attention dim:  torch.Size([40, 841])
Final Merged Passage dim:  torch.Size([40, 841, 800])
Modeled Passage dim:  torch.Size([40, 841, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 841, 1000])
Span start logits:  torch.Size([40, 841])
span start probs dim:  torch.Size([40, 841])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 841]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 382, 200])
Passage Length:  382
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 382, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 382, 14])
Passage ques attention dim:  torch.Size([40, 382, 14])
Passage question vectors dim:  torch.Size([40, 382, 200])
Question Passage Similarity dim:  torch.Size([40, 382])
Question passage attention dim:  torch.Size([40, 382])
Final Merged Passage dim:  torch.Size([40, 382, 800])
Modeled Passage dim:  torch.Size([40, 382, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 382, 1000])
Span start logits:  torch.Size([40, 382])
span start probs dim:  torch.Size([40, 382])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 382]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 547, 200])
Passage Length:  547
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 547, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 547, 16])
Passage ques attention dim:  torch.Size([40, 547, 16])
Passage question vectors dim:  torch.Size([40, 547, 200])
Question Passage Similarity dim:  torch.Size([40, 547])
Question passage attention dim:  torch.Size([40, 547])
Final Merged Passage dim:  torch.Size([40, 547, 800])
Modeled Passage dim:  torch.Size([40, 547, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 547, 1000])
Span start logits:  torch.Size([40, 547])
span start probs dim:  torch.Size([40, 547])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 547]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 632, 200])
Passage Length:  632
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 632, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 632, 14])
Passage ques attention dim:  torch.Size([40, 632, 14])
Passage question vectors dim:  torch.Size([40, 632, 200])
Question Passage Similarity dim:  torch.Size([40, 632])
Question passage attention dim:  torch.Size([40, 632])
Final Merged Passage dim:  torch.Size([40, 632, 800])
Modeled Passage dim:  torch.Size([40, 632, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 632, 1000])
Span start logits:  torch.Size([40, 632])
span start probs dim:  torch.Size([40, 632])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 632]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 343, 14])
Passage ques attention dim:  torch.Size([40, 343, 14])
Passage question vectors dim:  torch.Size([40, 343, 200])
Question Passage Similarity dim:  torch.Size([40, 343])
Question passage attention dim:  torch.Size([40, 343])
Final Merged Passage dim:  torch.Size([40, 343, 800])
Modeled Passage dim:  torch.Size([40, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 343, 1000])
Span start logits:  torch.Size([40, 343])
span start probs dim:  torch.Size([40, 343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 727, 200])
Passage Length:  727
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 727, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 727, 12])
Passage ques attention dim:  torch.Size([40, 727, 12])
Passage question vectors dim:  torch.Size([40, 727, 200])
Question Passage Similarity dim:  torch.Size([40, 727])
Question passage attention dim:  torch.Size([40, 727])
Final Merged Passage dim:  torch.Size([40, 727, 800])
Modeled Passage dim:  torch.Size([40, 727, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 727, 1000])
Span start logits:  torch.Size([40, 727])
span start probs dim:  torch.Size([40, 727])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 727]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1790, 200])
Passage Length:  1790
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1790, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1790, 17])
Passage ques attention dim:  torch.Size([40, 1790, 17])
Passage question vectors dim:  torch.Size([40, 1790, 200])
Question Passage Similarity dim:  torch.Size([40, 1790])
Question passage attention dim:  torch.Size([40, 1790])
Final Merged Passage dim:  torch.Size([40, 1790, 800])
Modeled Passage dim:  torch.Size([40, 1790, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1790, 1000])
Span start logits:  torch.Size([40, 1790])
span start probs dim:  torch.Size([40, 1790])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1790]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 844, 200])
Passage Length:  844
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 844, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 844, 16])
Passage ques attention dim:  torch.Size([40, 844, 16])
Passage question vectors dim:  torch.Size([40, 844, 200])
Question Passage Similarity dim:  torch.Size([40, 844])
Question passage attention dim:  torch.Size([40, 844])
Final Merged Passage dim:  torch.Size([40, 844, 800])
Modeled Passage dim:  torch.Size([40, 844, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 844, 1000])
Span start logits:  torch.Size([40, 844])
span start probs dim:  torch.Size([40, 844])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 844]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 238, 200])
Passage Length:  238
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 238, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 238, 11])
Passage ques attention dim:  torch.Size([40, 238, 11])
Passage question vectors dim:  torch.Size([40, 238, 200])
Question Passage Similarity dim:  torch.Size([40, 238])
Question passage attention dim:  torch.Size([40, 238])
Final Merged Passage dim:  torch.Size([40, 238, 800])
Modeled Passage dim:  torch.Size([40, 238, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 238, 1000])
Span start logits:  torch.Size([40, 238])
span start probs dim:  torch.Size([40, 238])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 238]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 366, 200])
Passage Length:  366
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 366, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 366, 15])
Passage ques attention dim:  torch.Size([40, 366, 15])
Passage question vectors dim:  torch.Size([40, 366, 200])
Question Passage Similarity dim:  torch.Size([40, 366])
Question passage attention dim:  torch.Size([40, 366])
Final Merged Passage dim:  torch.Size([40, 366, 800])
Modeled Passage dim:  torch.Size([40, 366, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 366, 1000])
Span start logits:  torch.Size([40, 366])
span start probs dim:  torch.Size([40, 366])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 366]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 484, 200])
Passage Length:  484
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 484, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 484, 14])
Passage ques attention dim:  torch.Size([40, 484, 14])
Passage question vectors dim:  torch.Size([40, 484, 200])
Question Passage Similarity dim:  torch.Size([40, 484])
Question passage attention dim:  torch.Size([40, 484])
Final Merged Passage dim:  torch.Size([40, 484, 800])
Modeled Passage dim:  torch.Size([40, 484, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 484, 1000])
Span start logits:  torch.Size([40, 484])
span start probs dim:  torch.Size([40, 484])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 484]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 973, 200])
Passage Length:  973
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 973, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 973, 16])
Passage ques attention dim:  torch.Size([40, 973, 16])
Passage question vectors dim:  torch.Size([40, 973, 200])
Question Passage Similarity dim:  torch.Size([40, 973])
Question passage attention dim:  torch.Size([40, 973])
Final Merged Passage dim:  torch.Size([40, 973, 800])
Modeled Passage dim:  torch.Size([40, 973, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 973, 1000])
Span start logits:  torch.Size([40, 973])
span start probs dim:  torch.Size([40, 973])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 973]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 673, 200])
Passage Length:  673
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 673, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 673, 15])
Passage ques attention dim:  torch.Size([40, 673, 15])
Passage question vectors dim:  torch.Size([40, 673, 200])
Question Passage Similarity dim:  torch.Size([40, 673])
Question passage attention dim:  torch.Size([40, 673])
Final Merged Passage dim:  torch.Size([40, 673, 800])
Modeled Passage dim:  torch.Size([40, 673, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 673, 1000])
Span start logits:  torch.Size([40, 673])
span start probs dim:  torch.Size([40, 673])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 673]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 561, 200])
Passage Length:  561
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 561, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 561, 13])
Passage ques attention dim:  torch.Size([40, 561, 13])
Passage question vectors dim:  torch.Size([40, 561, 200])
Question Passage Similarity dim:  torch.Size([40, 561])
Question passage attention dim:  torch.Size([40, 561])
Final Merged Passage dim:  torch.Size([40, 561, 800])
Modeled Passage dim:  torch.Size([40, 561, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 561, 1000])
Span start logits:  torch.Size([40, 561])
span start probs dim:  torch.Size([40, 561])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 561]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 225, 200])
Passage Length:  225
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 225, 11])
Passage ques attention dim:  torch.Size([40, 225, 11])
Passage question vectors dim:  torch.Size([40, 225, 200])
Question Passage Similarity dim:  torch.Size([40, 225])
Question passage attention dim:  torch.Size([40, 225])
Final Merged Passage dim:  torch.Size([40, 225, 800])
Modeled Passage dim:  torch.Size([40, 225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 225, 1000])
Span start logits:  torch.Size([40, 225])
span start probs dim:  torch.Size([40, 225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 592, 200])
Passage Length:  592
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 592, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 592, 16])
Passage ques attention dim:  torch.Size([40, 592, 16])
Passage question vectors dim:  torch.Size([40, 592, 200])
Question Passage Similarity dim:  torch.Size([40, 592])
Question passage attention dim:  torch.Size([40, 592])
Final Merged Passage dim:  torch.Size([40, 592, 800])
Modeled Passage dim:  torch.Size([40, 592, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 592, 1000])
Span start logits:  torch.Size([40, 592])
span start probs dim:  torch.Size([40, 592])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 592]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 635, 200])
Passage Length:  635
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 635, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 635, 16])
Passage ques attention dim:  torch.Size([40, 635, 16])
Passage question vectors dim:  torch.Size([40, 635, 200])
Question Passage Similarity dim:  torch.Size([40, 635])
Question passage attention dim:  torch.Size([40, 635])
Final Merged Passage dim:  torch.Size([40, 635, 800])
Modeled Passage dim:  torch.Size([40, 635, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 635, 1000])
Span start logits:  torch.Size([40, 635])
span start probs dim:  torch.Size([40, 635])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 635]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 296, 200])
Passage Length:  296
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 296, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 296, 12])
Passage ques attention dim:  torch.Size([40, 296, 12])
Passage question vectors dim:  torch.Size([40, 296, 200])
Question Passage Similarity dim:  torch.Size([40, 296])
Question passage attention dim:  torch.Size([40, 296])
Final Merged Passage dim:  torch.Size([40, 296, 800])
Modeled Passage dim:  torch.Size([40, 296, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 296, 1000])
Span start logits:  torch.Size([40, 296])
span start probs dim:  torch.Size([40, 296])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 296]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1041, 200])
Passage Length:  1041
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1041, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1041, 13])
Passage ques attention dim:  torch.Size([40, 1041, 13])
Passage question vectors dim:  torch.Size([40, 1041, 200])
Question Passage Similarity dim:  torch.Size([40, 1041])
Question passage attention dim:  torch.Size([40, 1041])
Final Merged Passage dim:  torch.Size([40, 1041, 800])
Modeled Passage dim:  torch.Size([40, 1041, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1041, 1000])
Span start logits:  torch.Size([40, 1041])
span start probs dim:  torch.Size([40, 1041])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1041]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 458, 200])
Passage Length:  458
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 458, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 458, 14])
Passage ques attention dim:  torch.Size([40, 458, 14])
Passage question vectors dim:  torch.Size([40, 458, 200])
Question Passage Similarity dim:  torch.Size([40, 458])
Question passage attention dim:  torch.Size([40, 458])
Final Merged Passage dim:  torch.Size([40, 458, 800])
Modeled Passage dim:  torch.Size([40, 458, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 458, 1000])
Span start logits:  torch.Size([40, 458])
span start probs dim:  torch.Size([40, 458])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 458]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 762, 200])
Passage Length:  762
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 762, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 762, 16])
Passage ques attention dim:  torch.Size([40, 762, 16])
Passage question vectors dim:  torch.Size([40, 762, 200])
Question Passage Similarity dim:  torch.Size([40, 762])
Question passage attention dim:  torch.Size([40, 762])
Final Merged Passage dim:  torch.Size([40, 762, 800])
Modeled Passage dim:  torch.Size([40, 762, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 762, 1000])
Span start logits:  torch.Size([40, 762])
span start probs dim:  torch.Size([40, 762])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 762]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 482, 200])
Passage Length:  482
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 482, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 482, 13])
Passage ques attention dim:  torch.Size([40, 482, 13])
Passage question vectors dim:  torch.Size([40, 482, 200])
Question Passage Similarity dim:  torch.Size([40, 482])
Question passage attention dim:  torch.Size([40, 482])
Final Merged Passage dim:  torch.Size([40, 482, 800])
Modeled Passage dim:  torch.Size([40, 482, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 482, 1000])
Span start logits:  torch.Size([40, 482])
span start probs dim:  torch.Size([40, 482])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 482]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1468, 200])
Passage Length:  1468
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1468, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1468, 16])
Passage ques attention dim:  torch.Size([40, 1468, 16])
Passage question vectors dim:  torch.Size([40, 1468, 200])
Question Passage Similarity dim:  torch.Size([40, 1468])
Question passage attention dim:  torch.Size([40, 1468])
Final Merged Passage dim:  torch.Size([40, 1468, 800])
Modeled Passage dim:  torch.Size([40, 1468, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1468, 1000])
Span start logits:  torch.Size([40, 1468])
span start probs dim:  torch.Size([40, 1468])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1468]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1567, 200])
Passage Length:  1567
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1567, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1567, 16])
Passage ques attention dim:  torch.Size([40, 1567, 16])
Passage question vectors dim:  torch.Size([40, 1567, 200])
Question Passage Similarity dim:  torch.Size([40, 1567])
Question passage attention dim:  torch.Size([40, 1567])
Final Merged Passage dim:  torch.Size([40, 1567, 800])
Modeled Passage dim:  torch.Size([40, 1567, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1567, 1000])
Span start logits:  torch.Size([40, 1567])
span start probs dim:  torch.Size([40, 1567])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1567]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 420, 200])
Passage Length:  420
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 420, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 420, 14])
Passage ques attention dim:  torch.Size([40, 420, 14])
Passage question vectors dim:  torch.Size([40, 420, 200])
Question Passage Similarity dim:  torch.Size([40, 420])
Question passage attention dim:  torch.Size([40, 420])
Final Merged Passage dim:  torch.Size([40, 420, 800])
Modeled Passage dim:  torch.Size([40, 420, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 420, 1000])
Span start logits:  torch.Size([40, 420])
span start probs dim:  torch.Size([40, 420])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 420]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 450, 200])
Passage Length:  450
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 450, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 450, 15])
Passage ques attention dim:  torch.Size([40, 450, 15])
Passage question vectors dim:  torch.Size([40, 450, 200])
Question Passage Similarity dim:  torch.Size([40, 450])
Question passage attention dim:  torch.Size([40, 450])
Final Merged Passage dim:  torch.Size([40, 450, 800])
Modeled Passage dim:  torch.Size([40, 450, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 450, 1000])
Span start logits:  torch.Size([40, 450])
span start probs dim:  torch.Size([40, 450])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 450]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1364, 200])
Passage Length:  1364
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1364, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1364, 15])
Passage ques attention dim:  torch.Size([40, 1364, 15])
Passage question vectors dim:  torch.Size([40, 1364, 200])
Question Passage Similarity dim:  torch.Size([40, 1364])
Question passage attention dim:  torch.Size([40, 1364])
Final Merged Passage dim:  torch.Size([40, 1364, 800])
Modeled Passage dim:  torch.Size([40, 1364, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1364, 1000])
Span start logits:  torch.Size([40, 1364])
span start probs dim:  torch.Size([40, 1364])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1364]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1096, 200])
Passage Length:  1096
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1096, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1096, 13])
Passage ques attention dim:  torch.Size([40, 1096, 13])
Passage question vectors dim:  torch.Size([40, 1096, 200])
Question Passage Similarity dim:  torch.Size([40, 1096])
Question passage attention dim:  torch.Size([40, 1096])
Final Merged Passage dim:  torch.Size([40, 1096, 800])
Modeled Passage dim:  torch.Size([40, 1096, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1096, 1000])
Span start logits:  torch.Size([40, 1096])
span start probs dim:  torch.Size([40, 1096])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1096]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 27, 200])
Embedded passage dim:  torch.Size([40, 666, 200])
Passage Length:  666
Encoded question dim:  torch.Size([40, 27, 200])
Encoded passage dim:  torch.Size([40, 666, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 666, 27])
Passage ques attention dim:  torch.Size([40, 666, 27])
Passage question vectors dim:  torch.Size([40, 666, 200])
Question Passage Similarity dim:  torch.Size([40, 666])
Question passage attention dim:  torch.Size([40, 666])
Final Merged Passage dim:  torch.Size([40, 666, 800])
Modeled Passage dim:  torch.Size([40, 666, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 666, 1000])
Span start logits:  torch.Size([40, 666])
span start probs dim:  torch.Size([40, 666])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 666]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 610, 200])
Passage Length:  610
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 610, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 610, 15])
Passage ques attention dim:  torch.Size([40, 610, 15])
Passage question vectors dim:  torch.Size([40, 610, 200])
Question Passage Similarity dim:  torch.Size([40, 610])
Question passage attention dim:  torch.Size([40, 610])
Final Merged Passage dim:  torch.Size([40, 610, 800])
Modeled Passage dim:  torch.Size([40, 610, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 610, 1000])
Span start logits:  torch.Size([40, 610])
span start probs dim:  torch.Size([40, 610])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 610]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 418, 200])
Passage Length:  418
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 418, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 418, 16])
Passage ques attention dim:  torch.Size([40, 418, 16])
Passage question vectors dim:  torch.Size([40, 418, 200])
Question Passage Similarity dim:  torch.Size([40, 418])
Question passage attention dim:  torch.Size([40, 418])
Final Merged Passage dim:  torch.Size([40, 418, 800])
Modeled Passage dim:  torch.Size([40, 418, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 418, 1000])
Span start logits:  torch.Size([40, 418])
span start probs dim:  torch.Size([40, 418])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 418]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 820, 200])
Passage Length:  820
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 820, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 820, 23])
Passage ques attention dim:  torch.Size([40, 820, 23])
Passage question vectors dim:  torch.Size([40, 820, 200])
Question Passage Similarity dim:  torch.Size([40, 820])
Question passage attention dim:  torch.Size([40, 820])
Final Merged Passage dim:  torch.Size([40, 820, 800])
Modeled Passage dim:  torch.Size([40, 820, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 820, 1000])
Span start logits:  torch.Size([40, 820])
span start probs dim:  torch.Size([40, 820])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 820]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 290, 200])
Passage Length:  290
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 290, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 290, 12])
Passage ques attention dim:  torch.Size([40, 290, 12])
Passage question vectors dim:  torch.Size([40, 290, 200])
Question Passage Similarity dim:  torch.Size([40, 290])
Question passage attention dim:  torch.Size([40, 290])
Final Merged Passage dim:  torch.Size([40, 290, 800])
Modeled Passage dim:  torch.Size([40, 290, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 290, 1000])
Span start logits:  torch.Size([40, 290])
span start probs dim:  torch.Size([40, 290])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 290]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 566, 200])
Passage Length:  566
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 566, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 566, 13])
Passage ques attention dim:  torch.Size([40, 566, 13])
Passage question vectors dim:  torch.Size([40, 566, 200])
Question Passage Similarity dim:  torch.Size([40, 566])
Question passage attention dim:  torch.Size([40, 566])
Final Merged Passage dim:  torch.Size([40, 566, 800])
Modeled Passage dim:  torch.Size([40, 566, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 566, 1000])
Span start logits:  torch.Size([40, 566])
span start probs dim:  torch.Size([40, 566])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 566]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 981, 200])
Passage Length:  981
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 981, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 981, 17])
Passage ques attention dim:  torch.Size([40, 981, 17])
Passage question vectors dim:  torch.Size([40, 981, 200])
Question Passage Similarity dim:  torch.Size([40, 981])
Question passage attention dim:  torch.Size([40, 981])
Final Merged Passage dim:  torch.Size([40, 981, 800])
Modeled Passage dim:  torch.Size([40, 981, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 981, 1000])
Span start logits:  torch.Size([40, 981])
span start probs dim:  torch.Size([40, 981])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 981]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 628, 200])
Passage Length:  628
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 628, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 628, 15])
Passage ques attention dim:  torch.Size([40, 628, 15])
Passage question vectors dim:  torch.Size([40, 628, 200])
Question Passage Similarity dim:  torch.Size([40, 628])
Question passage attention dim:  torch.Size([40, 628])
Final Merged Passage dim:  torch.Size([40, 628, 800])
Modeled Passage dim:  torch.Size([40, 628, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 628, 1000])
Span start logits:  torch.Size([40, 628])
span start probs dim:  torch.Size([40, 628])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 628]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 47, 200])
Embedded passage dim:  torch.Size([40, 1300, 200])
Passage Length:  1300
Encoded question dim:  torch.Size([40, 47, 200])
Encoded passage dim:  torch.Size([40, 1300, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1300, 47])
Passage ques attention dim:  torch.Size([40, 1300, 47])
Passage question vectors dim:  torch.Size([40, 1300, 200])
Question Passage Similarity dim:  torch.Size([40, 1300])
Question passage attention dim:  torch.Size([40, 1300])
Final Merged Passage dim:  torch.Size([40, 1300, 800])
Modeled Passage dim:  torch.Size([40, 1300, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1300, 1000])
Span start logits:  torch.Size([40, 1300])
span start probs dim:  torch.Size([40, 1300])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1300]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 703, 200])
Passage Length:  703
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 703, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 703, 13])
Passage ques attention dim:  torch.Size([40, 703, 13])
Passage question vectors dim:  torch.Size([40, 703, 200])
Question Passage Similarity dim:  torch.Size([40, 703])
Question passage attention dim:  torch.Size([40, 703])
Final Merged Passage dim:  torch.Size([40, 703, 800])
Modeled Passage dim:  torch.Size([40, 703, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 703, 1000])
Span start logits:  torch.Size([40, 703])
span start probs dim:  torch.Size([40, 703])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 703]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 607, 200])
Passage Length:  607
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 607, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 607, 17])
Passage ques attention dim:  torch.Size([40, 607, 17])
Passage question vectors dim:  torch.Size([40, 607, 200])
Question Passage Similarity dim:  torch.Size([40, 607])
Question passage attention dim:  torch.Size([40, 607])
Final Merged Passage dim:  torch.Size([40, 607, 800])
Modeled Passage dim:  torch.Size([40, 607, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 607, 1000])
Span start logits:  torch.Size([40, 607])
span start probs dim:  torch.Size([40, 607])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 607]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1237, 200])
Passage Length:  1237
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1237, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1237, 13])
Passage ques attention dim:  torch.Size([40, 1237, 13])
Passage question vectors dim:  torch.Size([40, 1237, 200])
Question Passage Similarity dim:  torch.Size([40, 1237])
Question passage attention dim:  torch.Size([40, 1237])
Final Merged Passage dim:  torch.Size([40, 1237, 800])
Modeled Passage dim:  torch.Size([40, 1237, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1237, 1000])
Span start logits:  torch.Size([40, 1237])
span start probs dim:  torch.Size([40, 1237])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1237]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1364, 200])
Passage Length:  1364
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1364, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1364, 13])
Passage ques attention dim:  torch.Size([40, 1364, 13])
Passage question vectors dim:  torch.Size([40, 1364, 200])
Question Passage Similarity dim:  torch.Size([40, 1364])
Question passage attention dim:  torch.Size([40, 1364])
Final Merged Passage dim:  torch.Size([40, 1364, 800])
Modeled Passage dim:  torch.Size([40, 1364, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1364, 1000])
Span start logits:  torch.Size([40, 1364])
span start probs dim:  torch.Size([40, 1364])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1364]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1093, 200])
Passage Length:  1093
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1093, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1093, 13])
Passage ques attention dim:  torch.Size([40, 1093, 13])
Passage question vectors dim:  torch.Size([40, 1093, 200])
Question Passage Similarity dim:  torch.Size([40, 1093])
Question passage attention dim:  torch.Size([40, 1093])
Final Merged Passage dim:  torch.Size([40, 1093, 800])
Modeled Passage dim:  torch.Size([40, 1093, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1093, 1000])
Span start logits:  torch.Size([40, 1093])
span start probs dim:  torch.Size([40, 1093])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1093]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 640, 200])
Passage Length:  640
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 640, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 640, 16])
Passage ques attention dim:  torch.Size([40, 640, 16])
Passage question vectors dim:  torch.Size([40, 640, 200])
Question Passage Similarity dim:  torch.Size([40, 640])
Question passage attention dim:  torch.Size([40, 640])
Final Merged Passage dim:  torch.Size([40, 640, 800])
Modeled Passage dim:  torch.Size([40, 640, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 640, 1000])
Span start logits:  torch.Size([40, 640])
span start probs dim:  torch.Size([40, 640])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 640]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1000, 200])
Passage Length:  1000
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1000, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1000, 17])
Passage ques attention dim:  torch.Size([40, 1000, 17])
Passage question vectors dim:  torch.Size([40, 1000, 200])
Question Passage Similarity dim:  torch.Size([40, 1000])
Question passage attention dim:  torch.Size([40, 1000])
Final Merged Passage dim:  torch.Size([40, 1000, 800])
Modeled Passage dim:  torch.Size([40, 1000, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1000, 1000])
Span start logits:  torch.Size([40, 1000])
span start probs dim:  torch.Size([40, 1000])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1000]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 577, 200])
Passage Length:  577
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 577, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 577, 16])
Passage ques attention dim:  torch.Size([40, 577, 16])
Passage question vectors dim:  torch.Size([40, 577, 200])
Question Passage Similarity dim:  torch.Size([40, 577])
Question passage attention dim:  torch.Size([40, 577])
Final Merged Passage dim:  torch.Size([40, 577, 800])
Modeled Passage dim:  torch.Size([40, 577, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 577, 1000])
Span start logits:  torch.Size([40, 577])
span start probs dim:  torch.Size([40, 577])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 577]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1324, 200])
Passage Length:  1324
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1324, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1324, 13])
Passage ques attention dim:  torch.Size([40, 1324, 13])
Passage question vectors dim:  torch.Size([40, 1324, 200])
Question Passage Similarity dim:  torch.Size([40, 1324])
Question passage attention dim:  torch.Size([40, 1324])
Final Merged Passage dim:  torch.Size([40, 1324, 800])
Modeled Passage dim:  torch.Size([40, 1324, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1324, 1000])
Span start logits:  torch.Size([40, 1324])
span start probs dim:  torch.Size([40, 1324])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1324]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 642, 200])
Passage Length:  642
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 642, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 642, 13])
Passage ques attention dim:  torch.Size([40, 642, 13])
Passage question vectors dim:  torch.Size([40, 642, 200])
Question Passage Similarity dim:  torch.Size([40, 642])
Question passage attention dim:  torch.Size([40, 642])
Final Merged Passage dim:  torch.Size([40, 642, 800])
Modeled Passage dim:  torch.Size([40, 642, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 642, 1000])
Span start logits:  torch.Size([40, 642])
span start probs dim:  torch.Size([40, 642])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 642]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1403, 200])
Passage Length:  1403
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1403, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1403, 14])
Passage ques attention dim:  torch.Size([40, 1403, 14])
Passage question vectors dim:  torch.Size([40, 1403, 200])
Question Passage Similarity dim:  torch.Size([40, 1403])
Question passage attention dim:  torch.Size([40, 1403])
Final Merged Passage dim:  torch.Size([40, 1403, 800])
Modeled Passage dim:  torch.Size([40, 1403, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1403, 1000])
Span start logits:  torch.Size([40, 1403])
span start probs dim:  torch.Size([40, 1403])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1403]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 1803, 200])
Passage Length:  1803
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 1803, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1803, 11])
Passage ques attention dim:  torch.Size([40, 1803, 11])
Passage question vectors dim:  torch.Size([40, 1803, 200])
Question Passage Similarity dim:  torch.Size([40, 1803])
Question passage attention dim:  torch.Size([40, 1803])
Final Merged Passage dim:  torch.Size([40, 1803, 800])
Modeled Passage dim:  torch.Size([40, 1803, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1803, 1000])
Span start logits:  torch.Size([40, 1803])
span start probs dim:  torch.Size([40, 1803])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1803]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 521, 200])
Passage Length:  521
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 521, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 521, 14])
Passage ques attention dim:  torch.Size([40, 521, 14])
Passage question vectors dim:  torch.Size([40, 521, 200])
Question Passage Similarity dim:  torch.Size([40, 521])
Question passage attention dim:  torch.Size([40, 521])
Final Merged Passage dim:  torch.Size([40, 521, 800])
Modeled Passage dim:  torch.Size([40, 521, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 521, 1000])
Span start logits:  torch.Size([40, 521])
span start probs dim:  torch.Size([40, 521])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 521]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 841, 200])
Passage Length:  841
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 841, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 841, 16])
Passage ques attention dim:  torch.Size([40, 841, 16])
Passage question vectors dim:  torch.Size([40, 841, 200])
Question Passage Similarity dim:  torch.Size([40, 841])
Question passage attention dim:  torch.Size([40, 841])
Final Merged Passage dim:  torch.Size([40, 841, 800])
Modeled Passage dim:  torch.Size([40, 841, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 841, 1000])
Span start logits:  torch.Size([40, 841])
span start probs dim:  torch.Size([40, 841])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 841]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1317, 200])
Passage Length:  1317
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1317, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1317, 20])
Passage ques attention dim:  torch.Size([40, 1317, 20])
Passage question vectors dim:  torch.Size([40, 1317, 200])
Question Passage Similarity dim:  torch.Size([40, 1317])
Question passage attention dim:  torch.Size([40, 1317])
Final Merged Passage dim:  torch.Size([40, 1317, 800])
Modeled Passage dim:  torch.Size([40, 1317, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1317, 1000])
Span start logits:  torch.Size([40, 1317])
span start probs dim:  torch.Size([40, 1317])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1317]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 841, 200])
Passage Length:  841
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 841, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 841, 14])
Passage ques attention dim:  torch.Size([40, 841, 14])
Passage question vectors dim:  torch.Size([40, 841, 200])
Question Passage Similarity dim:  torch.Size([40, 841])
Question passage attention dim:  torch.Size([40, 841])
Final Merged Passage dim:  torch.Size([40, 841, 800])
Modeled Passage dim:  torch.Size([40, 841, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 841, 1000])
Span start logits:  torch.Size([40, 841])
span start probs dim:  torch.Size([40, 841])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 841]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 675, 200])
Passage Length:  675
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 675, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 675, 13])
Passage ques attention dim:  torch.Size([40, 675, 13])
Passage question vectors dim:  torch.Size([40, 675, 200])
Question Passage Similarity dim:  torch.Size([40, 675])
Question passage attention dim:  torch.Size([40, 675])
Final Merged Passage dim:  torch.Size([40, 675, 800])
Modeled Passage dim:  torch.Size([40, 675, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 675, 1000])
Span start logits:  torch.Size([40, 675])
span start probs dim:  torch.Size([40, 675])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 675]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1713, 200])
Passage Length:  1713
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1713, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1713, 15])
Passage ques attention dim:  torch.Size([40, 1713, 15])
Passage question vectors dim:  torch.Size([40, 1713, 200])
Question Passage Similarity dim:  torch.Size([40, 1713])
Question passage attention dim:  torch.Size([40, 1713])
Final Merged Passage dim:  torch.Size([40, 1713, 800])
Modeled Passage dim:  torch.Size([40, 1713, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1713, 1000])
Span start logits:  torch.Size([40, 1713])
span start probs dim:  torch.Size([40, 1713])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1713]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1105, 200])
Passage Length:  1105
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1105, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1105, 16])
Passage ques attention dim:  torch.Size([40, 1105, 16])
Passage question vectors dim:  torch.Size([40, 1105, 200])
Question Passage Similarity dim:  torch.Size([40, 1105])
Question passage attention dim:  torch.Size([40, 1105])
Final Merged Passage dim:  torch.Size([40, 1105, 800])
Modeled Passage dim:  torch.Size([40, 1105, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1105, 1000])
Span start logits:  torch.Size([40, 1105])
span start probs dim:  torch.Size([40, 1105])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1105]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1468, 200])
Passage Length:  1468
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1468, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1468, 18])
Passage ques attention dim:  torch.Size([40, 1468, 18])
Passage question vectors dim:  torch.Size([40, 1468, 200])
Question Passage Similarity dim:  torch.Size([40, 1468])
Question passage attention dim:  torch.Size([40, 1468])
Final Merged Passage dim:  torch.Size([40, 1468, 800])
Modeled Passage dim:  torch.Size([40, 1468, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1468, 1000])
Span start logits:  torch.Size([40, 1468])
span start probs dim:  torch.Size([40, 1468])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1468]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 911, 200])
Passage Length:  911
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 911, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 911, 16])
Passage ques attention dim:  torch.Size([40, 911, 16])
Passage question vectors dim:  torch.Size([40, 911, 200])
Question Passage Similarity dim:  torch.Size([40, 911])
Question passage attention dim:  torch.Size([40, 911])
Final Merged Passage dim:  torch.Size([40, 911, 800])
Modeled Passage dim:  torch.Size([40, 911, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 911, 1000])
Span start logits:  torch.Size([40, 911])
span start probs dim:  torch.Size([40, 911])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 911]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1351, 200])
Passage Length:  1351
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1351, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1351, 15])
Passage ques attention dim:  torch.Size([40, 1351, 15])
Passage question vectors dim:  torch.Size([40, 1351, 200])
Question Passage Similarity dim:  torch.Size([40, 1351])
Question passage attention dim:  torch.Size([40, 1351])
Final Merged Passage dim:  torch.Size([40, 1351, 800])
Modeled Passage dim:  torch.Size([40, 1351, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1351, 1000])
Span start logits:  torch.Size([40, 1351])
span start probs dim:  torch.Size([40, 1351])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1351]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 459, 200])
Passage Length:  459
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 459, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 459, 18])
Passage ques attention dim:  torch.Size([40, 459, 18])
Passage question vectors dim:  torch.Size([40, 459, 200])
Question Passage Similarity dim:  torch.Size([40, 459])
Question passage attention dim:  torch.Size([40, 459])
Final Merged Passage dim:  torch.Size([40, 459, 800])
Modeled Passage dim:  torch.Size([40, 459, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 459, 1000])
Span start logits:  torch.Size([40, 459])
span start probs dim:  torch.Size([40, 459])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 459]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 415, 200])
Passage Length:  415
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 415, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 415, 15])
Passage ques attention dim:  torch.Size([40, 415, 15])
Passage question vectors dim:  torch.Size([40, 415, 200])
Question Passage Similarity dim:  torch.Size([40, 415])
Question passage attention dim:  torch.Size([40, 415])
Final Merged Passage dim:  torch.Size([40, 415, 800])
Modeled Passage dim:  torch.Size([40, 415, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 415, 1000])
Span start logits:  torch.Size([40, 415])
span start probs dim:  torch.Size([40, 415])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 415]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 843, 200])
Passage Length:  843
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 843, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 843, 14])
Passage ques attention dim:  torch.Size([40, 843, 14])
Passage question vectors dim:  torch.Size([40, 843, 200])
Question Passage Similarity dim:  torch.Size([40, 843])
Question passage attention dim:  torch.Size([40, 843])
Final Merged Passage dim:  torch.Size([40, 843, 800])
Modeled Passage dim:  torch.Size([40, 843, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 843, 1000])
Span start logits:  torch.Size([40, 843])
span start probs dim:  torch.Size([40, 843])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 843]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 556, 200])
Passage Length:  556
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 556, 15])
Passage ques attention dim:  torch.Size([40, 556, 15])
Passage question vectors dim:  torch.Size([40, 556, 200])
Question Passage Similarity dim:  torch.Size([40, 556])
Question passage attention dim:  torch.Size([40, 556])
Final Merged Passage dim:  torch.Size([40, 556, 800])
Modeled Passage dim:  torch.Size([40, 556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 556, 1000])
Span start logits:  torch.Size([40, 556])
span start probs dim:  torch.Size([40, 556])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 556]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 415, 200])
Passage Length:  415
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 415, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 415, 17])
Passage ques attention dim:  torch.Size([40, 415, 17])
Passage question vectors dim:  torch.Size([40, 415, 200])
Question Passage Similarity dim:  torch.Size([40, 415])
Question passage attention dim:  torch.Size([40, 415])
Final Merged Passage dim:  torch.Size([40, 415, 800])
Modeled Passage dim:  torch.Size([40, 415, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 415, 1000])
Span start logits:  torch.Size([40, 415])
span start probs dim:  torch.Size([40, 415])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 415]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 455, 200])
Passage Length:  455
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 455, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 455, 14])
Passage ques attention dim:  torch.Size([40, 455, 14])
Passage question vectors dim:  torch.Size([40, 455, 200])
Question Passage Similarity dim:  torch.Size([40, 455])
Question passage attention dim:  torch.Size([40, 455])
Final Merged Passage dim:  torch.Size([40, 455, 800])
Modeled Passage dim:  torch.Size([40, 455, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 455, 1000])
Span start logits:  torch.Size([40, 455])
span start probs dim:  torch.Size([40, 455])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 455]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1401, 200])
Passage Length:  1401
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1401, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1401, 12])
Passage ques attention dim:  torch.Size([40, 1401, 12])
Passage question vectors dim:  torch.Size([40, 1401, 200])
Question Passage Similarity dim:  torch.Size([40, 1401])
Question passage attention dim:  torch.Size([40, 1401])
Final Merged Passage dim:  torch.Size([40, 1401, 800])
Modeled Passage dim:  torch.Size([40, 1401, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1401, 1000])
Span start logits:  torch.Size([40, 1401])
span start probs dim:  torch.Size([40, 1401])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1401]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 308, 200])
Passage Length:  308
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 308, 12])
Passage ques attention dim:  torch.Size([40, 308, 12])
Passage question vectors dim:  torch.Size([40, 308, 200])
Question Passage Similarity dim:  torch.Size([40, 308])
Question passage attention dim:  torch.Size([40, 308])
Final Merged Passage dim:  torch.Size([40, 308, 800])
Modeled Passage dim:  torch.Size([40, 308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 308, 1000])
Span start logits:  torch.Size([40, 308])
span start probs dim:  torch.Size([40, 308])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 308]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 277, 200])
Passage Length:  277
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 277, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 277, 15])
Passage ques attention dim:  torch.Size([40, 277, 15])
Passage question vectors dim:  torch.Size([40, 277, 200])
Question Passage Similarity dim:  torch.Size([40, 277])
Question passage attention dim:  torch.Size([40, 277])
Final Merged Passage dim:  torch.Size([40, 277, 800])
Modeled Passage dim:  torch.Size([40, 277, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 277, 1000])
Span start logits:  torch.Size([40, 277])
span start probs dim:  torch.Size([40, 277])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 277]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1279, 200])
Passage Length:  1279
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1279, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1279, 15])
Passage ques attention dim:  torch.Size([40, 1279, 15])
Passage question vectors dim:  torch.Size([40, 1279, 200])
Question Passage Similarity dim:  torch.Size([40, 1279])
Question passage attention dim:  torch.Size([40, 1279])
Final Merged Passage dim:  torch.Size([40, 1279, 800])
Modeled Passage dim:  torch.Size([40, 1279, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1279, 1000])
Span start logits:  torch.Size([40, 1279])
span start probs dim:  torch.Size([40, 1279])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1279]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 543, 200])
Passage Length:  543
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 543, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 543, 15])
Passage ques attention dim:  torch.Size([40, 543, 15])
Passage question vectors dim:  torch.Size([40, 543, 200])
Question Passage Similarity dim:  torch.Size([40, 543])
Question passage attention dim:  torch.Size([40, 543])
Final Merged Passage dim:  torch.Size([40, 543, 800])
Modeled Passage dim:  torch.Size([40, 543, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 543, 1000])
Span start logits:  torch.Size([40, 543])
span start probs dim:  torch.Size([40, 543])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 543]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 350, 14])
Passage ques attention dim:  torch.Size([40, 350, 14])
Passage question vectors dim:  torch.Size([40, 350, 200])
Question Passage Similarity dim:  torch.Size([40, 350])
Question passage attention dim:  torch.Size([40, 350])
Final Merged Passage dim:  torch.Size([40, 350, 800])
Modeled Passage dim:  torch.Size([40, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 350, 1000])
Span start logits:  torch.Size([40, 350])
span start probs dim:  torch.Size([40, 350])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 350]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1429, 200])
Passage Length:  1429
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1429, 16])
Passage ques attention dim:  torch.Size([40, 1429, 16])
Passage question vectors dim:  torch.Size([40, 1429, 200])
Question Passage Similarity dim:  torch.Size([40, 1429])
Question passage attention dim:  torch.Size([40, 1429])
Final Merged Passage dim:  torch.Size([40, 1429, 800])
Modeled Passage dim:  torch.Size([40, 1429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1429, 1000])
Span start logits:  torch.Size([40, 1429])
span start probs dim:  torch.Size([40, 1429])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1429]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 639, 200])
Passage Length:  639
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 639, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 639, 18])
Passage ques attention dim:  torch.Size([40, 639, 18])
Passage question vectors dim:  torch.Size([40, 639, 200])
Question Passage Similarity dim:  torch.Size([40, 639])
Question passage attention dim:  torch.Size([40, 639])
Final Merged Passage dim:  torch.Size([40, 639, 800])
Modeled Passage dim:  torch.Size([40, 639, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 639, 1000])
Span start logits:  torch.Size([40, 639])
span start probs dim:  torch.Size([40, 639])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 639]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1072, 200])
Passage Length:  1072
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1072, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1072, 17])
Passage ques attention dim:  torch.Size([40, 1072, 17])
Passage question vectors dim:  torch.Size([40, 1072, 200])
Question Passage Similarity dim:  torch.Size([40, 1072])
Question passage attention dim:  torch.Size([40, 1072])
Final Merged Passage dim:  torch.Size([40, 1072, 800])
Modeled Passage dim:  torch.Size([40, 1072, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1072, 1000])
Span start logits:  torch.Size([40, 1072])
span start probs dim:  torch.Size([40, 1072])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1072]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1196, 200])
Passage Length:  1196
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1196, 12])
Passage ques attention dim:  torch.Size([40, 1196, 12])
Passage question vectors dim:  torch.Size([40, 1196, 200])
Question Passage Similarity dim:  torch.Size([40, 1196])
Question passage attention dim:  torch.Size([40, 1196])
Final Merged Passage dim:  torch.Size([40, 1196, 800])
Modeled Passage dim:  torch.Size([40, 1196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1196, 1000])
Span start logits:  torch.Size([40, 1196])
span start probs dim:  torch.Size([40, 1196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 409, 200])
Passage Length:  409
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 409, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 409, 13])
Passage ques attention dim:  torch.Size([40, 409, 13])
Passage question vectors dim:  torch.Size([40, 409, 200])
Question Passage Similarity dim:  torch.Size([40, 409])
Question passage attention dim:  torch.Size([40, 409])
Final Merged Passage dim:  torch.Size([40, 409, 800])
Modeled Passage dim:  torch.Size([40, 409, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 409, 1000])
Span start logits:  torch.Size([40, 409])
span start probs dim:  torch.Size([40, 409])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 409]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 659, 200])
Passage Length:  659
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 659, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 659, 19])
Passage ques attention dim:  torch.Size([40, 659, 19])
Passage question vectors dim:  torch.Size([40, 659, 200])
Question Passage Similarity dim:  torch.Size([40, 659])
Question passage attention dim:  torch.Size([40, 659])
Final Merged Passage dim:  torch.Size([40, 659, 800])
Modeled Passage dim:  torch.Size([40, 659, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 659, 1000])
Span start logits:  torch.Size([40, 659])
span start probs dim:  torch.Size([40, 659])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 659]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 760, 200])
Passage Length:  760
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 760, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 760, 20])
Passage ques attention dim:  torch.Size([40, 760, 20])
Passage question vectors dim:  torch.Size([40, 760, 200])
Question Passage Similarity dim:  torch.Size([40, 760])
Question passage attention dim:  torch.Size([40, 760])
Final Merged Passage dim:  torch.Size([40, 760, 800])
Modeled Passage dim:  torch.Size([40, 760, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 760, 1000])
Span start logits:  torch.Size([40, 760])
span start probs dim:  torch.Size([40, 760])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 760]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 358, 200])
Passage Length:  358
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 358, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 358, 14])
Passage ques attention dim:  torch.Size([40, 358, 14])
Passage question vectors dim:  torch.Size([40, 358, 200])
Question Passage Similarity dim:  torch.Size([40, 358])
Question passage attention dim:  torch.Size([40, 358])
Final Merged Passage dim:  torch.Size([40, 358, 800])
Modeled Passage dim:  torch.Size([40, 358, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 358, 1000])
Span start logits:  torch.Size([40, 358])
span start probs dim:  torch.Size([40, 358])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 358]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 377, 200])
Passage Length:  377
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 377, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 377, 13])
Passage ques attention dim:  torch.Size([40, 377, 13])
Passage question vectors dim:  torch.Size([40, 377, 200])
Question Passage Similarity dim:  torch.Size([40, 377])
Question passage attention dim:  torch.Size([40, 377])
Final Merged Passage dim:  torch.Size([40, 377, 800])
Modeled Passage dim:  torch.Size([40, 377, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 377, 1000])
Span start logits:  torch.Size([40, 377])
span start probs dim:  torch.Size([40, 377])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 377]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 628, 200])
Passage Length:  628
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 628, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 628, 16])
Passage ques attention dim:  torch.Size([40, 628, 16])
Passage question vectors dim:  torch.Size([40, 628, 200])
Question Passage Similarity dim:  torch.Size([40, 628])
Question passage attention dim:  torch.Size([40, 628])
Final Merged Passage dim:  torch.Size([40, 628, 800])
Modeled Passage dim:  torch.Size([40, 628, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 628, 1000])
Span start logits:  torch.Size([40, 628])
span start probs dim:  torch.Size([40, 628])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 628]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 552, 200])
Passage Length:  552
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 552, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 552, 14])
Passage ques attention dim:  torch.Size([40, 552, 14])
Passage question vectors dim:  torch.Size([40, 552, 200])
Question Passage Similarity dim:  torch.Size([40, 552])
Question passage attention dim:  torch.Size([40, 552])
Final Merged Passage dim:  torch.Size([40, 552, 800])
Modeled Passage dim:  torch.Size([40, 552, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 552, 1000])
Span start logits:  torch.Size([40, 552])
span start probs dim:  torch.Size([40, 552])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 552]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1862, 200])
Passage Length:  1862
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1862, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1862, 15])
Passage ques attention dim:  torch.Size([40, 1862, 15])
Passage question vectors dim:  torch.Size([40, 1862, 200])
Question Passage Similarity dim:  torch.Size([40, 1862])
Question passage attention dim:  torch.Size([40, 1862])
Final Merged Passage dim:  torch.Size([40, 1862, 800])
Modeled Passage dim:  torch.Size([40, 1862, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1862, 1000])
Span start logits:  torch.Size([40, 1862])
span start probs dim:  torch.Size([40, 1862])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1862]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 782, 200])
Passage Length:  782
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 782, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 782, 14])
Passage ques attention dim:  torch.Size([40, 782, 14])
Passage question vectors dim:  torch.Size([40, 782, 200])
Question Passage Similarity dim:  torch.Size([40, 782])
Question passage attention dim:  torch.Size([40, 782])
Final Merged Passage dim:  torch.Size([40, 782, 800])
Modeled Passage dim:  torch.Size([40, 782, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 782, 1000])
Span start logits:  torch.Size([40, 782])
span start probs dim:  torch.Size([40, 782])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 782]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 899, 200])
Passage Length:  899
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 899, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 899, 16])
Passage ques attention dim:  torch.Size([40, 899, 16])
Passage question vectors dim:  torch.Size([40, 899, 200])
Question Passage Similarity dim:  torch.Size([40, 899])
Question passage attention dim:  torch.Size([40, 899])
Final Merged Passage dim:  torch.Size([40, 899, 800])
Modeled Passage dim:  torch.Size([40, 899, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 899, 1000])
Span start logits:  torch.Size([40, 899])
span start probs dim:  torch.Size([40, 899])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 899]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 530, 200])
Passage Length:  530
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 530, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 530, 15])
Passage ques attention dim:  torch.Size([40, 530, 15])
Passage question vectors dim:  torch.Size([40, 530, 200])
Question Passage Similarity dim:  torch.Size([40, 530])
Question passage attention dim:  torch.Size([40, 530])
Final Merged Passage dim:  torch.Size([40, 530, 800])
Modeled Passage dim:  torch.Size([40, 530, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 530, 1000])
Span start logits:  torch.Size([40, 530])
span start probs dim:  torch.Size([40, 530])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 530]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 999, 200])
Passage Length:  999
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 999, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 999, 15])
Passage ques attention dim:  torch.Size([40, 999, 15])
Passage question vectors dim:  torch.Size([40, 999, 200])
Question Passage Similarity dim:  torch.Size([40, 999])
Question passage attention dim:  torch.Size([40, 999])
Final Merged Passage dim:  torch.Size([40, 999, 800])
Modeled Passage dim:  torch.Size([40, 999, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 999, 1000])
Span start logits:  torch.Size([40, 999])
span start probs dim:  torch.Size([40, 999])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 999]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 556, 200])
Passage Length:  556
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 556, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 556, 15])
Passage ques attention dim:  torch.Size([40, 556, 15])
Passage question vectors dim:  torch.Size([40, 556, 200])
Question Passage Similarity dim:  torch.Size([40, 556])
Question passage attention dim:  torch.Size([40, 556])
Final Merged Passage dim:  torch.Size([40, 556, 800])
Modeled Passage dim:  torch.Size([40, 556, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 556, 1000])
Span start logits:  torch.Size([40, 556])
span start probs dim:  torch.Size([40, 556])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 556]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 752, 200])
Passage Length:  752
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 752, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 752, 18])
Passage ques attention dim:  torch.Size([40, 752, 18])
Passage question vectors dim:  torch.Size([40, 752, 200])
Question Passage Similarity dim:  torch.Size([40, 752])
Question passage attention dim:  torch.Size([40, 752])
Final Merged Passage dim:  torch.Size([40, 752, 800])
Modeled Passage dim:  torch.Size([40, 752, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 752, 1000])
Span start logits:  torch.Size([40, 752])
span start probs dim:  torch.Size([40, 752])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 752]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 771, 200])
Passage Length:  771
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 771, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 771, 19])
Passage ques attention dim:  torch.Size([40, 771, 19])
Passage question vectors dim:  torch.Size([40, 771, 200])
Question Passage Similarity dim:  torch.Size([40, 771])
Question passage attention dim:  torch.Size([40, 771])
Final Merged Passage dim:  torch.Size([40, 771, 800])
Modeled Passage dim:  torch.Size([40, 771, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 771, 1000])
Span start logits:  torch.Size([40, 771])
span start probs dim:  torch.Size([40, 771])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 771]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1452, 200])
Passage Length:  1452
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1452, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1452, 17])
Passage ques attention dim:  torch.Size([40, 1452, 17])
Passage question vectors dim:  torch.Size([40, 1452, 200])
Question Passage Similarity dim:  torch.Size([40, 1452])
Question passage attention dim:  torch.Size([40, 1452])
Final Merged Passage dim:  torch.Size([40, 1452, 800])
Modeled Passage dim:  torch.Size([40, 1452, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1452, 1000])
Span start logits:  torch.Size([40, 1452])
span start probs dim:  torch.Size([40, 1452])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1452]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 591, 200])
Passage Length:  591
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 591, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 591, 13])
Passage ques attention dim:  torch.Size([40, 591, 13])
Passage question vectors dim:  torch.Size([40, 591, 200])
Question Passage Similarity dim:  torch.Size([40, 591])
Question passage attention dim:  torch.Size([40, 591])
Final Merged Passage dim:  torch.Size([40, 591, 800])
Modeled Passage dim:  torch.Size([40, 591, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 591, 1000])
Span start logits:  torch.Size([40, 591])
span start probs dim:  torch.Size([40, 591])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 591]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 644, 200])
Passage Length:  644
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 644, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 644, 15])
Passage ques attention dim:  torch.Size([40, 644, 15])
Passage question vectors dim:  torch.Size([40, 644, 200])
Question Passage Similarity dim:  torch.Size([40, 644])
Question passage attention dim:  torch.Size([40, 644])
Final Merged Passage dim:  torch.Size([40, 644, 800])
Modeled Passage dim:  torch.Size([40, 644, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 644, 1000])
Span start logits:  torch.Size([40, 644])
span start probs dim:  torch.Size([40, 644])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 644]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1202, 200])
Passage Length:  1202
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1202, 15])
Passage ques attention dim:  torch.Size([40, 1202, 15])
Passage question vectors dim:  torch.Size([40, 1202, 200])
Question Passage Similarity dim:  torch.Size([40, 1202])
Question passage attention dim:  torch.Size([40, 1202])
Final Merged Passage dim:  torch.Size([40, 1202, 800])
Modeled Passage dim:  torch.Size([40, 1202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1202, 1000])
Span start logits:  torch.Size([40, 1202])
span start probs dim:  torch.Size([40, 1202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 832, 200])
Passage Length:  832
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 832, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 832, 14])
Passage ques attention dim:  torch.Size([40, 832, 14])
Passage question vectors dim:  torch.Size([40, 832, 200])
Question Passage Similarity dim:  torch.Size([40, 832])
Question passage attention dim:  torch.Size([40, 832])
Final Merged Passage dim:  torch.Size([40, 832, 800])
Modeled Passage dim:  torch.Size([40, 832, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 832, 1000])
Span start logits:  torch.Size([40, 832])
span start probs dim:  torch.Size([40, 832])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 832]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1114, 200])
Passage Length:  1114
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1114, 16])
Passage ques attention dim:  torch.Size([40, 1114, 16])
Passage question vectors dim:  torch.Size([40, 1114, 200])
Question Passage Similarity dim:  torch.Size([40, 1114])
Question passage attention dim:  torch.Size([40, 1114])
Final Merged Passage dim:  torch.Size([40, 1114, 800])
Modeled Passage dim:  torch.Size([40, 1114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1114, 1000])
Span start logits:  torch.Size([40, 1114])
span start probs dim:  torch.Size([40, 1114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1568, 200])
Passage Length:  1568
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1568, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1568, 14])
Passage ques attention dim:  torch.Size([40, 1568, 14])
Passage question vectors dim:  torch.Size([40, 1568, 200])
Question Passage Similarity dim:  torch.Size([40, 1568])
Question passage attention dim:  torch.Size([40, 1568])
Final Merged Passage dim:  torch.Size([40, 1568, 800])
Modeled Passage dim:  torch.Size([40, 1568, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1568, 1000])
Span start logits:  torch.Size([40, 1568])
span start probs dim:  torch.Size([40, 1568])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1568]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 914, 200])
Passage Length:  914
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 914, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 914, 15])
Passage ques attention dim:  torch.Size([40, 914, 15])
Passage question vectors dim:  torch.Size([40, 914, 200])
Question Passage Similarity dim:  torch.Size([40, 914])
Question passage attention dim:  torch.Size([40, 914])
Final Merged Passage dim:  torch.Size([40, 914, 800])
Modeled Passage dim:  torch.Size([40, 914, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 914, 1000])
Span start logits:  torch.Size([40, 914])
span start probs dim:  torch.Size([40, 914])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 914]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 976, 200])
Passage Length:  976
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 976, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 976, 16])
Passage ques attention dim:  torch.Size([40, 976, 16])
Passage question vectors dim:  torch.Size([40, 976, 200])
Question Passage Similarity dim:  torch.Size([40, 976])
Question passage attention dim:  torch.Size([40, 976])
Final Merged Passage dim:  torch.Size([40, 976, 800])
Modeled Passage dim:  torch.Size([40, 976, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 976, 1000])
Span start logits:  torch.Size([40, 976])
span start probs dim:  torch.Size([40, 976])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 976]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 603, 200])
Passage Length:  603
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 603, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 603, 13])
Passage ques attention dim:  torch.Size([40, 603, 13])
Passage question vectors dim:  torch.Size([40, 603, 200])
Question Passage Similarity dim:  torch.Size([40, 603])
Question passage attention dim:  torch.Size([40, 603])
Final Merged Passage dim:  torch.Size([40, 603, 800])
Modeled Passage dim:  torch.Size([40, 603, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 603, 1000])
Span start logits:  torch.Size([40, 603])
span start probs dim:  torch.Size([40, 603])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 603]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 714, 12])
Passage ques attention dim:  torch.Size([40, 714, 12])
Passage question vectors dim:  torch.Size([40, 714, 200])
Question Passage Similarity dim:  torch.Size([40, 714])
Question passage attention dim:  torch.Size([40, 714])
Final Merged Passage dim:  torch.Size([40, 714, 800])
Modeled Passage dim:  torch.Size([40, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 714, 1000])
Span start logits:  torch.Size([40, 714])
span start probs dim:  torch.Size([40, 714])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 714]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 924, 200])
Passage Length:  924
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 924, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 924, 20])
Passage ques attention dim:  torch.Size([40, 924, 20])
Passage question vectors dim:  torch.Size([40, 924, 200])
Question Passage Similarity dim:  torch.Size([40, 924])
Question passage attention dim:  torch.Size([40, 924])
Final Merged Passage dim:  torch.Size([40, 924, 800])
Modeled Passage dim:  torch.Size([40, 924, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 924, 1000])
Span start logits:  torch.Size([40, 924])
span start probs dim:  torch.Size([40, 924])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 924]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 912, 200])
Passage Length:  912
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 912, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 912, 17])
Passage ques attention dim:  torch.Size([40, 912, 17])
Passage question vectors dim:  torch.Size([40, 912, 200])
Question Passage Similarity dim:  torch.Size([40, 912])
Question passage attention dim:  torch.Size([40, 912])
Final Merged Passage dim:  torch.Size([40, 912, 800])
Modeled Passage dim:  torch.Size([40, 912, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 912, 1000])
Span start logits:  torch.Size([40, 912])
span start probs dim:  torch.Size([40, 912])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 912]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1112, 200])
Passage Length:  1112
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1112, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1112, 13])
Passage ques attention dim:  torch.Size([40, 1112, 13])
Passage question vectors dim:  torch.Size([40, 1112, 200])
Question Passage Similarity dim:  torch.Size([40, 1112])
Question passage attention dim:  torch.Size([40, 1112])
Final Merged Passage dim:  torch.Size([40, 1112, 800])
Modeled Passage dim:  torch.Size([40, 1112, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1112, 1000])
Span start logits:  torch.Size([40, 1112])
span start probs dim:  torch.Size([40, 1112])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1112]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 993, 200])
Passage Length:  993
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 993, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 993, 12])
Passage ques attention dim:  torch.Size([40, 993, 12])
Passage question vectors dim:  torch.Size([40, 993, 200])
Question Passage Similarity dim:  torch.Size([40, 993])
Question passage attention dim:  torch.Size([40, 993])
Final Merged Passage dim:  torch.Size([40, 993, 800])
Modeled Passage dim:  torch.Size([40, 993, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 993, 1000])
Span start logits:  torch.Size([40, 993])
span start probs dim:  torch.Size([40, 993])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 993]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1420, 200])
Passage Length:  1420
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1420, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1420, 14])
Passage ques attention dim:  torch.Size([40, 1420, 14])
Passage question vectors dim:  torch.Size([40, 1420, 200])
Question Passage Similarity dim:  torch.Size([40, 1420])
Question passage attention dim:  torch.Size([40, 1420])
Final Merged Passage dim:  torch.Size([40, 1420, 800])
Modeled Passage dim:  torch.Size([40, 1420, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1420, 1000])
Span start logits:  torch.Size([40, 1420])
span start probs dim:  torch.Size([40, 1420])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1420]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 970, 200])
Passage Length:  970
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 970, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 970, 12])
Passage ques attention dim:  torch.Size([40, 970, 12])
Passage question vectors dim:  torch.Size([40, 970, 200])
Question Passage Similarity dim:  torch.Size([40, 970])
Question passage attention dim:  torch.Size([40, 970])
Final Merged Passage dim:  torch.Size([40, 970, 800])
Modeled Passage dim:  torch.Size([40, 970, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 970, 1000])
Span start logits:  torch.Size([40, 970])
span start probs dim:  torch.Size([40, 970])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 970]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 926, 200])
Passage Length:  926
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 926, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 926, 14])
Passage ques attention dim:  torch.Size([40, 926, 14])
Passage question vectors dim:  torch.Size([40, 926, 200])
Question Passage Similarity dim:  torch.Size([40, 926])
Question passage attention dim:  torch.Size([40, 926])
Final Merged Passage dim:  torch.Size([40, 926, 800])
Modeled Passage dim:  torch.Size([40, 926, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 926, 1000])
Span start logits:  torch.Size([40, 926])
span start probs dim:  torch.Size([40, 926])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 926]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 429, 200])
Passage Length:  429
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 429, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 429, 14])
Passage ques attention dim:  torch.Size([40, 429, 14])
Passage question vectors dim:  torch.Size([40, 429, 200])
Question Passage Similarity dim:  torch.Size([40, 429])
Question passage attention dim:  torch.Size([40, 429])
Final Merged Passage dim:  torch.Size([40, 429, 800])
Modeled Passage dim:  torch.Size([40, 429, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 429, 1000])
Span start logits:  torch.Size([40, 429])
span start probs dim:  torch.Size([40, 429])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 429]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 336, 200])
Passage Length:  336
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 336, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 336, 13])
Passage ques attention dim:  torch.Size([40, 336, 13])
Passage question vectors dim:  torch.Size([40, 336, 200])
Question Passage Similarity dim:  torch.Size([40, 336])
Question passage attention dim:  torch.Size([40, 336])
Final Merged Passage dim:  torch.Size([40, 336, 800])
Modeled Passage dim:  torch.Size([40, 336, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 336, 1000])
Span start logits:  torch.Size([40, 336])
span start probs dim:  torch.Size([40, 336])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 336]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 802, 200])
Passage Length:  802
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 802, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 802, 14])
Passage ques attention dim:  torch.Size([40, 802, 14])
Passage question vectors dim:  torch.Size([40, 802, 200])
Question Passage Similarity dim:  torch.Size([40, 802])
Question passage attention dim:  torch.Size([40, 802])
Final Merged Passage dim:  torch.Size([40, 802, 800])
Modeled Passage dim:  torch.Size([40, 802, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 802, 1000])
Span start logits:  torch.Size([40, 802])
span start probs dim:  torch.Size([40, 802])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 802]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 1076, 200])
Passage Length:  1076
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 1076, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1076, 24])
Passage ques attention dim:  torch.Size([40, 1076, 24])
Passage question vectors dim:  torch.Size([40, 1076, 200])
Question Passage Similarity dim:  torch.Size([40, 1076])
Question passage attention dim:  torch.Size([40, 1076])
Final Merged Passage dim:  torch.Size([40, 1076, 800])
Modeled Passage dim:  torch.Size([40, 1076, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1076, 1000])
Span start logits:  torch.Size([40, 1076])
span start probs dim:  torch.Size([40, 1076])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1076]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 447, 200])
Passage Length:  447
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 447, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 447, 16])
Passage ques attention dim:  torch.Size([40, 447, 16])
Passage question vectors dim:  torch.Size([40, 447, 200])
Question Passage Similarity dim:  torch.Size([40, 447])
Question passage attention dim:  torch.Size([40, 447])
Final Merged Passage dim:  torch.Size([40, 447, 800])
Modeled Passage dim:  torch.Size([40, 447, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 447, 1000])
Span start logits:  torch.Size([40, 447])
span start probs dim:  torch.Size([40, 447])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 447]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 200, 200])
Passage Length:  200
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 200, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 200, 13])
Passage ques attention dim:  torch.Size([40, 200, 13])
Passage question vectors dim:  torch.Size([40, 200, 200])
Question Passage Similarity dim:  torch.Size([40, 200])
Question passage attention dim:  torch.Size([40, 200])
Final Merged Passage dim:  torch.Size([40, 200, 800])
Modeled Passage dim:  torch.Size([40, 200, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 200, 1000])
Span start logits:  torch.Size([40, 200])
span start probs dim:  torch.Size([40, 200])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 200]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 571, 200])
Passage Length:  571
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 571, 18])
Passage ques attention dim:  torch.Size([40, 571, 18])
Passage question vectors dim:  torch.Size([40, 571, 200])
Question Passage Similarity dim:  torch.Size([40, 571])
Question passage attention dim:  torch.Size([40, 571])
Final Merged Passage dim:  torch.Size([40, 571, 800])
Modeled Passage dim:  torch.Size([40, 571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 571, 1000])
Span start logits:  torch.Size([40, 571])
span start probs dim:  torch.Size([40, 571])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 571]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 2202, 200])
Passage Length:  2202
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 2202, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2202, 12])
Passage ques attention dim:  torch.Size([40, 2202, 12])
Passage question vectors dim:  torch.Size([40, 2202, 200])
Question Passage Similarity dim:  torch.Size([40, 2202])
Question passage attention dim:  torch.Size([40, 2202])
Final Merged Passage dim:  torch.Size([40, 2202, 800])
Modeled Passage dim:  torch.Size([40, 2202, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2202, 1000])
Span start logits:  torch.Size([40, 2202])
span start probs dim:  torch.Size([40, 2202])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2202]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 600, 200])
Passage Length:  600
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 600, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 600, 14])
Passage ques attention dim:  torch.Size([40, 600, 14])
Passage question vectors dim:  torch.Size([40, 600, 200])
Question Passage Similarity dim:  torch.Size([40, 600])
Question passage attention dim:  torch.Size([40, 600])
Final Merged Passage dim:  torch.Size([40, 600, 800])
Modeled Passage dim:  torch.Size([40, 600, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 600, 1000])
Span start logits:  torch.Size([40, 600])
span start probs dim:  torch.Size([40, 600])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 600]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 666, 200])
Passage Length:  666
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 666, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 666, 15])
Passage ques attention dim:  torch.Size([40, 666, 15])
Passage question vectors dim:  torch.Size([40, 666, 200])
Question Passage Similarity dim:  torch.Size([40, 666])
Question passage attention dim:  torch.Size([40, 666])
Final Merged Passage dim:  torch.Size([40, 666, 800])
Modeled Passage dim:  torch.Size([40, 666, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 666, 1000])
Span start logits:  torch.Size([40, 666])
span start probs dim:  torch.Size([40, 666])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 666]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 21, 200])
Embedded passage dim:  torch.Size([40, 984, 200])
Passage Length:  984
Encoded question dim:  torch.Size([40, 21, 200])
Encoded passage dim:  torch.Size([40, 984, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 984, 21])
Passage ques attention dim:  torch.Size([40, 984, 21])
Passage question vectors dim:  torch.Size([40, 984, 200])
Question Passage Similarity dim:  torch.Size([40, 984])
Question passage attention dim:  torch.Size([40, 984])
Final Merged Passage dim:  torch.Size([40, 984, 800])
Modeled Passage dim:  torch.Size([40, 984, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 984, 1000])
Span start logits:  torch.Size([40, 984])
span start probs dim:  torch.Size([40, 984])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 984]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 240, 200])
Passage Length:  240
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 240, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 240, 12])
Passage ques attention dim:  torch.Size([40, 240, 12])
Passage question vectors dim:  torch.Size([40, 240, 200])
Question Passage Similarity dim:  torch.Size([40, 240])
Question passage attention dim:  torch.Size([40, 240])
Final Merged Passage dim:  torch.Size([40, 240, 800])
Modeled Passage dim:  torch.Size([40, 240, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 240, 1000])
Span start logits:  torch.Size([40, 240])
span start probs dim:  torch.Size([40, 240])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 240]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1659, 200])
Passage Length:  1659
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1659, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1659, 18])
Passage ques attention dim:  torch.Size([40, 1659, 18])
Passage question vectors dim:  torch.Size([40, 1659, 200])
Question Passage Similarity dim:  torch.Size([40, 1659])
Question passage attention dim:  torch.Size([40, 1659])
Final Merged Passage dim:  torch.Size([40, 1659, 800])
Modeled Passage dim:  torch.Size([40, 1659, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1659, 1000])
Span start logits:  torch.Size([40, 1659])
span start probs dim:  torch.Size([40, 1659])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1659]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 730, 200])
Passage Length:  730
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 730, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 730, 12])
Passage ques attention dim:  torch.Size([40, 730, 12])
Passage question vectors dim:  torch.Size([40, 730, 200])
Question Passage Similarity dim:  torch.Size([40, 730])
Question passage attention dim:  torch.Size([40, 730])
Final Merged Passage dim:  torch.Size([40, 730, 800])
Modeled Passage dim:  torch.Size([40, 730, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 730, 1000])
Span start logits:  torch.Size([40, 730])
span start probs dim:  torch.Size([40, 730])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 730]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 942, 200])
Passage Length:  942
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 942, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 942, 13])
Passage ques attention dim:  torch.Size([40, 942, 13])
Passage question vectors dim:  torch.Size([40, 942, 200])
Question Passage Similarity dim:  torch.Size([40, 942])
Question passage attention dim:  torch.Size([40, 942])
Final Merged Passage dim:  torch.Size([40, 942, 800])
Modeled Passage dim:  torch.Size([40, 942, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 942, 1000])
Span start logits:  torch.Size([40, 942])
span start probs dim:  torch.Size([40, 942])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 942]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 525, 200])
Passage Length:  525
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 525, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 525, 15])
Passage ques attention dim:  torch.Size([40, 525, 15])
Passage question vectors dim:  torch.Size([40, 525, 200])
Question Passage Similarity dim:  torch.Size([40, 525])
Question passage attention dim:  torch.Size([40, 525])
Final Merged Passage dim:  torch.Size([40, 525, 800])
Modeled Passage dim:  torch.Size([40, 525, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 525, 1000])
Span start logits:  torch.Size([40, 525])
span start probs dim:  torch.Size([40, 525])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 525]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 943, 200])
Passage Length:  943
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 943, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 943, 13])
Passage ques attention dim:  torch.Size([40, 943, 13])
Passage question vectors dim:  torch.Size([40, 943, 200])
Question Passage Similarity dim:  torch.Size([40, 943])
Question passage attention dim:  torch.Size([40, 943])
Final Merged Passage dim:  torch.Size([40, 943, 800])
Modeled Passage dim:  torch.Size([40, 943, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 943, 1000])
Span start logits:  torch.Size([40, 943])
span start probs dim:  torch.Size([40, 943])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 943]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1072, 200])
Passage Length:  1072
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1072, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1072, 18])
Passage ques attention dim:  torch.Size([40, 1072, 18])
Passage question vectors dim:  torch.Size([40, 1072, 200])
Question Passage Similarity dim:  torch.Size([40, 1072])
Question passage attention dim:  torch.Size([40, 1072])
Final Merged Passage dim:  torch.Size([40, 1072, 800])
Modeled Passage dim:  torch.Size([40, 1072, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1072, 1000])
Span start logits:  torch.Size([40, 1072])
span start probs dim:  torch.Size([40, 1072])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1072]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 431, 200])
Passage Length:  431
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 431, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 431, 18])
Passage ques attention dim:  torch.Size([40, 431, 18])
Passage question vectors dim:  torch.Size([40, 431, 200])
Question Passage Similarity dim:  torch.Size([40, 431])
Question passage attention dim:  torch.Size([40, 431])
Final Merged Passage dim:  torch.Size([40, 431, 800])
Modeled Passage dim:  torch.Size([40, 431, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 431, 1000])
Span start logits:  torch.Size([40, 431])
span start probs dim:  torch.Size([40, 431])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 431]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1166, 200])
Passage Length:  1166
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1166, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1166, 14])
Passage ques attention dim:  torch.Size([40, 1166, 14])
Passage question vectors dim:  torch.Size([40, 1166, 200])
Question Passage Similarity dim:  torch.Size([40, 1166])
Question passage attention dim:  torch.Size([40, 1166])
Final Merged Passage dim:  torch.Size([40, 1166, 800])
Modeled Passage dim:  torch.Size([40, 1166, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1166, 1000])
Span start logits:  torch.Size([40, 1166])
span start probs dim:  torch.Size([40, 1166])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1166]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 902, 200])
Passage Length:  902
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 902, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 902, 16])
Passage ques attention dim:  torch.Size([40, 902, 16])
Passage question vectors dim:  torch.Size([40, 902, 200])
Question Passage Similarity dim:  torch.Size([40, 902])
Question passage attention dim:  torch.Size([40, 902])
Final Merged Passage dim:  torch.Size([40, 902, 800])
Modeled Passage dim:  torch.Size([40, 902, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 902, 1000])
Span start logits:  torch.Size([40, 902])
span start probs dim:  torch.Size([40, 902])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 902]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 231, 200])
Passage Length:  231
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 231, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 231, 14])
Passage ques attention dim:  torch.Size([40, 231, 14])
Passage question vectors dim:  torch.Size([40, 231, 200])
Question Passage Similarity dim:  torch.Size([40, 231])
Question passage attention dim:  torch.Size([40, 231])
Final Merged Passage dim:  torch.Size([40, 231, 800])
Modeled Passage dim:  torch.Size([40, 231, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 231, 1000])
Span start logits:  torch.Size([40, 231])
span start probs dim:  torch.Size([40, 231])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 231]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 289, 200])
Passage Length:  289
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 289, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 289, 18])
Passage ques attention dim:  torch.Size([40, 289, 18])
Passage question vectors dim:  torch.Size([40, 289, 200])
Question Passage Similarity dim:  torch.Size([40, 289])
Question passage attention dim:  torch.Size([40, 289])
Final Merged Passage dim:  torch.Size([40, 289, 800])
Modeled Passage dim:  torch.Size([40, 289, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 289, 1000])
Span start logits:  torch.Size([40, 289])
span start probs dim:  torch.Size([40, 289])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 289]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 18])
Passage ques attention dim:  torch.Size([40, 234, 18])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1391, 200])
Passage Length:  1391
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1391, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1391, 17])
Passage ques attention dim:  torch.Size([40, 1391, 17])
Passage question vectors dim:  torch.Size([40, 1391, 200])
Question Passage Similarity dim:  torch.Size([40, 1391])
Question passage attention dim:  torch.Size([40, 1391])
Final Merged Passage dim:  torch.Size([40, 1391, 800])
Modeled Passage dim:  torch.Size([40, 1391, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1391, 1000])
Span start logits:  torch.Size([40, 1391])
span start probs dim:  torch.Size([40, 1391])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1391]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1886, 200])
Passage Length:  1886
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1886, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1886, 15])
Passage ques attention dim:  torch.Size([40, 1886, 15])
Passage question vectors dim:  torch.Size([40, 1886, 200])
Question Passage Similarity dim:  torch.Size([40, 1886])
Question passage attention dim:  torch.Size([40, 1886])
Final Merged Passage dim:  torch.Size([40, 1886, 800])
Modeled Passage dim:  torch.Size([40, 1886, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1886, 1000])
Span start logits:  torch.Size([40, 1886])
span start probs dim:  torch.Size([40, 1886])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1886]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 847, 200])
Passage Length:  847
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 847, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 847, 12])
Passage ques attention dim:  torch.Size([40, 847, 12])
Passage question vectors dim:  torch.Size([40, 847, 200])
Question Passage Similarity dim:  torch.Size([40, 847])
Question passage attention dim:  torch.Size([40, 847])
Final Merged Passage dim:  torch.Size([40, 847, 800])
Modeled Passage dim:  torch.Size([40, 847, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 847, 1000])
Span start logits:  torch.Size([40, 847])
span start probs dim:  torch.Size([40, 847])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 847]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 326, 200])
Passage Length:  326
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 326, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 326, 18])
Passage ques attention dim:  torch.Size([40, 326, 18])
Passage question vectors dim:  torch.Size([40, 326, 200])
Question Passage Similarity dim:  torch.Size([40, 326])
Question passage attention dim:  torch.Size([40, 326])
Final Merged Passage dim:  torch.Size([40, 326, 800])
Modeled Passage dim:  torch.Size([40, 326, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 326, 1000])
Span start logits:  torch.Size([40, 326])
span start probs dim:  torch.Size([40, 326])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 326]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 847, 200])
Passage Length:  847
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 847, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 847, 19])
Passage ques attention dim:  torch.Size([40, 847, 19])
Passage question vectors dim:  torch.Size([40, 847, 200])
Question Passage Similarity dim:  torch.Size([40, 847])
Question passage attention dim:  torch.Size([40, 847])
Final Merged Passage dim:  torch.Size([40, 847, 800])
Modeled Passage dim:  torch.Size([40, 847, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 847, 1000])
Span start logits:  torch.Size([40, 847])
span start probs dim:  torch.Size([40, 847])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 847]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 666, 200])
Passage Length:  666
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 666, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 666, 15])
Passage ques attention dim:  torch.Size([40, 666, 15])
Passage question vectors dim:  torch.Size([40, 666, 200])
Question Passage Similarity dim:  torch.Size([40, 666])
Question passage attention dim:  torch.Size([40, 666])
Final Merged Passage dim:  torch.Size([40, 666, 800])
Modeled Passage dim:  torch.Size([40, 666, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 666, 1000])
Span start logits:  torch.Size([40, 666])
span start probs dim:  torch.Size([40, 666])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 666]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 367, 200])
Passage Length:  367
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 367, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 367, 16])
Passage ques attention dim:  torch.Size([40, 367, 16])
Passage question vectors dim:  torch.Size([40, 367, 200])
Question Passage Similarity dim:  torch.Size([40, 367])
Question passage attention dim:  torch.Size([40, 367])
Final Merged Passage dim:  torch.Size([40, 367, 800])
Modeled Passage dim:  torch.Size([40, 367, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 367, 1000])
Span start logits:  torch.Size([40, 367])
span start probs dim:  torch.Size([40, 367])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 367]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 514, 200])
Passage Length:  514
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 514, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 514, 20])
Passage ques attention dim:  torch.Size([40, 514, 20])
Passage question vectors dim:  torch.Size([40, 514, 200])
Question Passage Similarity dim:  torch.Size([40, 514])
Question passage attention dim:  torch.Size([40, 514])
Final Merged Passage dim:  torch.Size([40, 514, 800])
Modeled Passage dim:  torch.Size([40, 514, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 514, 1000])
Span start logits:  torch.Size([40, 514])
span start probs dim:  torch.Size([40, 514])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 514]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 850, 200])
Passage Length:  850
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 850, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 850, 13])
Passage ques attention dim:  torch.Size([40, 850, 13])
Passage question vectors dim:  torch.Size([40, 850, 200])
Question Passage Similarity dim:  torch.Size([40, 850])
Question passage attention dim:  torch.Size([40, 850])
Final Merged Passage dim:  torch.Size([40, 850, 800])
Modeled Passage dim:  torch.Size([40, 850, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 850, 1000])
Span start logits:  torch.Size([40, 850])
span start probs dim:  torch.Size([40, 850])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 850]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 680, 200])
Passage Length:  680
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 680, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 680, 12])
Passage ques attention dim:  torch.Size([40, 680, 12])
Passage question vectors dim:  torch.Size([40, 680, 200])
Question Passage Similarity dim:  torch.Size([40, 680])
Question passage attention dim:  torch.Size([40, 680])
Final Merged Passage dim:  torch.Size([40, 680, 800])
Modeled Passage dim:  torch.Size([40, 680, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 680, 1000])
Span start logits:  torch.Size([40, 680])
span start probs dim:  torch.Size([40, 680])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 680]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1059, 200])
Passage Length:  1059
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1059, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1059, 16])
Passage ques attention dim:  torch.Size([40, 1059, 16])
Passage question vectors dim:  torch.Size([40, 1059, 200])
Question Passage Similarity dim:  torch.Size([40, 1059])
Question passage attention dim:  torch.Size([40, 1059])
Final Merged Passage dim:  torch.Size([40, 1059, 800])
Modeled Passage dim:  torch.Size([40, 1059, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1059, 1000])
Span start logits:  torch.Size([40, 1059])
span start probs dim:  torch.Size([40, 1059])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1059]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 527, 200])
Passage Length:  527
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 527, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 527, 13])
Passage ques attention dim:  torch.Size([40, 527, 13])
Passage question vectors dim:  torch.Size([40, 527, 200])
Question Passage Similarity dim:  torch.Size([40, 527])
Question passage attention dim:  torch.Size([40, 527])
Final Merged Passage dim:  torch.Size([40, 527, 800])
Modeled Passage dim:  torch.Size([40, 527, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 527, 1000])
Span start logits:  torch.Size([40, 527])
span start probs dim:  torch.Size([40, 527])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 527]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 493, 200])
Passage Length:  493
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 493, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 493, 14])
Passage ques attention dim:  torch.Size([40, 493, 14])
Passage question vectors dim:  torch.Size([40, 493, 200])
Question Passage Similarity dim:  torch.Size([40, 493])
Question passage attention dim:  torch.Size([40, 493])
Final Merged Passage dim:  torch.Size([40, 493, 800])
Modeled Passage dim:  torch.Size([40, 493, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 493, 1000])
Span start logits:  torch.Size([40, 493])
span start probs dim:  torch.Size([40, 493])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 493]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 39, 200])
Embedded passage dim:  torch.Size([40, 296, 200])
Passage Length:  296
Encoded question dim:  torch.Size([40, 39, 200])
Encoded passage dim:  torch.Size([40, 296, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 296, 39])
Passage ques attention dim:  torch.Size([40, 296, 39])
Passage question vectors dim:  torch.Size([40, 296, 200])
Question Passage Similarity dim:  torch.Size([40, 296])
Question passage attention dim:  torch.Size([40, 296])
Final Merged Passage dim:  torch.Size([40, 296, 800])
Modeled Passage dim:  torch.Size([40, 296, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 296, 1000])
Span start logits:  torch.Size([40, 296])
span start probs dim:  torch.Size([40, 296])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 296]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 201, 200])
Passage Length:  201
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 201, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 201, 16])
Passage ques attention dim:  torch.Size([40, 201, 16])
Passage question vectors dim:  torch.Size([40, 201, 200])
Question Passage Similarity dim:  torch.Size([40, 201])
Question passage attention dim:  torch.Size([40, 201])
Final Merged Passage dim:  torch.Size([40, 201, 800])
Modeled Passage dim:  torch.Size([40, 201, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 201, 1000])
Span start logits:  torch.Size([40, 201])
span start probs dim:  torch.Size([40, 201])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 201]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 578, 200])
Passage Length:  578
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 578, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 578, 12])
Passage ques attention dim:  torch.Size([40, 578, 12])
Passage question vectors dim:  torch.Size([40, 578, 200])
Question Passage Similarity dim:  torch.Size([40, 578])
Question passage attention dim:  torch.Size([40, 578])
Final Merged Passage dim:  torch.Size([40, 578, 800])
Modeled Passage dim:  torch.Size([40, 578, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 578, 1000])
Span start logits:  torch.Size([40, 578])
span start probs dim:  torch.Size([40, 578])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 578]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 307, 200])
Passage Length:  307
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 307, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 307, 16])
Passage ques attention dim:  torch.Size([40, 307, 16])
Passage question vectors dim:  torch.Size([40, 307, 200])
Question Passage Similarity dim:  torch.Size([40, 307])
Question passage attention dim:  torch.Size([40, 307])
Final Merged Passage dim:  torch.Size([40, 307, 800])
Modeled Passage dim:  torch.Size([40, 307, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 307, 1000])
Span start logits:  torch.Size([40, 307])
span start probs dim:  torch.Size([40, 307])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 307]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1059, 200])
Passage Length:  1059
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1059, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1059, 13])
Passage ques attention dim:  torch.Size([40, 1059, 13])
Passage question vectors dim:  torch.Size([40, 1059, 200])
Question Passage Similarity dim:  torch.Size([40, 1059])
Question passage attention dim:  torch.Size([40, 1059])
Final Merged Passage dim:  torch.Size([40, 1059, 800])
Modeled Passage dim:  torch.Size([40, 1059, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1059, 1000])
Span start logits:  torch.Size([40, 1059])
span start probs dim:  torch.Size([40, 1059])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1059]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1096, 200])
Passage Length:  1096
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1096, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1096, 19])
Passage ques attention dim:  torch.Size([40, 1096, 19])
Passage question vectors dim:  torch.Size([40, 1096, 200])
Question Passage Similarity dim:  torch.Size([40, 1096])
Question passage attention dim:  torch.Size([40, 1096])
Final Merged Passage dim:  torch.Size([40, 1096, 800])
Modeled Passage dim:  torch.Size([40, 1096, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1096, 1000])
Span start logits:  torch.Size([40, 1096])
span start probs dim:  torch.Size([40, 1096])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1096]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 877, 200])
Passage Length:  877
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 877, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 877, 15])
Passage ques attention dim:  torch.Size([40, 877, 15])
Passage question vectors dim:  torch.Size([40, 877, 200])
Question Passage Similarity dim:  torch.Size([40, 877])
Question passage attention dim:  torch.Size([40, 877])
Final Merged Passage dim:  torch.Size([40, 877, 800])
Modeled Passage dim:  torch.Size([40, 877, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 877, 1000])
Span start logits:  torch.Size([40, 877])
span start probs dim:  torch.Size([40, 877])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 877]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 908, 200])
Passage Length:  908
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 908, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 908, 13])
Passage ques attention dim:  torch.Size([40, 908, 13])
Passage question vectors dim:  torch.Size([40, 908, 200])
Question Passage Similarity dim:  torch.Size([40, 908])
Question passage attention dim:  torch.Size([40, 908])
Final Merged Passage dim:  torch.Size([40, 908, 800])
Modeled Passage dim:  torch.Size([40, 908, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 908, 1000])
Span start logits:  torch.Size([40, 908])
span start probs dim:  torch.Size([40, 908])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 908]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1061, 200])
Passage Length:  1061
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1061, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1061, 16])
Passage ques attention dim:  torch.Size([40, 1061, 16])
Passage question vectors dim:  torch.Size([40, 1061, 200])
Question Passage Similarity dim:  torch.Size([40, 1061])
Question passage attention dim:  torch.Size([40, 1061])
Final Merged Passage dim:  torch.Size([40, 1061, 800])
Modeled Passage dim:  torch.Size([40, 1061, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1061, 1000])
Span start logits:  torch.Size([40, 1061])
span start probs dim:  torch.Size([40, 1061])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1061]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 1013, 200])
Passage Length:  1013
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 1013, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1013, 23])
Passage ques attention dim:  torch.Size([40, 1013, 23])
Passage question vectors dim:  torch.Size([40, 1013, 200])
Question Passage Similarity dim:  torch.Size([40, 1013])
Question passage attention dim:  torch.Size([40, 1013])
Final Merged Passage dim:  torch.Size([40, 1013, 800])
Modeled Passage dim:  torch.Size([40, 1013, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1013, 1000])
Span start logits:  torch.Size([40, 1013])
span start probs dim:  torch.Size([40, 1013])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1013]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 248, 200])
Passage Length:  248
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 248, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 248, 17])
Passage ques attention dim:  torch.Size([40, 248, 17])
Passage question vectors dim:  torch.Size([40, 248, 200])
Question Passage Similarity dim:  torch.Size([40, 248])
Question passage attention dim:  torch.Size([40, 248])
Final Merged Passage dim:  torch.Size([40, 248, 800])
Modeled Passage dim:  torch.Size([40, 248, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 248, 1000])
Span start logits:  torch.Size([40, 248])
span start probs dim:  torch.Size([40, 248])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 248]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 513, 200])
Passage Length:  513
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 513, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 513, 13])
Passage ques attention dim:  torch.Size([40, 513, 13])
Passage question vectors dim:  torch.Size([40, 513, 200])
Question Passage Similarity dim:  torch.Size([40, 513])
Question passage attention dim:  torch.Size([40, 513])
Final Merged Passage dim:  torch.Size([40, 513, 800])
Modeled Passage dim:  torch.Size([40, 513, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 513, 1000])
Span start logits:  torch.Size([40, 513])
span start probs dim:  torch.Size([40, 513])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 513]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 301, 200])
Passage Length:  301
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 301, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 301, 13])
Passage ques attention dim:  torch.Size([40, 301, 13])
Passage question vectors dim:  torch.Size([40, 301, 200])
Question Passage Similarity dim:  torch.Size([40, 301])
Question passage attention dim:  torch.Size([40, 301])
Final Merged Passage dim:  torch.Size([40, 301, 800])
Modeled Passage dim:  torch.Size([40, 301, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 301, 1000])
Span start logits:  torch.Size([40, 301])
span start probs dim:  torch.Size([40, 301])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 301]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 620, 200])
Passage Length:  620
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 620, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 620, 17])
Passage ques attention dim:  torch.Size([40, 620, 17])
Passage question vectors dim:  torch.Size([40, 620, 200])
Question Passage Similarity dim:  torch.Size([40, 620])
Question passage attention dim:  torch.Size([40, 620])
Final Merged Passage dim:  torch.Size([40, 620, 800])
Modeled Passage dim:  torch.Size([40, 620, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 620, 1000])
Span start logits:  torch.Size([40, 620])
span start probs dim:  torch.Size([40, 620])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 620]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 379, 200])
Passage Length:  379
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 379, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 379, 14])
Passage ques attention dim:  torch.Size([40, 379, 14])
Passage question vectors dim:  torch.Size([40, 379, 200])
Question Passage Similarity dim:  torch.Size([40, 379])
Question passage attention dim:  torch.Size([40, 379])
Final Merged Passage dim:  torch.Size([40, 379, 800])
Modeled Passage dim:  torch.Size([40, 379, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 379, 1000])
Span start logits:  torch.Size([40, 379])
span start probs dim:  torch.Size([40, 379])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 379]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 492, 200])
Passage Length:  492
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 492, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 492, 11])
Passage ques attention dim:  torch.Size([40, 492, 11])
Passage question vectors dim:  torch.Size([40, 492, 200])
Question Passage Similarity dim:  torch.Size([40, 492])
Question passage attention dim:  torch.Size([40, 492])
Final Merged Passage dim:  torch.Size([40, 492, 800])
Modeled Passage dim:  torch.Size([40, 492, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 492, 1000])
Span start logits:  torch.Size([40, 492])
span start probs dim:  torch.Size([40, 492])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 492]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 743, 200])
Passage Length:  743
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 743, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 743, 16])
Passage ques attention dim:  torch.Size([40, 743, 16])
Passage question vectors dim:  torch.Size([40, 743, 200])
Question Passage Similarity dim:  torch.Size([40, 743])
Question passage attention dim:  torch.Size([40, 743])
Final Merged Passage dim:  torch.Size([40, 743, 800])
Modeled Passage dim:  torch.Size([40, 743, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 743, 1000])
Span start logits:  torch.Size([40, 743])
span start probs dim:  torch.Size([40, 743])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 743]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1018, 200])
Passage Length:  1018
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1018, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1018, 16])
Passage ques attention dim:  torch.Size([40, 1018, 16])
Passage question vectors dim:  torch.Size([40, 1018, 200])
Question Passage Similarity dim:  torch.Size([40, 1018])
Question passage attention dim:  torch.Size([40, 1018])
Final Merged Passage dim:  torch.Size([40, 1018, 800])
Modeled Passage dim:  torch.Size([40, 1018, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1018, 1000])
Span start logits:  torch.Size([40, 1018])
span start probs dim:  torch.Size([40, 1018])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1018]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 381, 13])
Passage ques attention dim:  torch.Size([40, 381, 13])
Passage question vectors dim:  torch.Size([40, 381, 200])
Question Passage Similarity dim:  torch.Size([40, 381])
Question passage attention dim:  torch.Size([40, 381])
Final Merged Passage dim:  torch.Size([40, 381, 800])
Modeled Passage dim:  torch.Size([40, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 381, 1000])
Span start logits:  torch.Size([40, 381])
span start probs dim:  torch.Size([40, 381])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 381]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 502, 200])
Passage Length:  502
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 502, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 502, 16])
Passage ques attention dim:  torch.Size([40, 502, 16])
Passage question vectors dim:  torch.Size([40, 502, 200])
Question Passage Similarity dim:  torch.Size([40, 502])
Question passage attention dim:  torch.Size([40, 502])
Final Merged Passage dim:  torch.Size([40, 502, 800])
Modeled Passage dim:  torch.Size([40, 502, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 502, 1000])
Span start logits:  torch.Size([40, 502])
span start probs dim:  torch.Size([40, 502])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 502]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 995, 200])
Passage Length:  995
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 995, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 995, 13])
Passage ques attention dim:  torch.Size([40, 995, 13])
Passage question vectors dim:  torch.Size([40, 995, 200])
Question Passage Similarity dim:  torch.Size([40, 995])
Question passage attention dim:  torch.Size([40, 995])
Final Merged Passage dim:  torch.Size([40, 995, 800])
Modeled Passage dim:  torch.Size([40, 995, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 995, 1000])
Span start logits:  torch.Size([40, 995])
span start probs dim:  torch.Size([40, 995])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 995]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 2009, 200])
Passage Length:  2009
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 2009, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 2009, 16])
Passage ques attention dim:  torch.Size([40, 2009, 16])
Passage question vectors dim:  torch.Size([40, 2009, 200])
Question Passage Similarity dim:  torch.Size([40, 2009])
Question passage attention dim:  torch.Size([40, 2009])
Final Merged Passage dim:  torch.Size([40, 2009, 800])
Modeled Passage dim:  torch.Size([40, 2009, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 2009, 1000])
Span start logits:  torch.Size([40, 2009])
span start probs dim:  torch.Size([40, 2009])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 2009]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 412, 200])
Passage Length:  412
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 412, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 412, 15])
Passage ques attention dim:  torch.Size([40, 412, 15])
Passage question vectors dim:  torch.Size([40, 412, 200])
Question Passage Similarity dim:  torch.Size([40, 412])
Question passage attention dim:  torch.Size([40, 412])
Final Merged Passage dim:  torch.Size([40, 412, 800])
Modeled Passage dim:  torch.Size([40, 412, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 412, 1000])
Span start logits:  torch.Size([40, 412])
span start probs dim:  torch.Size([40, 412])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 412]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 997, 200])
Passage Length:  997
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 997, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 997, 12])
Passage ques attention dim:  torch.Size([40, 997, 12])
Passage question vectors dim:  torch.Size([40, 997, 200])
Question Passage Similarity dim:  torch.Size([40, 997])
Question passage attention dim:  torch.Size([40, 997])
Final Merged Passage dim:  torch.Size([40, 997, 800])
Modeled Passage dim:  torch.Size([40, 997, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 997, 1000])
Span start logits:  torch.Size([40, 997])
span start probs dim:  torch.Size([40, 997])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 997]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 703, 200])
Passage Length:  703
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 703, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 703, 13])
Passage ques attention dim:  torch.Size([40, 703, 13])
Passage question vectors dim:  torch.Size([40, 703, 200])
Question Passage Similarity dim:  torch.Size([40, 703])
Question passage attention dim:  torch.Size([40, 703])
Final Merged Passage dim:  torch.Size([40, 703, 800])
Modeled Passage dim:  torch.Size([40, 703, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 703, 1000])
Span start logits:  torch.Size([40, 703])
span start probs dim:  torch.Size([40, 703])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 703]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 954, 200])
Passage Length:  954
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 954, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 954, 12])
Passage ques attention dim:  torch.Size([40, 954, 12])
Passage question vectors dim:  torch.Size([40, 954, 200])
Question Passage Similarity dim:  torch.Size([40, 954])
Question passage attention dim:  torch.Size([40, 954])
Final Merged Passage dim:  torch.Size([40, 954, 800])
Modeled Passage dim:  torch.Size([40, 954, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 954, 1000])
Span start logits:  torch.Size([40, 954])
span start probs dim:  torch.Size([40, 954])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 954]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1482, 200])
Passage Length:  1482
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1482, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1482, 14])
Passage ques attention dim:  torch.Size([40, 1482, 14])
Passage question vectors dim:  torch.Size([40, 1482, 200])
Question Passage Similarity dim:  torch.Size([40, 1482])
Question passage attention dim:  torch.Size([40, 1482])
Final Merged Passage dim:  torch.Size([40, 1482, 800])
Modeled Passage dim:  torch.Size([40, 1482, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1482, 1000])
Span start logits:  torch.Size([40, 1482])
span start probs dim:  torch.Size([40, 1482])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1482]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1312, 200])
Passage Length:  1312
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1312, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1312, 16])
Passage ques attention dim:  torch.Size([40, 1312, 16])
Passage question vectors dim:  torch.Size([40, 1312, 200])
Question Passage Similarity dim:  torch.Size([40, 1312])
Question passage attention dim:  torch.Size([40, 1312])
Final Merged Passage dim:  torch.Size([40, 1312, 800])
Modeled Passage dim:  torch.Size([40, 1312, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1312, 1000])
Span start logits:  torch.Size([40, 1312])
span start probs dim:  torch.Size([40, 1312])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1312]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 24, 200])
Embedded passage dim:  torch.Size([40, 1121, 200])
Passage Length:  1121
Encoded question dim:  torch.Size([40, 24, 200])
Encoded passage dim:  torch.Size([40, 1121, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1121, 24])
Passage ques attention dim:  torch.Size([40, 1121, 24])
Passage question vectors dim:  torch.Size([40, 1121, 200])
Question Passage Similarity dim:  torch.Size([40, 1121])
Question passage attention dim:  torch.Size([40, 1121])
Final Merged Passage dim:  torch.Size([40, 1121, 800])
Modeled Passage dim:  torch.Size([40, 1121, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1121, 1000])
Span start logits:  torch.Size([40, 1121])
span start probs dim:  torch.Size([40, 1121])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1121]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 569, 200])
Passage Length:  569
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 569, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 569, 13])
Passage ques attention dim:  torch.Size([40, 569, 13])
Passage question vectors dim:  torch.Size([40, 569, 200])
Question Passage Similarity dim:  torch.Size([40, 569])
Question passage attention dim:  torch.Size([40, 569])
Final Merged Passage dim:  torch.Size([40, 569, 800])
Modeled Passage dim:  torch.Size([40, 569, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 569, 1000])
Span start logits:  torch.Size([40, 569])
span start probs dim:  torch.Size([40, 569])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 569]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 451, 200])
Passage Length:  451
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 451, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 451, 15])
Passage ques attention dim:  torch.Size([40, 451, 15])
Passage question vectors dim:  torch.Size([40, 451, 200])
Question Passage Similarity dim:  torch.Size([40, 451])
Question passage attention dim:  torch.Size([40, 451])
Final Merged Passage dim:  torch.Size([40, 451, 800])
Modeled Passage dim:  torch.Size([40, 451, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 451, 1000])
Span start logits:  torch.Size([40, 451])
span start probs dim:  torch.Size([40, 451])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 451]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 975, 200])
Passage Length:  975
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 975, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 975, 15])
Passage ques attention dim:  torch.Size([40, 975, 15])
Passage question vectors dim:  torch.Size([40, 975, 200])
Question Passage Similarity dim:  torch.Size([40, 975])
Question passage attention dim:  torch.Size([40, 975])
Final Merged Passage dim:  torch.Size([40, 975, 800])
Modeled Passage dim:  torch.Size([40, 975, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 975, 1000])
Span start logits:  torch.Size([40, 975])
span start probs dim:  torch.Size([40, 975])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 975]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 723, 200])
Passage Length:  723
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 723, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 723, 18])
Passage ques attention dim:  torch.Size([40, 723, 18])
Passage question vectors dim:  torch.Size([40, 723, 200])
Question Passage Similarity dim:  torch.Size([40, 723])
Question passage attention dim:  torch.Size([40, 723])
Final Merged Passage dim:  torch.Size([40, 723, 800])
Modeled Passage dim:  torch.Size([40, 723, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 723, 1000])
Span start logits:  torch.Size([40, 723])
span start probs dim:  torch.Size([40, 723])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 723]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1261, 200])
Passage Length:  1261
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1261, 13])
Passage ques attention dim:  torch.Size([40, 1261, 13])
Passage question vectors dim:  torch.Size([40, 1261, 200])
Question Passage Similarity dim:  torch.Size([40, 1261])
Question passage attention dim:  torch.Size([40, 1261])
Final Merged Passage dim:  torch.Size([40, 1261, 800])
Modeled Passage dim:  torch.Size([40, 1261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1261, 1000])
Span start logits:  torch.Size([40, 1261])
span start probs dim:  torch.Size([40, 1261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1261]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1765, 200])
Passage Length:  1765
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1765, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1765, 15])
Passage ques attention dim:  torch.Size([40, 1765, 15])
Passage question vectors dim:  torch.Size([40, 1765, 200])
Question Passage Similarity dim:  torch.Size([40, 1765])
Question passage attention dim:  torch.Size([40, 1765])
Final Merged Passage dim:  torch.Size([40, 1765, 800])
Modeled Passage dim:  torch.Size([40, 1765, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1765, 1000])
Span start logits:  torch.Size([40, 1765])
span start probs dim:  torch.Size([40, 1765])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1765]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 862, 200])
Passage Length:  862
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 862, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 862, 16])
Passage ques attention dim:  torch.Size([40, 862, 16])
Passage question vectors dim:  torch.Size([40, 862, 200])
Question Passage Similarity dim:  torch.Size([40, 862])
Question passage attention dim:  torch.Size([40, 862])
Final Merged Passage dim:  torch.Size([40, 862, 800])
Modeled Passage dim:  torch.Size([40, 862, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 862, 1000])
Span start logits:  torch.Size([40, 862])
span start probs dim:  torch.Size([40, 862])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 862]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1284, 200])
Passage Length:  1284
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1284, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1284, 16])
Passage ques attention dim:  torch.Size([40, 1284, 16])
Passage question vectors dim:  torch.Size([40, 1284, 200])
Question Passage Similarity dim:  torch.Size([40, 1284])
Question passage attention dim:  torch.Size([40, 1284])
Final Merged Passage dim:  torch.Size([40, 1284, 800])
Modeled Passage dim:  torch.Size([40, 1284, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1284, 1000])
Span start logits:  torch.Size([40, 1284])
span start probs dim:  torch.Size([40, 1284])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1284]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 956, 200])
Passage Length:  956
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 956, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 956, 17])
Passage ques attention dim:  torch.Size([40, 956, 17])
Passage question vectors dim:  torch.Size([40, 956, 200])
Question Passage Similarity dim:  torch.Size([40, 956])
Question passage attention dim:  torch.Size([40, 956])
Final Merged Passage dim:  torch.Size([40, 956, 800])
Modeled Passage dim:  torch.Size([40, 956, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 956, 1000])
Span start logits:  torch.Size([40, 956])
span start probs dim:  torch.Size([40, 956])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 956]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 643, 200])
Passage Length:  643
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 643, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 643, 14])
Passage ques attention dim:  torch.Size([40, 643, 14])
Passage question vectors dim:  torch.Size([40, 643, 200])
Question Passage Similarity dim:  torch.Size([40, 643])
Question passage attention dim:  torch.Size([40, 643])
Final Merged Passage dim:  torch.Size([40, 643, 800])
Modeled Passage dim:  torch.Size([40, 643, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 643, 1000])
Span start logits:  torch.Size([40, 643])
span start probs dim:  torch.Size([40, 643])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 643]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 280, 200])
Passage Length:  280
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 280, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 280, 13])
Passage ques attention dim:  torch.Size([40, 280, 13])
Passage question vectors dim:  torch.Size([40, 280, 200])
Question Passage Similarity dim:  torch.Size([40, 280])
Question passage attention dim:  torch.Size([40, 280])
Final Merged Passage dim:  torch.Size([40, 280, 800])
Modeled Passage dim:  torch.Size([40, 280, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 280, 1000])
Span start logits:  torch.Size([40, 280])
span start probs dim:  torch.Size([40, 280])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 280]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 476, 200])
Passage Length:  476
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 476, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 476, 16])
Passage ques attention dim:  torch.Size([40, 476, 16])
Passage question vectors dim:  torch.Size([40, 476, 200])
Question Passage Similarity dim:  torch.Size([40, 476])
Question passage attention dim:  torch.Size([40, 476])
Final Merged Passage dim:  torch.Size([40, 476, 800])
Modeled Passage dim:  torch.Size([40, 476, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 476, 1000])
Span start logits:  torch.Size([40, 476])
span start probs dim:  torch.Size([40, 476])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 476]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 341, 200])
Passage Length:  341
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 341, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 341, 14])
Passage ques attention dim:  torch.Size([40, 341, 14])
Passage question vectors dim:  torch.Size([40, 341, 200])
Question Passage Similarity dim:  torch.Size([40, 341])
Question passage attention dim:  torch.Size([40, 341])
Final Merged Passage dim:  torch.Size([40, 341, 800])
Modeled Passage dim:  torch.Size([40, 341, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 341, 1000])
Span start logits:  torch.Size([40, 341])
span start probs dim:  torch.Size([40, 341])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 341]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 796, 200])
Passage Length:  796
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 796, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 796, 17])
Passage ques attention dim:  torch.Size([40, 796, 17])
Passage question vectors dim:  torch.Size([40, 796, 200])
Question Passage Similarity dim:  torch.Size([40, 796])
Question passage attention dim:  torch.Size([40, 796])
Final Merged Passage dim:  torch.Size([40, 796, 800])
Modeled Passage dim:  torch.Size([40, 796, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 796, 1000])
Span start logits:  torch.Size([40, 796])
span start probs dim:  torch.Size([40, 796])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 796]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1298, 200])
Passage Length:  1298
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1298, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1298, 15])
Passage ques attention dim:  torch.Size([40, 1298, 15])
Passage question vectors dim:  torch.Size([40, 1298, 200])
Question Passage Similarity dim:  torch.Size([40, 1298])
Question passage attention dim:  torch.Size([40, 1298])
Final Merged Passage dim:  torch.Size([40, 1298, 800])
Modeled Passage dim:  torch.Size([40, 1298, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1298, 1000])
Span start logits:  torch.Size([40, 1298])
span start probs dim:  torch.Size([40, 1298])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1298]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1252, 200])
Passage Length:  1252
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1252, 17])
Passage ques attention dim:  torch.Size([40, 1252, 17])
Passage question vectors dim:  torch.Size([40, 1252, 200])
Question Passage Similarity dim:  torch.Size([40, 1252])
Question passage attention dim:  torch.Size([40, 1252])
Final Merged Passage dim:  torch.Size([40, 1252, 800])
Modeled Passage dim:  torch.Size([40, 1252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1252, 1000])
Span start logits:  torch.Size([40, 1252])
span start probs dim:  torch.Size([40, 1252])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1252]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 581, 200])
Passage Length:  581
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 581, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 581, 15])
Passage ques attention dim:  torch.Size([40, 581, 15])
Passage question vectors dim:  torch.Size([40, 581, 200])
Question Passage Similarity dim:  torch.Size([40, 581])
Question passage attention dim:  torch.Size([40, 581])
Final Merged Passage dim:  torch.Size([40, 581, 800])
Modeled Passage dim:  torch.Size([40, 581, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 581, 1000])
Span start logits:  torch.Size([40, 581])
span start probs dim:  torch.Size([40, 581])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 581]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 459, 200])
Passage Length:  459
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 459, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 459, 14])
Passage ques attention dim:  torch.Size([40, 459, 14])
Passage question vectors dim:  torch.Size([40, 459, 200])
Question Passage Similarity dim:  torch.Size([40, 459])
Question passage attention dim:  torch.Size([40, 459])
Final Merged Passage dim:  torch.Size([40, 459, 800])
Modeled Passage dim:  torch.Size([40, 459, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 459, 1000])
Span start logits:  torch.Size([40, 459])
span start probs dim:  torch.Size([40, 459])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 459]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 23, 200])
Embedded passage dim:  torch.Size([40, 619, 200])
Passage Length:  619
Encoded question dim:  torch.Size([40, 23, 200])
Encoded passage dim:  torch.Size([40, 619, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 619, 23])
Passage ques attention dim:  torch.Size([40, 619, 23])
Passage question vectors dim:  torch.Size([40, 619, 200])
Question Passage Similarity dim:  torch.Size([40, 619])
Question passage attention dim:  torch.Size([40, 619])
Final Merged Passage dim:  torch.Size([40, 619, 800])
Modeled Passage dim:  torch.Size([40, 619, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 619, 1000])
Span start logits:  torch.Size([40, 619])
span start probs dim:  torch.Size([40, 619])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 619]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 629, 200])
Passage Length:  629
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 629, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 629, 12])
Passage ques attention dim:  torch.Size([40, 629, 12])
Passage question vectors dim:  torch.Size([40, 629, 200])
Question Passage Similarity dim:  torch.Size([40, 629])
Question passage attention dim:  torch.Size([40, 629])
Final Merged Passage dim:  torch.Size([40, 629, 800])
Modeled Passage dim:  torch.Size([40, 629, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 629, 1000])
Span start logits:  torch.Size([40, 629])
span start probs dim:  torch.Size([40, 629])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 629]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1086, 200])
Passage Length:  1086
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1086, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1086, 17])
Passage ques attention dim:  torch.Size([40, 1086, 17])
Passage question vectors dim:  torch.Size([40, 1086, 200])
Question Passage Similarity dim:  torch.Size([40, 1086])
Question passage attention dim:  torch.Size([40, 1086])
Final Merged Passage dim:  torch.Size([40, 1086, 800])
Modeled Passage dim:  torch.Size([40, 1086, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1086, 1000])
Span start logits:  torch.Size([40, 1086])
span start probs dim:  torch.Size([40, 1086])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1086]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 720, 200])
Passage Length:  720
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 720, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 720, 17])
Passage ques attention dim:  torch.Size([40, 720, 17])
Passage question vectors dim:  torch.Size([40, 720, 200])
Question Passage Similarity dim:  torch.Size([40, 720])
Question passage attention dim:  torch.Size([40, 720])
Final Merged Passage dim:  torch.Size([40, 720, 800])
Modeled Passage dim:  torch.Size([40, 720, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 720, 1000])
Span start logits:  torch.Size([40, 720])
span start probs dim:  torch.Size([40, 720])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 720]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 938, 200])
Passage Length:  938
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 938, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 938, 12])
Passage ques attention dim:  torch.Size([40, 938, 12])
Passage question vectors dim:  torch.Size([40, 938, 200])
Question Passage Similarity dim:  torch.Size([40, 938])
Question passage attention dim:  torch.Size([40, 938])
Final Merged Passage dim:  torch.Size([40, 938, 800])
Modeled Passage dim:  torch.Size([40, 938, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 938, 1000])
Span start logits:  torch.Size([40, 938])
span start probs dim:  torch.Size([40, 938])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 938]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 987, 200])
Passage Length:  987
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 987, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 987, 13])
Passage ques attention dim:  torch.Size([40, 987, 13])
Passage question vectors dim:  torch.Size([40, 987, 200])
Question Passage Similarity dim:  torch.Size([40, 987])
Question passage attention dim:  torch.Size([40, 987])
Final Merged Passage dim:  torch.Size([40, 987, 800])
Modeled Passage dim:  torch.Size([40, 987, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 987, 1000])
Span start logits:  torch.Size([40, 987])
span start probs dim:  torch.Size([40, 987])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 987]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 540, 200])
Passage Length:  540
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 540, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 540, 19])
Passage ques attention dim:  torch.Size([40, 540, 19])
Passage question vectors dim:  torch.Size([40, 540, 200])
Question Passage Similarity dim:  torch.Size([40, 540])
Question passage attention dim:  torch.Size([40, 540])
Final Merged Passage dim:  torch.Size([40, 540, 800])
Modeled Passage dim:  torch.Size([40, 540, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 540, 1000])
Span start logits:  torch.Size([40, 540])
span start probs dim:  torch.Size([40, 540])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 540]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1130, 200])
Passage Length:  1130
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1130, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1130, 18])
Passage ques attention dim:  torch.Size([40, 1130, 18])
Passage question vectors dim:  torch.Size([40, 1130, 200])
Question Passage Similarity dim:  torch.Size([40, 1130])
Question passage attention dim:  torch.Size([40, 1130])
Final Merged Passage dim:  torch.Size([40, 1130, 800])
Modeled Passage dim:  torch.Size([40, 1130, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1130, 1000])
Span start logits:  torch.Size([40, 1130])
span start probs dim:  torch.Size([40, 1130])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1130]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 714, 200])
Passage Length:  714
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 714, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 714, 13])
Passage ques attention dim:  torch.Size([40, 714, 13])
Passage question vectors dim:  torch.Size([40, 714, 200])
Question Passage Similarity dim:  torch.Size([40, 714])
Question passage attention dim:  torch.Size([40, 714])
Final Merged Passage dim:  torch.Size([40, 714, 800])
Modeled Passage dim:  torch.Size([40, 714, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 714, 1000])
Span start logits:  torch.Size([40, 714])
span start probs dim:  torch.Size([40, 714])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 714]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1342, 200])
Passage Length:  1342
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1342, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1342, 16])
Passage ques attention dim:  torch.Size([40, 1342, 16])
Passage question vectors dim:  torch.Size([40, 1342, 200])
Question Passage Similarity dim:  torch.Size([40, 1342])
Question passage attention dim:  torch.Size([40, 1342])
Final Merged Passage dim:  torch.Size([40, 1342, 800])
Modeled Passage dim:  torch.Size([40, 1342, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1342, 1000])
Span start logits:  torch.Size([40, 1342])
span start probs dim:  torch.Size([40, 1342])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1342]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 701, 200])
Passage Length:  701
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 701, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 701, 11])
Passage ques attention dim:  torch.Size([40, 701, 11])
Passage question vectors dim:  torch.Size([40, 701, 200])
Question Passage Similarity dim:  torch.Size([40, 701])
Question passage attention dim:  torch.Size([40, 701])
Final Merged Passage dim:  torch.Size([40, 701, 800])
Modeled Passage dim:  torch.Size([40, 701, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 701, 1000])
Span start logits:  torch.Size([40, 701])
span start probs dim:  torch.Size([40, 701])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 701]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 524, 200])
Passage Length:  524
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 524, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 524, 14])
Passage ques attention dim:  torch.Size([40, 524, 14])
Passage question vectors dim:  torch.Size([40, 524, 200])
Question Passage Similarity dim:  torch.Size([40, 524])
Question passage attention dim:  torch.Size([40, 524])
Final Merged Passage dim:  torch.Size([40, 524, 800])
Modeled Passage dim:  torch.Size([40, 524, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 524, 1000])
Span start logits:  torch.Size([40, 524])
span start probs dim:  torch.Size([40, 524])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 524]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 514, 200])
Passage Length:  514
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 514, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 514, 18])
Passage ques attention dim:  torch.Size([40, 514, 18])
Passage question vectors dim:  torch.Size([40, 514, 200])
Question Passage Similarity dim:  torch.Size([40, 514])
Question passage attention dim:  torch.Size([40, 514])
Final Merged Passage dim:  torch.Size([40, 514, 800])
Modeled Passage dim:  torch.Size([40, 514, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 514, 1000])
Span start logits:  torch.Size([40, 514])
span start probs dim:  torch.Size([40, 514])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 514]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 468, 200])
Passage Length:  468
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 468, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 468, 15])
Passage ques attention dim:  torch.Size([40, 468, 15])
Passage question vectors dim:  torch.Size([40, 468, 200])
Question Passage Similarity dim:  torch.Size([40, 468])
Question passage attention dim:  torch.Size([40, 468])
Final Merged Passage dim:  torch.Size([40, 468, 800])
Modeled Passage dim:  torch.Size([40, 468, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 468, 1000])
Span start logits:  torch.Size([40, 468])
span start probs dim:  torch.Size([40, 468])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 468]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 537, 200])
Passage Length:  537
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 537, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 537, 14])
Passage ques attention dim:  torch.Size([40, 537, 14])
Passage question vectors dim:  torch.Size([40, 537, 200])
Question Passage Similarity dim:  torch.Size([40, 537])
Question passage attention dim:  torch.Size([40, 537])
Final Merged Passage dim:  torch.Size([40, 537, 800])
Modeled Passage dim:  torch.Size([40, 537, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 537, 1000])
Span start logits:  torch.Size([40, 537])
span start probs dim:  torch.Size([40, 537])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 537]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 571, 200])
Passage Length:  571
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 571, 13])
Passage ques attention dim:  torch.Size([40, 571, 13])
Passage question vectors dim:  torch.Size([40, 571, 200])
Question Passage Similarity dim:  torch.Size([40, 571])
Question passage attention dim:  torch.Size([40, 571])
Final Merged Passage dim:  torch.Size([40, 571, 800])
Modeled Passage dim:  torch.Size([40, 571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 571, 1000])
Span start logits:  torch.Size([40, 571])
span start probs dim:  torch.Size([40, 571])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 571]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 543, 200])
Passage Length:  543
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 543, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 543, 14])
Passage ques attention dim:  torch.Size([40, 543, 14])
Passage question vectors dim:  torch.Size([40, 543, 200])
Question Passage Similarity dim:  torch.Size([40, 543])
Question passage attention dim:  torch.Size([40, 543])
Final Merged Passage dim:  torch.Size([40, 543, 800])
Modeled Passage dim:  torch.Size([40, 543, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 543, 1000])
Span start logits:  torch.Size([40, 543])
span start probs dim:  torch.Size([40, 543])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 543]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 26, 200])
Embedded passage dim:  torch.Size([40, 387, 200])
Passage Length:  387
Encoded question dim:  torch.Size([40, 26, 200])
Encoded passage dim:  torch.Size([40, 387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 387, 26])
Passage ques attention dim:  torch.Size([40, 387, 26])
Passage question vectors dim:  torch.Size([40, 387, 200])
Question Passage Similarity dim:  torch.Size([40, 387])
Question passage attention dim:  torch.Size([40, 387])
Final Merged Passage dim:  torch.Size([40, 387, 800])
Modeled Passage dim:  torch.Size([40, 387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 387, 1000])
Span start logits:  torch.Size([40, 387])
span start probs dim:  torch.Size([40, 387])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 387]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 836, 200])
Passage Length:  836
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 836, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 836, 15])
Passage ques attention dim:  torch.Size([40, 836, 15])
Passage question vectors dim:  torch.Size([40, 836, 200])
Question Passage Similarity dim:  torch.Size([40, 836])
Question passage attention dim:  torch.Size([40, 836])
Final Merged Passage dim:  torch.Size([40, 836, 800])
Modeled Passage dim:  torch.Size([40, 836, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 836, 1000])
Span start logits:  torch.Size([40, 836])
span start probs dim:  torch.Size([40, 836])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 836]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 332, 200])
Passage Length:  332
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 332, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 332, 17])
Passage ques attention dim:  torch.Size([40, 332, 17])
Passage question vectors dim:  torch.Size([40, 332, 200])
Question Passage Similarity dim:  torch.Size([40, 332])
Question passage attention dim:  torch.Size([40, 332])
Final Merged Passage dim:  torch.Size([40, 332, 800])
Modeled Passage dim:  torch.Size([40, 332, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 332, 1000])
Span start logits:  torch.Size([40, 332])
span start probs dim:  torch.Size([40, 332])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 332]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1022, 200])
Passage Length:  1022
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1022, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1022, 13])
Passage ques attention dim:  torch.Size([40, 1022, 13])
Passage question vectors dim:  torch.Size([40, 1022, 200])
Question Passage Similarity dim:  torch.Size([40, 1022])
Question passage attention dim:  torch.Size([40, 1022])
Final Merged Passage dim:  torch.Size([40, 1022, 800])
Modeled Passage dim:  torch.Size([40, 1022, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1022, 1000])
Span start logits:  torch.Size([40, 1022])
span start probs dim:  torch.Size([40, 1022])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1022]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 813, 200])
Passage Length:  813
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 813, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 813, 17])
Passage ques attention dim:  torch.Size([40, 813, 17])
Passage question vectors dim:  torch.Size([40, 813, 200])
Question Passage Similarity dim:  torch.Size([40, 813])
Question passage attention dim:  torch.Size([40, 813])
Final Merged Passage dim:  torch.Size([40, 813, 800])
Modeled Passage dim:  torch.Size([40, 813, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 813, 1000])
Span start logits:  torch.Size([40, 813])
span start probs dim:  torch.Size([40, 813])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 813]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 711, 200])
Passage Length:  711
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 711, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 711, 12])
Passage ques attention dim:  torch.Size([40, 711, 12])
Passage question vectors dim:  torch.Size([40, 711, 200])
Question Passage Similarity dim:  torch.Size([40, 711])
Question passage attention dim:  torch.Size([40, 711])
Final Merged Passage dim:  torch.Size([40, 711, 800])
Modeled Passage dim:  torch.Size([40, 711, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 711, 1000])
Span start logits:  torch.Size([40, 711])
span start probs dim:  torch.Size([40, 711])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 711]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 815, 200])
Passage Length:  815
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 815, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 815, 17])
Passage ques attention dim:  torch.Size([40, 815, 17])
Passage question vectors dim:  torch.Size([40, 815, 200])
Question Passage Similarity dim:  torch.Size([40, 815])
Question passage attention dim:  torch.Size([40, 815])
Final Merged Passage dim:  torch.Size([40, 815, 800])
Modeled Passage dim:  torch.Size([40, 815, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 815, 1000])
Span start logits:  torch.Size([40, 815])
span start probs dim:  torch.Size([40, 815])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 815]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 515, 200])
Passage Length:  515
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 515, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 515, 17])
Passage ques attention dim:  torch.Size([40, 515, 17])
Passage question vectors dim:  torch.Size([40, 515, 200])
Question Passage Similarity dim:  torch.Size([40, 515])
Question passage attention dim:  torch.Size([40, 515])
Final Merged Passage dim:  torch.Size([40, 515, 800])
Modeled Passage dim:  torch.Size([40, 515, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 515, 1000])
Span start logits:  torch.Size([40, 515])
span start probs dim:  torch.Size([40, 515])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 515]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1333, 200])
Passage Length:  1333
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1333, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1333, 16])
Passage ques attention dim:  torch.Size([40, 1333, 16])
Passage question vectors dim:  torch.Size([40, 1333, 200])
Question Passage Similarity dim:  torch.Size([40, 1333])
Question passage attention dim:  torch.Size([40, 1333])
Final Merged Passage dim:  torch.Size([40, 1333, 800])
Modeled Passage dim:  torch.Size([40, 1333, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1333, 1000])
Span start logits:  torch.Size([40, 1333])
span start probs dim:  torch.Size([40, 1333])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1333]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1465, 200])
Passage Length:  1465
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1465, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1465, 16])
Passage ques attention dim:  torch.Size([40, 1465, 16])
Passage question vectors dim:  torch.Size([40, 1465, 200])
Question Passage Similarity dim:  torch.Size([40, 1465])
Question passage attention dim:  torch.Size([40, 1465])
Final Merged Passage dim:  torch.Size([40, 1465, 800])
Modeled Passage dim:  torch.Size([40, 1465, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1465, 1000])
Span start logits:  torch.Size([40, 1465])
span start probs dim:  torch.Size([40, 1465])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1465]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 798, 200])
Passage Length:  798
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 798, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 798, 14])
Passage ques attention dim:  torch.Size([40, 798, 14])
Passage question vectors dim:  torch.Size([40, 798, 200])
Question Passage Similarity dim:  torch.Size([40, 798])
Question passage attention dim:  torch.Size([40, 798])
Final Merged Passage dim:  torch.Size([40, 798, 800])
Modeled Passage dim:  torch.Size([40, 798, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 798, 1000])
Span start logits:  torch.Size([40, 798])
span start probs dim:  torch.Size([40, 798])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 798]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 511, 200])
Passage Length:  511
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 511, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 511, 13])
Passage ques attention dim:  torch.Size([40, 511, 13])
Passage question vectors dim:  torch.Size([40, 511, 200])
Question Passage Similarity dim:  torch.Size([40, 511])
Question passage attention dim:  torch.Size([40, 511])
Final Merged Passage dim:  torch.Size([40, 511, 800])
Modeled Passage dim:  torch.Size([40, 511, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 511, 1000])
Span start logits:  torch.Size([40, 511])
span start probs dim:  torch.Size([40, 511])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 511]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 882, 200])
Passage Length:  882
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 882, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 882, 17])
Passage ques attention dim:  torch.Size([40, 882, 17])
Passage question vectors dim:  torch.Size([40, 882, 200])
Question Passage Similarity dim:  torch.Size([40, 882])
Question passage attention dim:  torch.Size([40, 882])
Final Merged Passage dim:  torch.Size([40, 882, 800])
Modeled Passage dim:  torch.Size([40, 882, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 882, 1000])
Span start logits:  torch.Size([40, 882])
span start probs dim:  torch.Size([40, 882])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 882]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 865, 200])
Passage Length:  865
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 865, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 865, 16])
Passage ques attention dim:  torch.Size([40, 865, 16])
Passage question vectors dim:  torch.Size([40, 865, 200])
Question Passage Similarity dim:  torch.Size([40, 865])
Question passage attention dim:  torch.Size([40, 865])
Final Merged Passage dim:  torch.Size([40, 865, 800])
Modeled Passage dim:  torch.Size([40, 865, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 865, 1000])
Span start logits:  torch.Size([40, 865])
span start probs dim:  torch.Size([40, 865])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 865]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1150, 200])
Passage Length:  1150
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1150, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1150, 14])
Passage ques attention dim:  torch.Size([40, 1150, 14])
Passage question vectors dim:  torch.Size([40, 1150, 200])
Question Passage Similarity dim:  torch.Size([40, 1150])
Question passage attention dim:  torch.Size([40, 1150])
Final Merged Passage dim:  torch.Size([40, 1150, 800])
Modeled Passage dim:  torch.Size([40, 1150, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1150, 1000])
Span start logits:  torch.Size([40, 1150])
span start probs dim:  torch.Size([40, 1150])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1150]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 609, 200])
Passage Length:  609
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 609, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 609, 17])
Passage ques attention dim:  torch.Size([40, 609, 17])
Passage question vectors dim:  torch.Size([40, 609, 200])
Question Passage Similarity dim:  torch.Size([40, 609])
Question passage attention dim:  torch.Size([40, 609])
Final Merged Passage dim:  torch.Size([40, 609, 800])
Modeled Passage dim:  torch.Size([40, 609, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 609, 1000])
Span start logits:  torch.Size([40, 609])
span start probs dim:  torch.Size([40, 609])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 609]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1053, 200])
Passage Length:  1053
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1053, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1053, 16])
Passage ques attention dim:  torch.Size([40, 1053, 16])
Passage question vectors dim:  torch.Size([40, 1053, 200])
Question Passage Similarity dim:  torch.Size([40, 1053])
Question passage attention dim:  torch.Size([40, 1053])
Final Merged Passage dim:  torch.Size([40, 1053, 800])
Modeled Passage dim:  torch.Size([40, 1053, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1053, 1000])
Span start logits:  torch.Size([40, 1053])
span start probs dim:  torch.Size([40, 1053])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1053]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 580, 200])
Passage Length:  580
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 580, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 580, 17])
Passage ques attention dim:  torch.Size([40, 580, 17])
Passage question vectors dim:  torch.Size([40, 580, 200])
Question Passage Similarity dim:  torch.Size([40, 580])
Question passage attention dim:  torch.Size([40, 580])
Final Merged Passage dim:  torch.Size([40, 580, 800])
Modeled Passage dim:  torch.Size([40, 580, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 580, 1000])
Span start logits:  torch.Size([40, 580])
span start probs dim:  torch.Size([40, 580])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 580]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 639, 200])
Passage Length:  639
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 639, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 639, 14])
Passage ques attention dim:  torch.Size([40, 639, 14])
Passage question vectors dim:  torch.Size([40, 639, 200])
Question Passage Similarity dim:  torch.Size([40, 639])
Question passage attention dim:  torch.Size([40, 639])
Final Merged Passage dim:  torch.Size([40, 639, 800])
Modeled Passage dim:  torch.Size([40, 639, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 639, 1000])
Span start logits:  torch.Size([40, 639])
span start probs dim:  torch.Size([40, 639])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 639]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 350, 15])
Passage ques attention dim:  torch.Size([40, 350, 15])
Passage question vectors dim:  torch.Size([40, 350, 200])
Question Passage Similarity dim:  torch.Size([40, 350])
Question passage attention dim:  torch.Size([40, 350])
Final Merged Passage dim:  torch.Size([40, 350, 800])
Modeled Passage dim:  torch.Size([40, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 350, 1000])
Span start logits:  torch.Size([40, 350])
span start probs dim:  torch.Size([40, 350])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 350]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 646, 200])
Passage Length:  646
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 646, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 646, 13])
Passage ques attention dim:  torch.Size([40, 646, 13])
Passage question vectors dim:  torch.Size([40, 646, 200])
Question Passage Similarity dim:  torch.Size([40, 646])
Question passage attention dim:  torch.Size([40, 646])
Final Merged Passage dim:  torch.Size([40, 646, 800])
Modeled Passage dim:  torch.Size([40, 646, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 646, 1000])
Span start logits:  torch.Size([40, 646])
span start probs dim:  torch.Size([40, 646])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 646]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 800, 200])
Passage Length:  800
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 800, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 800, 18])
Passage ques attention dim:  torch.Size([40, 800, 18])
Passage question vectors dim:  torch.Size([40, 800, 200])
Question Passage Similarity dim:  torch.Size([40, 800])
Question passage attention dim:  torch.Size([40, 800])
Final Merged Passage dim:  torch.Size([40, 800, 800])
Modeled Passage dim:  torch.Size([40, 800, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 800, 1000])
Span start logits:  torch.Size([40, 800])
span start probs dim:  torch.Size([40, 800])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 800]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 506, 200])
Passage Length:  506
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 506, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 506, 12])
Passage ques attention dim:  torch.Size([40, 506, 12])
Passage question vectors dim:  torch.Size([40, 506, 200])
Question Passage Similarity dim:  torch.Size([40, 506])
Question passage attention dim:  torch.Size([40, 506])
Final Merged Passage dim:  torch.Size([40, 506, 800])
Modeled Passage dim:  torch.Size([40, 506, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 506, 1000])
Span start logits:  torch.Size([40, 506])
span start probs dim:  torch.Size([40, 506])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 506]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 320, 200])
Passage Length:  320
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 320, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 320, 15])
Passage ques attention dim:  torch.Size([40, 320, 15])
Passage question vectors dim:  torch.Size([40, 320, 200])
Question Passage Similarity dim:  torch.Size([40, 320])
Question passage attention dim:  torch.Size([40, 320])
Final Merged Passage dim:  torch.Size([40, 320, 800])
Modeled Passage dim:  torch.Size([40, 320, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 320, 1000])
Span start logits:  torch.Size([40, 320])
span start probs dim:  torch.Size([40, 320])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 320]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1521, 200])
Passage Length:  1521
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1521, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1521, 12])
Passage ques attention dim:  torch.Size([40, 1521, 12])
Passage question vectors dim:  torch.Size([40, 1521, 200])
Question Passage Similarity dim:  torch.Size([40, 1521])
Question passage attention dim:  torch.Size([40, 1521])
Final Merged Passage dim:  torch.Size([40, 1521, 800])
Modeled Passage dim:  torch.Size([40, 1521, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1521, 1000])
Span start logits:  torch.Size([40, 1521])
span start probs dim:  torch.Size([40, 1521])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1521]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 298, 200])
Passage Length:  298
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 298, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 298, 19])
Passage ques attention dim:  torch.Size([40, 298, 19])
Passage question vectors dim:  torch.Size([40, 298, 200])
Question Passage Similarity dim:  torch.Size([40, 298])
Question passage attention dim:  torch.Size([40, 298])
Final Merged Passage dim:  torch.Size([40, 298, 800])
Modeled Passage dim:  torch.Size([40, 298, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 298, 1000])
Span start logits:  torch.Size([40, 298])
span start probs dim:  torch.Size([40, 298])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 298]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 204, 200])
Passage Length:  204
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 204, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 204, 11])
Passage ques attention dim:  torch.Size([40, 204, 11])
Passage question vectors dim:  torch.Size([40, 204, 200])
Question Passage Similarity dim:  torch.Size([40, 204])
Question passage attention dim:  torch.Size([40, 204])
Final Merged Passage dim:  torch.Size([40, 204, 800])
Modeled Passage dim:  torch.Size([40, 204, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 204, 1000])
Span start logits:  torch.Size([40, 204])
span start probs dim:  torch.Size([40, 204])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 204]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 502, 200])
Passage Length:  502
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 502, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 502, 14])
Passage ques attention dim:  torch.Size([40, 502, 14])
Passage question vectors dim:  torch.Size([40, 502, 200])
Question Passage Similarity dim:  torch.Size([40, 502])
Question passage attention dim:  torch.Size([40, 502])
Final Merged Passage dim:  torch.Size([40, 502, 800])
Modeled Passage dim:  torch.Size([40, 502, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 502, 1000])
Span start logits:  torch.Size([40, 502])
span start probs dim:  torch.Size([40, 502])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 502]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 437, 200])
Passage Length:  437
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 437, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 437, 13])
Passage ques attention dim:  torch.Size([40, 437, 13])
Passage question vectors dim:  torch.Size([40, 437, 200])
Question Passage Similarity dim:  torch.Size([40, 437])
Question passage attention dim:  torch.Size([40, 437])
Final Merged Passage dim:  torch.Size([40, 437, 800])
Modeled Passage dim:  torch.Size([40, 437, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 437, 1000])
Span start logits:  torch.Size([40, 437])
span start probs dim:  torch.Size([40, 437])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 437]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 1308, 200])
Passage Length:  1308
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 1308, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1308, 20])
Passage ques attention dim:  torch.Size([40, 1308, 20])
Passage question vectors dim:  torch.Size([40, 1308, 200])
Question Passage Similarity dim:  torch.Size([40, 1308])
Question passage attention dim:  torch.Size([40, 1308])
Final Merged Passage dim:  torch.Size([40, 1308, 800])
Modeled Passage dim:  torch.Size([40, 1308, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1308, 1000])
Span start logits:  torch.Size([40, 1308])
span start probs dim:  torch.Size([40, 1308])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1308]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 191, 200])
Passage Length:  191
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 191, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 191, 12])
Passage ques attention dim:  torch.Size([40, 191, 12])
Passage question vectors dim:  torch.Size([40, 191, 200])
Question Passage Similarity dim:  torch.Size([40, 191])
Question passage attention dim:  torch.Size([40, 191])
Final Merged Passage dim:  torch.Size([40, 191, 800])
Modeled Passage dim:  torch.Size([40, 191, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 191, 1000])
Span start logits:  torch.Size([40, 191])
span start probs dim:  torch.Size([40, 191])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 191]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 807, 200])
Passage Length:  807
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 807, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 807, 13])
Passage ques attention dim:  torch.Size([40, 807, 13])
Passage question vectors dim:  torch.Size([40, 807, 200])
Question Passage Similarity dim:  torch.Size([40, 807])
Question passage attention dim:  torch.Size([40, 807])
Final Merged Passage dim:  torch.Size([40, 807, 800])
Modeled Passage dim:  torch.Size([40, 807, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 807, 1000])
Span start logits:  torch.Size([40, 807])
span start probs dim:  torch.Size([40, 807])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 807]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 274, 200])
Passage Length:  274
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 274, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 274, 12])
Passage ques attention dim:  torch.Size([40, 274, 12])
Passage question vectors dim:  torch.Size([40, 274, 200])
Question Passage Similarity dim:  torch.Size([40, 274])
Question passage attention dim:  torch.Size([40, 274])
Final Merged Passage dim:  torch.Size([40, 274, 800])
Modeled Passage dim:  torch.Size([40, 274, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 274, 1000])
Span start logits:  torch.Size([40, 274])
span start probs dim:  torch.Size([40, 274])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 274]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 928, 200])
Passage Length:  928
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 928, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 928, 15])
Passage ques attention dim:  torch.Size([40, 928, 15])
Passage question vectors dim:  torch.Size([40, 928, 200])
Question Passage Similarity dim:  torch.Size([40, 928])
Question passage attention dim:  torch.Size([40, 928])
Final Merged Passage dim:  torch.Size([40, 928, 800])
Modeled Passage dim:  torch.Size([40, 928, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 928, 1000])
Span start logits:  torch.Size([40, 928])
span start probs dim:  torch.Size([40, 928])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 928]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 735, 200])
Passage Length:  735
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 735, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 735, 14])
Passage ques attention dim:  torch.Size([40, 735, 14])
Passage question vectors dim:  torch.Size([40, 735, 200])
Question Passage Similarity dim:  torch.Size([40, 735])
Question passage attention dim:  torch.Size([40, 735])
Final Merged Passage dim:  torch.Size([40, 735, 800])
Modeled Passage dim:  torch.Size([40, 735, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 735, 1000])
Span start logits:  torch.Size([40, 735])
span start probs dim:  torch.Size([40, 735])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 735]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 822, 200])
Passage Length:  822
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 822, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 822, 14])
Passage ques attention dim:  torch.Size([40, 822, 14])
Passage question vectors dim:  torch.Size([40, 822, 200])
Question Passage Similarity dim:  torch.Size([40, 822])
Question passage attention dim:  torch.Size([40, 822])
Final Merged Passage dim:  torch.Size([40, 822, 800])
Modeled Passage dim:  torch.Size([40, 822, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 822, 1000])
Span start logits:  torch.Size([40, 822])
span start probs dim:  torch.Size([40, 822])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 822]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 639, 200])
Passage Length:  639
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 639, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 639, 19])
Passage ques attention dim:  torch.Size([40, 639, 19])
Passage question vectors dim:  torch.Size([40, 639, 200])
Question Passage Similarity dim:  torch.Size([40, 639])
Question passage attention dim:  torch.Size([40, 639])
Final Merged Passage dim:  torch.Size([40, 639, 800])
Modeled Passage dim:  torch.Size([40, 639, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 639, 1000])
Span start logits:  torch.Size([40, 639])
span start probs dim:  torch.Size([40, 639])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 639]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 356, 200])
Passage Length:  356
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 356, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 356, 13])
Passage ques attention dim:  torch.Size([40, 356, 13])
Passage question vectors dim:  torch.Size([40, 356, 200])
Question Passage Similarity dim:  torch.Size([40, 356])
Question passage attention dim:  torch.Size([40, 356])
Final Merged Passage dim:  torch.Size([40, 356, 800])
Modeled Passage dim:  torch.Size([40, 356, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 356, 1000])
Span start logits:  torch.Size([40, 356])
span start probs dim:  torch.Size([40, 356])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 356]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1100, 200])
Passage Length:  1100
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1100, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1100, 15])
Passage ques attention dim:  torch.Size([40, 1100, 15])
Passage question vectors dim:  torch.Size([40, 1100, 200])
Question Passage Similarity dim:  torch.Size([40, 1100])
Question passage attention dim:  torch.Size([40, 1100])
Final Merged Passage dim:  torch.Size([40, 1100, 800])
Modeled Passage dim:  torch.Size([40, 1100, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1100, 1000])
Span start logits:  torch.Size([40, 1100])
span start probs dim:  torch.Size([40, 1100])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1100]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1025, 200])
Passage Length:  1025
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1025, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1025, 13])
Passage ques attention dim:  torch.Size([40, 1025, 13])
Passage question vectors dim:  torch.Size([40, 1025, 200])
Question Passage Similarity dim:  torch.Size([40, 1025])
Question passage attention dim:  torch.Size([40, 1025])
Final Merged Passage dim:  torch.Size([40, 1025, 800])
Modeled Passage dim:  torch.Size([40, 1025, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1025, 1000])
Span start logits:  torch.Size([40, 1025])
span start probs dim:  torch.Size([40, 1025])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1025]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 298, 200])
Passage Length:  298
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 298, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 298, 12])
Passage ques attention dim:  torch.Size([40, 298, 12])
Passage question vectors dim:  torch.Size([40, 298, 200])
Question Passage Similarity dim:  torch.Size([40, 298])
Question passage attention dim:  torch.Size([40, 298])
Final Merged Passage dim:  torch.Size([40, 298, 800])
Modeled Passage dim:  torch.Size([40, 298, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 298, 1000])
Span start logits:  torch.Size([40, 298])
span start probs dim:  torch.Size([40, 298])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 298]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1262, 200])
Passage Length:  1262
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1262, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1262, 16])
Passage ques attention dim:  torch.Size([40, 1262, 16])
Passage question vectors dim:  torch.Size([40, 1262, 200])
Question Passage Similarity dim:  torch.Size([40, 1262])
Question passage attention dim:  torch.Size([40, 1262])
Final Merged Passage dim:  torch.Size([40, 1262, 800])
Modeled Passage dim:  torch.Size([40, 1262, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1262, 1000])
Span start logits:  torch.Size([40, 1262])
span start probs dim:  torch.Size([40, 1262])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1262]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1487, 200])
Passage Length:  1487
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1487, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1487, 15])
Passage ques attention dim:  torch.Size([40, 1487, 15])
Passage question vectors dim:  torch.Size([40, 1487, 200])
Question Passage Similarity dim:  torch.Size([40, 1487])
Question passage attention dim:  torch.Size([40, 1487])
Final Merged Passage dim:  torch.Size([40, 1487, 800])
Modeled Passage dim:  torch.Size([40, 1487, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1487, 1000])
Span start logits:  torch.Size([40, 1487])
span start probs dim:  torch.Size([40, 1487])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1487]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 876, 200])
Passage Length:  876
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 876, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 876, 17])
Passage ques attention dim:  torch.Size([40, 876, 17])
Passage question vectors dim:  torch.Size([40, 876, 200])
Question Passage Similarity dim:  torch.Size([40, 876])
Question passage attention dim:  torch.Size([40, 876])
Final Merged Passage dim:  torch.Size([40, 876, 800])
Modeled Passage dim:  torch.Size([40, 876, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 876, 1000])
Span start logits:  torch.Size([40, 876])
span start probs dim:  torch.Size([40, 876])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 876]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 902, 200])
Passage Length:  902
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 902, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 902, 15])
Passage ques attention dim:  torch.Size([40, 902, 15])
Passage question vectors dim:  torch.Size([40, 902, 200])
Question Passage Similarity dim:  torch.Size([40, 902])
Question passage attention dim:  torch.Size([40, 902])
Final Merged Passage dim:  torch.Size([40, 902, 800])
Modeled Passage dim:  torch.Size([40, 902, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 902, 1000])
Span start logits:  torch.Size([40, 902])
span start probs dim:  torch.Size([40, 902])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 902]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 503, 200])
Passage Length:  503
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 503, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 503, 16])
Passage ques attention dim:  torch.Size([40, 503, 16])
Passage question vectors dim:  torch.Size([40, 503, 200])
Question Passage Similarity dim:  torch.Size([40, 503])
Question passage attention dim:  torch.Size([40, 503])
Final Merged Passage dim:  torch.Size([40, 503, 800])
Modeled Passage dim:  torch.Size([40, 503, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 503, 1000])
Span start logits:  torch.Size([40, 503])
span start probs dim:  torch.Size([40, 503])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 503]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 317, 200])
Passage Length:  317
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 317, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 317, 16])
Passage ques attention dim:  torch.Size([40, 317, 16])
Passage question vectors dim:  torch.Size([40, 317, 200])
Question Passage Similarity dim:  torch.Size([40, 317])
Question passage attention dim:  torch.Size([40, 317])
Final Merged Passage dim:  torch.Size([40, 317, 800])
Modeled Passage dim:  torch.Size([40, 317, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 317, 1000])
Span start logits:  torch.Size([40, 317])
span start probs dim:  torch.Size([40, 317])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 317]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1160, 200])
Passage Length:  1160
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1160, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1160, 18])
Passage ques attention dim:  torch.Size([40, 1160, 18])
Passage question vectors dim:  torch.Size([40, 1160, 200])
Question Passage Similarity dim:  torch.Size([40, 1160])
Question passage attention dim:  torch.Size([40, 1160])
Final Merged Passage dim:  torch.Size([40, 1160, 800])
Modeled Passage dim:  torch.Size([40, 1160, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1160, 1000])
Span start logits:  torch.Size([40, 1160])
span start probs dim:  torch.Size([40, 1160])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1160]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1345, 200])
Passage Length:  1345
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1345, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1345, 16])
Passage ques attention dim:  torch.Size([40, 1345, 16])
Passage question vectors dim:  torch.Size([40, 1345, 200])
Question Passage Similarity dim:  torch.Size([40, 1345])
Question passage attention dim:  torch.Size([40, 1345])
Final Merged Passage dim:  torch.Size([40, 1345, 800])
Modeled Passage dim:  torch.Size([40, 1345, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1345, 1000])
Span start logits:  torch.Size([40, 1345])
span start probs dim:  torch.Size([40, 1345])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1345]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 343, 200])
Passage Length:  343
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 343, 12])
Passage ques attention dim:  torch.Size([40, 343, 12])
Passage question vectors dim:  torch.Size([40, 343, 200])
Question Passage Similarity dim:  torch.Size([40, 343])
Question passage attention dim:  torch.Size([40, 343])
Final Merged Passage dim:  torch.Size([40, 343, 800])
Modeled Passage dim:  torch.Size([40, 343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 343, 1000])
Span start logits:  torch.Size([40, 343])
span start probs dim:  torch.Size([40, 343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 426, 200])
Passage Length:  426
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 426, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 426, 13])
Passage ques attention dim:  torch.Size([40, 426, 13])
Passage question vectors dim:  torch.Size([40, 426, 200])
Question Passage Similarity dim:  torch.Size([40, 426])
Question passage attention dim:  torch.Size([40, 426])
Final Merged Passage dim:  torch.Size([40, 426, 800])
Modeled Passage dim:  torch.Size([40, 426, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 426, 1000])
Span start logits:  torch.Size([40, 426])
span start probs dim:  torch.Size([40, 426])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 426]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 546, 200])
Passage Length:  546
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 546, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 546, 14])
Passage ques attention dim:  torch.Size([40, 546, 14])
Passage question vectors dim:  torch.Size([40, 546, 200])
Question Passage Similarity dim:  torch.Size([40, 546])
Question passage attention dim:  torch.Size([40, 546])
Final Merged Passage dim:  torch.Size([40, 546, 800])
Modeled Passage dim:  torch.Size([40, 546, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 546, 1000])
Span start logits:  torch.Size([40, 546])
span start probs dim:  torch.Size([40, 546])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 546]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1225, 200])
Passage Length:  1225
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1225, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1225, 16])
Passage ques attention dim:  torch.Size([40, 1225, 16])
Passage question vectors dim:  torch.Size([40, 1225, 200])
Question Passage Similarity dim:  torch.Size([40, 1225])
Question passage attention dim:  torch.Size([40, 1225])
Final Merged Passage dim:  torch.Size([40, 1225, 800])
Modeled Passage dim:  torch.Size([40, 1225, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1225, 1000])
Span start logits:  torch.Size([40, 1225])
span start probs dim:  torch.Size([40, 1225])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1225]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1189, 200])
Passage Length:  1189
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1189, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1189, 17])
Passage ques attention dim:  torch.Size([40, 1189, 17])
Passage question vectors dim:  torch.Size([40, 1189, 200])
Question Passage Similarity dim:  torch.Size([40, 1189])
Question passage attention dim:  torch.Size([40, 1189])
Final Merged Passage dim:  torch.Size([40, 1189, 800])
Modeled Passage dim:  torch.Size([40, 1189, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1189, 1000])
Span start logits:  torch.Size([40, 1189])
span start probs dim:  torch.Size([40, 1189])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1189]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1076, 200])
Passage Length:  1076
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1076, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1076, 18])
Passage ques attention dim:  torch.Size([40, 1076, 18])
Passage question vectors dim:  torch.Size([40, 1076, 200])
Question Passage Similarity dim:  torch.Size([40, 1076])
Question passage attention dim:  torch.Size([40, 1076])
Final Merged Passage dim:  torch.Size([40, 1076, 800])
Modeled Passage dim:  torch.Size([40, 1076, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1076, 1000])
Span start logits:  torch.Size([40, 1076])
span start probs dim:  torch.Size([40, 1076])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1076]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 354, 200])
Passage Length:  354
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 354, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 354, 18])
Passage ques attention dim:  torch.Size([40, 354, 18])
Passage question vectors dim:  torch.Size([40, 354, 200])
Question Passage Similarity dim:  torch.Size([40, 354])
Question passage attention dim:  torch.Size([40, 354])
Final Merged Passage dim:  torch.Size([40, 354, 800])
Modeled Passage dim:  torch.Size([40, 354, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 354, 1000])
Span start logits:  torch.Size([40, 354])
span start probs dim:  torch.Size([40, 354])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 354]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1367, 200])
Passage Length:  1367
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1367, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1367, 16])
Passage ques attention dim:  torch.Size([40, 1367, 16])
Passage question vectors dim:  torch.Size([40, 1367, 200])
Question Passage Similarity dim:  torch.Size([40, 1367])
Question passage attention dim:  torch.Size([40, 1367])
Final Merged Passage dim:  torch.Size([40, 1367, 800])
Modeled Passage dim:  torch.Size([40, 1367, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1367, 1000])
Span start logits:  torch.Size([40, 1367])
span start probs dim:  torch.Size([40, 1367])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1367]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 358, 200])
Passage Length:  358
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 358, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 358, 13])
Passage ques attention dim:  torch.Size([40, 358, 13])
Passage question vectors dim:  torch.Size([40, 358, 200])
Question Passage Similarity dim:  torch.Size([40, 358])
Question passage attention dim:  torch.Size([40, 358])
Final Merged Passage dim:  torch.Size([40, 358, 800])
Modeled Passage dim:  torch.Size([40, 358, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 358, 1000])
Span start logits:  torch.Size([40, 358])
span start probs dim:  torch.Size([40, 358])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 358]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 188, 200])
Passage Length:  188
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 188, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 188, 16])
Passage ques attention dim:  torch.Size([40, 188, 16])
Passage question vectors dim:  torch.Size([40, 188, 200])
Question Passage Similarity dim:  torch.Size([40, 188])
Question passage attention dim:  torch.Size([40, 188])
Final Merged Passage dim:  torch.Size([40, 188, 800])
Modeled Passage dim:  torch.Size([40, 188, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 188, 1000])
Span start logits:  torch.Size([40, 188])
span start probs dim:  torch.Size([40, 188])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 188]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 588, 14])
Passage ques attention dim:  torch.Size([40, 588, 14])
Passage question vectors dim:  torch.Size([40, 588, 200])
Question Passage Similarity dim:  torch.Size([40, 588])
Question passage attention dim:  torch.Size([40, 588])
Final Merged Passage dim:  torch.Size([40, 588, 800])
Modeled Passage dim:  torch.Size([40, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 588, 1000])
Span start logits:  torch.Size([40, 588])
span start probs dim:  torch.Size([40, 588])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 588]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 375, 200])
Passage Length:  375
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 375, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 375, 14])
Passage ques attention dim:  torch.Size([40, 375, 14])
Passage question vectors dim:  torch.Size([40, 375, 200])
Question Passage Similarity dim:  torch.Size([40, 375])
Question passage attention dim:  torch.Size([40, 375])
Final Merged Passage dim:  torch.Size([40, 375, 800])
Modeled Passage dim:  torch.Size([40, 375, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 375, 1000])
Span start logits:  torch.Size([40, 375])
span start probs dim:  torch.Size([40, 375])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 375]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1082, 200])
Passage Length:  1082
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1082, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1082, 14])
Passage ques attention dim:  torch.Size([40, 1082, 14])
Passage question vectors dim:  torch.Size([40, 1082, 200])
Question Passage Similarity dim:  torch.Size([40, 1082])
Question passage attention dim:  torch.Size([40, 1082])
Final Merged Passage dim:  torch.Size([40, 1082, 800])
Modeled Passage dim:  torch.Size([40, 1082, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1082, 1000])
Span start logits:  torch.Size([40, 1082])
span start probs dim:  torch.Size([40, 1082])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1082]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 467, 200])
Passage Length:  467
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 467, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 467, 14])
Passage ques attention dim:  torch.Size([40, 467, 14])
Passage question vectors dim:  torch.Size([40, 467, 200])
Question Passage Similarity dim:  torch.Size([40, 467])
Question passage attention dim:  torch.Size([40, 467])
Final Merged Passage dim:  torch.Size([40, 467, 800])
Modeled Passage dim:  torch.Size([40, 467, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 467, 1000])
Span start logits:  torch.Size([40, 467])
span start probs dim:  torch.Size([40, 467])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 467]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 368, 200])
Passage Length:  368
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 368, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 368, 15])
Passage ques attention dim:  torch.Size([40, 368, 15])
Passage question vectors dim:  torch.Size([40, 368, 200])
Question Passage Similarity dim:  torch.Size([40, 368])
Question passage attention dim:  torch.Size([40, 368])
Final Merged Passage dim:  torch.Size([40, 368, 800])
Modeled Passage dim:  torch.Size([40, 368, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 368, 1000])
Span start logits:  torch.Size([40, 368])
span start probs dim:  torch.Size([40, 368])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 368]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 489, 200])
Passage Length:  489
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 489, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 489, 12])
Passage ques attention dim:  torch.Size([40, 489, 12])
Passage question vectors dim:  torch.Size([40, 489, 200])
Question Passage Similarity dim:  torch.Size([40, 489])
Question passage attention dim:  torch.Size([40, 489])
Final Merged Passage dim:  torch.Size([40, 489, 800])
Modeled Passage dim:  torch.Size([40, 489, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 489, 1000])
Span start logits:  torch.Size([40, 489])
span start probs dim:  torch.Size([40, 489])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 489]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1114, 200])
Passage Length:  1114
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1114, 17])
Passage ques attention dim:  torch.Size([40, 1114, 17])
Passage question vectors dim:  torch.Size([40, 1114, 200])
Question Passage Similarity dim:  torch.Size([40, 1114])
Question passage attention dim:  torch.Size([40, 1114])
Final Merged Passage dim:  torch.Size([40, 1114, 800])
Modeled Passage dim:  torch.Size([40, 1114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1114, 1000])
Span start logits:  torch.Size([40, 1114])
span start probs dim:  torch.Size([40, 1114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 588, 13])
Passage ques attention dim:  torch.Size([40, 588, 13])
Passage question vectors dim:  torch.Size([40, 588, 200])
Question Passage Similarity dim:  torch.Size([40, 588])
Question passage attention dim:  torch.Size([40, 588])
Final Merged Passage dim:  torch.Size([40, 588, 800])
Modeled Passage dim:  torch.Size([40, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 588, 1000])
Span start logits:  torch.Size([40, 588])
span start probs dim:  torch.Size([40, 588])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 588]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 861, 200])
Passage Length:  861
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 861, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 861, 14])
Passage ques attention dim:  torch.Size([40, 861, 14])
Passage question vectors dim:  torch.Size([40, 861, 200])
Question Passage Similarity dim:  torch.Size([40, 861])
Question passage attention dim:  torch.Size([40, 861])
Final Merged Passage dim:  torch.Size([40, 861, 800])
Modeled Passage dim:  torch.Size([40, 861, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 861, 1000])
Span start logits:  torch.Size([40, 861])
span start probs dim:  torch.Size([40, 861])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 861]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1387, 200])
Passage Length:  1387
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1387, 14])
Passage ques attention dim:  torch.Size([40, 1387, 14])
Passage question vectors dim:  torch.Size([40, 1387, 200])
Question Passage Similarity dim:  torch.Size([40, 1387])
Question passage attention dim:  torch.Size([40, 1387])
Final Merged Passage dim:  torch.Size([40, 1387, 800])
Modeled Passage dim:  torch.Size([40, 1387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1387, 1000])
Span start logits:  torch.Size([40, 1387])
span start probs dim:  torch.Size([40, 1387])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1387]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1049, 200])
Passage Length:  1049
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1049, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1049, 13])
Passage ques attention dim:  torch.Size([40, 1049, 13])
Passage question vectors dim:  torch.Size([40, 1049, 200])
Question Passage Similarity dim:  torch.Size([40, 1049])
Question passage attention dim:  torch.Size([40, 1049])
Final Merged Passage dim:  torch.Size([40, 1049, 800])
Modeled Passage dim:  torch.Size([40, 1049, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1049, 1000])
Span start logits:  torch.Size([40, 1049])
span start probs dim:  torch.Size([40, 1049])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1049]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 588, 12])
Passage ques attention dim:  torch.Size([40, 588, 12])
Passage question vectors dim:  torch.Size([40, 588, 200])
Question Passage Similarity dim:  torch.Size([40, 588])
Question passage attention dim:  torch.Size([40, 588])
Final Merged Passage dim:  torch.Size([40, 588, 800])
Modeled Passage dim:  torch.Size([40, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 588, 1000])
Span start logits:  torch.Size([40, 588])
span start probs dim:  torch.Size([40, 588])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 588]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 563, 200])
Passage Length:  563
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 563, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 563, 13])
Passage ques attention dim:  torch.Size([40, 563, 13])
Passage question vectors dim:  torch.Size([40, 563, 200])
Question Passage Similarity dim:  torch.Size([40, 563])
Question passage attention dim:  torch.Size([40, 563])
Final Merged Passage dim:  torch.Size([40, 563, 800])
Modeled Passage dim:  torch.Size([40, 563, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 563, 1000])
Span start logits:  torch.Size([40, 563])
span start probs dim:  torch.Size([40, 563])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 563]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 333, 200])
Passage Length:  333
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 333, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 333, 16])
Passage ques attention dim:  torch.Size([40, 333, 16])
Passage question vectors dim:  torch.Size([40, 333, 200])
Question Passage Similarity dim:  torch.Size([40, 333])
Question passage attention dim:  torch.Size([40, 333])
Final Merged Passage dim:  torch.Size([40, 333, 800])
Modeled Passage dim:  torch.Size([40, 333, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 333, 1000])
Span start logits:  torch.Size([40, 333])
span start probs dim:  torch.Size([40, 333])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 333]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 295, 200])
Passage Length:  295
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 295, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 295, 14])
Passage ques attention dim:  torch.Size([40, 295, 14])
Passage question vectors dim:  torch.Size([40, 295, 200])
Question Passage Similarity dim:  torch.Size([40, 295])
Question passage attention dim:  torch.Size([40, 295])
Final Merged Passage dim:  torch.Size([40, 295, 800])
Modeled Passage dim:  torch.Size([40, 295, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 295, 1000])
Span start logits:  torch.Size([40, 295])
span start probs dim:  torch.Size([40, 295])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 295]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1045, 200])
Passage Length:  1045
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1045, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1045, 12])
Passage ques attention dim:  torch.Size([40, 1045, 12])
Passage question vectors dim:  torch.Size([40, 1045, 200])
Question Passage Similarity dim:  torch.Size([40, 1045])
Question passage attention dim:  torch.Size([40, 1045])
Final Merged Passage dim:  torch.Size([40, 1045, 800])
Modeled Passage dim:  torch.Size([40, 1045, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1045, 1000])
Span start logits:  torch.Size([40, 1045])
span start probs dim:  torch.Size([40, 1045])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1045]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1297, 200])
Passage Length:  1297
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1297, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1297, 13])
Passage ques attention dim:  torch.Size([40, 1297, 13])
Passage question vectors dim:  torch.Size([40, 1297, 200])
Question Passage Similarity dim:  torch.Size([40, 1297])
Question passage attention dim:  torch.Size([40, 1297])
Final Merged Passage dim:  torch.Size([40, 1297, 800])
Modeled Passage dim:  torch.Size([40, 1297, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1297, 1000])
Span start logits:  torch.Size([40, 1297])
span start probs dim:  torch.Size([40, 1297])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1297]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 266, 200])
Passage Length:  266
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 266, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 266, 18])
Passage ques attention dim:  torch.Size([40, 266, 18])
Passage question vectors dim:  torch.Size([40, 266, 200])
Question Passage Similarity dim:  torch.Size([40, 266])
Question passage attention dim:  torch.Size([40, 266])
Final Merged Passage dim:  torch.Size([40, 266, 800])
Modeled Passage dim:  torch.Size([40, 266, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 266, 1000])
Span start logits:  torch.Size([40, 266])
span start probs dim:  torch.Size([40, 266])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 266]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 11, 200])
Embedded passage dim:  torch.Size([40, 228, 200])
Passage Length:  228
Encoded question dim:  torch.Size([40, 11, 200])
Encoded passage dim:  torch.Size([40, 228, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 228, 11])
Passage ques attention dim:  torch.Size([40, 228, 11])
Passage question vectors dim:  torch.Size([40, 228, 200])
Question Passage Similarity dim:  torch.Size([40, 228])
Question passage attention dim:  torch.Size([40, 228])
Final Merged Passage dim:  torch.Size([40, 228, 800])
Modeled Passage dim:  torch.Size([40, 228, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 228, 1000])
Span start logits:  torch.Size([40, 228])
span start probs dim:  torch.Size([40, 228])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 228]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 456, 200])
Passage Length:  456
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 456, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 456, 13])
Passage ques attention dim:  torch.Size([40, 456, 13])
Passage question vectors dim:  torch.Size([40, 456, 200])
Question Passage Similarity dim:  torch.Size([40, 456])
Question passage attention dim:  torch.Size([40, 456])
Final Merged Passage dim:  torch.Size([40, 456, 800])
Modeled Passage dim:  torch.Size([40, 456, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 456, 1000])
Span start logits:  torch.Size([40, 456])
span start probs dim:  torch.Size([40, 456])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 456]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 603, 200])
Passage Length:  603
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 603, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 603, 13])
Passage ques attention dim:  torch.Size([40, 603, 13])
Passage question vectors dim:  torch.Size([40, 603, 200])
Question Passage Similarity dim:  torch.Size([40, 603])
Question passage attention dim:  torch.Size([40, 603])
Final Merged Passage dim:  torch.Size([40, 603, 800])
Modeled Passage dim:  torch.Size([40, 603, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 603, 1000])
Span start logits:  torch.Size([40, 603])
span start probs dim:  torch.Size([40, 603])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 603]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 999, 200])
Passage Length:  999
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 999, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 999, 15])
Passage ques attention dim:  torch.Size([40, 999, 15])
Passage question vectors dim:  torch.Size([40, 999, 200])
Question Passage Similarity dim:  torch.Size([40, 999])
Question passage attention dim:  torch.Size([40, 999])
Final Merged Passage dim:  torch.Size([40, 999, 800])
Modeled Passage dim:  torch.Size([40, 999, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 999, 1000])
Span start logits:  torch.Size([40, 999])
span start probs dim:  torch.Size([40, 999])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 999]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1527, 200])
Passage Length:  1527
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1527, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1527, 16])
Passage ques attention dim:  torch.Size([40, 1527, 16])
Passage question vectors dim:  torch.Size([40, 1527, 200])
Question Passage Similarity dim:  torch.Size([40, 1527])
Question passage attention dim:  torch.Size([40, 1527])
Final Merged Passage dim:  torch.Size([40, 1527, 800])
Modeled Passage dim:  torch.Size([40, 1527, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1527, 1000])
Span start logits:  torch.Size([40, 1527])
span start probs dim:  torch.Size([40, 1527])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1527]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1351, 200])
Passage Length:  1351
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1351, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1351, 15])
Passage ques attention dim:  torch.Size([40, 1351, 15])
Passage question vectors dim:  torch.Size([40, 1351, 200])
Question Passage Similarity dim:  torch.Size([40, 1351])
Question passage attention dim:  torch.Size([40, 1351])
Final Merged Passage dim:  torch.Size([40, 1351, 800])
Modeled Passage dim:  torch.Size([40, 1351, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1351, 1000])
Span start logits:  torch.Size([40, 1351])
span start probs dim:  torch.Size([40, 1351])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1351]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 430, 200])
Passage Length:  430
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 430, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 430, 14])
Passage ques attention dim:  torch.Size([40, 430, 14])
Passage question vectors dim:  torch.Size([40, 430, 200])
Question Passage Similarity dim:  torch.Size([40, 430])
Question passage attention dim:  torch.Size([40, 430])
Final Merged Passage dim:  torch.Size([40, 430, 800])
Modeled Passage dim:  torch.Size([40, 430, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 430, 1000])
Span start logits:  torch.Size([40, 430])
span start probs dim:  torch.Size([40, 430])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 430]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1057, 200])
Passage Length:  1057
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1057, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1057, 16])
Passage ques attention dim:  torch.Size([40, 1057, 16])
Passage question vectors dim:  torch.Size([40, 1057, 200])
Question Passage Similarity dim:  torch.Size([40, 1057])
Question passage attention dim:  torch.Size([40, 1057])
Final Merged Passage dim:  torch.Size([40, 1057, 800])
Modeled Passage dim:  torch.Size([40, 1057, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1057, 1000])
Span start logits:  torch.Size([40, 1057])
span start probs dim:  torch.Size([40, 1057])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1057]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1446, 200])
Passage Length:  1446
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1446, 19])
Passage ques attention dim:  torch.Size([40, 1446, 19])
Passage question vectors dim:  torch.Size([40, 1446, 200])
Question Passage Similarity dim:  torch.Size([40, 1446])
Question passage attention dim:  torch.Size([40, 1446])
Final Merged Passage dim:  torch.Size([40, 1446, 800])
Modeled Passage dim:  torch.Size([40, 1446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1446, 1000])
Span start logits:  torch.Size([40, 1446])
span start probs dim:  torch.Size([40, 1446])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1446]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 922, 200])
Passage Length:  922
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 922, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 922, 13])
Passage ques attention dim:  torch.Size([40, 922, 13])
Passage question vectors dim:  torch.Size([40, 922, 200])
Question Passage Similarity dim:  torch.Size([40, 922])
Question passage attention dim:  torch.Size([40, 922])
Final Merged Passage dim:  torch.Size([40, 922, 800])
Modeled Passage dim:  torch.Size([40, 922, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 922, 1000])
Span start logits:  torch.Size([40, 922])
span start probs dim:  torch.Size([40, 922])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 922]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 646, 200])
Passage Length:  646
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 646, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 646, 12])
Passage ques attention dim:  torch.Size([40, 646, 12])
Passage question vectors dim:  torch.Size([40, 646, 200])
Question Passage Similarity dim:  torch.Size([40, 646])
Question passage attention dim:  torch.Size([40, 646])
Final Merged Passage dim:  torch.Size([40, 646, 800])
Modeled Passage dim:  torch.Size([40, 646, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 646, 1000])
Span start logits:  torch.Size([40, 646])
span start probs dim:  torch.Size([40, 646])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 646]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 994, 200])
Passage Length:  994
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 994, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 994, 15])
Passage ques attention dim:  torch.Size([40, 994, 15])
Passage question vectors dim:  torch.Size([40, 994, 200])
Question Passage Similarity dim:  torch.Size([40, 994])
Question passage attention dim:  torch.Size([40, 994])
Final Merged Passage dim:  torch.Size([40, 994, 800])
Modeled Passage dim:  torch.Size([40, 994, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 994, 1000])
Span start logits:  torch.Size([40, 994])
span start probs dim:  torch.Size([40, 994])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 994]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 372, 200])
Passage Length:  372
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 372, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 372, 18])
Passage ques attention dim:  torch.Size([40, 372, 18])
Passage question vectors dim:  torch.Size([40, 372, 200])
Question Passage Similarity dim:  torch.Size([40, 372])
Question passage attention dim:  torch.Size([40, 372])
Final Merged Passage dim:  torch.Size([40, 372, 800])
Modeled Passage dim:  torch.Size([40, 372, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 372, 1000])
Span start logits:  torch.Size([40, 372])
span start probs dim:  torch.Size([40, 372])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 372]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1898, 200])
Passage Length:  1898
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1898, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1898, 15])
Passage ques attention dim:  torch.Size([40, 1898, 15])
Passage question vectors dim:  torch.Size([40, 1898, 200])
Question Passage Similarity dim:  torch.Size([40, 1898])
Question passage attention dim:  torch.Size([40, 1898])
Final Merged Passage dim:  torch.Size([40, 1898, 800])
Modeled Passage dim:  torch.Size([40, 1898, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1898, 1000])
Span start logits:  torch.Size([40, 1898])
span start probs dim:  torch.Size([40, 1898])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1898]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 464, 200])
Passage Length:  464
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 464, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 464, 17])
Passage ques attention dim:  torch.Size([40, 464, 17])
Passage question vectors dim:  torch.Size([40, 464, 200])
Question Passage Similarity dim:  torch.Size([40, 464])
Question passage attention dim:  torch.Size([40, 464])
Final Merged Passage dim:  torch.Size([40, 464, 800])
Modeled Passage dim:  torch.Size([40, 464, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 464, 1000])
Span start logits:  torch.Size([40, 464])
span start probs dim:  torch.Size([40, 464])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 464]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 727, 200])
Passage Length:  727
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 727, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 727, 20])
Passage ques attention dim:  torch.Size([40, 727, 20])
Passage question vectors dim:  torch.Size([40, 727, 200])
Question Passage Similarity dim:  torch.Size([40, 727])
Question passage attention dim:  torch.Size([40, 727])
Final Merged Passage dim:  torch.Size([40, 727, 800])
Modeled Passage dim:  torch.Size([40, 727, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 727, 1000])
Span start logits:  torch.Size([40, 727])
span start probs dim:  torch.Size([40, 727])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 727]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 526, 200])
Passage Length:  526
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 526, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 526, 12])
Passage ques attention dim:  torch.Size([40, 526, 12])
Passage question vectors dim:  torch.Size([40, 526, 200])
Question Passage Similarity dim:  torch.Size([40, 526])
Question passage attention dim:  torch.Size([40, 526])
Final Merged Passage dim:  torch.Size([40, 526, 800])
Modeled Passage dim:  torch.Size([40, 526, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 526, 1000])
Span start logits:  torch.Size([40, 526])
span start probs dim:  torch.Size([40, 526])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 526]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 145, 200])
Passage Length:  145
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 145, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 145, 15])
Passage ques attention dim:  torch.Size([40, 145, 15])
Passage question vectors dim:  torch.Size([40, 145, 200])
Question Passage Similarity dim:  torch.Size([40, 145])
Question passage attention dim:  torch.Size([40, 145])
Final Merged Passage dim:  torch.Size([40, 145, 800])
Modeled Passage dim:  torch.Size([40, 145, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 145, 1000])
Span start logits:  torch.Size([40, 145])
span start probs dim:  torch.Size([40, 145])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 145]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 350, 200])
Passage Length:  350
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 350, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 350, 16])
Passage ques attention dim:  torch.Size([40, 350, 16])
Passage question vectors dim:  torch.Size([40, 350, 200])
Question Passage Similarity dim:  torch.Size([40, 350])
Question passage attention dim:  torch.Size([40, 350])
Final Merged Passage dim:  torch.Size([40, 350, 800])
Modeled Passage dim:  torch.Size([40, 350, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 350, 1000])
Span start logits:  torch.Size([40, 350])
span start probs dim:  torch.Size([40, 350])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 350]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1178, 200])
Passage Length:  1178
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1178, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1178, 17])
Passage ques attention dim:  torch.Size([40, 1178, 17])
Passage question vectors dim:  torch.Size([40, 1178, 200])
Question Passage Similarity dim:  torch.Size([40, 1178])
Question passage attention dim:  torch.Size([40, 1178])
Final Merged Passage dim:  torch.Size([40, 1178, 800])
Modeled Passage dim:  torch.Size([40, 1178, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1178, 1000])
Span start logits:  torch.Size([40, 1178])
span start probs dim:  torch.Size([40, 1178])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1178]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 312, 200])
Passage Length:  312
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 312, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 312, 13])
Passage ques attention dim:  torch.Size([40, 312, 13])
Passage question vectors dim:  torch.Size([40, 312, 200])
Question Passage Similarity dim:  torch.Size([40, 312])
Question passage attention dim:  torch.Size([40, 312])
Final Merged Passage dim:  torch.Size([40, 312, 800])
Modeled Passage dim:  torch.Size([40, 312, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 312, 1000])
Span start logits:  torch.Size([40, 312])
span start probs dim:  torch.Size([40, 312])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 312]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 445, 200])
Passage Length:  445
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 445, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 445, 14])
Passage ques attention dim:  torch.Size([40, 445, 14])
Passage question vectors dim:  torch.Size([40, 445, 200])
Question Passage Similarity dim:  torch.Size([40, 445])
Question passage attention dim:  torch.Size([40, 445])
Final Merged Passage dim:  torch.Size([40, 445, 800])
Modeled Passage dim:  torch.Size([40, 445, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 445, 1000])
Span start logits:  torch.Size([40, 445])
span start probs dim:  torch.Size([40, 445])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 445]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 352, 200])
Passage Length:  352
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 352, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 352, 15])
Passage ques attention dim:  torch.Size([40, 352, 15])
Passage question vectors dim:  torch.Size([40, 352, 200])
Question Passage Similarity dim:  torch.Size([40, 352])
Question passage attention dim:  torch.Size([40, 352])
Final Merged Passage dim:  torch.Size([40, 352, 800])
Modeled Passage dim:  torch.Size([40, 352, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 352, 1000])
Span start logits:  torch.Size([40, 352])
span start probs dim:  torch.Size([40, 352])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 352]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 472, 200])
Passage Length:  472
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 472, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 472, 16])
Passage ques attention dim:  torch.Size([40, 472, 16])
Passage question vectors dim:  torch.Size([40, 472, 200])
Question Passage Similarity dim:  torch.Size([40, 472])
Question passage attention dim:  torch.Size([40, 472])
Final Merged Passage dim:  torch.Size([40, 472, 800])
Modeled Passage dim:  torch.Size([40, 472, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 472, 1000])
Span start logits:  torch.Size([40, 472])
span start probs dim:  torch.Size([40, 472])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 472]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 321, 200])
Passage Length:  321
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 321, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 321, 13])
Passage ques attention dim:  torch.Size([40, 321, 13])
Passage question vectors dim:  torch.Size([40, 321, 200])
Question Passage Similarity dim:  torch.Size([40, 321])
Question passage attention dim:  torch.Size([40, 321])
Final Merged Passage dim:  torch.Size([40, 321, 800])
Modeled Passage dim:  torch.Size([40, 321, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 321, 1000])
Span start logits:  torch.Size([40, 321])
span start probs dim:  torch.Size([40, 321])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 321]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 859, 200])
Passage Length:  859
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 859, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 859, 14])
Passage ques attention dim:  torch.Size([40, 859, 14])
Passage question vectors dim:  torch.Size([40, 859, 200])
Question Passage Similarity dim:  torch.Size([40, 859])
Question passage attention dim:  torch.Size([40, 859])
Final Merged Passage dim:  torch.Size([40, 859, 800])
Modeled Passage dim:  torch.Size([40, 859, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 859, 1000])
Span start logits:  torch.Size([40, 859])
span start probs dim:  torch.Size([40, 859])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 859]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 697, 200])
Passage Length:  697
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 697, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 697, 16])
Passage ques attention dim:  torch.Size([40, 697, 16])
Passage question vectors dim:  torch.Size([40, 697, 200])
Question Passage Similarity dim:  torch.Size([40, 697])
Question passage attention dim:  torch.Size([40, 697])
Final Merged Passage dim:  torch.Size([40, 697, 800])
Modeled Passage dim:  torch.Size([40, 697, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 697, 1000])
Span start logits:  torch.Size([40, 697])
span start probs dim:  torch.Size([40, 697])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 697]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 175, 200])
Passage Length:  175
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 175, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 175, 12])
Passage ques attention dim:  torch.Size([40, 175, 12])
Passage question vectors dim:  torch.Size([40, 175, 200])
Question Passage Similarity dim:  torch.Size([40, 175])
Question passage attention dim:  torch.Size([40, 175])
Final Merged Passage dim:  torch.Size([40, 175, 800])
Modeled Passage dim:  torch.Size([40, 175, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 175, 1000])
Span start logits:  torch.Size([40, 175])
span start probs dim:  torch.Size([40, 175])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 175]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 895, 200])
Passage Length:  895
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 895, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 895, 17])
Passage ques attention dim:  torch.Size([40, 895, 17])
Passage question vectors dim:  torch.Size([40, 895, 200])
Question Passage Similarity dim:  torch.Size([40, 895])
Question passage attention dim:  torch.Size([40, 895])
Final Merged Passage dim:  torch.Size([40, 895, 800])
Modeled Passage dim:  torch.Size([40, 895, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 895, 1000])
Span start logits:  torch.Size([40, 895])
span start probs dim:  torch.Size([40, 895])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 895]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 278, 200])
Passage Length:  278
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 278, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 278, 17])
Passage ques attention dim:  torch.Size([40, 278, 17])
Passage question vectors dim:  torch.Size([40, 278, 200])
Question Passage Similarity dim:  torch.Size([40, 278])
Question passage attention dim:  torch.Size([40, 278])
Final Merged Passage dim:  torch.Size([40, 278, 800])
Modeled Passage dim:  torch.Size([40, 278, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 278, 1000])
Span start logits:  torch.Size([40, 278])
span start probs dim:  torch.Size([40, 278])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 278]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1234, 200])
Passage Length:  1234
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1234, 15])
Passage ques attention dim:  torch.Size([40, 1234, 15])
Passage question vectors dim:  torch.Size([40, 1234, 200])
Question Passage Similarity dim:  torch.Size([40, 1234])
Question passage attention dim:  torch.Size([40, 1234])
Final Merged Passage dim:  torch.Size([40, 1234, 800])
Modeled Passage dim:  torch.Size([40, 1234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1234, 1000])
Span start logits:  torch.Size([40, 1234])
span start probs dim:  torch.Size([40, 1234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 538, 200])
Passage Length:  538
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 538, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 538, 16])
Passage ques attention dim:  torch.Size([40, 538, 16])
Passage question vectors dim:  torch.Size([40, 538, 200])
Question Passage Similarity dim:  torch.Size([40, 538])
Question passage attention dim:  torch.Size([40, 538])
Final Merged Passage dim:  torch.Size([40, 538, 800])
Modeled Passage dim:  torch.Size([40, 538, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 538, 1000])
Span start logits:  torch.Size([40, 538])
span start probs dim:  torch.Size([40, 538])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 538]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 309, 200])
Passage Length:  309
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 309, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 309, 13])
Passage ques attention dim:  torch.Size([40, 309, 13])
Passage question vectors dim:  torch.Size([40, 309, 200])
Question Passage Similarity dim:  torch.Size([40, 309])
Question passage attention dim:  torch.Size([40, 309])
Final Merged Passage dim:  torch.Size([40, 309, 800])
Modeled Passage dim:  torch.Size([40, 309, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 309, 1000])
Span start logits:  torch.Size([40, 309])
span start probs dim:  torch.Size([40, 309])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 309]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1573, 200])
Passage Length:  1573
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1573, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1573, 12])
Passage ques attention dim:  torch.Size([40, 1573, 12])
Passage question vectors dim:  torch.Size([40, 1573, 200])
Question Passage Similarity dim:  torch.Size([40, 1573])
Question passage attention dim:  torch.Size([40, 1573])
Final Merged Passage dim:  torch.Size([40, 1573, 800])
Modeled Passage dim:  torch.Size([40, 1573, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1573, 1000])
Span start logits:  torch.Size([40, 1573])
span start probs dim:  torch.Size([40, 1573])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1573]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 798, 200])
Passage Length:  798
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 798, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 798, 18])
Passage ques attention dim:  torch.Size([40, 798, 18])
Passage question vectors dim:  torch.Size([40, 798, 200])
Question Passage Similarity dim:  torch.Size([40, 798])
Question passage attention dim:  torch.Size([40, 798])
Final Merged Passage dim:  torch.Size([40, 798, 800])
Modeled Passage dim:  torch.Size([40, 798, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 798, 1000])
Span start logits:  torch.Size([40, 798])
span start probs dim:  torch.Size([40, 798])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 798]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 481, 200])
Passage Length:  481
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 481, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 481, 15])
Passage ques attention dim:  torch.Size([40, 481, 15])
Passage question vectors dim:  torch.Size([40, 481, 200])
Question Passage Similarity dim:  torch.Size([40, 481])
Question passage attention dim:  torch.Size([40, 481])
Final Merged Passage dim:  torch.Size([40, 481, 800])
Modeled Passage dim:  torch.Size([40, 481, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 481, 1000])
Span start logits:  torch.Size([40, 481])
span start probs dim:  torch.Size([40, 481])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 481]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 518, 200])
Passage Length:  518
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 518, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 518, 17])
Passage ques attention dim:  torch.Size([40, 518, 17])
Passage question vectors dim:  torch.Size([40, 518, 200])
Question Passage Similarity dim:  torch.Size([40, 518])
Question passage attention dim:  torch.Size([40, 518])
Final Merged Passage dim:  torch.Size([40, 518, 800])
Modeled Passage dim:  torch.Size([40, 518, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 518, 1000])
Span start logits:  torch.Size([40, 518])
span start probs dim:  torch.Size([40, 518])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 518]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1343, 200])
Passage Length:  1343
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1343, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1343, 18])
Passage ques attention dim:  torch.Size([40, 1343, 18])
Passage question vectors dim:  torch.Size([40, 1343, 200])
Question Passage Similarity dim:  torch.Size([40, 1343])
Question passage attention dim:  torch.Size([40, 1343])
Final Merged Passage dim:  torch.Size([40, 1343, 800])
Modeled Passage dim:  torch.Size([40, 1343, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1343, 1000])
Span start logits:  torch.Size([40, 1343])
span start probs dim:  torch.Size([40, 1343])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1343]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 570, 200])
Passage Length:  570
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 570, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 570, 17])
Passage ques attention dim:  torch.Size([40, 570, 17])
Passage question vectors dim:  torch.Size([40, 570, 200])
Question Passage Similarity dim:  torch.Size([40, 570])
Question passage attention dim:  torch.Size([40, 570])
Final Merged Passage dim:  torch.Size([40, 570, 800])
Modeled Passage dim:  torch.Size([40, 570, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 570, 1000])
Span start logits:  torch.Size([40, 570])
span start probs dim:  torch.Size([40, 570])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 570]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 382, 200])
Passage Length:  382
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 382, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 382, 15])
Passage ques attention dim:  torch.Size([40, 382, 15])
Passage question vectors dim:  torch.Size([40, 382, 200])
Question Passage Similarity dim:  torch.Size([40, 382])
Question passage attention dim:  torch.Size([40, 382])
Final Merged Passage dim:  torch.Size([40, 382, 800])
Modeled Passage dim:  torch.Size([40, 382, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 382, 1000])
Span start logits:  torch.Size([40, 382])
span start probs dim:  torch.Size([40, 382])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 382]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 539, 200])
Passage Length:  539
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 539, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 539, 17])
Passage ques attention dim:  torch.Size([40, 539, 17])
Passage question vectors dim:  torch.Size([40, 539, 200])
Question Passage Similarity dim:  torch.Size([40, 539])
Question passage attention dim:  torch.Size([40, 539])
Final Merged Passage dim:  torch.Size([40, 539, 800])
Modeled Passage dim:  torch.Size([40, 539, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 539, 1000])
Span start logits:  torch.Size([40, 539])
span start probs dim:  torch.Size([40, 539])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 539]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 847, 200])
Passage Length:  847
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 847, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 847, 20])
Passage ques attention dim:  torch.Size([40, 847, 20])
Passage question vectors dim:  torch.Size([40, 847, 200])
Question Passage Similarity dim:  torch.Size([40, 847])
Question passage attention dim:  torch.Size([40, 847])
Final Merged Passage dim:  torch.Size([40, 847, 800])
Modeled Passage dim:  torch.Size([40, 847, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 847, 1000])
Span start logits:  torch.Size([40, 847])
span start probs dim:  torch.Size([40, 847])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 847]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1349, 200])
Passage Length:  1349
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1349, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1349, 17])
Passage ques attention dim:  torch.Size([40, 1349, 17])
Passage question vectors dim:  torch.Size([40, 1349, 200])
Question Passage Similarity dim:  torch.Size([40, 1349])
Question passage attention dim:  torch.Size([40, 1349])
Final Merged Passage dim:  torch.Size([40, 1349, 800])
Modeled Passage dim:  torch.Size([40, 1349, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1349, 1000])
Span start logits:  torch.Size([40, 1349])
span start probs dim:  torch.Size([40, 1349])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1349]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 627, 200])
Passage Length:  627
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 627, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 627, 15])
Passage ques attention dim:  torch.Size([40, 627, 15])
Passage question vectors dim:  torch.Size([40, 627, 200])
Question Passage Similarity dim:  torch.Size([40, 627])
Question passage attention dim:  torch.Size([40, 627])
Final Merged Passage dim:  torch.Size([40, 627, 800])
Modeled Passage dim:  torch.Size([40, 627, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 627, 1000])
Span start logits:  torch.Size([40, 627])
span start probs dim:  torch.Size([40, 627])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 627]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1170, 200])
Passage Length:  1170
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1170, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1170, 16])
Passage ques attention dim:  torch.Size([40, 1170, 16])
Passage question vectors dim:  torch.Size([40, 1170, 200])
Question Passage Similarity dim:  torch.Size([40, 1170])
Question passage attention dim:  torch.Size([40, 1170])
Final Merged Passage dim:  torch.Size([40, 1170, 800])
Modeled Passage dim:  torch.Size([40, 1170, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1170, 1000])
Span start logits:  torch.Size([40, 1170])
span start probs dim:  torch.Size([40, 1170])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1170]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1505, 200])
Passage Length:  1505
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1505, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1505, 17])
Passage ques attention dim:  torch.Size([40, 1505, 17])
Passage question vectors dim:  torch.Size([40, 1505, 200])
Question Passage Similarity dim:  torch.Size([40, 1505])
Question passage attention dim:  torch.Size([40, 1505])
Final Merged Passage dim:  torch.Size([40, 1505, 800])
Modeled Passage dim:  torch.Size([40, 1505, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1505, 1000])
Span start logits:  torch.Size([40, 1505])
span start probs dim:  torch.Size([40, 1505])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1505]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 20, 200])
Embedded passage dim:  torch.Size([40, 782, 200])
Passage Length:  782
Encoded question dim:  torch.Size([40, 20, 200])
Encoded passage dim:  torch.Size([40, 782, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 782, 20])
Passage ques attention dim:  torch.Size([40, 782, 20])
Passage question vectors dim:  torch.Size([40, 782, 200])
Question Passage Similarity dim:  torch.Size([40, 782])
Question passage attention dim:  torch.Size([40, 782])
Final Merged Passage dim:  torch.Size([40, 782, 800])
Modeled Passage dim:  torch.Size([40, 782, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 782, 1000])
Span start logits:  torch.Size([40, 782])
span start probs dim:  torch.Size([40, 782])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 782]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 724, 13])
Passage ques attention dim:  torch.Size([40, 724, 13])
Passage question vectors dim:  torch.Size([40, 724, 200])
Question Passage Similarity dim:  torch.Size([40, 724])
Question passage attention dim:  torch.Size([40, 724])
Final Merged Passage dim:  torch.Size([40, 724, 800])
Modeled Passage dim:  torch.Size([40, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 724, 1000])
Span start logits:  torch.Size([40, 724])
span start probs dim:  torch.Size([40, 724])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 724]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 223, 200])
Passage Length:  223
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 223, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 223, 19])
Passage ques attention dim:  torch.Size([40, 223, 19])
Passage question vectors dim:  torch.Size([40, 223, 200])
Question Passage Similarity dim:  torch.Size([40, 223])
Question passage attention dim:  torch.Size([40, 223])
Final Merged Passage dim:  torch.Size([40, 223, 800])
Modeled Passage dim:  torch.Size([40, 223, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 223, 1000])
Span start logits:  torch.Size([40, 223])
span start probs dim:  torch.Size([40, 223])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 223]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 470, 200])
Passage Length:  470
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 470, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 470, 16])
Passage ques attention dim:  torch.Size([40, 470, 16])
Passage question vectors dim:  torch.Size([40, 470, 200])
Question Passage Similarity dim:  torch.Size([40, 470])
Question passage attention dim:  torch.Size([40, 470])
Final Merged Passage dim:  torch.Size([40, 470, 800])
Modeled Passage dim:  torch.Size([40, 470, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 470, 1000])
Span start logits:  torch.Size([40, 470])
span start probs dim:  torch.Size([40, 470])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 470]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 544, 200])
Passage Length:  544
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 544, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 544, 18])
Passage ques attention dim:  torch.Size([40, 544, 18])
Passage question vectors dim:  torch.Size([40, 544, 200])
Question Passage Similarity dim:  torch.Size([40, 544])
Question passage attention dim:  torch.Size([40, 544])
Final Merged Passage dim:  torch.Size([40, 544, 800])
Modeled Passage dim:  torch.Size([40, 544, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 544, 1000])
Span start logits:  torch.Size([40, 544])
span start probs dim:  torch.Size([40, 544])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 544]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 396, 200])
Passage Length:  396
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 396, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 396, 13])
Passage ques attention dim:  torch.Size([40, 396, 13])
Passage question vectors dim:  torch.Size([40, 396, 200])
Question Passage Similarity dim:  torch.Size([40, 396])
Question passage attention dim:  torch.Size([40, 396])
Final Merged Passage dim:  torch.Size([40, 396, 800])
Modeled Passage dim:  torch.Size([40, 396, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 396, 1000])
Span start logits:  torch.Size([40, 396])
span start probs dim:  torch.Size([40, 396])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 396]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1934, 200])
Passage Length:  1934
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1934, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1934, 16])
Passage ques attention dim:  torch.Size([40, 1934, 16])
Passage question vectors dim:  torch.Size([40, 1934, 200])
Question Passage Similarity dim:  torch.Size([40, 1934])
Question passage attention dim:  torch.Size([40, 1934])
Final Merged Passage dim:  torch.Size([40, 1934, 800])
Modeled Passage dim:  torch.Size([40, 1934, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1934, 1000])
Span start logits:  torch.Size([40, 1934])
span start probs dim:  torch.Size([40, 1934])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1934]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 727, 200])
Passage Length:  727
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 727, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 727, 16])
Passage ques attention dim:  torch.Size([40, 727, 16])
Passage question vectors dim:  torch.Size([40, 727, 200])
Question Passage Similarity dim:  torch.Size([40, 727])
Question passage attention dim:  torch.Size([40, 727])
Final Merged Passage dim:  torch.Size([40, 727, 800])
Modeled Passage dim:  torch.Size([40, 727, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 727, 1000])
Span start logits:  torch.Size([40, 727])
span start probs dim:  torch.Size([40, 727])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 727]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 751, 200])
Passage Length:  751
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 751, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 751, 15])
Passage ques attention dim:  torch.Size([40, 751, 15])
Passage question vectors dim:  torch.Size([40, 751, 200])
Question Passage Similarity dim:  torch.Size([40, 751])
Question passage attention dim:  torch.Size([40, 751])
Final Merged Passage dim:  torch.Size([40, 751, 800])
Modeled Passage dim:  torch.Size([40, 751, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 751, 1000])
Span start logits:  torch.Size([40, 751])
span start probs dim:  torch.Size([40, 751])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 751]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 251, 200])
Passage Length:  251
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 251, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 251, 16])
Passage ques attention dim:  torch.Size([40, 251, 16])
Passage question vectors dim:  torch.Size([40, 251, 200])
Question Passage Similarity dim:  torch.Size([40, 251])
Question passage attention dim:  torch.Size([40, 251])
Final Merged Passage dim:  torch.Size([40, 251, 800])
Modeled Passage dim:  torch.Size([40, 251, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 251, 1000])
Span start logits:  torch.Size([40, 251])
span start probs dim:  torch.Size([40, 251])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 251]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1384, 200])
Passage Length:  1384
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1384, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1384, 18])
Passage ques attention dim:  torch.Size([40, 1384, 18])
Passage question vectors dim:  torch.Size([40, 1384, 200])
Question Passage Similarity dim:  torch.Size([40, 1384])
Question passage attention dim:  torch.Size([40, 1384])
Final Merged Passage dim:  torch.Size([40, 1384, 800])
Modeled Passage dim:  torch.Size([40, 1384, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1384, 1000])
Span start logits:  torch.Size([40, 1384])
span start probs dim:  torch.Size([40, 1384])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1384]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1536, 200])
Passage Length:  1536
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1536, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1536, 15])
Passage ques attention dim:  torch.Size([40, 1536, 15])
Passage question vectors dim:  torch.Size([40, 1536, 200])
Question Passage Similarity dim:  torch.Size([40, 1536])
Question passage attention dim:  torch.Size([40, 1536])
Final Merged Passage dim:  torch.Size([40, 1536, 800])
Modeled Passage dim:  torch.Size([40, 1536, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1536, 1000])
Span start logits:  torch.Size([40, 1536])
span start probs dim:  torch.Size([40, 1536])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1536]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 387, 200])
Passage Length:  387
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 387, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 387, 13])
Passage ques attention dim:  torch.Size([40, 387, 13])
Passage question vectors dim:  torch.Size([40, 387, 200])
Question Passage Similarity dim:  torch.Size([40, 387])
Question passage attention dim:  torch.Size([40, 387])
Final Merged Passage dim:  torch.Size([40, 387, 800])
Modeled Passage dim:  torch.Size([40, 387, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 387, 1000])
Span start logits:  torch.Size([40, 387])
span start probs dim:  torch.Size([40, 387])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 387]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 376, 200])
Passage Length:  376
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 376, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 376, 16])
Passage ques attention dim:  torch.Size([40, 376, 16])
Passage question vectors dim:  torch.Size([40, 376, 200])
Question Passage Similarity dim:  torch.Size([40, 376])
Question passage attention dim:  torch.Size([40, 376])
Final Merged Passage dim:  torch.Size([40, 376, 800])
Modeled Passage dim:  torch.Size([40, 376, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 376, 1000])
Span start logits:  torch.Size([40, 376])
span start probs dim:  torch.Size([40, 376])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 376]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 234, 200])
Passage Length:  234
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 234, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 234, 13])
Passage ques attention dim:  torch.Size([40, 234, 13])
Passage question vectors dim:  torch.Size([40, 234, 200])
Question Passage Similarity dim:  torch.Size([40, 234])
Question passage attention dim:  torch.Size([40, 234])
Final Merged Passage dim:  torch.Size([40, 234, 800])
Modeled Passage dim:  torch.Size([40, 234, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 234, 1000])
Span start logits:  torch.Size([40, 234])
span start probs dim:  torch.Size([40, 234])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 234]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1715, 200])
Passage Length:  1715
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1715, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1715, 14])
Passage ques attention dim:  torch.Size([40, 1715, 14])
Passage question vectors dim:  torch.Size([40, 1715, 200])
Question Passage Similarity dim:  torch.Size([40, 1715])
Question passage attention dim:  torch.Size([40, 1715])
Final Merged Passage dim:  torch.Size([40, 1715, 800])
Modeled Passage dim:  torch.Size([40, 1715, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1715, 1000])
Span start logits:  torch.Size([40, 1715])
span start probs dim:  torch.Size([40, 1715])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1715]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 779, 200])
Passage Length:  779
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 779, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 779, 14])
Passage ques attention dim:  torch.Size([40, 779, 14])
Passage question vectors dim:  torch.Size([40, 779, 200])
Question Passage Similarity dim:  torch.Size([40, 779])
Question passage attention dim:  torch.Size([40, 779])
Final Merged Passage dim:  torch.Size([40, 779, 800])
Modeled Passage dim:  torch.Size([40, 779, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 779, 1000])
Span start logits:  torch.Size([40, 779])
span start probs dim:  torch.Size([40, 779])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 779]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1497, 200])
Passage Length:  1497
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1497, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1497, 14])
Passage ques attention dim:  torch.Size([40, 1497, 14])
Passage question vectors dim:  torch.Size([40, 1497, 200])
Question Passage Similarity dim:  torch.Size([40, 1497])
Question passage attention dim:  torch.Size([40, 1497])
Final Merged Passage dim:  torch.Size([40, 1497, 800])
Modeled Passage dim:  torch.Size([40, 1497, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1497, 1000])
Span start logits:  torch.Size([40, 1497])
span start probs dim:  torch.Size([40, 1497])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1497]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 997, 200])
Passage Length:  997
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 997, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 997, 13])
Passage ques attention dim:  torch.Size([40, 997, 13])
Passage question vectors dim:  torch.Size([40, 997, 200])
Question Passage Similarity dim:  torch.Size([40, 997])
Question passage attention dim:  torch.Size([40, 997])
Final Merged Passage dim:  torch.Size([40, 997, 800])
Modeled Passage dim:  torch.Size([40, 997, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 997, 1000])
Span start logits:  torch.Size([40, 997])
span start probs dim:  torch.Size([40, 997])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 997]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 813, 200])
Passage Length:  813
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 813, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 813, 13])
Passage ques attention dim:  torch.Size([40, 813, 13])
Passage question vectors dim:  torch.Size([40, 813, 200])
Question Passage Similarity dim:  torch.Size([40, 813])
Question passage attention dim:  torch.Size([40, 813])
Final Merged Passage dim:  torch.Size([40, 813, 800])
Modeled Passage dim:  torch.Size([40, 813, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 813, 1000])
Span start logits:  torch.Size([40, 813])
span start probs dim:  torch.Size([40, 813])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 813]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 828, 200])
Passage Length:  828
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 828, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 828, 14])
Passage ques attention dim:  torch.Size([40, 828, 14])
Passage question vectors dim:  torch.Size([40, 828, 200])
Question Passage Similarity dim:  torch.Size([40, 828])
Question passage attention dim:  torch.Size([40, 828])
Final Merged Passage dim:  torch.Size([40, 828, 800])
Modeled Passage dim:  torch.Size([40, 828, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 828, 1000])
Span start logits:  torch.Size([40, 828])
span start probs dim:  torch.Size([40, 828])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 828]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1446, 200])
Passage Length:  1446
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1446, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1446, 12])
Passage ques attention dim:  torch.Size([40, 1446, 12])
Passage question vectors dim:  torch.Size([40, 1446, 200])
Question Passage Similarity dim:  torch.Size([40, 1446])
Question passage attention dim:  torch.Size([40, 1446])
Final Merged Passage dim:  torch.Size([40, 1446, 800])
Modeled Passage dim:  torch.Size([40, 1446, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1446, 1000])
Span start logits:  torch.Size([40, 1446])
span start probs dim:  torch.Size([40, 1446])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1446]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 440, 200])
Passage Length:  440
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 440, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 440, 16])
Passage ques attention dim:  torch.Size([40, 440, 16])
Passage question vectors dim:  torch.Size([40, 440, 200])
Question Passage Similarity dim:  torch.Size([40, 440])
Question passage attention dim:  torch.Size([40, 440])
Final Merged Passage dim:  torch.Size([40, 440, 800])
Modeled Passage dim:  torch.Size([40, 440, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 440, 1000])
Span start logits:  torch.Size([40, 440])
span start probs dim:  torch.Size([40, 440])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 440]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 794, 200])
Passage Length:  794
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 794, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 794, 17])
Passage ques attention dim:  torch.Size([40, 794, 17])
Passage question vectors dim:  torch.Size([40, 794, 200])
Question Passage Similarity dim:  torch.Size([40, 794])
Question passage attention dim:  torch.Size([40, 794])
Final Merged Passage dim:  torch.Size([40, 794, 800])
Modeled Passage dim:  torch.Size([40, 794, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 794, 1000])
Span start logits:  torch.Size([40, 794])
span start probs dim:  torch.Size([40, 794])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 794]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1214, 200])
Passage Length:  1214
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1214, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1214, 13])
Passage ques attention dim:  torch.Size([40, 1214, 13])
Passage question vectors dim:  torch.Size([40, 1214, 200])
Question Passage Similarity dim:  torch.Size([40, 1214])
Question passage attention dim:  torch.Size([40, 1214])
Final Merged Passage dim:  torch.Size([40, 1214, 800])
Modeled Passage dim:  torch.Size([40, 1214, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1214, 1000])
Span start logits:  torch.Size([40, 1214])
span start probs dim:  torch.Size([40, 1214])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1214]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1169, 200])
Passage Length:  1169
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1169, 16])
Passage ques attention dim:  torch.Size([40, 1169, 16])
Passage question vectors dim:  torch.Size([40, 1169, 200])
Question Passage Similarity dim:  torch.Size([40, 1169])
Question passage attention dim:  torch.Size([40, 1169])
Final Merged Passage dim:  torch.Size([40, 1169, 800])
Modeled Passage dim:  torch.Size([40, 1169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1169, 1000])
Span start logits:  torch.Size([40, 1169])
span start probs dim:  torch.Size([40, 1169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1571, 200])
Passage Length:  1571
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1571, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1571, 16])
Passage ques attention dim:  torch.Size([40, 1571, 16])
Passage question vectors dim:  torch.Size([40, 1571, 200])
Question Passage Similarity dim:  torch.Size([40, 1571])
Question passage attention dim:  torch.Size([40, 1571])
Final Merged Passage dim:  torch.Size([40, 1571, 800])
Modeled Passage dim:  torch.Size([40, 1571, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1571, 1000])
Span start logits:  torch.Size([40, 1571])
span start probs dim:  torch.Size([40, 1571])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1571]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 751, 200])
Passage Length:  751
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 751, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 751, 19])
Passage ques attention dim:  torch.Size([40, 751, 19])
Passage question vectors dim:  torch.Size([40, 751, 200])
Question Passage Similarity dim:  torch.Size([40, 751])
Question passage attention dim:  torch.Size([40, 751])
Final Merged Passage dim:  torch.Size([40, 751, 800])
Modeled Passage dim:  torch.Size([40, 751, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 751, 1000])
Span start logits:  torch.Size([40, 751])
span start probs dim:  torch.Size([40, 751])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 751]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1151, 200])
Passage Length:  1151
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1151, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1151, 16])
Passage ques attention dim:  torch.Size([40, 1151, 16])
Passage question vectors dim:  torch.Size([40, 1151, 200])
Question Passage Similarity dim:  torch.Size([40, 1151])
Question passage attention dim:  torch.Size([40, 1151])
Final Merged Passage dim:  torch.Size([40, 1151, 800])
Modeled Passage dim:  torch.Size([40, 1151, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1151, 1000])
Span start logits:  torch.Size([40, 1151])
span start probs dim:  torch.Size([40, 1151])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1151]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 291, 200])
Passage Length:  291
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 291, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 291, 13])
Passage ques attention dim:  torch.Size([40, 291, 13])
Passage question vectors dim:  torch.Size([40, 291, 200])
Question Passage Similarity dim:  torch.Size([40, 291])
Question passage attention dim:  torch.Size([40, 291])
Final Merged Passage dim:  torch.Size([40, 291, 800])
Modeled Passage dim:  torch.Size([40, 291, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 291, 1000])
Span start logits:  torch.Size([40, 291])
span start probs dim:  torch.Size([40, 291])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 291]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 813, 200])
Passage Length:  813
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 813, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 813, 12])
Passage ques attention dim:  torch.Size([40, 813, 12])
Passage question vectors dim:  torch.Size([40, 813, 200])
Question Passage Similarity dim:  torch.Size([40, 813])
Question passage attention dim:  torch.Size([40, 813])
Final Merged Passage dim:  torch.Size([40, 813, 800])
Modeled Passage dim:  torch.Size([40, 813, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 813, 1000])
Span start logits:  torch.Size([40, 813])
span start probs dim:  torch.Size([40, 813])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 813]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 695, 200])
Passage Length:  695
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 695, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 695, 14])
Passage ques attention dim:  torch.Size([40, 695, 14])
Passage question vectors dim:  torch.Size([40, 695, 200])
Question Passage Similarity dim:  torch.Size([40, 695])
Question passage attention dim:  torch.Size([40, 695])
Final Merged Passage dim:  torch.Size([40, 695, 800])
Modeled Passage dim:  torch.Size([40, 695, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 695, 1000])
Span start logits:  torch.Size([40, 695])
span start probs dim:  torch.Size([40, 695])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 695]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 928, 200])
Passage Length:  928
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 928, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 928, 14])
Passage ques attention dim:  torch.Size([40, 928, 14])
Passage question vectors dim:  torch.Size([40, 928, 200])
Question Passage Similarity dim:  torch.Size([40, 928])
Question passage attention dim:  torch.Size([40, 928])
Final Merged Passage dim:  torch.Size([40, 928, 800])
Modeled Passage dim:  torch.Size([40, 928, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 928, 1000])
Span start logits:  torch.Size([40, 928])
span start probs dim:  torch.Size([40, 928])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 928]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 206, 200])
Passage Length:  206
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 206, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 206, 15])
Passage ques attention dim:  torch.Size([40, 206, 15])
Passage question vectors dim:  torch.Size([40, 206, 200])
Question Passage Similarity dim:  torch.Size([40, 206])
Question passage attention dim:  torch.Size([40, 206])
Final Merged Passage dim:  torch.Size([40, 206, 800])
Modeled Passage dim:  torch.Size([40, 206, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 206, 1000])
Span start logits:  torch.Size([40, 206])
span start probs dim:  torch.Size([40, 206])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 206]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 562, 200])
Passage Length:  562
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 562, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 562, 12])
Passage ques attention dim:  torch.Size([40, 562, 12])
Passage question vectors dim:  torch.Size([40, 562, 200])
Question Passage Similarity dim:  torch.Size([40, 562])
Question passage attention dim:  torch.Size([40, 562])
Final Merged Passage dim:  torch.Size([40, 562, 800])
Modeled Passage dim:  torch.Size([40, 562, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 562, 1000])
Span start logits:  torch.Size([40, 562])
span start probs dim:  torch.Size([40, 562])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 562]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1251, 200])
Passage Length:  1251
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1251, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1251, 15])
Passage ques attention dim:  torch.Size([40, 1251, 15])
Passage question vectors dim:  torch.Size([40, 1251, 200])
Question Passage Similarity dim:  torch.Size([40, 1251])
Question passage attention dim:  torch.Size([40, 1251])
Final Merged Passage dim:  torch.Size([40, 1251, 800])
Modeled Passage dim:  torch.Size([40, 1251, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1251, 1000])
Span start logits:  torch.Size([40, 1251])
span start probs dim:  torch.Size([40, 1251])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1251]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1421, 200])
Passage Length:  1421
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1421, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1421, 14])
Passage ques attention dim:  torch.Size([40, 1421, 14])
Passage question vectors dim:  torch.Size([40, 1421, 200])
Question Passage Similarity dim:  torch.Size([40, 1421])
Question passage attention dim:  torch.Size([40, 1421])
Final Merged Passage dim:  torch.Size([40, 1421, 800])
Modeled Passage dim:  torch.Size([40, 1421, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1421, 1000])
Span start logits:  torch.Size([40, 1421])
span start probs dim:  torch.Size([40, 1421])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1421]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 196, 200])
Passage Length:  196
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 196, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 196, 14])
Passage ques attention dim:  torch.Size([40, 196, 14])
Passage question vectors dim:  torch.Size([40, 196, 200])
Question Passage Similarity dim:  torch.Size([40, 196])
Question passage attention dim:  torch.Size([40, 196])
Final Merged Passage dim:  torch.Size([40, 196, 800])
Modeled Passage dim:  torch.Size([40, 196, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 196, 1000])
Span start logits:  torch.Size([40, 196])
span start probs dim:  torch.Size([40, 196])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 196]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1106, 200])
Passage Length:  1106
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1106, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1106, 17])
Passage ques attention dim:  torch.Size([40, 1106, 17])
Passage question vectors dim:  torch.Size([40, 1106, 200])
Question Passage Similarity dim:  torch.Size([40, 1106])
Question passage attention dim:  torch.Size([40, 1106])
Final Merged Passage dim:  torch.Size([40, 1106, 800])
Modeled Passage dim:  torch.Size([40, 1106, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1106, 1000])
Span start logits:  torch.Size([40, 1106])
span start probs dim:  torch.Size([40, 1106])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1106]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 724, 200])
Passage Length:  724
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 724, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 724, 16])
Passage ques attention dim:  torch.Size([40, 724, 16])
Passage question vectors dim:  torch.Size([40, 724, 200])
Question Passage Similarity dim:  torch.Size([40, 724])
Question passage attention dim:  torch.Size([40, 724])
Final Merged Passage dim:  torch.Size([40, 724, 800])
Modeled Passage dim:  torch.Size([40, 724, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 724, 1000])
Span start logits:  torch.Size([40, 724])
span start probs dim:  torch.Size([40, 724])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 724]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 329, 200])
Passage Length:  329
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 329, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 329, 15])
Passage ques attention dim:  torch.Size([40, 329, 15])
Passage question vectors dim:  torch.Size([40, 329, 200])
Question Passage Similarity dim:  torch.Size([40, 329])
Question passage attention dim:  torch.Size([40, 329])
Final Merged Passage dim:  torch.Size([40, 329, 800])
Modeled Passage dim:  torch.Size([40, 329, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 329, 1000])
Span start logits:  torch.Size([40, 329])
span start probs dim:  torch.Size([40, 329])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 329]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 400, 200])
Passage Length:  400
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 400, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 400, 14])
Passage ques attention dim:  torch.Size([40, 400, 14])
Passage question vectors dim:  torch.Size([40, 400, 200])
Question Passage Similarity dim:  torch.Size([40, 400])
Question passage attention dim:  torch.Size([40, 400])
Final Merged Passage dim:  torch.Size([40, 400, 800])
Modeled Passage dim:  torch.Size([40, 400, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 400, 1000])
Span start logits:  torch.Size([40, 400])
span start probs dim:  torch.Size([40, 400])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 400]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1412, 200])
Passage Length:  1412
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1412, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1412, 13])
Passage ques attention dim:  torch.Size([40, 1412, 13])
Passage question vectors dim:  torch.Size([40, 1412, 200])
Question Passage Similarity dim:  torch.Size([40, 1412])
Question passage attention dim:  torch.Size([40, 1412])
Final Merged Passage dim:  torch.Size([40, 1412, 800])
Modeled Passage dim:  torch.Size([40, 1412, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1412, 1000])
Span start logits:  torch.Size([40, 1412])
span start probs dim:  torch.Size([40, 1412])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1412]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 520, 200])
Passage Length:  520
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 520, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 520, 14])
Passage ques attention dim:  torch.Size([40, 520, 14])
Passage question vectors dim:  torch.Size([40, 520, 200])
Question Passage Similarity dim:  torch.Size([40, 520])
Question passage attention dim:  torch.Size([40, 520])
Final Merged Passage dim:  torch.Size([40, 520, 800])
Modeled Passage dim:  torch.Size([40, 520, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 520, 1000])
Span start logits:  torch.Size([40, 520])
span start probs dim:  torch.Size([40, 520])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 520]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 898, 200])
Passage Length:  898
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 898, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 898, 16])
Passage ques attention dim:  torch.Size([40, 898, 16])
Passage question vectors dim:  torch.Size([40, 898, 200])
Question Passage Similarity dim:  torch.Size([40, 898])
Question passage attention dim:  torch.Size([40, 898])
Final Merged Passage dim:  torch.Size([40, 898, 800])
Modeled Passage dim:  torch.Size([40, 898, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 898, 1000])
Span start logits:  torch.Size([40, 898])
span start probs dim:  torch.Size([40, 898])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 898]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1918, 200])
Passage Length:  1918
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1918, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1918, 16])
Passage ques attention dim:  torch.Size([40, 1918, 16])
Passage question vectors dim:  torch.Size([40, 1918, 200])
Question Passage Similarity dim:  torch.Size([40, 1918])
Question passage attention dim:  torch.Size([40, 1918])
Final Merged Passage dim:  torch.Size([40, 1918, 800])
Modeled Passage dim:  torch.Size([40, 1918, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1918, 1000])
Span start logits:  torch.Size([40, 1918])
span start probs dim:  torch.Size([40, 1918])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1918]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 781, 200])
Passage Length:  781
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 781, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 781, 18])
Passage ques attention dim:  torch.Size([40, 781, 18])
Passage question vectors dim:  torch.Size([40, 781, 200])
Question Passage Similarity dim:  torch.Size([40, 781])
Question passage attention dim:  torch.Size([40, 781])
Final Merged Passage dim:  torch.Size([40, 781, 800])
Modeled Passage dim:  torch.Size([40, 781, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 781, 1000])
Span start logits:  torch.Size([40, 781])
span start probs dim:  torch.Size([40, 781])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 781]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 341, 200])
Passage Length:  341
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 341, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 341, 12])
Passage ques attention dim:  torch.Size([40, 341, 12])
Passage question vectors dim:  torch.Size([40, 341, 200])
Question Passage Similarity dim:  torch.Size([40, 341])
Question passage attention dim:  torch.Size([40, 341])
Final Merged Passage dim:  torch.Size([40, 341, 800])
Modeled Passage dim:  torch.Size([40, 341, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 341, 1000])
Span start logits:  torch.Size([40, 341])
span start probs dim:  torch.Size([40, 341])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 341]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 1397, 200])
Passage Length:  1397
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 1397, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1397, 18])
Passage ques attention dim:  torch.Size([40, 1397, 18])
Passage question vectors dim:  torch.Size([40, 1397, 200])
Question Passage Similarity dim:  torch.Size([40, 1397])
Question passage attention dim:  torch.Size([40, 1397])
Final Merged Passage dim:  torch.Size([40, 1397, 800])
Modeled Passage dim:  torch.Size([40, 1397, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1397, 1000])
Span start logits:  torch.Size([40, 1397])
span start probs dim:  torch.Size([40, 1397])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1397]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 569, 200])
Passage Length:  569
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 569, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 569, 13])
Passage ques attention dim:  torch.Size([40, 569, 13])
Passage question vectors dim:  torch.Size([40, 569, 200])
Question Passage Similarity dim:  torch.Size([40, 569])
Question passage attention dim:  torch.Size([40, 569])
Final Merged Passage dim:  torch.Size([40, 569, 800])
Modeled Passage dim:  torch.Size([40, 569, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 569, 1000])
Span start logits:  torch.Size([40, 569])
span start probs dim:  torch.Size([40, 569])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 569]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 978, 200])
Passage Length:  978
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 978, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 978, 15])
Passage ques attention dim:  torch.Size([40, 978, 15])
Passage question vectors dim:  torch.Size([40, 978, 200])
Question Passage Similarity dim:  torch.Size([40, 978])
Question passage attention dim:  torch.Size([40, 978])
Final Merged Passage dim:  torch.Size([40, 978, 800])
Modeled Passage dim:  torch.Size([40, 978, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 978, 1000])
Span start logits:  torch.Size([40, 978])
span start probs dim:  torch.Size([40, 978])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 978]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 817, 200])
Passage Length:  817
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 817, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 817, 17])
Passage ques attention dim:  torch.Size([40, 817, 17])
Passage question vectors dim:  torch.Size([40, 817, 200])
Question Passage Similarity dim:  torch.Size([40, 817])
Question passage attention dim:  torch.Size([40, 817])
Final Merged Passage dim:  torch.Size([40, 817, 800])
Modeled Passage dim:  torch.Size([40, 817, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 817, 1000])
Span start logits:  torch.Size([40, 817])
span start probs dim:  torch.Size([40, 817])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 817]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 616, 200])
Passage Length:  616
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 616, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 616, 14])
Passage ques attention dim:  torch.Size([40, 616, 14])
Passage question vectors dim:  torch.Size([40, 616, 200])
Question Passage Similarity dim:  torch.Size([40, 616])
Question passage attention dim:  torch.Size([40, 616])
Final Merged Passage dim:  torch.Size([40, 616, 800])
Modeled Passage dim:  torch.Size([40, 616, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 616, 1000])
Span start logits:  torch.Size([40, 616])
span start probs dim:  torch.Size([40, 616])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 616]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1090, 200])
Passage Length:  1090
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1090, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1090, 16])
Passage ques attention dim:  torch.Size([40, 1090, 16])
Passage question vectors dim:  torch.Size([40, 1090, 200])
Question Passage Similarity dim:  torch.Size([40, 1090])
Question passage attention dim:  torch.Size([40, 1090])
Final Merged Passage dim:  torch.Size([40, 1090, 800])
Modeled Passage dim:  torch.Size([40, 1090, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1090, 1000])
Span start logits:  torch.Size([40, 1090])
span start probs dim:  torch.Size([40, 1090])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1090]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 22, 200])
Embedded passage dim:  torch.Size([40, 269, 200])
Passage Length:  269
Encoded question dim:  torch.Size([40, 22, 200])
Encoded passage dim:  torch.Size([40, 269, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 269, 22])
Passage ques attention dim:  torch.Size([40, 269, 22])
Passage question vectors dim:  torch.Size([40, 269, 200])
Question Passage Similarity dim:  torch.Size([40, 269])
Question passage attention dim:  torch.Size([40, 269])
Final Merged Passage dim:  torch.Size([40, 269, 800])
Modeled Passage dim:  torch.Size([40, 269, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 269, 1000])
Span start logits:  torch.Size([40, 269])
span start probs dim:  torch.Size([40, 269])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 269]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1223, 200])
Passage Length:  1223
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1223, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1223, 14])
Passage ques attention dim:  torch.Size([40, 1223, 14])
Passage question vectors dim:  torch.Size([40, 1223, 200])
Question Passage Similarity dim:  torch.Size([40, 1223])
Question passage attention dim:  torch.Size([40, 1223])
Final Merged Passage dim:  torch.Size([40, 1223, 800])
Modeled Passage dim:  torch.Size([40, 1223, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1223, 1000])
Span start logits:  torch.Size([40, 1223])
span start probs dim:  torch.Size([40, 1223])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1223]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 692, 200])
Passage Length:  692
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 692, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 692, 18])
Passage ques attention dim:  torch.Size([40, 692, 18])
Passage question vectors dim:  torch.Size([40, 692, 200])
Question Passage Similarity dim:  torch.Size([40, 692])
Question passage attention dim:  torch.Size([40, 692])
Final Merged Passage dim:  torch.Size([40, 692, 800])
Modeled Passage dim:  torch.Size([40, 692, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 692, 1000])
Span start logits:  torch.Size([40, 692])
span start probs dim:  torch.Size([40, 692])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 692]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 757, 200])
Passage Length:  757
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 757, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 757, 14])
Passage ques attention dim:  torch.Size([40, 757, 14])
Passage question vectors dim:  torch.Size([40, 757, 200])
Question Passage Similarity dim:  torch.Size([40, 757])
Question passage attention dim:  torch.Size([40, 757])
Final Merged Passage dim:  torch.Size([40, 757, 800])
Modeled Passage dim:  torch.Size([40, 757, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 757, 1000])
Span start logits:  torch.Size([40, 757])
span start probs dim:  torch.Size([40, 757])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 757]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 505, 200])
Passage Length:  505
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 505, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 505, 12])
Passage ques attention dim:  torch.Size([40, 505, 12])
Passage question vectors dim:  torch.Size([40, 505, 200])
Question Passage Similarity dim:  torch.Size([40, 505])
Question passage attention dim:  torch.Size([40, 505])
Final Merged Passage dim:  torch.Size([40, 505, 800])
Modeled Passage dim:  torch.Size([40, 505, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 505, 1000])
Span start logits:  torch.Size([40, 505])
span start probs dim:  torch.Size([40, 505])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 505]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1169, 200])
Passage Length:  1169
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1169, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1169, 15])
Passage ques attention dim:  torch.Size([40, 1169, 15])
Passage question vectors dim:  torch.Size([40, 1169, 200])
Question Passage Similarity dim:  torch.Size([40, 1169])
Question passage attention dim:  torch.Size([40, 1169])
Final Merged Passage dim:  torch.Size([40, 1169, 800])
Modeled Passage dim:  torch.Size([40, 1169, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1169, 1000])
Span start logits:  torch.Size([40, 1169])
span start probs dim:  torch.Size([40, 1169])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1169]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 381, 200])
Passage Length:  381
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 381, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 381, 13])
Passage ques attention dim:  torch.Size([40, 381, 13])
Passage question vectors dim:  torch.Size([40, 381, 200])
Question Passage Similarity dim:  torch.Size([40, 381])
Question passage attention dim:  torch.Size([40, 381])
Final Merged Passage dim:  torch.Size([40, 381, 800])
Modeled Passage dim:  torch.Size([40, 381, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 381, 1000])
Span start logits:  torch.Size([40, 381])
span start probs dim:  torch.Size([40, 381])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 381]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1198, 200])
Passage Length:  1198
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1198, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1198, 17])
Passage ques attention dim:  torch.Size([40, 1198, 17])
Passage question vectors dim:  torch.Size([40, 1198, 200])
Question Passage Similarity dim:  torch.Size([40, 1198])
Question passage attention dim:  torch.Size([40, 1198])
Final Merged Passage dim:  torch.Size([40, 1198, 800])
Modeled Passage dim:  torch.Size([40, 1198, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1198, 1000])
Span start logits:  torch.Size([40, 1198])
span start probs dim:  torch.Size([40, 1198])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1198]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1587, 200])
Passage Length:  1587
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1587, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1587, 13])
Passage ques attention dim:  torch.Size([40, 1587, 13])
Passage question vectors dim:  torch.Size([40, 1587, 200])
Question Passage Similarity dim:  torch.Size([40, 1587])
Question passage attention dim:  torch.Size([40, 1587])
Final Merged Passage dim:  torch.Size([40, 1587, 800])
Modeled Passage dim:  torch.Size([40, 1587, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1587, 1000])
Span start logits:  torch.Size([40, 1587])
span start probs dim:  torch.Size([40, 1587])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1587]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 792, 200])
Passage Length:  792
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 792, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 792, 13])
Passage ques attention dim:  torch.Size([40, 792, 13])
Passage question vectors dim:  torch.Size([40, 792, 200])
Question Passage Similarity dim:  torch.Size([40, 792])
Question passage attention dim:  torch.Size([40, 792])
Final Merged Passage dim:  torch.Size([40, 792, 800])
Modeled Passage dim:  torch.Size([40, 792, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 792, 1000])
Span start logits:  torch.Size([40, 792])
span start probs dim:  torch.Size([40, 792])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 792]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 1118, 200])
Passage Length:  1118
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 1118, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1118, 12])
Passage ques attention dim:  torch.Size([40, 1118, 12])
Passage question vectors dim:  torch.Size([40, 1118, 200])
Question Passage Similarity dim:  torch.Size([40, 1118])
Question passage attention dim:  torch.Size([40, 1118])
Final Merged Passage dim:  torch.Size([40, 1118, 800])
Modeled Passage dim:  torch.Size([40, 1118, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1118, 1000])
Span start logits:  torch.Size([40, 1118])
span start probs dim:  torch.Size([40, 1118])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1118]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 486, 200])
Passage Length:  486
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 486, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 486, 15])
Passage ques attention dim:  torch.Size([40, 486, 15])
Passage question vectors dim:  torch.Size([40, 486, 200])
Question Passage Similarity dim:  torch.Size([40, 486])
Question passage attention dim:  torch.Size([40, 486])
Final Merged Passage dim:  torch.Size([40, 486, 800])
Modeled Passage dim:  torch.Size([40, 486, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 486, 1000])
Span start logits:  torch.Size([40, 486])
span start probs dim:  torch.Size([40, 486])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 486]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 895, 200])
Passage Length:  895
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 895, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 895, 16])
Passage ques attention dim:  torch.Size([40, 895, 16])
Passage question vectors dim:  torch.Size([40, 895, 200])
Question Passage Similarity dim:  torch.Size([40, 895])
Question passage attention dim:  torch.Size([40, 895])
Final Merged Passage dim:  torch.Size([40, 895, 800])
Modeled Passage dim:  torch.Size([40, 895, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 895, 1000])
Span start logits:  torch.Size([40, 895])
span start probs dim:  torch.Size([40, 895])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 895]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 18, 200])
Embedded passage dim:  torch.Size([40, 470, 200])
Passage Length:  470
Encoded question dim:  torch.Size([40, 18, 200])
Encoded passage dim:  torch.Size([40, 470, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 470, 18])
Passage ques attention dim:  torch.Size([40, 470, 18])
Passage question vectors dim:  torch.Size([40, 470, 200])
Question Passage Similarity dim:  torch.Size([40, 470])
Question passage attention dim:  torch.Size([40, 470])
Final Merged Passage dim:  torch.Size([40, 470, 800])
Modeled Passage dim:  torch.Size([40, 470, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 470, 1000])
Span start logits:  torch.Size([40, 470])
span start probs dim:  torch.Size([40, 470])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 470]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1247, 200])
Passage Length:  1247
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1247, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1247, 13])
Passage ques attention dim:  torch.Size([40, 1247, 13])
Passage question vectors dim:  torch.Size([40, 1247, 200])
Question Passage Similarity dim:  torch.Size([40, 1247])
Question passage attention dim:  torch.Size([40, 1247])
Final Merged Passage dim:  torch.Size([40, 1247, 800])
Modeled Passage dim:  torch.Size([40, 1247, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1247, 1000])
Span start logits:  torch.Size([40, 1247])
span start probs dim:  torch.Size([40, 1247])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1247]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 388, 200])
Passage Length:  388
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 388, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 388, 14])
Passage ques attention dim:  torch.Size([40, 388, 14])
Passage question vectors dim:  torch.Size([40, 388, 200])
Question Passage Similarity dim:  torch.Size([40, 388])
Question passage attention dim:  torch.Size([40, 388])
Final Merged Passage dim:  torch.Size([40, 388, 800])
Modeled Passage dim:  torch.Size([40, 388, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 388, 1000])
Span start logits:  torch.Size([40, 388])
span start probs dim:  torch.Size([40, 388])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 388]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 394, 200])
Passage Length:  394
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 394, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 394, 13])
Passage ques attention dim:  torch.Size([40, 394, 13])
Passage question vectors dim:  torch.Size([40, 394, 200])
Question Passage Similarity dim:  torch.Size([40, 394])
Question passage attention dim:  torch.Size([40, 394])
Final Merged Passage dim:  torch.Size([40, 394, 800])
Modeled Passage dim:  torch.Size([40, 394, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 394, 1000])
Span start logits:  torch.Size([40, 394])
span start probs dim:  torch.Size([40, 394])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 394]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 661, 200])
Passage Length:  661
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 661, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 661, 15])
Passage ques attention dim:  torch.Size([40, 661, 15])
Passage question vectors dim:  torch.Size([40, 661, 200])
Question Passage Similarity dim:  torch.Size([40, 661])
Question passage attention dim:  torch.Size([40, 661])
Final Merged Passage dim:  torch.Size([40, 661, 800])
Modeled Passage dim:  torch.Size([40, 661, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 661, 1000])
Span start logits:  torch.Size([40, 661])
span start probs dim:  torch.Size([40, 661])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 661]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1114, 200])
Passage Length:  1114
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1114, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1114, 14])
Passage ques attention dim:  torch.Size([40, 1114, 14])
Passage question vectors dim:  torch.Size([40, 1114, 200])
Question Passage Similarity dim:  torch.Size([40, 1114])
Question passage attention dim:  torch.Size([40, 1114])
Final Merged Passage dim:  torch.Size([40, 1114, 800])
Modeled Passage dim:  torch.Size([40, 1114, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1114, 1000])
Span start logits:  torch.Size([40, 1114])
span start probs dim:  torch.Size([40, 1114])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1114]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1131, 200])
Passage Length:  1131
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1131, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1131, 16])
Passage ques attention dim:  torch.Size([40, 1131, 16])
Passage question vectors dim:  torch.Size([40, 1131, 200])
Question Passage Similarity dim:  torch.Size([40, 1131])
Question passage attention dim:  torch.Size([40, 1131])
Final Merged Passage dim:  torch.Size([40, 1131, 800])
Modeled Passage dim:  torch.Size([40, 1131, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1131, 1000])
Span start logits:  torch.Size([40, 1131])
span start probs dim:  torch.Size([40, 1131])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1131]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1013, 200])
Passage Length:  1013
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1013, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1013, 17])
Passage ques attention dim:  torch.Size([40, 1013, 17])
Passage question vectors dim:  torch.Size([40, 1013, 200])
Question Passage Similarity dim:  torch.Size([40, 1013])
Question passage attention dim:  torch.Size([40, 1013])
Final Merged Passage dim:  torch.Size([40, 1013, 800])
Modeled Passage dim:  torch.Size([40, 1013, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1013, 1000])
Span start logits:  torch.Size([40, 1013])
span start probs dim:  torch.Size([40, 1013])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1013]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 311, 200])
Passage Length:  311
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 311, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 311, 14])
Passage ques attention dim:  torch.Size([40, 311, 14])
Passage question vectors dim:  torch.Size([40, 311, 200])
Question Passage Similarity dim:  torch.Size([40, 311])
Question passage attention dim:  torch.Size([40, 311])
Final Merged Passage dim:  torch.Size([40, 311, 800])
Modeled Passage dim:  torch.Size([40, 311, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 311, 1000])
Span start logits:  torch.Size([40, 311])
span start probs dim:  torch.Size([40, 311])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 311]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 524, 200])
Passage Length:  524
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 524, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 524, 13])
Passage ques attention dim:  torch.Size([40, 524, 13])
Passage question vectors dim:  torch.Size([40, 524, 200])
Question Passage Similarity dim:  torch.Size([40, 524])
Question passage attention dim:  torch.Size([40, 524])
Final Merged Passage dim:  torch.Size([40, 524, 800])
Modeled Passage dim:  torch.Size([40, 524, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 524, 1000])
Span start logits:  torch.Size([40, 524])
span start probs dim:  torch.Size([40, 524])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 524]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 588, 12])
Passage ques attention dim:  torch.Size([40, 588, 12])
Passage question vectors dim:  torch.Size([40, 588, 200])
Question Passage Similarity dim:  torch.Size([40, 588])
Question passage attention dim:  torch.Size([40, 588])
Final Merged Passage dim:  torch.Size([40, 588, 800])
Modeled Passage dim:  torch.Size([40, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 588, 1000])
Span start logits:  torch.Size([40, 588])
span start probs dim:  torch.Size([40, 588])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 588]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 880, 200])
Passage Length:  880
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 880, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 880, 16])
Passage ques attention dim:  torch.Size([40, 880, 16])
Passage question vectors dim:  torch.Size([40, 880, 200])
Question Passage Similarity dim:  torch.Size([40, 880])
Question passage attention dim:  torch.Size([40, 880])
Final Merged Passage dim:  torch.Size([40, 880, 800])
Modeled Passage dim:  torch.Size([40, 880, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 880, 1000])
Span start logits:  torch.Size([40, 880])
span start probs dim:  torch.Size([40, 880])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 880]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1389, 200])
Passage Length:  1389
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1389, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1389, 15])
Passage ques attention dim:  torch.Size([40, 1389, 15])
Passage question vectors dim:  torch.Size([40, 1389, 200])
Question Passage Similarity dim:  torch.Size([40, 1389])
Question passage attention dim:  torch.Size([40, 1389])
Final Merged Passage dim:  torch.Size([40, 1389, 800])
Modeled Passage dim:  torch.Size([40, 1389, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1389, 1000])
Span start logits:  torch.Size([40, 1389])
span start probs dim:  torch.Size([40, 1389])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1389]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1245, 200])
Passage Length:  1245
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1245, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1245, 15])
Passage ques attention dim:  torch.Size([40, 1245, 15])
Passage question vectors dim:  torch.Size([40, 1245, 200])
Question Passage Similarity dim:  torch.Size([40, 1245])
Question passage attention dim:  torch.Size([40, 1245])
Final Merged Passage dim:  torch.Size([40, 1245, 800])
Modeled Passage dim:  torch.Size([40, 1245, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1245, 1000])
Span start logits:  torch.Size([40, 1245])
span start probs dim:  torch.Size([40, 1245])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1245]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 183, 200])
Passage Length:  183
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 183, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 183, 10])
Passage ques attention dim:  torch.Size([40, 183, 10])
Passage question vectors dim:  torch.Size([40, 183, 200])
Question Passage Similarity dim:  torch.Size([40, 183])
Question passage attention dim:  torch.Size([40, 183])
Final Merged Passage dim:  torch.Size([40, 183, 800])
Modeled Passage dim:  torch.Size([40, 183, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 183, 1000])
Span start logits:  torch.Size([40, 183])
span start probs dim:  torch.Size([40, 183])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 183]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1626, 200])
Passage Length:  1626
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1626, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1626, 16])
Passage ques attention dim:  torch.Size([40, 1626, 16])
Passage question vectors dim:  torch.Size([40, 1626, 200])
Question Passage Similarity dim:  torch.Size([40, 1626])
Question passage attention dim:  torch.Size([40, 1626])
Final Merged Passage dim:  torch.Size([40, 1626, 800])
Modeled Passage dim:  torch.Size([40, 1626, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1626, 1000])
Span start logits:  torch.Size([40, 1626])
span start probs dim:  torch.Size([40, 1626])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1626]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 19, 200])
Embedded passage dim:  torch.Size([40, 1353, 200])
Passage Length:  1353
Encoded question dim:  torch.Size([40, 19, 200])
Encoded passage dim:  torch.Size([40, 1353, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1353, 19])
Passage ques attention dim:  torch.Size([40, 1353, 19])
Passage question vectors dim:  torch.Size([40, 1353, 200])
Question Passage Similarity dim:  torch.Size([40, 1353])
Question passage attention dim:  torch.Size([40, 1353])
Final Merged Passage dim:  torch.Size([40, 1353, 800])
Modeled Passage dim:  torch.Size([40, 1353, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1353, 1000])
Span start logits:  torch.Size([40, 1353])
span start probs dim:  torch.Size([40, 1353])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1353]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1232, 200])
Passage Length:  1232
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1232, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1232, 15])
Passage ques attention dim:  torch.Size([40, 1232, 15])
Passage question vectors dim:  torch.Size([40, 1232, 200])
Question Passage Similarity dim:  torch.Size([40, 1232])
Question passage attention dim:  torch.Size([40, 1232])
Final Merged Passage dim:  torch.Size([40, 1232, 800])
Modeled Passage dim:  torch.Size([40, 1232, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1232, 1000])
Span start logits:  torch.Size([40, 1232])
span start probs dim:  torch.Size([40, 1232])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1232]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 588, 200])
Passage Length:  588
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 588, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 588, 15])
Passage ques attention dim:  torch.Size([40, 588, 15])
Passage question vectors dim:  torch.Size([40, 588, 200])
Question Passage Similarity dim:  torch.Size([40, 588])
Question passage attention dim:  torch.Size([40, 588])
Final Merged Passage dim:  torch.Size([40, 588, 800])
Modeled Passage dim:  torch.Size([40, 588, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 588, 1000])
Span start logits:  torch.Size([40, 588])
span start probs dim:  torch.Size([40, 588])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 588]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 473, 200])
Passage Length:  473
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 473, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 473, 16])
Passage ques attention dim:  torch.Size([40, 473, 16])
Passage question vectors dim:  torch.Size([40, 473, 200])
Question Passage Similarity dim:  torch.Size([40, 473])
Question passage attention dim:  torch.Size([40, 473])
Final Merged Passage dim:  torch.Size([40, 473, 800])
Modeled Passage dim:  torch.Size([40, 473, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 473, 1000])
Span start logits:  torch.Size([40, 473])
span start probs dim:  torch.Size([40, 473])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 473]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1065, 200])
Passage Length:  1065
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1065, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1065, 14])
Passage ques attention dim:  torch.Size([40, 1065, 14])
Passage question vectors dim:  torch.Size([40, 1065, 200])
Question Passage Similarity dim:  torch.Size([40, 1065])
Question passage attention dim:  torch.Size([40, 1065])
Final Merged Passage dim:  torch.Size([40, 1065, 800])
Modeled Passage dim:  torch.Size([40, 1065, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1065, 1000])
Span start logits:  torch.Size([40, 1065])
span start probs dim:  torch.Size([40, 1065])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1065]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1632, 200])
Passage Length:  1632
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1632, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1632, 17])
Passage ques attention dim:  torch.Size([40, 1632, 17])
Passage question vectors dim:  torch.Size([40, 1632, 200])
Question Passage Similarity dim:  torch.Size([40, 1632])
Question passage attention dim:  torch.Size([40, 1632])
Final Merged Passage dim:  torch.Size([40, 1632, 800])
Modeled Passage dim:  torch.Size([40, 1632, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1632, 1000])
Span start logits:  torch.Size([40, 1632])
span start probs dim:  torch.Size([40, 1632])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1632]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 12, 200])
Embedded passage dim:  torch.Size([40, 260, 200])
Passage Length:  260
Encoded question dim:  torch.Size([40, 12, 200])
Encoded passage dim:  torch.Size([40, 260, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 260, 12])
Passage ques attention dim:  torch.Size([40, 260, 12])
Passage question vectors dim:  torch.Size([40, 260, 200])
Question Passage Similarity dim:  torch.Size([40, 260])
Question passage attention dim:  torch.Size([40, 260])
Final Merged Passage dim:  torch.Size([40, 260, 800])
Modeled Passage dim:  torch.Size([40, 260, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 260, 1000])
Span start logits:  torch.Size([40, 260])
span start probs dim:  torch.Size([40, 260])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 260]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 730, 200])
Passage Length:  730
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 730, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 730, 13])
Passage ques attention dim:  torch.Size([40, 730, 13])
Passage question vectors dim:  torch.Size([40, 730, 200])
Question Passage Similarity dim:  torch.Size([40, 730])
Question passage attention dim:  torch.Size([40, 730])
Final Merged Passage dim:  torch.Size([40, 730, 800])
Modeled Passage dim:  torch.Size([40, 730, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 730, 1000])
Span start logits:  torch.Size([40, 730])
span start probs dim:  torch.Size([40, 730])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 730]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 504, 200])
Passage Length:  504
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 504, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 504, 15])
Passage ques attention dim:  torch.Size([40, 504, 15])
Passage question vectors dim:  torch.Size([40, 504, 200])
Question Passage Similarity dim:  torch.Size([40, 504])
Question passage attention dim:  torch.Size([40, 504])
Final Merged Passage dim:  torch.Size([40, 504, 800])
Modeled Passage dim:  torch.Size([40, 504, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 504, 1000])
Span start logits:  torch.Size([40, 504])
span start probs dim:  torch.Size([40, 504])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 504]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1271, 200])
Passage Length:  1271
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1271, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1271, 15])
Passage ques attention dim:  torch.Size([40, 1271, 15])
Passage question vectors dim:  torch.Size([40, 1271, 200])
Question Passage Similarity dim:  torch.Size([40, 1271])
Question passage attention dim:  torch.Size([40, 1271])
Final Merged Passage dim:  torch.Size([40, 1271, 800])
Modeled Passage dim:  torch.Size([40, 1271, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1271, 1000])
Span start logits:  torch.Size([40, 1271])
span start probs dim:  torch.Size([40, 1271])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1271]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1318, 200])
Passage Length:  1318
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1318, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1318, 15])
Passage ques attention dim:  torch.Size([40, 1318, 15])
Passage question vectors dim:  torch.Size([40, 1318, 200])
Question Passage Similarity dim:  torch.Size([40, 1318])
Question passage attention dim:  torch.Size([40, 1318])
Final Merged Passage dim:  torch.Size([40, 1318, 800])
Modeled Passage dim:  torch.Size([40, 1318, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1318, 1000])
Span start logits:  torch.Size([40, 1318])
span start probs dim:  torch.Size([40, 1318])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1318]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 966, 200])
Passage Length:  966
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 966, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 966, 16])
Passage ques attention dim:  torch.Size([40, 966, 16])
Passage question vectors dim:  torch.Size([40, 966, 200])
Question Passage Similarity dim:  torch.Size([40, 966])
Question passage attention dim:  torch.Size([40, 966])
Final Merged Passage dim:  torch.Size([40, 966, 800])
Modeled Passage dim:  torch.Size([40, 966, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 966, 1000])
Span start logits:  torch.Size([40, 966])
span start probs dim:  torch.Size([40, 966])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 966]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 447, 200])
Passage Length:  447
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 447, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 447, 13])
Passage ques attention dim:  torch.Size([40, 447, 13])
Passage question vectors dim:  torch.Size([40, 447, 200])
Question Passage Similarity dim:  torch.Size([40, 447])
Question passage attention dim:  torch.Size([40, 447])
Final Merged Passage dim:  torch.Size([40, 447, 800])
Modeled Passage dim:  torch.Size([40, 447, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 447, 1000])
Span start logits:  torch.Size([40, 447])
span start probs dim:  torch.Size([40, 447])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 447]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 948, 200])
Passage Length:  948
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 948, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 948, 17])
Passage ques attention dim:  torch.Size([40, 948, 17])
Passage question vectors dim:  torch.Size([40, 948, 200])
Question Passage Similarity dim:  torch.Size([40, 948])
Question passage attention dim:  torch.Size([40, 948])
Final Merged Passage dim:  torch.Size([40, 948, 800])
Modeled Passage dim:  torch.Size([40, 948, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 948, 1000])
Span start logits:  torch.Size([40, 948])
span start probs dim:  torch.Size([40, 948])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 948]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1065, 200])
Passage Length:  1065
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1065, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1065, 14])
Passage ques attention dim:  torch.Size([40, 1065, 14])
Passage question vectors dim:  torch.Size([40, 1065, 200])
Question Passage Similarity dim:  torch.Size([40, 1065])
Question passage attention dim:  torch.Size([40, 1065])
Final Merged Passage dim:  torch.Size([40, 1065, 800])
Modeled Passage dim:  torch.Size([40, 1065, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1065, 1000])
Span start logits:  torch.Size([40, 1065])
span start probs dim:  torch.Size([40, 1065])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1065]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 10, 200])
Embedded passage dim:  torch.Size([40, 252, 200])
Passage Length:  252
Encoded question dim:  torch.Size([40, 10, 200])
Encoded passage dim:  torch.Size([40, 252, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 252, 10])
Passage ques attention dim:  torch.Size([40, 252, 10])
Passage question vectors dim:  torch.Size([40, 252, 200])
Question Passage Similarity dim:  torch.Size([40, 252])
Question passage attention dim:  torch.Size([40, 252])
Final Merged Passage dim:  torch.Size([40, 252, 800])
Modeled Passage dim:  torch.Size([40, 252, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 252, 1000])
Span start logits:  torch.Size([40, 252])
span start probs dim:  torch.Size([40, 252])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 252]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 671, 200])
Passage Length:  671
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 671, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 671, 15])
Passage ques attention dim:  torch.Size([40, 671, 15])
Passage question vectors dim:  torch.Size([40, 671, 200])
Question Passage Similarity dim:  torch.Size([40, 671])
Question passage attention dim:  torch.Size([40, 671])
Final Merged Passage dim:  torch.Size([40, 671, 800])
Modeled Passage dim:  torch.Size([40, 671, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 671, 1000])
Span start logits:  torch.Size([40, 671])
span start probs dim:  torch.Size([40, 671])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 671]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 373, 200])
Passage Length:  373
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 373, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 373, 14])
Passage ques attention dim:  torch.Size([40, 373, 14])
Passage question vectors dim:  torch.Size([40, 373, 200])
Question Passage Similarity dim:  torch.Size([40, 373])
Question passage attention dim:  torch.Size([40, 373])
Final Merged Passage dim:  torch.Size([40, 373, 800])
Modeled Passage dim:  torch.Size([40, 373, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 373, 1000])
Span start logits:  torch.Size([40, 373])
span start probs dim:  torch.Size([40, 373])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 373]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1836, 200])
Passage Length:  1836
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1836, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1836, 16])
Passage ques attention dim:  torch.Size([40, 1836, 16])
Passage question vectors dim:  torch.Size([40, 1836, 200])
Question Passage Similarity dim:  torch.Size([40, 1836])
Question passage attention dim:  torch.Size([40, 1836])
Final Merged Passage dim:  torch.Size([40, 1836, 800])
Modeled Passage dim:  torch.Size([40, 1836, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1836, 1000])
Span start logits:  torch.Size([40, 1836])
span start probs dim:  torch.Size([40, 1836])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1836]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 562, 200])
Passage Length:  562
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 562, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 562, 15])
Passage ques attention dim:  torch.Size([40, 562, 15])
Passage question vectors dim:  torch.Size([40, 562, 200])
Question Passage Similarity dim:  torch.Size([40, 562])
Question passage attention dim:  torch.Size([40, 562])
Final Merged Passage dim:  torch.Size([40, 562, 800])
Modeled Passage dim:  torch.Size([40, 562, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 562, 1000])
Span start logits:  torch.Size([40, 562])
span start probs dim:  torch.Size([40, 562])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 562]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 493, 200])
Passage Length:  493
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 493, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 493, 16])
Passage ques attention dim:  torch.Size([40, 493, 16])
Passage question vectors dim:  torch.Size([40, 493, 200])
Question Passage Similarity dim:  torch.Size([40, 493])
Question passage attention dim:  torch.Size([40, 493])
Final Merged Passage dim:  torch.Size([40, 493, 800])
Modeled Passage dim:  torch.Size([40, 493, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 493, 1000])
Span start logits:  torch.Size([40, 493])
span start probs dim:  torch.Size([40, 493])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 493]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 1425, 200])
Passage Length:  1425
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 1425, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1425, 16])
Passage ques attention dim:  torch.Size([40, 1425, 16])
Passage question vectors dim:  torch.Size([40, 1425, 200])
Question Passage Similarity dim:  torch.Size([40, 1425])
Question passage attention dim:  torch.Size([40, 1425])
Final Merged Passage dim:  torch.Size([40, 1425, 800])
Modeled Passage dim:  torch.Size([40, 1425, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1425, 1000])
Span start logits:  torch.Size([40, 1425])
span start probs dim:  torch.Size([40, 1425])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1425]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 956, 200])
Passage Length:  956
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 956, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 956, 13])
Passage ques attention dim:  torch.Size([40, 956, 13])
Passage question vectors dim:  torch.Size([40, 956, 200])
Question Passage Similarity dim:  torch.Size([40, 956])
Question passage attention dim:  torch.Size([40, 956])
Final Merged Passage dim:  torch.Size([40, 956, 800])
Modeled Passage dim:  torch.Size([40, 956, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 956, 1000])
Span start logits:  torch.Size([40, 956])
span start probs dim:  torch.Size([40, 956])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 956]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1031, 200])
Passage Length:  1031
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1031, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1031, 13])
Passage ques attention dim:  torch.Size([40, 1031, 13])
Passage question vectors dim:  torch.Size([40, 1031, 200])
Question Passage Similarity dim:  torch.Size([40, 1031])
Question passage attention dim:  torch.Size([40, 1031])
Final Merged Passage dim:  torch.Size([40, 1031, 800])
Modeled Passage dim:  torch.Size([40, 1031, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1031, 1000])
Span start logits:  torch.Size([40, 1031])
span start probs dim:  torch.Size([40, 1031])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1031]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 659, 200])
Passage Length:  659
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 659, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 659, 16])
Passage ques attention dim:  torch.Size([40, 659, 16])
Passage question vectors dim:  torch.Size([40, 659, 200])
Question Passage Similarity dim:  torch.Size([40, 659])
Question passage attention dim:  torch.Size([40, 659])
Final Merged Passage dim:  torch.Size([40, 659, 800])
Modeled Passage dim:  torch.Size([40, 659, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 659, 1000])
Span start logits:  torch.Size([40, 659])
span start probs dim:  torch.Size([40, 659])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 659]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1357, 200])
Passage Length:  1357
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1357, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1357, 14])
Passage ques attention dim:  torch.Size([40, 1357, 14])
Passage question vectors dim:  torch.Size([40, 1357, 200])
Question Passage Similarity dim:  torch.Size([40, 1357])
Question passage attention dim:  torch.Size([40, 1357])
Final Merged Passage dim:  torch.Size([40, 1357, 800])
Modeled Passage dim:  torch.Size([40, 1357, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1357, 1000])
Span start logits:  torch.Size([40, 1357])
span start probs dim:  torch.Size([40, 1357])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1357]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 17, 200])
Embedded passage dim:  torch.Size([40, 1294, 200])
Passage Length:  1294
Encoded question dim:  torch.Size([40, 17, 200])
Encoded passage dim:  torch.Size([40, 1294, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1294, 17])
Passage ques attention dim:  torch.Size([40, 1294, 17])
Passage question vectors dim:  torch.Size([40, 1294, 200])
Question Passage Similarity dim:  torch.Size([40, 1294])
Question passage attention dim:  torch.Size([40, 1294])
Final Merged Passage dim:  torch.Size([40, 1294, 800])
Modeled Passage dim:  torch.Size([40, 1294, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1294, 1000])
Span start logits:  torch.Size([40, 1294])
span start probs dim:  torch.Size([40, 1294])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1294]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1758, 200])
Passage Length:  1758
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1758, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1758, 13])
Passage ques attention dim:  torch.Size([40, 1758, 13])
Passage question vectors dim:  torch.Size([40, 1758, 200])
Question Passage Similarity dim:  torch.Size([40, 1758])
Question passage attention dim:  torch.Size([40, 1758])
Final Merged Passage dim:  torch.Size([40, 1758, 800])
Modeled Passage dim:  torch.Size([40, 1758, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1758, 1000])
Span start logits:  torch.Size([40, 1758])
span start probs dim:  torch.Size([40, 1758])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1758]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 574, 200])
Passage Length:  574
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 574, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 574, 15])
Passage ques attention dim:  torch.Size([40, 574, 15])
Passage question vectors dim:  torch.Size([40, 574, 200])
Question Passage Similarity dim:  torch.Size([40, 574])
Question passage attention dim:  torch.Size([40, 574])
Final Merged Passage dim:  torch.Size([40, 574, 800])
Modeled Passage dim:  torch.Size([40, 574, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 574, 1000])
Span start logits:  torch.Size([40, 574])
span start probs dim:  torch.Size([40, 574])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 574]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 1437, 200])
Passage Length:  1437
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 1437, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1437, 15])
Passage ques attention dim:  torch.Size([40, 1437, 15])
Passage question vectors dim:  torch.Size([40, 1437, 200])
Question Passage Similarity dim:  torch.Size([40, 1437])
Question passage attention dim:  torch.Size([40, 1437])
Final Merged Passage dim:  torch.Size([40, 1437, 800])
Modeled Passage dim:  torch.Size([40, 1437, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1437, 1000])
Span start logits:  torch.Size([40, 1437])
span start probs dim:  torch.Size([40, 1437])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1437]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 320, 200])
Passage Length:  320
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 320, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 320, 14])
Passage ques attention dim:  torch.Size([40, 320, 14])
Passage question vectors dim:  torch.Size([40, 320, 200])
Question Passage Similarity dim:  torch.Size([40, 320])
Question passage attention dim:  torch.Size([40, 320])
Final Merged Passage dim:  torch.Size([40, 320, 800])
Modeled Passage dim:  torch.Size([40, 320, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 320, 1000])
Span start logits:  torch.Size([40, 320])
span start probs dim:  torch.Size([40, 320])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 320]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 13, 200])
Embedded passage dim:  torch.Size([40, 1020, 200])
Passage Length:  1020
Encoded question dim:  torch.Size([40, 13, 200])
Encoded passage dim:  torch.Size([40, 1020, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1020, 13])
Passage ques attention dim:  torch.Size([40, 1020, 13])
Passage question vectors dim:  torch.Size([40, 1020, 200])
Question Passage Similarity dim:  torch.Size([40, 1020])
Question passage attention dim:  torch.Size([40, 1020])
Final Merged Passage dim:  torch.Size([40, 1020, 800])
Modeled Passage dim:  torch.Size([40, 1020, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1020, 1000])
Span start logits:  torch.Size([40, 1020])
span start probs dim:  torch.Size([40, 1020])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1020]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 15, 200])
Embedded passage dim:  torch.Size([40, 373, 200])
Passage Length:  373
Encoded question dim:  torch.Size([40, 15, 200])
Encoded passage dim:  torch.Size([40, 373, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 373, 15])
Passage ques attention dim:  torch.Size([40, 373, 15])
Passage question vectors dim:  torch.Size([40, 373, 200])
Question Passage Similarity dim:  torch.Size([40, 373])
Question passage attention dim:  torch.Size([40, 373])
Final Merged Passage dim:  torch.Size([40, 373, 800])
Modeled Passage dim:  torch.Size([40, 373, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 373, 1000])
Span start logits:  torch.Size([40, 373])
span start probs dim:  torch.Size([40, 373])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 373]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 16, 200])
Embedded passage dim:  torch.Size([40, 684, 200])
Passage Length:  684
Encoded question dim:  torch.Size([40, 16, 200])
Encoded passage dim:  torch.Size([40, 684, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 684, 16])
Passage ques attention dim:  torch.Size([40, 684, 16])
Passage question vectors dim:  torch.Size([40, 684, 200])
Question Passage Similarity dim:  torch.Size([40, 684])
Question passage attention dim:  torch.Size([40, 684])
Final Merged Passage dim:  torch.Size([40, 684, 800])
Modeled Passage dim:  torch.Size([40, 684, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 684, 1000])
Span start logits:  torch.Size([40, 684])
span start probs dim:  torch.Size([40, 684])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 684]) 40
METADATA: 
Embedded question dim:  torch.Size([40, 14, 200])
Embedded passage dim:  torch.Size([40, 1261, 200])
Passage Length:  1261
Encoded question dim:  torch.Size([40, 14, 200])
Encoded passage dim:  torch.Size([40, 1261, 200])
Encoding dim:  200
passage ques similarity dim:  torch.Size([40, 1261, 14])
Passage ques attention dim:  torch.Size([40, 1261, 14])
Passage question vectors dim:  torch.Size([40, 1261, 200])
Question Passage Similarity dim:  torch.Size([40, 1261])
Question passage attention dim:  torch.Size([40, 1261])
Final Merged Passage dim:  torch.Size([40, 1261, 800])
Modeled Passage dim:  torch.Size([40, 1261, 200])
Modeling dim:  200
Span start input shape:  torch.Size([40, 1261, 1000])
Span start logits:  torch.Size([40, 1261])
span start probs dim:  torch.Size([40, 1261])
Span start representation dim:  torch.Size([40, 200])
In dump logits!
<class 'torch.autograd.variable.Variable'> torch.Size([40, 1261]) 40
